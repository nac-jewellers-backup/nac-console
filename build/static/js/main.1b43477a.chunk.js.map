{"version":3,"sources":["components/Categoryrow/Categoryrow.js","components/Label/Label.js","config.js","components/Breadcrumbs/Breadcrumbs.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","components/ProductFilter/components/downloadcsv.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","context/AlertContext.js","components/ProductFilter/components/FullCSVData.js","components/ProductFilter/ProductFilter.js","components/Alert/index.js","components/Table/style.js","components/Table/TableBodyRow.js","components/Table/TableComponent.js","components/FeaturedProduct/Component/FeaturedProductComponent.js","components/FeaturedProduct/FeaturedProduct.js","components/Newarrival/component/NewarrivalComponent.js","components/Newarrival/NewArrival.js","components/Review/Component/Reviewcoponent.js","components/Review/Review.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Page/Page.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Configuration/Configuration.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/components/General/General.js","components/EnhancedTableHead/EnhancedTableHead.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Customerdetails/Customerdetails.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","components/Input.js","screens/Dashboard/Dashboard.js","screens/DiscountList/components/Header/Header.js","components/ConformationAlert/ConformationAlert.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/Earringbacking/Earringbacking.js","screens/Goldpriceupdate/Goldpriceupdate.js","graphql/mutation.js","screens/HolidayManager/HolidayModal.js","screens/HolidayManager/index.js","screens/Inventory/InventoryModal.js","screens/Inventory/index.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Manageadminusers/Manageadminusers.js","screens/manageshedule/shedulemodal.js","screens/manageshedule/shedulemodalshow.js","screens/manageshedule/index.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/mangeappoinment/index.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","screens/Masterattribute/Masterattribute.js","screens/Mastercategories/Mastercategories.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/Mastergenders.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/Masterpurities.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstones/Masterstones.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/Masterthemes.js","screens/Masterweights/Masterweights.js","screens/Materialmaster/Materialmaster.js","screens/OrderList/OrderList.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/AppointmentManagementDetails/components/AppointmentInfo.js","screens/AppointmentManagementDetails/components/AppointmentExtra.js","screens/AppointmentManagementDetails/AppointmentManagement.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","utils/commonmethod.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","components/Loader/Fullloader.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/Priceupdate.js","components/Products/Product.js","screens/Productlist/ProductSync.js","screens/Productlist/Productlist.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/Seopriority.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Shippingzones/Shippingzones.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Taxsetup/Taxsetup.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Userconfiguration/Userconfiguration.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Warehouse/WarehouseModal.js","screens/Warehouse/index.js","screens/AbandonedCart/cart_details.js","screens/AbandonedCart/index.js","screens/PriceUpload/index.js","screens/MasterCountries/index.js","screens/DailyMetalPrice/index.js","screens/PriceLogs/index.js","utils/imageUpload.js","screens/ImageUpload/index.js","screens/CmsComponent/style.js","screens/CmsComponent/components/styles.js","screens/CmsComponent/components/TableHeadComp.js","screens/CmsComponent/components/bannerCMS.js","screens/CmsComponent/components/storeLocatorCMS.js","screens/CmsComponent/components/richTextEditor.js","screens/CmsComponent/components/titleDescriptionCMS.js","screens/CmsComponent/components/queryFormCMS.js","screens/CmsComponent/components/slidingImageCardCMS.js","screens/CmsComponent/components/customCareerBannerCMS.js","screens/CmsComponent/components/customCareerCardCMS.js","screens/CmsComponent/components/customNewsCMS.js","screens/CmsComponent/components/spclTitleDescrCMS.js","screens/CmsComponent/components/bookYourAppointmentCMS.js","screens/CmsComponent/components/testimonialCMS.js","screens/CmsComponent/components/aboutCollectionCMS.js","screens/CmsComponent/components/titleCompCMS.js","screens/CmsComponent/cmsComponent.js","graphql/cmsQuery.js","screens/CategoryList/components/editpage/editcategory.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/cms/cmshome.js","screens/cms/silverbanner/components/silverlandingpage.js","screens/cms/silverbanner/components/silverlistingpage.js","screens/cms/silverbanner/components/specificListPages.js","screens/cms/silverbanner/components/silverbottmpage.js","screens/cms/silverbanner/components/silverlistingroutingpage.js","screens/cms/silverbanner/silverbanner.js","screens/cms/silverbanner/silverListingBanner/silverListingBanner.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/Variants.js","screens/ProductEdit/ProductAttributes.js","routes/route.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/styles.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","routes/index.js","App.Alert.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","card","width","padding","spacing","marginTop","buttonPadding","marginLeft","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","chip","color","palette","success","contrastText","main","pendingchip","secondary","useStyles","root","display","alignItems","justifyContent","flexGrow","flexShrink","borderRadius","shape","lineHeight","fontSize","minWidth","whiteSpace","rounded","Label","props","_clsx","className","variant","children","style","rest","Object","objectWithoutProperties","_excluded","classes","rootClassName","clsx","defineProperty","finalStyle","objectSpread2","border","concat","react_default","a","createElement","Typography","assign","defaultProps","colors","grey","API_URL","APP_URL","GRAPHQL_DEV_CLIENT","StyledBreadcrumb","withStyles","fontWeight","typography","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","emphasize","Chip","CustomizedBreadcrumbs","Breadcrumbs","aria-label","component","href","label","name","icon","ArrowBackIos_default","PRODUCTCATEGORY","gql","_templateObject","taggedTemplateLiteral","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","_templateObject30","ALLMASTERRINGSIZE","HOLIDAYLIST","_templateObject31","WAREHOUSELIST","_templateObject32","INVENTORYLIST","_templateObject33","VALIDATEGENERATEDSKU","_templateObject34","STOCKSTATUS","_templateObject35","VERIFYTAGNO","_templateObject36","ALLSPECIFICLISTINGPAGE","CREATESPECIFICLISTINGPAGE","IMAGEDELETE","_templateObject37","ABANDONEDCART","_templateObject38","CARTBYID","_templateObject39","DELETESILVERLANDINGBANNER","ALLFEATUREDPRODUCT","ALLNEWARRIVALPRODUCT","MUTATE_STATUS","GETORDERCOMMUNICATIONLOGS","FILTER_APPOINTEMENTS","_templateObject40","ALL_APPOINTMENTS_TIMESLOT","appointmentDateId","appointmentTypeId","_templateObject41","CHECK_TIMESLOT","_templateObject42","APPOINTMENTS_TYPE","SHOW_APPOINMENT_DETAILS","_templateObject43","SHOW_ALL_PPOINMENT_DETAILS","_templateObject44","PRICE_RUN_LOGS","_templateObject45","ORDERS","queries_templateObject","queries_templateObject2","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","category","allMasterProductCategories","nodes","map","_","value","id","product_type","allMasterProductTypes","shortCode","title","material","allMasterMaterials","gender","allMasterGenders","vendorcode","allMasterVendors","diamondsettings","allMasterDiamondsSettings","diamondshapes","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","earringbacking","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","hashtags","allMasterHashTags","metals","apidata","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","DownloadCsv","_useState","_useState2","loader","setLoader","_useState3","_useState4","showdownload","setShowDownload","_useState5","keyCSV","valueCSV","_useState6","dataCSV","setDataCSV","useContext","fetchCSVdata","event","done","responseCSV","responseData","keyData","_i","_Object$entries","_Object$entries$_i","key","res_json","statuscode","entries","push","Fragment","Button","disabled","marginRight","CircularProgress","size","react_csv","header","filename","onClick","textDecoration","flexDirection","drawer","maxWidth","buttonIcon","content","contentSection","contentSectionHeader","cursor","contentSectionContent","formGroup","fieldGroup","field","marginBottom","addButton","tags","minAmount","maxAmount","radioGroup","actions","& > * + *","Filter","open","onClose","masters","onFilter","Filter_excluded","initialValues","company","mobile","city","version","commodity","values","setValues","handleoptionchange","type","Drawer","anchor","paper","onSubmit","preventDefault","Close_default","Grid","container","xs","Autocomplete","options","margin","fullWidth","product_category","getOptionLabel","option","onChange","renderInput","TextField","item","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","Search_excluded","searchcontent","setSearchcontent","Paper","elevation","Search_default","Input_Input","disableUnderline","placeholder","e","target","AlertProps","vertical","top","bottom","horizontal","left","right","center","severity","warning","AlertContext","msg","onclose","setSnack","Transition","forwardRef","ref","Slide","direction","FullCSVData","setOpen","_React$useState3","_React$useState4","setOptions","_React$useState5","_React$useState6","_React$useState7","_React$useState8","productType","setProductType","_React$useState9","_React$useState10","include","setInclude","client","useApolloClient","snack","handleClose","useEffect","FullCSVData_templateObject","then","res","filter","i","catch","err","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","FormControlLabel","control","Switch","checked","DialogActions","exportFromJSON","fileName","exportType","flexWrap","flexBasis","filterButton","filterIcon","ProductFilter","ProductFilter_excluded","openFilter","setOpenFilter","components_Search_Search","window","location","pathname","downloadcsv","components_FullCSVData","FilterList_default","components_Filter_Filter","Alert","Alert_Alert","Alerts","reason","Snackbar","anchorOrigin","autoHideDuration","components_Alert_Alert","imagecontainer","& > *","table","tableWrapper","overflowX","link","link_style","TableBodyRow","_ref$tableData","tableData","_ref$rowData","rowData","_ref$rowIndex","rowIndex","_ref$handleViewStores","handleViewStores","_ref$handleDelete","handleDelete","_ref$handleEdit","handleEdit","TableRow","val","TableCell","customWidth","lineBreak","parse","_data$rowData","alt","src","gap","Edit_default","Delete_default","getComponent","TableComp","_ref$header","_ref$data","Table","borderColor","stickyHeader","TableHead","TableBody","index","Table_TableBodyRow","useStyles2","FeaturedProuductComponent","allFeaturedProudct","setAllFeaturedProduct","productId","isActive","createFeaturedProduct","setCreateFeaturedProduct","_styloribannerfetch","opts","fatchvalue","allFeaturedProducts","styloribannerfetch","_ref2","_callee3","ProductId","_context3","variables","reload","onsubmitvalue","_ref3","_callee4","create_featured_Product","_context4","sm","fullwidth","text-align","autoFocus","inputProps","labelPlacement","_val$productListByPro","_val$productListByPro2","_val$productListByPro3","_val$productListByPro4","_val$isActive","productListByProductId","productName","productImagesByProductId","imageUrl","_callee2","_context2","FeaturedProduct","FeaturedProductComponent","allNewArrivalProducts","NewarrivalComponent","columns","CustomerReview","page","setPage","rowsPerPage","setRowsPerPage","allReview","setAllReview","allCustomerReviews","log","handleChangeIsActive","Id","headCell","align","numeric","disablePadding","slice","row","_row$isPublish","_row$isActive","productSku","customerName","rating","message","isPublish","TableFooter","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","Reviewcoponent","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","description","minOrderQty","maxOrderQty","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","productSize","masterProductSize","metal","product_code","isactive","gemstonelist","diamondlist","variants","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","isactiveVariant","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","diamonditemname","diamondsubitemname","diamonddescription","gemstoneitemname","gemstonesubitemname","gemstonedescription","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","showPriceBreakup","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","orders","setOrderCtx","OrderContext","button","&:hover","text","EnhancedTableHead","order","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","sortDirection","TableSortLabel","active","property","visuallyHidden","paddingLeft","paddingRight","highlight","lighten","light","primary","dark","flex","clip","overflow","position","contantview","placeItems","withApollo","useHistory","pageCount","setPageCount","offsetValue","setOffsetValue","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","handleInputChange","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","fetchPolicy","getproductlist","_x4","_x5","_x6","_x7","_x8","_getproductlist","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","offset","products","rows","addnewvendor","isAsc","react_components_esm","onCompleted","totalCount","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","scope","address","gstNo","vendorDelivaryDays","createdAt","vendordata","pincode","SelectProps","native","parseInt","process","REACT_APP_GA_MEASUREMENT_ID","Page","Page_excluded","divider","& + &","cardcontent","selectedOption","optionRadio","optionDetails","AttributeComponent","AttributesComponent_excluded","_React$useContext","attributes","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","handleoptionChange","elements_arr","forEach","element","indexOf","Card","fixedTag","shiprates","selectedrate","renderTags","getTagProps","multiple","components","textAlign","onAdded","results","Addshippingattributes","withRouter","history","rateid","setRateid","setMasters","setSelectedrate","selectedattr","setSelectedattr","isloaded","setIsloaded","_updateattributes","taxcontent","displaytext","reqbody","display_text","_getmastervalues","ratevalue","allShippingCharges","attr","categories","productAttributes","selectedcategory","catobj","prod_id","split","getmastervalues","AttributesComponent","attrs","display_arr","alias_arr","valueobj","join","updateattributes","aboutvoucher","AttributesComponent_AttributesComponent_excluded","Addtaxattributes","allMasterTaxSettings","AttributesComponent_AttributesComponent","Header","Header_excluded","justify","autoComplete","onAdd","inner","Results","Results_excluded","orange","green","CardHeader","Divider","CardContent","CardActions","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","total","currency","components_Header_Header","components_Results_Results","progress","CategoryList","_useQuery","useQuery","MaterialContext_MaterialProvider","Configuration","master_options_url","lg","Link","underline","RouterLink","to","General","General_excluded","first_name","last_name","email","isemailverified","components_Label_Label","ismobileverified","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","paddingBottom","helperText","author","applyButton","white","EditContent","diamond","onApply","EditContent_excluded","showpreview","setShowpreview","previewurl","_uploadimagetoserver","bodaydata","keyvalue","uploadtype","imagename","responsedata","returnData","signedRequest","filepathname","imageurl","previmagenames","previmages","moment","image","fileExtension","foldername","product_id","filepath","axios","put","file","gutterBottom","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","alert","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","small","react_filepond","oninit","labelIdle","onaddfile","fileItem","uploadimagetoserver","masterlist","setMasterlist","openedit","setOpenedit","editEmail","setEditEmail","aliasName","setaliasName","_React$useState33","_React$useState34","onCreate","Array","prototype","insert","splice","setpreviewurl","_React$useState35","_React$useState36","_React$useState37","_React$useState38","toLowerCase","fxSyncAPI","button_title","sort_id","filterOrder","prefix","components_EnhancedTableHead_EnhancedTableHead","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","editemail","tabs","background","borderRight","master_options","Customerdetails","setCustomer","user_id","_getmaster","userinfo","userprofile","getmaster","components_General_General","match","_match$params","tab","find","t","Input","_props$isNumber","isNumber","pattern","maxLength","minLength","Input_excluded","onKeyPress","which","input-label","textOverflow","input","&::placeholder","Dashboard_","Container","components_Input_Input","Component","Dashboard","DiscountList_components_Header_Header_excluded","ConformationAlert","isshow","dividers","DialogContentText","onSuccess","positivebtn","components_Results_Results_excluded","isconformation","setIsconformation","deleteid","handledelete","_handledelete","datacontent","elementId","mutate","mutation","hidedeleteconformation","_handledelete2","handleChange","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","negativebtn","discountName","discountType","discountValue","productAttributesText","Visibility_default","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","Earringbacking","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","_search","filteredHomes","x","Mastercontent","Goldpriceupdate","mastervendors","setMastervendors","cost_price","selling_price","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","pricetype","setPricetype","selectedvendors","setSelectedvendors","setMaterials","masterpurities","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","vendorid","sellingpricejson","handlesellingPriceChange","disableClearable","pricejson","goldpurity","sellingprice","parseFloat","priceratio","goldprice_val","goldsellingprice_val","purityname","CREATE_HOLIDAY","mutation_templateObject","UPDATE_HOLIDAY","mutation_templateObject2","DELETE_HOLIDAY","mutation_templateObject3","CREATE_WAREHOUSE","mutation_templateObject4","UPDATE_WAREHOUSE","mutation_templateObject5","DELETE_WAREHOUSE","mutation_templateObject6","CREATE_INVENTORY","mutation_templateObject7","UPDATE_INVENTORY","mutation_templateObject8","DELETE_INVENTORY","mutation_templateObject9","UPDATE_ORDER","mutation_templateObject10","CREATE_APPOINTMENT_DATE","mutation_templateObject11","CREATE_APPOINTMENT_TIME","mutation_templateObject12","DELETE_APPOINTMENT_TIME","mutation_templateObject13","DELETE_APPOINTMENT_DATE","mutation_templateObject14","closeButton","inputField","HolidayModal","disableTypography","IconButton","holiday","editItem","useUtils_cfb96ac9","utils","DateFnsUtils","DatePicker","inputVariant","date","handleSave","HolidayManager","_data$allHolidayManag","_data$allHolidayManag2","_data$allHolidayManag3","_data$allHolidayManag4","first","networkStatus","setType","setItem","accept","files","bodyFormData","FormData","set","post","handleUpload","htmlFor","Tooltip","CloudUpload_default","document","setAttribute","click","GetApp_default","AddCircle_default","TableContainer","NetworkStatus","colSpan","LinearProgress","allHolidayManagers","updatedAt","DeleteForever_default","HolidayManager_HolidayModal","__typename","InventoryModal","_data$allWarehouses","setError","required","generatedSku","Boolean","onBlur","_res$data","_res$data$allTransSku","_res$data$allTransSku2","allTransSkuLists","numberOfItems","allWarehouses","getOptionSelected","warehouse","InputProps","endAdornment","iconButton","& .MuiOutlinedInput-root","StockStatus","_item$inventoriesByWa","_item$inventoriesByWa2","_item$inventoriesByWa3","inventoriesByWarehouseId","aggregates","sum","disableRipple","setWarehouse","Store_default","Inventory","_filter","_data$allInventories","_data$allInventories2","_data$allInventories3","_data$allInventories4","setSearch","_useQuery2","includesInsensitive","startAdornment","InputAdornment","Inventory_StockStatus","allInventories","Inventory_InventoryModal","newValue","warehouseId","buildGradient","start","end","gradients","blue","indigo","validate","require","schema","presence","allowEmpty","password","borderTopRightRadius","borderBottomRightRadius","breakpoints","down","backgroundImage","loginForm","person","fields","submitButton","LoginForm_excluded","_React$useContext2","isValid","touched","errors","formState","setFormState","showmessage","setShowmessage","persist","handleSubmit","signinobj","pageaccess","pages","pagepermissions","accessToken","pageurl","is_write","hasError","LoginForm_Alert","Login","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","components_LoginForm_LoginForm","Manageadminusers","masterroles","setMasterroles","roles","username","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","SheduleModal","_props$date","minDate","datecard","available","availableTitle","time","notchedOutline","day","backdrop","zIndex","SheduleModalShow","_props$timeValue$star","_props$timeValue","_props$timeValue$endT","_props$timeValue2","appointmentTypes","getTime","_x$split","_x$split2","hour","minute","second","d","setHours","setMinutes","setSeconds","close","Backdrop","Select","labelId","defaultValue","filterType","MenuItem","timing","deleteTime","DeleteOutline","startTime","endTime","TimePicker","timeValue","handleTimeValue","handleSubmitTime","endDate","deleteDate","ManageShedule","setAppointmentDateId","setLoading","modalloading","setModalLoading","setDate","appointmentDate","setAppointmentDate","setAppointmentTypes","appointmentSlots","setAppointmentSlots","openAppointmentTime","setOpenAppointmentTime","showTime","setShowTime","setTimeValue","startOf","endOf","filterDate","setFilterDate","borderTop","calenderCard","& .MuiOutlinedInput-input","closedCard","GetAllAppointmentTypes","FilterDates","CheckAppointment","startDate","_res$data$allAppointm","allAppointmentDates","GetAllAppointment_TimeSlots","_ref4","loc","source","allAppointmentDateTimeSlots","_ref5","_callee5","_context5","allAppointmentTypeMasters","_ref6","_callee6","_context6","CheckTimeslot","_ref7","_callee7","_context7","_res$data2","_res$data2$allAppoint","_ref8","_callee8","_context8","startDateTime","endDateTime","_x9","_ref9","_callee9","_context9","_x10","_ref10","_callee10","_context10","_x11","handleDateChange","_ref11","_callee11","_context11","_x12","_ref12","_callee12","_context12","_x13","_x14","FilterTimeSlotes","views","Box","isSameOrAfter","shedulemodalshow","shedulemodal","fitltercontent","seacrchtext","filtercontent","setFiltercontent","_React$createElement","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","bodycontent","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","select","& .MuiInputBase-root","filterData","Manageappoinment","_data$allAppointments","_data$allAppointments2","setStartDate","setEndDate","isNull","appointmentFilter","setAppointmentFilter","selectedStatus","setSelectedStatus","selectedType","setSelectedType","limit","appointment_filter","order_by","allAppointments","appointmentDateTimeSlotBySlotId","appointmentDateByAppointmentDateId","greaterThanOrEqualTo","lessThanOrEqualTo","ActionIcon","tConvert","toString","or","KeyboardButtonProps","autoOk","equalTo","_row$id","_row$customerName","_row$email","_row$mobile","_row$appointmentDateT","_row$appointmentDateT2","_row$appointmentDateT3","_row$appointmentDateT4","_row$appointmentDateT5","_row$appointmentDateT6","_row$type$name","_row$type","_row$status","onPageChange","other","Addmarkup_excluded","MuiDialogContent","MuiDialogActions","Addmarkup","markup","setMarkup","handleinputChange","actionclose","Addmarkup_DialogTitle","Addmarkup_DialogContent","readOnly","materiallist","puritylist","Addmarkup_DialogActions","actionSave","cardroot","editmarkup","setEditmarkup","setGoldpricelist","setDeleteid","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","material_list","purity_list","sellpricemin","sellpricemax","markuptype","_handleSave","column","allPricingMarkups","vendorCode","producttypes","heading","sellingPriceMin","sellingPriceMax","markupType","helperinput","markupValue","diamondData","markupid","editdiamond","setEditdiamond","allDiamondPriceSettings","diamondColour","costPrice","sellingPrice","sellingPriceType","descendingComparator","b","allGemstonePriceSettings","array","comparator","stabilizedThis","el","stableSort","getComparator","gemstoneType","weightStart","weightEnd","price","useStyle","allMakingChargeSettings","Markupprice","categorylist","setCategorylist","setProducttypes","setMateriallist","setPuritylist","Product","vendor","Masterattribute","_Masterattribute","allAttributeMasters","Mastercategories","Mastercollections_components_Results_Results_excluded","Mastercollections","Masterdesigns_components_Results_Results_excluded","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Mastergemsettings_components_Results_Results_excluded","Mastergemsettings","Mastergemshapes_components_Results_Results_excluded","Mastergemshapes","Mastergemtypes_components_Results_Results_excluded","Mastergemtypes","Mastergenders_components_Results_Results_excluded","Mastergenders","Mastermetalcolors","Masteroccassions","Masterorderstatus","allOrderStatusMasters","Masterpaymentstatus","allPaymentStatusMasters","Masterproducttypes","Masterpurities_components_Results_Results_excluded","Masterpurities","form","formControl","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","isopen","pagecontent","displayname","Checkbox","isview","iswrite","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","masterpages","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","_showpermissions","rowcontent","_updatepermissions","components_Addpermissions_Addpermissions","Masterscreens","_x$name","_x$name2","Masterstonecolors","Masterstones","Masterstoneshapes","allMasterStonesShapes","Masterstyles_components_Results_Results_excluded","Masterstyles","Masterthemes_components_Results_Results_excluded","Masterthemes","Masterweights","allMasterWeights","Materialmaster","getGiftMessage","giftFrom","giftTo","getPaymentStatus","paymentMode","paymentStatus","paymentResponse","payment_response","APTRANSACTIONID","MESSAGE","TRANSACTIONPAYMENTSTATUS","defaultColumns","Order ID","is_active","is_default","identifier","Order Date","Customer Name","SKUs","Email","Phone Number","Shipping Address","Gift Message","Order Status","Payment Mode","Payment Status","Waybill No","Comments","Actions","OrderList","_data$allOrders","_data$allOrders2","userProfileId","columnName","setColumnName","orderFilter","setOrderFilter","paymentMaster","setMasterData","orderStatus","fromDate","setFromDate","ToDate","setToDate","anchorEl","setAnchorEl","OrderList_templateObject","toConsumableArray","order_filter","allOrders","_item$shoppingCartByC","_item$shoppingCartByC2","_item$shoppingCartByC3","_item$shoppingCartByC4","_item$shoppingCartByC5","_item$shoppingCartByC6","_item$shoppingCartByC7","_item$shoppingCartByC8","_item$shoppingCartByC9","_item$shoppingCartByC10","_item$shoppingCartByC11","_item$shoppingCartByC12","_item$shoppingCartByC13","_item$shoppingCartByC14","_item$shoppingCartByC15","_item$shoppingCartByC16","_item$shoppingCartByC17","_item$paymentDetailsB","_item$paymentDetailsB2","_item$paymentDetailsB3","_item$smsDeliveredId","order_date","shoppingCartByCartId","shoppingCartItemsByShoppingCartId","_i$transSkuListByProd","transSkuListByProductSku","customer_name","cartAddressesByCartId","firstname","userProfileByUserprofileId","phone_number","contactNumber","shipping_address","addressline1","addressline2","state","gift_message","payment_mode","order_status","payment_status","paymentDetailsByOrderId","emailMessageId","smsDeliveredId","replace","waybill","awbNumber","comments","some","disableFuture","currentTarget","ViewColumn_default","Menu","PaperProps","_columnName$item","_columnName$column","OrderList_ActionIcon","toolbar","deleteButton","deleteIcon","OrderManagementDetails_components_Header_Header_excluded","OrderInfo","OrderInfo_excluded","paymentstatus","setPaymentstatus","orderstatus","setOrderstatus","errorMsg","setErrorMsg","waybillNum","updateOrder","setUpdateOrder","setCommunicationLogs","_updateOrder$comments","_order$awb_number","_order$payment_status","_order$order_status","_order$comments","awb_number","getOrderCommunicationLogs","_fatchvalue$data$orde","_fatchvalue$data","_fatchvalue$data$orde2","_fatchvalue$data$orde3","orderById","communicationLogsByOrderId","sendEmail","order_id","user_profile","shopping_cart","cart_addresses","country","contact_number","discounted_price","giftwraps","_updateOrder$comments2","_updateOrder$waybillN","_updateOrder$comments3","OrderItems","OrderItems_excluded","lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","objectFit","text_heading","text_content","final_total_text","OrderDetails","OrderDetails_excluded","md","trans_sku_list","sku_weight","diamond_type","Math","round","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","productDetails","setProductDetails","communicationLogs","_fetchorderdetails","product_detail","com_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","xl","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","senderResponseId","messageType","AppointmentInfo","_order$allAppointment","_order$allAppointment2","_order$allAppointment3","_order$allAppointment4","_order$allAppointment5","_order$allAppointment6","_order$allAppointment7","_order$allAppointment8","_order$allAppointment9","_order$allAppointment10","_order$allAppointment11","_order$allAppointment12","_order$allAppointment13","_order$allAppointment14","_order$allAppointment15","_order$allAppointment16","_order$allAppointment17","_order$allAppointment18","_order$allAppointment19","_order$allAppointment20","_order$allAppointment21","_order$allAppointment22","_order$allAppointment23","_order$allAppointment24","_order$allAppointment25","_order$allAppointment26","_order$allAppointment27","_order$allAppointment28","_order$allAppointment29","_order$allAppointment30","_order$allAppointment31","_order$allAppointment32","_order$allAppointment33","_order$allAppointment34","_order$allAppointment35","_order$allAppointment36","_order$allAppointment37","_order$allAppointment38","_order$allAppointment39","_order$allAppointment40","_order$allAppointment41","_order$allAppointment42","_order$allAppointment43","_order$allAppointment44","_order$allAppointment45","_order$allAppointment46","_order$allAppointment47","_order$allAppointment48","AppointmentInfo_excluded","textTransform","metalType","Radio","isOnline","isItRequired","areMoreMembersJoining","overflowWrap","specialRequests","AppointmentExtra","AppointmentExtra_excluded","selected","setSelected","meetingLink","setmeetingLink","handleMeeting","handleSelect","appointment_id","meeting_link","AppointmentManagementDetails","_fatchvalue$data$appo","_fatchvalue$data$appo2","_fatchvalue$data$appo3","appointmentById","appointmentCommunicationLogsByAppointmentId","notifyOnNetworkStatusChange","components_AppointmentInfo","components_AppointmentExtra","_val$senderResponseId","_val$communicationTyp","_val$type","communicationType","_val$senderResponseId2","_val$communicationTyp2","_val$type2","Priceupdate_components_Results_Results_excluded","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","makeid","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","charAt","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionmaterialDetails","selectedtext","AboutVoucher","AboutVoucher_excluded","productids","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","formData","setFormData","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","producttypelist","FullLoader","PriceupdateContent","setProducts","setCategories","setVendors","startrun","setStartrun","_updateprices","req_product_id","_rerun","history_id","update_products","pricingcomponent","_filterapllied","filterdata","_downloadlog","Fullloader","components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","productlists","showproductdetails","_showproductdetails","productid","filterparams","categoryname","Products_Product_EnhancedTableHead","_row$trans_sku_lists","trans_sku_lists","sku_id","product_name","vendor_code","appBar","textarea","resize","errorTable","LinearProgressWithLabel","mr","ChooseWareHouse","_data$allWarehouses$n","ProductSync","action_type","sync_url","new_tagno","setData","setProgress","errorTagNo","setErrorTagNo","validatedTagNo","setValidatedTagNo","backDrop","setBackDrop","_event$target","socket","socketIOClient","on","completed","timeElapsed","fullScreen","AppBar","Toolbar","edge","errorStatus","tagno","isEmpty","startIcon","AssignmentTurnedInOutlined_default","Product_lists","Sync_default","FormControl","RadioGroup","ProductSync_ChooseWareHouse","ChipInput_default","_data$list","_data$list2","list","onDelete","newChipKeyCodes","newChipKeys","rowSpan","borderBottom","tooltip","arrow","download","CloudDownload_default","Productlist","setFilterparams","components_ProductFilter_ProductFilter","filterobj","Products_Product","Productlist_ProductSync","dropdownlayout","& .menu","& .MuiFormHelperText-root","fieldHint","dateField","AddressForm","initailRingSize","updateRingSize","AddressForm_excluded","allMasterRingsSizes","handleTextChange","_objectSpread4","test","material_names","_objectSpread9","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormLabel","isreorderable","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","pointerEvents","placeholderzindex","isDisabled","SelectContainer","View","selectzindex","SelectView","react_select_browser_esm","isClearable","PaymentForm","PaymentForm_excluded","includes","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","Review_excluded","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","weight","handleClick","metalsarr","stonedetails","isvalid","deletematerial","valueContainer","chipFocused","noOptionsMessage","singleValue","selectEmpty","createData","calories","fat","carbs","protein","Step4_excluded","default_metal_size","Step5_excluded","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","setMetalcolour","imageposition","imagecolor","prodimages","prodid","imagecolourobj","imagecount","imageobj","_imageobj","image_url","unshift","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","allowMultiple","onupdatefiles","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","Plotly","createPlotlyRenderers","_paper","layout","up","stepper","buttons","nested","Productupload","activeStep","setActiveStep","failure","setSuccess","handleNext","error_content","formdata","sleep","_sleep","millis","setTimeout","Stepper","Step","StepLabel","step","Review_Review","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","ProductuploadContext_ProductProvider","Component_Productupload","black","blueGrey","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","Salediscount_components_Results_Results_excluded","Create_default","AboutVoucher_AboutVoucher_excluded","discountobj","setDiscountobj","discountname","discounttitle","componenets","ButtonGroup","optionvalue","discounttype","discountvalue","VoucherComponent","VoucherComponent_excluded","Viewsku_excluded","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","Viewsku_DialogActions","Products","Products_excluded","selectskus","Salediscountcontent","skus","setSkus","isloading","setIsloading","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","discount_id","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","snackMessage","_getdiscountvalue","comparr","discountid","discunt","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","product_attributes","allkeys","_creatediscount","ispricerun","skuarray","sku_content","updatediscount","discount_count","product_attributes_text","eror_skus","getdiscountvalue","Salediscountcontent_Alert","components_VoucherComponent_VoucherComponent","componentsstring","filterapllied","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","creatediscount","Salediscount","VoucherContext_VoucherProvider","Seopriority_components_Results_Results_excluded","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Shipmentsettings","zones","allShippingZones","ranges","shipmentcharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","Shippingattributes","displayAttributes","Attributescontent","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Taxsettings","taxName","Attributescontent_Attributescontent","Taxsetup","Invoices","Useraddresses_components_Results_Results_excluded","setInvoices","invoice","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Userconfiguration","menu","Userwishlist_components_Results_Results_excluded","Userwishlist","wishlists","Userwishlist_components_Results_Results","Newvendor","Vendorlist","components_Vendor_Vendor","Addmetalprice_excluded","Addmetalprice","metaldata","setMetaldata","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","Addmetalprice_DialogActions","save","metalmaster","setMetalmaster","puritymaster","setPuritymaster","_handleAdd","metalcontent","costprice","priceid","allGoldPriceSettings","selectedsellingPriceType","Adddiamondprice_excluded","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","diamondmaster","setDiamondmaster","Adddiamondprice_Addmetalprice","Addgemstoneprice_excluded","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstone_type","weight_start","weight_end","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","Addmakingchargeprice_excluded","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","Vendorprice","setVendorcode","setVendorlist","components_Product","components_Diamonds","components_Gemstones","components_Makingcharge","Voucherdiscount_components_Results_Results_excluded","components_AboutVoucher_AboutVoucher_excluded","vouchercode","setVouchercode","vouchercount","setVouchercount","voucherprefix","setVoucherprefix","selectedDate","setSelectedDate","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","minimumqty","voucherdiscount","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","startdate","enddate","strictCompareDates","VoucherComponent_VoucherComponent_excluded","Voucherdiscountcontent","setAttributes","setDiscountid","attributesadded","attributedata","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","VoucherdiscountContent_Alert","Voucherdiscount_components_AboutVoucher_AboutVoucher","Voucherdiscount_components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherdiscountListing_components_Header_Header_excluded","VoucherdiscountListing_components_Results_Results_excluded","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","WarehouseModal","shippingInDays","Warehouse","_data$allWarehouses2","_data$allWarehouses3","Warehouse_WarehouseModal","fieldset","boxSizing","gridArea","legend","font","textfield","inline","CartDetails","_state$data","_state$data$cart","_state$data$cart$user","_state$data2","_state$data2$cart","_state$data2$cart$use","_state$data3","_state$data3$cart","_state$data3$cart$use","_state$data4","_state$data4$cart","_state$data4$cart$use","_state$data5","_state$data5$cart","_state$data5$cart$use","_state$data$user$isem","_state$data6","_state$data6$user","_state$data$user$ismo","_state$data7","_state$data7$user","_state$data8","_state$data8$cart","_state$data8$cart$add","_state$data9","_state$data9$cart","_state$data9$cart$add","_state$data10","_state$data10$cart","_state$data$cart$gros","_state$data11","_state$data11$cart","_state$data$cart$disc","_state$data12","_state$data12$cart","_state$data$cart$taxA","_state$data13","_state$data13$cart","_state$data14","_state$data14$cart","_state$data14$cart$ca","_state$data15","_state$data15$cart","_state$data15$cart$fo","setState","cart","user","firstName","lastName","FormGroup","_item$salutation","salutation","lastname","countryCode","grossAmount","discountedPrice","taxAmount","List","dense","cart_items","_item$transSkuListByP","_product$productImage","_item$transSkuListByP2","_item$transSkuListByP3","skuDetails","product","ListItem","disableGutters","ListItemAvatar","material_ui_image_lib_default","ListItemText","markupPrice","markupPriceTax","follow_ups","ListItemIcon","Mail_default","Sms_default","Call_default","Headers","Cart ID","User Details","asc","desc","Total Products in cart","Contact","Status","Created On","Last Updated On","filterVariables","ordersByCartIdExist","withoutContact","userprofileId","withContact","emptyCart","every","AbandonedCart","_Headers$sort$by$sort","_filterVariables$filt","_filterVariables$filt2","_data$allShoppingCart","_data$allShoppingCart2","_data$allShoppingCart3","_data$allShoppingCart4","setFilter","by","setSort","condition","handleClickFilter","_filterVariables$valu","_filterVariables$valu2","_filterVariables$with","cartDetails","allShoppingCarts","_item$user","_item$user2","_item$user3","_item$user4","_item$cart_items","_item$cart_items$node","_item$cart_items$node2","_item$cart_items2","_item$cart_items2$nod","_item$cart_items2$nod2","_item$cart_items3","_item$cart_items3$nod","_item$cart_items3$nod2","cart_id","discountAmount","mobile_no","sku_ids","skuId","generated_skus","_i$transSkuListByProd2","product_names","_i$transSkuListByProd3","_i$transSkuListByProd4","downloadAbandonedCart","CloudDownloadOutlined_default","_Headers$item","_Headers$by$direction","_filterVariables$filt3","_filterVariables$filt4","applySort","_item$user5","_item$user6","_item$user7","_item$cart_items4","_item$cart_items5","_item$user8","_item$user9","_item$user10","_item$user11","_item$user12","userName","Email_default","disableElevation","disableFocusRipple","CircularProgressWithLabel","PriceUpload","BackupOutlined_default","fetchMasterCountries","MasterCountries_templateObject","addMutationMasterCountry","MasterCountries_templateObject2","updateMutationMasterCountry","MasterCountries_templateObject3","MasterCountry","_data$allMasterCountr","MasterCountries_excluded","currentTimeStamp","masterCountryPatch","fxConversionRate","Number","fetchDailyMetalPrices","DailyMetalPrice_templateObject","DailyMetalPrice_templateObject2","DailyMetalPrice_templateObject3","DailyMetalRate","_data$allDailyMetalPr","DailyMetalPrice_excluded","dailyMetalPricePatch","displayPrice","allDailyMetalPrices","PriceLogs","_data$allPriceRunning","_data$allPriceRunning2","_data$allPriceRunning3","_data$allPriceRunning4","allPriceRunningHistories","_item$completedProduc","_item$pricingComponen","_item$logs","_item$logs$nodes$","_item$logs2","_item$logs2$nodes$","_item$logs3","_item$logs3$nodes$","_item$logs3$nodes$$re","_item$logs4","_item$logs4$nodes$","_item$logs5","_item$logs5$nodes$","_item$logs6","_item$logs6$nodes$","_item$logs6$nodes$$su","_item$logs7","_item$logs7$nodes$","_item$logs8","_item$logs8$nodes$","_item$logs9","_item$logs9$nodes$","_item$logs9$nodes$$fa","completedProductCount","pricingComponent","wordWrap","logs","requestedProducts","req","successfullyExecutedProducts","failedProducts","UploadImage","Axios","Accept-Language","_boundary","ImageUpload","imgLink","setImgLink","disableButton","setDisableButton","_res$data$web","web","navigator","clipboard","writeText","dialogPaper","dialogPaperMid","dialogHeader","TableHeaderComp","_props$handleAddNew","handleAddNew","_props$noAddNew","noAddNew","BannerCMS","_props$data7","_props$data7$props","initialState","urlParam","initialEdit","isEdit","editIndex","editData","setEditData","onChangeData","_props$data","_props$data$props","_props$data2","editBanner","getData","_props$data3","_props$data4","_props$data4$props","_getData","banners","TableHeadComp","TableComponent","_props$data5","_props$data5$props","_props$data6","storeHeader","tableStoreData","tableStoreView","initialStoreDetails","para","StoreLocatorCMS","openStores","setOpenStores","stores","setStores","addStoresOpens","setAddStores","showStoreFields","setShowStoreFields","storeState","setStoreState","storesEdit","setStoresEdit","handleCloseStores","handleAddNewStoresClose","onChangeStoreData","validationHead","storeData","storeDetailsValidate","editStores","newState","newStore","deleteStores","storeDataEdit","EditorConvertToHTML","_this","call","onEditorStateChange","editorState","draftToHtml","convertToRaw","getCurrentContent","handleChangeState","EditorState","createEmpty","parentState","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","react_draft_wysiwyg","wrapperClassName","editorClassName","toolbarClassName","fontFamily","dropdownClassName","TitleDescriptionCMS","richEditor","titleDesc","setTitleDesc","handleClickOpen","richTextEditor","QueryFormCMS","setImage","offerPrice","placeImage","hoverImage","diamondType","skuID","skuUrl","SlidingImageCardCMS","constructedData","setConstructedData","_props$data$props$lis","dataConstruct","listingProducts","_val$image","_val$image$placeImage","_props$data2$props","_getData$props","_getData$props$listin","_getData$props2","_getData$props2$listi","_dataConstruct","_val$image2","_val$image2$placeImag","_val$image3","_val$image3$placeImag","_props$data6$props","_getData$props3","_getData$props3$listi","_val$image4","_val$image4$placeImag","_res$data3","CustomCareerBannerCMS","CustomCareerCardCMS","job_Role","button_Text","editContent","cardContent","CustomNewsCMS","button_text","Title","Description","SpclTitleDescr","spclTitleDescr","setSpclTitleDescr","_data$props","_data$props2","_data$props3","BookYourAppointmentCMS","feed","TestimonialCMS","_props$data3$props","sub","sub2","AboutCollection","_data$props4","TitleComp","setTitle","CmsComponent","useLocation","fetchCall","pageName","dataRecieved","cdnByPage","propsKey","replaceIndex","stringifyState","findIndex","newStateSet","bannerCMS","storeLocatorCMS","titleDescriptionCMS","queryFormCMS","slidingImageCardCMS","customCareerBannerCMS","customCareerCardCMS","customNewsCMS","spclTitleDescrCMS","bookYourAppointmentCMS","titleCompCMS","testimonialCMS","aboutCollectionCMS","getTheTable","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","editcategory_excluded","focusVisibleClassName","Editcategory","checkedA","checkedB","checkedC","spaceing","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","listOfValue","setColumns","conatiner","head","stateChange","resetButton","columnclose","useStyless","FormPropsTextFields","ArrowDownward_default","Popover","transformOrigin","FontWeight","noValidate","SortHeader","lassName","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","EnhancedTable","emptyRows","min","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","CmsHome","allCdns","SilverLandingPage","alllandingbanner","setalllandingbanner","createlandingbanner","setCreatelandingbanner","setDisable","allBanners","create_banner_data","now","toISOString","ClearState","SilverListingPage","SpecificListPages","SilverListingBottom","Silverbanner","silverlandingpage","silverlistingpage","specificListPages","silverbottmpage","SilverListingbanner","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","createVariant","productMetalcoloursByProductId","productPuritiesByProductId","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","saveCreateVariant","checkboxrow","columnnames","selectcolumnfilter","displytype","saveaction","columns_Columns","getColumnnames","EditDiamond","_diamond$diamonditemn","_diamond$diamondsubit","_diamond$diamonddescr","_diamond$diamondClari","_diamond$diamondType","_diamond$diamondColou","EditDiamond_excluded","_Object$assign","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","DiamondSave","_DiamondSave","list_data","diamondListData","_diamondobj$diamondco","_diamondobj$diamondcl","_diamondobj$diamondty","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","itemName","subItemName","stoneAmount","settingData","shapeData","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","_diamond$gemstonesett","_diamond$gemstonecoun","_diamond$gemstoneweig","_diamond$gemstonesize","_diamond$gemstoneitem","_diamond$gemstonesubi","_diamond$gemstonedesc","_diamond$gemstoneshap","_diamond$gemstonetype","EditGemstone_excluded","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","minHeight","Productimages","image_count","productimages","setProductimages","pop","imgobj","deleteImage","imageData","productimageid","handlenewAssetChange","fileType","fileobj","filetype","imagecontent","productimgs","responsecontent","imagePosition","isdefault","styleFile","wordBreak","ishover","aria-hidden","EditPrice","EditPrice_excluded","Variants","pricerun","Skupricesync","_Skupricesync","priceobj","skulistdata","costPriceTax","sellingPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","displycolumns","onShow","Components_EditPrice_EditPrice","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discountDesc","isReadyToShip","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","_productCtx$masterDat","_productCtx$product_t","_productCtx$product_t2","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","_saveProductEditItem","_productCtx$product_t3","_productCtx$product_t4","_productCtx$productMe","_productCtx$vendorcod","_productCtx$vendorcod2","_productCtx$earringba","_productCtx$earringba2","productEditItem","earingBacking","_showpricesummary","sku","price_summary","skuprice","obj","material_name","_productListByProduct","_productListByProduct2","_productListByProduct3","_productListByProduct4","_productListByProduct5","_productListByProduct6","_productListByProduct7","_productListByProduct8","_productListByProduct9","_productListByProduct10","_productListByProduct11","_productListByProduct12","_productListByProduct13","genders","productTypes","earringBackings","earringBacking","size_obj","sizeVarient","vendorCodes","sizes_arr","gender_arr","gender_obj","earring_backing","defaultcolour","metalcolors","unfilterMetalColor","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","transSkuDescriptionsBySkuId","skuDescription","productHashTagsByProductId","ProductEdit_CreateVariant","changeVariant","ProductAttributes_Alert","materialName","esbody","endpoint","saveProductEditItem","Components_SortHeader","varients","Variants_Variants","ProductAttributes","ProductAttributes_Component","route","login","dashboard","profile","productupload","configuration","productlist","orderlist","orderdetails","appointmentdetails","userorders","userwishlist","cmshome","mastermaterial","mastercolors","salediscountlist","voucherdiscountlist","salediscount","priceupdate","priceupload","diamondDetails","gemstoneDetails","images","materiallistpage","editCategory","vendorPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","addshippingattributes","addtaxattributes","userconfiguration","manageadminusers","goldpriceupdate","manageusers","gemsettings","gemshapes","gemtypes","seo","taxsettings","masterattributes","dailyMetalRate","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","holiday_manager","inventory","silverbanner","silverlistingbanner","Newarrival","Manageshedule","abandoned_cart","pricelogs","imageUpload","cmsComponents","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","hide","drawerOpen","outline","drawerClose","mixins","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","menus","menuobj","submenu","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","icons","grow","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","Menu_default","noWrap","MoreVert_default","MainWrapper","PrimaryAppBar_excluded","PrivateRoute","PrivateRoute_excluded","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","AppAlert","Alert_Alerts","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","App_Alert","routes","hostname","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b43477a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport {Grid, Chip } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n      width: '100%',\r\n      padding: theme.spacing(1),\r\n      marginTop : theme.spacing(2)\r\n    },\r\n    buttonPadding: {    \r\n        marginLeft: theme.spacing(2),   \r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    chip: {\r\n      color: theme.palette.success.contrastText,\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n    pendingchip: {\r\n      color: theme.palette.success.contrastText,\r\n      backgroundColor: theme.palette.secondary,\r\n    }\r\n  }));\r\n\r\nexport default function Categoryrow(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n  return (\r\n    \r\n    <Card className={classes.card}>\r\n\r\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\r\n            <Grid item xs={6} sm={9}>\r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                       mano\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" gutterBottom>\r\n                    mani\r\n                    </Typography>\r\n            </Grid>\r\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n                >\r\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\r\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\r\n            size=\"small\" /></Grid>\r\n             <Grid item xs={3}>\r\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\r\n            <CreateIcon />\r\n            </IconButton> */}\r\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\r\n            <DeleteIcon />\r\n            </IconButton>\r\n            </Grid>\r\n            </Grid>\r\n\r\n      </Grid>\r\n      \r\n      \r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexGrow: 0,\r\n    flexShrink: 0,\r\n    borderRadius: theme.shape.borderRadius,\r\n    lineHeight: '10px',\r\n    fontSize: '10px',\r\n    height: 20,\r\n    minWidth: 20,\r\n    whiteSpace: 'nowrap',\r\n    padding: theme.spacing(0.5, 1)\r\n  },\r\n  rounded: {\r\n    borderRadius: 10,\r\n    padding: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst Label = props => {\r\n  const { className, variant, color, shape, children, style, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const rootClassName = clsx(\r\n    {\r\n      [classes.root]: true,\r\n      [classes.rounded]: shape === 'rounded'\r\n    },\r\n    className\r\n  );\r\n\r\n  const finalStyle = { ...style };\r\n\r\n  if (variant === 'contained') {\r\n    finalStyle.backgroundColor = color;\r\n    finalStyle.color = '#FFF';\r\n  } else {\r\n    finalStyle.border = `1px solid ${color}`;\r\n    finalStyle.color = color;\r\n  }\r\n\r\n  return (\r\n    <Typography\r\n      {...rest}\r\n      className={rootClassName}\r\n      style={finalStyle}\r\n      variant=\"overline\"\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.string,\r\n  shape: PropTypes.oneOf(['square', 'rounded']),\r\n  style: PropTypes.object,\r\n  variant: PropTypes.oneOf(['contained', 'outlined'])\r\n};\r\n\r\nLabel.defaultProps = {\r\n  style: {},\r\n  color: colors.grey[600],\r\n  variant: 'contained',\r\n  shape: 'square'\r\n};\r\n\r\nexport default Label;\r\n","//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\r\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\r\nexport const BASE_URL = \"https://api-staging.nacjewellers.net\";\r\nexport const API_URL = \"https://api-staging.nacjewellers.net\";\r\nexport const APP_URL = \"https://staging.nacjewellers.net\";\r\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.nacjewellers.net/graphql\";\r\nexport const URL = \"https://console-staging.nacjewellers.net\";\r\nexport const BASE_IMAGE_URL = \"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\";\r\n//  export const GRAPHQL_DEV_CLIENT = \"https://api-staging.nacjewellers.net/graphql\"\r\n//  export const API_URL = \"https://api-staging.nacjewellers.net\"\r\n//  export const BASE_URL = \"http://localhost:8000\"\r\n//  export const URL = \"https://localhost:3000\"\r\n","import React from \"react\";\r\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { URL } from \"../../config\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: theme.spacing(3),\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n  //event.preventDefault();\r\n  console.info(\"You clicked a breadcrumb.\");\r\n}\r\n\r\nexport default function CustomizedBreadcrumbs(props) {\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\">\r\n      <StyledBreadcrumb\r\n        component=\"a\"\r\n        href={\"/configuration\"}\r\n        label={props.name ? props.name : \"Configuration\"}\r\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\r\n      />\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n","import gql from \"graphql-tag\";\r\n\r\nconst PRODUCTCATEGORY = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        alias\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterMaterials {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterGenders {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterDiamondTypes {\r\n      nodes {\r\n        diamondClarity\r\n        diamondColor\r\n        id\r\n      }\r\n    }\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondsSettings {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterDiamondsShapes {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n      }\r\n    }\r\n    allMasterThemes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n\r\n    allMasterStyles {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterOccasions {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterCollections {\r\n      nodes {\r\n        id\r\n        alias\r\n        name\r\n      }\r\n    }\r\n    allMasterStonesColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterStones {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondClarities {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterVendors {\r\n      nodes {\r\n        id\r\n        name\r\n        shortCode\r\n        vendorDelivaryDays\r\n      }\r\n    }\r\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\r\n      nodes {\r\n        productSeries\r\n        id\r\n      }\r\n    }\r\n    allMasterGemstonesTypes {\r\n      nodes {\r\n        alias\r\n        colorCode\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterGemstonesShapes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterEarringBackings {\r\n      nodes {\r\n        name\r\n        createdAt\r\n        alias\r\n        id\r\n        nodeId\r\n        updatedAt\r\n      }\r\n    }\r\n    allMasterGemstonesSettings {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterHashTags {\r\n      nodes {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PRODUCTFILTERMASTER = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        updatedAt\r\n        shortCode\r\n        name\r\n        id\r\n        createdAt\r\n        alias\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        updatedAt\r\n        shortCode\r\n        name\r\n        id\r\n        createdAt\r\n        alias\r\n        displayOrder\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLPRODUCTLIST = gql`\r\n  query {\r\n    allProductLists(first: 500) {\r\n      nodes {\r\n        id\r\n        nodeId\r\n        productName\r\n        productCategory\r\n        productType\r\n        productId\r\n        createdAt\r\n        isactive\r\n        transSkuListsByProductId(condition: { isdefault: true }) {\r\n          nodes {\r\n            skuUrl\r\n            discount\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTLIST = (category) => gql`\r\n  query ($Veiw: Int!, $Offset: Int!) {\r\n    allProductLists(first: $Veiw, offset: $Offset) {\r\n      nodes {\r\n        id\r\n        nodeId\r\n        productName\r\n        productCategory\r\n        productType\r\n        productId\r\n        createdAt\r\n        isactive\r\n        transSkuListsByProductId(condition: { isdefault: true }) {\r\n          nodes {\r\n            skuUrl\r\n            discount\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst VENDORLISTS = gql`\r\n  query {\r\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\r\n      nodes {\r\n        vendorDelivaryDays\r\n        updatedAt\r\n        state\r\n        shortCode\r\n        partnerCategory\r\n        name\r\n        organization\r\n        gstNo\r\n        currency\r\n        createdAt\r\n        city\r\n        address\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst TaxList_1 = gql`\r\n  query {\r\n    allMasterTaxSettings {\r\n      nodes {\r\n        hsnNumber\r\n        taxName\r\n        taxValue\r\n        updatedAt\r\n        id\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`; /*********** configuration query */\r\n\r\nconst TaxList = `\r\nquery  {\r\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      hsnNumber\r\n      taxName\r\n      taxValue\r\n      igst\r\n      cgst\r\n      sgst\r\n      productAttributes\r\n      displayAttributes\r\n      updatedAt\r\n      id\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\nconst TaxSettingList = `\r\nquery  {\r\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      value\r\n      hsnCode\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERMATERIAL = `\r\nquery  {\r\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst MASTERMATERIALCOLORS = `\r\nquery  {\r\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      shortCode\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERPRODUCTPURITIES = `\r\nquery  {\r\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DESIGNMASTER = `\r\nquery  {\r\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    name\r\n    alias\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n    id\r\n  }\r\n}\r\n}`;\r\nconst COLLECTIONMASTER = `\r\nquery  {\r\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst OCCASSIONSMASTER = `\r\nquery  {\r\n  allMasterOccasions {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst STYLEMASTER = `\r\nquery  {\r\nallMasterStyles {\r\n  nodes {\r\n    alias\r\n    createdAt\r\n    name\r\n    id\r\n    updatedAt\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}`;\r\nconst THEMEMASTER = `\r\nquery  {\r\n  allMasterThemes {\r\n    nodes {\r\n      createdAt\r\n      alias\r\n      id\r\n      name\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst DIAMONDMASTER = `\r\nquery  {\r\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    diamondClarity\r\n    diamondColor\r\n    id\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}\r\n`;\r\n\r\nconst PAYMENTSTATUSMASTER = `\r\n{\r\n  allOrderStatusMasters {\r\n    nodes {\r\n      createdAt\r\n      id\r\n      isActive\r\n      name\r\n      updatedAt\r\n    }\r\n  }\r\n  allPaymentStatusMasters(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      createdAt\r\n      id\r\n      isActive\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\nconst DIAMONDSETTINGS = `\r\nquery  {\r\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    name\r\n    id\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}\r\n`;\r\nconst DIAMONDSHAPES = `\r\nquery  {\r\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst MASTERPRODUCTTYPES = `\r\nquery  {\r\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    certificate\r\n    name\r\n    id\r\n    alias\r\n    isActive\r\n    isFilter\r\n    shortCode\r\n    displayOrder\r\n  }\r\n}\r\n}`;\r\nconst MASTERCATEGORIES = `\r\nquery{\r\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERPAGES = `\r\nquery  {\r\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      pagename\r\n      displayname\r\n      id\r\n    }\r\n  }\r\n}`;\r\nconst GOLDPRICESETUPMASTER = `\r\nquery  {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\nconst EARRINGBACKING = `\r\nquery  {\r\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      updatedAt\r\n      createdAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERSTONES = `\r\nquery  {\r\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERCOUNTRIES = `\r\nquery  {\r\n  allMasterCountries(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      iso\r\n    }\r\n  }\r\n}`;\r\nconst SHIPPINGCHARGES = `query{\r\n  allShippingCharges {\r\n    nodes {\r\n      id\r\n      name\r\n      isActive\r\n      isCart\r\n      chargeType\r\n      rangeFrom\r\n      rangeTo\r\n      shipmentCharge\r\n      productAttributes\r\n      displayAttributes\r\n      shippingZoneByZoneId {\r\n        name\r\n        id\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n}`;\r\nconst ACTIVESHIPPINGZONES = `\r\nquery  {\r\n  allShippingZones(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      isActive\r\n    }\r\n  }\r\n}`;\r\nconst SHIPPINGZONES = `\r\nquery  {\r\n  allShippingZones {\r\n    nodes {\r\n      name\r\n      id\r\n      isActive\r\n      shippingZoneCountriesByZoneId {\r\n        nodes {\r\n          countryId\r\n          createdAt\r\n          id\r\n          masterCountryByCountryId {\r\n            name\r\n            nicename\r\n            id\r\n          }\r\n        }\r\n      }\r\n      shippingChargesByZoneId {\r\n        nodes {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\nconst MASTERSTONECOLORS = `\r\nquery  {\r\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERWEIGHTS = `\r\nquery  {\r\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      createdAt\r\n      name\r\n      id\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERSTONESHAPES = `\r\nquery  {\r\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      createdAt\r\n      alias\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERATTRIBUTES = `\r\nquery  {\r\nallAttributeMasters {\r\n  nodes {\r\n    name\r\n    isFilter\r\n    id\r\n    isSearch\r\n    isActive\r\n    filterPosition\r\n    isTopMenu\r\n    createdAt\r\n    shortCode\r\n    updatedAt\r\n  }\r\n}\r\n}`;\r\n\r\nconst MASTERGEMSETTINGS = `\r\nquery  {\r\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERGEMSHAPES = `\r\nquery  {\r\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERGEMTYPES = `\r\nquery  {\r\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      colorCode\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERGENDER = `\r\nquery  {\r\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst SEOPRIORITIES = `\r\nquery  {\r\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      priority\r\n      seoText\r\n      seoUrl\r\n      imageUrl\r\n        mobileImageUrl\r\n      id\r\n      attributeName\r\n      attributeValue\r\n    }\r\n  }\r\n}`;\r\n/**************** */\r\n\r\n// const PRODUCTLIST  = (category) =>  gql`\r\n// query  {\r\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\r\n//     nodes {\r\n//       id\r\n//       nodeId\r\n//       productName,\r\n//       productCategory,\r\n//       productType\r\n//       productId,\r\n//       createdAt\r\n//       isactive,\r\n//       transSkuListsByProductId(condition: {isdefault: true}) {\r\n//         nodes {\r\n//           skuUrl\r\n//           discount\r\n//         }\r\n//       }\r\n//     }\r\n//     totalCount\r\n//   }\r\n// }\r\n// `;\r\n\r\nconst GOLDPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        purity\r\n        vendorCode\r\n        updatedAt\r\n        sellingPriceType\r\n        sellingPrice\r\n        material\r\n        id\r\n        createdAt\r\n        costPrice\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst DIAMONDMARKUP = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allPricingMarkups(\r\n      condition: { material: $vendorCode }\r\n      orderBy: UPDATED_AT_DESC\r\n    ) {\r\n      nodes {\r\n        updatedAt\r\n        sellingPriceMin\r\n        sellingPriceMax\r\n        material\r\n        category\r\n        productType\r\n        markupValue\r\n        markupType\r\n        id\r\n        createdAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst DIAMONDPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        costPrice\r\n        createdAt\r\n        diamondClarity\r\n        diamondColour\r\n        id\r\n        sellingPrice\r\n        sellingPriceType\r\n        updatedAt\r\n        vendorCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n// const CATGORYLIST = gql`\r\n// query {\r\n//   allMasterMaterials {\r\n//     nodes {\r\n//       name\r\n//       shortCode\r\n//     }\r\n// }`;\r\n\r\nconst CATGORYLIST = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        alias\r\n        name\r\n        shortCode\r\n        id\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTTYPEMASTER = gql`\r\n  query {\r\n    allMasterProductTypes {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MATERIALMASTER = gql`\r\n  query {\r\n    allMasterMaterials {\r\n      nodes {\r\n        alias\r\n        name\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MASTERCOLORS = gql`\r\n  query {\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        name\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst SALEDISCOUNTS = gql`\r\n  query {\r\n    allSaleDiscounts {\r\n      nodes {\r\n        id\r\n        discountName\r\n        discountType\r\n        discountValue\r\n        components\r\n        attributes\r\n        isActive\r\n        productAttributes\r\n        productAttributesText\r\n      }\r\n\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst VOUCHERDISCOUNTS = gql`\r\n  query {\r\n    allVouchers {\r\n      nodes {\r\n        id\r\n        name\r\n        code\r\n        uses\r\n        maxUses\r\n        isActive\r\n        voucherCodes\r\n        description\r\n      }\r\n\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MASTERPURITIES = gql`\r\n  query {\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        name\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst VENDORLIST = `\r\nquery {\r\n  allMasterVendors {\r\n    nodes {\r\n      vendorDelivaryDays\r\n      updatedAt\r\n      state\r\n      shortCode\r\n      partnerCategory\r\n      name\r\n      organization\r\n      gstNo\r\n      currency\r\n      createdAt\r\n      city\r\n      address\r\n    }\r\n  }\r\n}`;\r\n\r\nconst METALMASTER = `\r\nquery {\r\n  allMasterMaterials {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERCATEGORY = `\r\nquery {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMaterials {\r\n    nodes {\r\n      name\r\n      id\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\n\r\nconst GEMSTONEMASTER = `\r\nquery {\r\n  allMasterGemstonesTypes {\r\n    nodes {\r\n      name\r\n      shortCode\r\n      colorCode\r\n    }\r\n  }  \r\n}`;\r\n\r\nconst MAKINGCHARGEPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\r\n    allMakingChargeSettings(\r\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\r\n    ) {\r\n      nodes {\r\n        weightStart\r\n        weightEnd\r\n        vendorCode\r\n        updatedAt\r\n        sellingPriceType\r\n        rateType\r\n        purity\r\n        priceType\r\n        price\r\n        material\r\n        id\r\n        createdAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst GEMPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allGemstonePriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        price\r\n        rateType\r\n        priceType\r\n        sellingPriceType\r\n        vendorCode\r\n        weightEnd\r\n        weightStart\r\n        updatedAt\r\n        id\r\n        createdAt\r\n        gemstoneType\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTLISTSTATUSEDIT = gql`\r\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\r\n    __typename\r\n    updateProductListByProductId(\r\n      input: {\r\n        productId: $productId\r\n        productListPatch: { isactive: $isActive }\r\n      }\r\n    ) {\r\n      clientMutationId\r\n      productList {\r\n        isactive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst REVIEWQUERY = `\r\n  query {\r\n    allCustomerReviews {\r\n      nodes {\r\n        customerName\r\n        id\r\n        isActive\r\n        isPublish\r\n        message\r\n        nodeId\r\n        productSku\r\n        rating\r\n        title\r\n        updatedAt\r\n        userprofileId\r\n        productId\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CREATETAXSETUP = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $updatedAt: Date!\r\n    $createdAt: Date!\r\n    $taxValue: Double!\r\n    $taxName: String!\r\n    $hsnNumber: String!\r\n  ) {\r\n    __typename\r\n    createMasterTaxSetting(\r\n      input: {\r\n        masterTaxSetting: {\r\n          id: $id\r\n          updatedAt: $updatedAt\r\n          createdAt: $createdAt\r\n          taxValue: $taxValue\r\n          taxName: $taxName\r\n          hsnNumber: $hsnNumber\r\n        }\r\n      }\r\n    ) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst VOUCHERSTATUSEDIT = gql`\r\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\r\n    __typename\r\n    updateVoucherById(\r\n      input: { id: $voucherId, voucherPatch: { isActive: $isActive } }\r\n    ) {\r\n      clientMutationId\r\n      voucher {\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DISCOUNTSTATUSEDIT = gql`\r\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\r\n    __typename\r\n    updateSaleDiscountById(\r\n      input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }\r\n    ) {\r\n      clientMutationId\r\n      saleDiscount {\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEMARKUPPRICE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deletePricingMarkupById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEGOLDPRICE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\nconst DELETESALEDISCOUNT = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteSaleDiscountById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEVOUCHERDISCOUNT = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteVoucherById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEMAKINGCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEGEMCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\nconst DELETEDIAMONDCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst PRODUCTDIAMONDTYPES = `\r\nquery{\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      diamondClarity\r\n      diamondColor\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\nconst PRODUCTEDIT = gql`\r\n  query MyQuery($productId: String!) {\r\n    productListByProductId(productId: $productId) {\r\n      productMetalcoloursByProductId {\r\n        nodes {\r\n          productColor\r\n          id\r\n        }\r\n      }\r\n      productName\r\n      productType\r\n      vendorCode\r\n      gender\r\n      earringBacking\r\n      isactive\r\n      prodDescription\r\n      productMaterialsByProductSku(condition: { isActive: true }) {\r\n        nodes {\r\n          materialName\r\n        }\r\n      }\r\n      productDiamondsByProductSku {\r\n        nodes {\r\n          itemName\r\n          subItemName\r\n          description\r\n          diamondClarity\r\n          diamondColour\r\n          diamondSettings\r\n          diamondShape\r\n          diamondType\r\n          id\r\n          stoneCount\r\n          stoneWeight\r\n          stoneAmount\r\n          stoneRate\r\n        }\r\n      }\r\n      productGemstonesByProductSku {\r\n        nodes {\r\n          itemName\r\n          subItemName\r\n          description\r\n          gemstoneSetting\r\n          gemstoneShape\r\n          gemstoneSize\r\n          gemstoneType\r\n          gemstonsSize\r\n          id\r\n          stoneCount\r\n          stoneWeight\r\n          stoneAmount\r\n          stoneRate\r\n        }\r\n      }\r\n      productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\r\n        nodes {\r\n          id\r\n          imagePosition\r\n          productId\r\n          imageUrl\r\n          ishover\r\n          isdefault\r\n          productColor\r\n        }\r\n      }\r\n      productPuritiesByProductId {\r\n        nodes {\r\n          purity\r\n          id\r\n        }\r\n      }\r\n      productThemesByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          themeName\r\n          id\r\n        }\r\n      }\r\n      productStonecolorsByProductId {\r\n        nodes {\r\n          id\r\n          stonecolor\r\n        }\r\n      }\r\n      productStylesByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          styleName\r\n          id\r\n        }\r\n      }\r\n      productCollectionsByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          collectionName\r\n          id\r\n        }\r\n      }\r\n      productOccassionsByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          occassionName\r\n          id\r\n        }\r\n      }\r\n      productStonecountsByProductId {\r\n        nodes {\r\n          id\r\n          stonecount\r\n        }\r\n      }\r\n      productHashTagsByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          id\r\n          name: hashTag\r\n        }\r\n      }\r\n      transSkuListsByProductId {\r\n        nodes {\r\n          skuSize\r\n          diamondType\r\n          metalColor\r\n          purity\r\n          productId\r\n          skuWeight\r\n          generatedSku\r\n          costPrice\r\n          costPriceTax\r\n          discountPrice\r\n          discountPriceTax\r\n          markupPrice\r\n          marginOnSalePercentage\r\n          markupPriceTax\r\n          marginOnSalePercentage\r\n          sellingPrice\r\n          discountDesc\r\n          sellingPriceTax\r\n          isReadyToShip\r\n          discount\r\n          isActive\r\n          isdefault\r\n          vendorDeliveryTime\r\n          id\r\n          isActive\r\n          showPriceBreakup\r\n          calcType\r\n          transSkuDescriptionsBySkuId {\r\n            nodes {\r\n              skuDescription\r\n              certificate\r\n              ringsizeImage\r\n            }\r\n          }\r\n          maxOrderQty\r\n          minOrderQty\r\n        }\r\n      }\r\n      productCategory\r\n      sizeVarient\r\n      height\r\n      length\r\n      width\r\n\r\n      productVendorCode\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLMASTERRINGSIZE = `\r\n  query {\r\n    allMasterRingsSizes {\r\n      nodes {\r\n        gender\r\n        productType\r\n        name\r\n        size\r\n        sizeValue\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HOLIDAYLIST = gql`\r\n  query ($first: Int, $offset: Int, $filter: HolidayManagerFilter) {\r\n    allHolidayManagers(\r\n      first: $first\r\n      offset: $offset\r\n      filter: $filter\r\n      orderBy: DATE_ASC\r\n    ) {\r\n      nodes {\r\n        id\r\n        holiday\r\n        date\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst WAREHOUSELIST = gql`\r\n  query {\r\n    allWarehouses(orderBy: ID_ASC) {\r\n      nodes {\r\n        id\r\n        name\r\n        shippingInDays\r\n        isActive\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst INVENTORYLIST = gql`\r\n  query ($first: Int, $offset: Int, $filter: InventoryFilter) {\r\n    allInventories(first: $first, offset: $offset, filter: $filter) {\r\n      nodes {\r\n        id\r\n        generatedSku\r\n        numberOfItems\r\n        createdAt\r\n        updatedAt\r\n        warehouse: warehouseByWarehouseId {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst VALIDATEGENERATEDSKU = gql`\r\n  query ($generatedSku: String!) {\r\n    allTransSkuLists(condition: { generatedSku: $generatedSku }) {\r\n      nodes {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst STOCKSTATUS = gql`\r\n  query {\r\n    allWarehouses {\r\n      nodes {\r\n        name\r\n        isActive\r\n        inventoriesByWarehouseId {\r\n          aggregates {\r\n            sum {\r\n              numberOfItems\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst VERIFYTAGNO = gql`\r\n  query ($tagno: String!) {\r\n    list: allTransSkuLists(condition: { generatedSku: $tagno }) {\r\n      nodes {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLBANNERSCOMPLETE = `\r\nquery MyQuery {\r\n  allBanners\r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: {urlParam: \"landing\"})\r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATEALLBANNERS = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam : \"landing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n     banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLLISTINGBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: {urlParam: \"listing\"})\r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATELISTINGBANNERS = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam : \"listing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n     banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLSPECIFICLISTINGPAGE = `\r\nquery MyQuery {\r\n  allBanners\r\n  (condition: {url: \"specificListingPage\"}) \r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATESPECIFICLISTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $web: String\r\n  $mobile: String\r\n  $urlParam :String\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        url: \"specificListingPage\"\r\n        web: $web\r\n        urlParam : $urlParam\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst DELETEALLBANNER = `\r\nmutation MyMutation($id : Int!) {\r\n  deleteBannerById(input: {id: $id}) {\r\n    banner {\r\n      id\r\n      nodeId\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLMASTERPRODUCTSIZE = gql`\r\n  query allproductsizes($productType: String) {\r\n    allMasterRingsSizes(condition: { productType: $productType }) {\r\n      nodes {\r\n        name\r\n        nodeId\r\n        id\r\n        size\r\n        updatedAt\r\n        productType\r\n        gender\r\n        sizeValue\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst IMAGEDELETE = `\r\nmutation MyMutation($productimageid: UUID!) {\r\n  deleteProductImageById(input: { id: $productimageid }) {\r\n    productListByProductId {\r\n      productId\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERLISTINGBOTTOMBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: { urlParam: \"bottom\" }) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERLANDINGBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: { urlParam: \"landing\" }) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERLISTINGPAGE = `\r\nquery MyQuery {\r\n  allBanners(condition: { urlParam: \"listingPage\" }) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERROUTINGPAGE = `\r\nquery MyQuery {\r\n  allBanners(condition: {url: \"#\"}) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}`;\r\n\r\nconst CREATESILVERLANDINGBANNER = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam :\"landing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}`;\r\n\r\nconst CREATESILVERLISTINGBOTTOMBANNER = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        url: $url\r\n        web: $web\r\n        urlParam: \"bottom\"\r\n        position: $position\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nconst CREATESILVERLISTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam: \"listingPage\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ABANDONEDCART = gql`\r\n  query (\r\n    $first: Int\r\n    $offset: Int\r\n    $orderBy: [ShoppingCartsOrderBy!]\r\n    $condition: ShoppingCartCondition\r\n    $filter: ShoppingCartFilter\r\n  ) {\r\n    allShoppingCarts(\r\n      first: $first\r\n      offset: $offset\r\n      orderBy: $orderBy\r\n      condition: $condition\r\n      filter: $filter\r\n    ) {\r\n      nodes {\r\n        id\r\n        isActive\r\n        netAmount\r\n        status\r\n        taxAmount\r\n        userprofileId\r\n        user: userProfileByUserprofileId {\r\n          id\r\n          firstName\r\n          lastName\r\n          username\r\n          email\r\n          mobile\r\n        }\r\n        cart_items: shoppingCartItemsByShoppingCartId {\r\n          nodes {\r\n            productSku\r\n            qty\r\n            transSkuListByProductSku {\r\n              generatedSku\r\n              skuId\r\n              productListByProductId {\r\n                productName\r\n              }\r\n            }\r\n          }\r\n        }\r\n        grossAmount\r\n        discountedPrice\r\n        discount\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst CARTBYID = gql`\r\n  query ($id: UUID!) {\r\n    cart: shoppingCartById(id: $id) {\r\n      id\r\n      isActive\r\n      netAmount\r\n      status\r\n      taxAmount\r\n      userprofileId\r\n      grossAmount\r\n      discountedPrice\r\n      discount\r\n      createdAt\r\n      updatedAt\r\n      address: cartAddressesByCartId {\r\n        nodes {\r\n          id\r\n          addressline1\r\n          addressline2\r\n          city\r\n          contactNumber\r\n          country\r\n          countryCode\r\n          createdAt\r\n          firstname\r\n          lastname\r\n          pincode\r\n          salutation\r\n          state\r\n          updatedAt\r\n          addressType\r\n        }\r\n      }\r\n      user: userProfileByUserprofileId {\r\n        id\r\n        firstName\r\n        lastName\r\n        username\r\n        email\r\n        mobile\r\n        isemailverified\r\n        ismobileverified\r\n      }\r\n      cart_items: shoppingCartItemsByShoppingCartId {\r\n        nodes {\r\n          productSku\r\n          qty\r\n          transSkuListByProductSku {\r\n            markupPrice\r\n            markupPriceTax\r\n            discountPrice\r\n            discountPriceTax\r\n            generatedSku\r\n            skuId\r\n            productListByProductId {\r\n              productName\r\n              productImagesByProductId(\r\n                condition: { isdefault: true, imagePosition: 1 }\r\n              ) {\r\n                nodes {\r\n                  productId\r\n                  imageUrl\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      follow_ups: communicationLogsByCartId {\r\n        nodes {\r\n          type\r\n          messageType\r\n          senderResponseId\r\n          createdAt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATESTYLORISILVERROUTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n  $urlParam: String\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: \"S\"\r\n        web: $web\r\n        urlParam: $urlParam\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst DELETESILVERLANDINGBANNER = `\r\nmutation MyMutation($id: Int!) {\r\n  deleteBannerById(input: { id: $id }) {\r\n    banner {\r\n      id\r\n      nodeId\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst DELETESILVERLISTINGBOTTOMBANNER = `\r\nmutation MyMutation($id: Int!) {\r\n  deleteBannerById(input: { id: $id }) {\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLFEATUREDPRODUCT = `query MyQuery {\r\n  allFeaturedProducts {\r\n    nodes {\r\n      productId\r\n      productListByProductId {\r\n        productName\r\n        productId\r\n        productImagesByProductId(condition: { ishover: true }) {\r\n          nodes {\r\n            imageUrl\r\n          }\r\n        }\r\n        transSkuListsByProductId {\r\n          nodes {\r\n            costPrice\r\n            markupPrice\r\n            skuUrl\r\n            transSkuDescriptionsBySkuId {\r\n              nodes {\r\n                skuDescription\r\n              }\r\n            }\r\n            sellingPrice\r\n          }\r\n        }\r\n      }\r\n      isActive\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst CREATEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  createFeaturedProduct(\r\n    input: { featuredProduct: { productId: $ProductId, isActive: $isActive } }\r\n  ) {\r\n    featuredProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ISACTIVEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  updateFeaturedProductByProductId(\r\n    input: {\r\n      featuredProductPatch: { isActive: $isActive }\r\n      productId: $ProductId\r\n    }\r\n  ) {\r\n    featuredProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DELETEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!) {\r\n  deleteFeaturedProductByProductId(input: { productId: $ProductId }) {\r\n    featuredProduct {\r\n      productId\r\n    }\r\n  }\r\n}\r\n`;\r\nconst CREATENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  createNewArrivalProduct(\r\n    input: { newArrivalProduct: { productId: $ProductId, isActive: $isActive } }\r\n  ) {\r\n    newArrivalProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLNEWARRIVALPRODUCT = `query MyQuery{\r\n  allNewArrivalProducts {\r\n    nodes {\r\n      productId\r\n      productListByProductId {\r\n        productName\r\n        productId\r\n        productImagesByProductId(condition: {ishover: false}) {\r\n          nodes {\r\n            imageUrl\r\n          }\r\n        }\r\n        transSkuListsByProductId{\r\n          nodes{\r\n            costPrice\r\n            markupPrice\r\n            skuUrl\r\n            transSkuDescriptionsBySkuId{\r\n              nodes{\r\n                skuDescription\r\n              }\r\n            }\r\n            sellingPrice\r\n          }\r\n        }\r\n      }\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ISACTIVENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  updateNewArrivalProductByProductId(\r\n    input: {newArrivalProductPatch: {isActive: $isActive}, productId: $ProductId}\r\n  ) {\r\n    newArrivalProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DELETENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!) {\r\n  deleteNewArrivalProductByProductId(input: {productId: $ProductId}) {\r\n    clientMutationId\r\n    deletedNewArrivalProductId\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst MUTATE_STATUS = `\r\nmutation($id: Int!, $status: String) {\r\n  updateAppointmentById(\r\n    input: { id: $id, appointmentPatch: { status: $status } }\r\n  ) {\r\n    clientMutationId\r\n  }\r\n}\r\n`\r\n\r\nconst MUTATE_MEETING = `\r\nmutation($id :Int!,$meetingLink: String!) {\r\n  updateAppointmentById(\r\n    input: { id: $id, appointmentPatch: { meetingLink: $meetingLink } }\r\n  ) {\r\n    appointment {\r\n      id\r\n      meetingLink\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst GETORDERCOMMUNICATIONLOGS = `\r\nquery MyQuery($id: UUID!) {\r\n  orderById(id: $id) {\r\n    awbNumber\r\n    cartId\r\n    comments\r\n    createdAt\r\n    id\r\n    paymentId\r\n    paymentMode\r\n    paymentStatus\r\n    updatedAt\r\n    userProfileId\r\n    communicationLogsByOrderId(orderBy: UPDATED_AT_DESC) {\r\n      nodes {\r\n        createdAt\r\n        id\r\n        messageType\r\n        orderId\r\n        senderResponseId\r\n        type\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst GETAPPLICATIONCOMMUNICATIONLOGS = `\r\nquery MyQuery($id: Int!) {\r\n  appointmentById(id: $id) {\r\n    storeLocationByLocationId {\r\n      id\r\n      address\r\n      name\r\n    }\r\n    appointmentCommunicationLogsByAppointmentId {\r\n      nodes {\r\n        id\r\n        appointmentId\r\n        communicationType\r\n        createdAt\r\n        senderResponseId\r\n        type\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALL_APPOINTMENTS_DATE = `\r\n  query MyQuery {\r\n    allAppointmentDates(\r\n      orderBy: START_DATE_TIME_ASC\r\n    ) {\r\n      nodes {\r\n        createdAt\r\n        createdBy\r\n        endDate\r\n        id\r\n        isActive\r\n        startDate\r\n        startDateTime\r\n        endDateTime\r\n        updatedAt\r\n        updatedBy\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CHECK_APPOINTMENT = `\r\nquery($startDate: Date!,$endDate: Date!){\r\n  allAppointmentDates(\r\n    condition: {\r\n      startDate: $startDate,\r\n      endDate: $endDate\r\n    }\r\n  ) {\r\n    nodes {\r\n      createdAt\r\n      createdBy\r\n      endDate\r\n      id\r\n      isActive\r\n      startDate\r\n      startDateTime\r\n      endDateTime\r\n      updatedAt\r\n      updatedBy\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\nconst FILTER_APPOINTEMENTS = gql`\r\nquery($startDate: Date!, $endDate: Date!) {\r\n  allAppointmentDates(\r\n    filter: {\r\n      startDate: {\r\n        greaterThanOrEqualTo: $startDate\r\n        lessThanOrEqualTo: $endDate\r\n      }\r\n    }\r\n    orderBy: START_DATE_ASC\r\n  ) {\r\n    nodes {\r\n      createdAt\r\n      createdBy\r\n      endDate\r\n      id\r\n      isActive\r\n      startDate\r\n      startDateTime\r\n      endDateTime\r\n      updatedAt\r\n      updatedBy\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALL_APPOINTMENTS_TIMESLOT =(appointmentDateId,appointmentTypeId) => gql`\r\n query{  \r\n   allAppointmentDateTimeSlots(\r\n    condition: {\r\n      appointmentDateId: \"${appointmentDateId}\"\r\n      appointmentTypeId: ${appointmentTypeId}\r\n    }\r\n  ) {\r\n    nodes {\r\n      id\r\n      appointmentDateId\r\n      appointmentTypeId\r\n      startTime\r\n      endTime\r\n      isActive\r\n    }\r\n  }\r\n }\r\n`\r\n\r\nconst CHECK_TIMESLOT=gql`\r\nquery($startTime: Time,$endTime: Time){\r\n  allAppointmentDateTimeSlots(condition: {endTime: $endTime, startTime: $startTime}) {\r\n    nodes {\r\n      id\r\n      appointmentDateId\r\n      appointmentTypeId\r\n      startTime\r\n      endTime\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n\r\nconst APPOINTMENTS_TYPE = `\r\n  query MyQuery {\r\n    allAppointmentTypeMasters {\r\n      nodes {\r\n        id\r\n        name\r\n        isActive\r\n        appointmentsByAppointmentTypeId{\r\n          edges {\r\n            node {\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst SHOW_APPOINMENT_DETAILS = gql`\r\nquery(\r\n  $limit: Int\r\n  $offset: Int\r\n  $appointment_filter: AppointmentFilter!\r\n  $order_by: [AppointmentsOrderBy!]\r\n){\r\n  allAppointments(\r\n    first: $limit\r\n    offset: $offset\r\n    filter: $appointment_filter\r\n    orderBy: $order_by\r\n    ) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      mobileCountryCode\r\n      customerName\r\n      email\r\n      isActive\r\n      status\r\n      type: appointmentTypeMasterByAppointmentTypeId {\r\n        name\r\n      }\r\n      appointmentDateTimeSlotBySlotId{\r\n        startTime\r\n        startDateTime\r\n        endDateTime\r\n        createdBy\r\n        appointmentDateId\r\n        endTime\r\n      }\r\n      storeLocationByLocationId {\r\n        address\r\n        name\r\n      }\r\n      locationId\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst SHOW_ALL_PPOINMENT_DETAILS = gql`\r\nquery(\r\n  $id: Int\r\n){\r\n  allAppointments(filter: {id: {equalTo: $id}}) {\r\n    nodes {\r\n      isVerified\r\n      isActive\r\n      email\r\n      customerName\r\n      status\r\n      locationId\r\n      storeLocationByLocationId {\r\n        address\r\n      }\r\n      specialRequests\r\n      productCategory\r\n      meetingLink\r\n      metalType\r\n      mobile\r\n      isOnline\r\n      isItRequired\r\n      id\r\n      areMoreMembersJoining\r\n      appointmentDateTimeSlotBySlotId {\r\n        appointmentTypeId\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst PRICE_RUN_LOGS = gql`\r\n  query ($first: Int, $offset: Int) {\r\n    allPriceRunningHistories(\r\n      first: $first\r\n      offset: $offset\r\n      orderBy: UPDATED_AT_DESC\r\n    ) {\r\n      nodes {\r\n        id\r\n        completedProductCount\r\n        pricingComponent\r\n        logs: pricingLogsByPriceRunningHistoryId {\r\n          nodes {\r\n            requestedProducts\r\n            successfullyExecutedProducts\r\n            failedProducts\r\n          }\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  ALLBANNERS,\r\n  ALLLISTINGBANNERS,\r\n  ALLSPECIFICLISTINGPAGE,\r\n  CREATEALLBANNERS,\r\n  CREATELISTINGBANNERS,\r\n  CREATESPECIFICLISTINGPAGE,\r\n  DELETEALLBANNER,\r\n  PRODUCTCATEGORY,\r\n  PRODUCTLIST,\r\n  PRODUCTEDIT,\r\n  PRODUCTLISTSTATUSEDIT,\r\n  PRODUCTDIAMONDTYPES,\r\n  GOLDPRICELIST,\r\n  DIAMONDPRICELIST,\r\n  GEMPRICELIST,\r\n  MAKINGCHARGEPRICELIST,\r\n  VENDORLIST,\r\n  ALLPRODUCTLIST,\r\n  DIAMONDMARKUP,\r\n  PRODUCTFILTERMASTER,\r\n  METALMASTER,\r\n  GEMSTONEMASTER,\r\n  MASTERCATEGORY,\r\n  DELETEMARKUPPRICE,\r\n  DELETEMAKINGCHARGE,\r\n  DELETEGEMCHARGE,\r\n  DELETEGOLDPRICE,\r\n  DELETESALEDISCOUNT,\r\n  CATGORYLIST,\r\n  DELETEDIAMONDCHARGE,\r\n  VENDORLISTS,\r\n  TaxList,\r\n  PRODUCTTYPEMASTER,\r\n  MATERIALMASTER,\r\n  MASTERCOLORS,\r\n  MASTERPURITIES,\r\n  SALEDISCOUNTS,\r\n  VOUCHERDISCOUNTS,\r\n  DELETEVOUCHERDISCOUNT,\r\n  VOUCHERSTATUSEDIT,\r\n  DISCOUNTSTATUSEDIT,\r\n  MASTERMATERIAL,\r\n  MASTERMATERIALCOLORS,\r\n  MASTERPRODUCTPURITIES,\r\n  COLLECTIONMASTER,\r\n  DESIGNMASTER,\r\n  DIAMONDMASTER,\r\n  DIAMONDSETTINGS,\r\n  DIAMONDSHAPES,\r\n  MASTERPRODUCTTYPES,\r\n  MASTERGEMSETTINGS,\r\n  MASTERGEMSHAPES,\r\n  MASTERGEMTYPES,\r\n  MASTERGENDER,\r\n  SEOPRIORITIES,\r\n  CREATETAXSETUP,\r\n  TaxSettingList,\r\n  MASTERCATEGORIES,\r\n  EARRINGBACKING,\r\n  MASTERATTRIBUTES,\r\n  MASTERSTONESHAPES,\r\n  MASTERSTONECOLORS,\r\n  MASTERSTONES,\r\n  MASTERWEIGHTS,\r\n  THEMEMASTER,\r\n  STYLEMASTER,\r\n  OCCASSIONSMASTER,\r\n  PAYMENTSTATUSMASTER,\r\n  SHIPPINGZONES,\r\n  MASTERCOUNTRIES,\r\n  SHIPPINGCHARGES,\r\n  ACTIVESHIPPINGZONES,\r\n  MASTERPAGES,\r\n  GOLDPRICESETUPMASTER,\r\n  ALLMASTERRINGSIZE,\r\n  HOLIDAYLIST,\r\n  WAREHOUSELIST,\r\n  INVENTORYLIST,\r\n  VALIDATEGENERATEDSKU,\r\n  STOCKSTATUS,\r\n  VERIFYTAGNO,\r\n  ALLMASTERPRODUCTSIZE,\r\n  IMAGEDELETE,\r\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n  ALLSTYLORISILVERLANDINGBANNERS,\r\n  ALLSTYLORISILVERLISTINGPAGE,\r\n  ALLSTYLORISILVERROUTINGPAGE,\r\n  CREATESILVERLANDINGBANNER,\r\n  CREATESILVERLISTINGBOTTOMBANNER,\r\n  CREATESILVERLISTINGPAGE,\r\n  CREATESTYLORISILVERROUTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n  DELETESILVERLISTINGBOTTOMBANNER,\r\n  ALLFEATUREDPRODUCT,\r\n  CREATEFEATUREDPRODUCT,\r\n  ISACTIVEFEATUREDPRODUCT,\r\n  DELETEFEATUREDPRODUCT,\r\n  REVIEWQUERY,\r\n  CREATENEWARRIVALPRODUCT,\r\n  ALLNEWARRIVALPRODUCT,\r\n  ISACTIVENEWARRIVALPRODUCT,\r\n  DELETENEWARRIVALPRODUCT,\r\n  GETORDERCOMMUNICATIONLOGS,\r\n  ABANDONEDCART,\r\n  CARTBYID,\r\n  ALL_APPOINTMENTS_DATE,\r\n  SHOW_APPOINMENT_DETAILS,\r\n  PRICE_RUN_LOGS,\r\n  APPOINTMENTS_TYPE,\r\n  ALL_APPOINTMENTS_TIMESLOT,FILTER_APPOINTEMENTS,\r\n  SHOW_ALL_PPOINMENT_DETAILS,\r\n  MUTATE_STATUS,\r\n  GETAPPLICATIONCOMMUNICATIONLOGS,\r\n  CHECK_APPOINTMENT,\r\n  CHECK_TIMESLOT,\r\n  MUTATE_MEETING\r\n};\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const PRODUCTCATEGORY = gql`query {\r\n    allMasterProductCategories{\r\n        nodes {\r\n            alias\r\n            name\r\n            id\r\n          }\r\n    }\r\n    allMasterProductTypes {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterStonesColors {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterStones {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  }\r\n  }`\r\n\r\n  export const USERORDERS = gql`query($userid: UUID!) {\r\n    allOrders(filter: {userProfileByUserProfileId: {id: {equalTo: $userid}}}) {\r\n      nodes {\r\n        paymentMode\r\n        paymentStatus\r\n        updatedAt\r\n        createdAt\r\n        awbNumber\r\n        cartId\r\n        orderStatus\r\n        comments\r\n        id\r\n        shoppingCartByCartId {\r\n          shoppingCartItemsByShoppingCartId {\r\n            nodes {\r\n              transSkuListByProductSku {\r\n                generatedSku\r\n                productListByProductId {\r\n                  productCategory\r\n                  productType\r\n                  productCollectionsByProductId {\r\n                    nodes {\r\n                      collectionName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          giftwrapsByCartId {\r\n            nodes {\r\n              message\r\n              giftFrom\r\n              giftTo\r\n            }\r\n          }\r\n          \r\n          cartAddressesByCartId {\r\n            nodes {\r\n              firstname\r\n              contactNumber\r\n              addressline1\r\n              addressline2\r\n              city\r\n              pincode\r\n              state\r\n            }\r\n          }\r\n          userProfileByUserprofileId {\r\n            firstName\r\n            mobile\r\n            email\r\n          }\r\n        }\r\n        paymentDetailsByOrderId {\r\n          nodes {\r\n            paymentResponse\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  }`\r\n\r\n\r\n  export const ORDERS = gql`\r\n  query (\r\n    $order_filter: OrderFilter!\r\n    $limit: Int\r\n    $offset: Int\r\n    $order_by: [OrdersOrderBy!]\r\n  ) {\r\n    allOrders(\r\n      filter: $order_filter\r\n      first: $limit\r\n      offset: $offset\r\n      orderBy: $order_by\r\n    ) {\r\n      nodes {\r\n        paymentMode\r\n        paymentStatus\r\n        updatedAt\r\n        createdAt\r\n        awbNumber\r\n        cartId\r\n        orderStatus\r\n        comments\r\n        id\r\n        \r\n        shoppingCartByCartId {\r\n          shoppingCartItemsByShoppingCartId {\r\n            nodes {\r\n              transSkuListByProductSku {\r\n                generatedSku\r\n                productListByProductId {\r\n                  productCategory\r\n                  productType\r\n                  productCollectionsByProductId {\r\n                    nodes {\r\n                      collectionName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          giftwrapsByCartId {\r\n            nodes {\r\n              message\r\n              giftFrom\r\n              giftTo\r\n            }\r\n          }\r\n\r\n          cartAddressesByCartId {\r\n            nodes {\r\n              firstname\r\n              contactNumber\r\n              addressline1\r\n              addressline2\r\n              city\r\n              pincode\r\n              state\r\n            }\r\n          }\r\n          userProfileByUserprofileId {\r\n            firstName\r\n            mobile\r\n            email\r\n            userAddressesByUserProfileId {\r\n              nodes {\r\n                contactNumber\r\n              }\r\n            }\r\n          }\r\n        }\r\n        paymentDetailsByOrderId {\r\n          nodes {\r\n            paymentResponse\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const MATERIALMASTER = gql`query {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterPricingComponents(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  }\r\n}`\r\n\r\nexport const VOUCHERMASTER = gql`query {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n      \r\n      \r\n    }\r\n  },\r\n  allMasterPricingComponents(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n\r\n\r\nexport const SHIPPINGMASTER = `query {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allShippingCharges(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      productAttributes\r\n    }\r\n  }\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n\r\n\r\n\r\nexport const TAXMASTER = `query {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterTaxSettings {\r\n    nodes {\r\n      hsnNumber\r\n      id\r\n      productAttributes\r\n    }\r\n  }\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\r\nimport {\r\n  MATERIALMASTER,\r\n  ORDERS,\r\n  USERORDERS,\r\n  VOUCHERMASTER,\r\n} from \"../services/queries\";\r\nimport apidata from \"../screens/Productupload/data.json\";\r\n\r\nexport const productCategory = {\r\n  query: PRODUCTCATEGORY,\r\n  mapper: (response) => {\r\n    const category = response.allMasterProductCategories.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const product_type = response.allMasterProductTypes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.shortCode,\r\n      label: _.name,\r\n      title: _.name,\r\n    }));\r\n    const material = response.allMasterMaterials.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const gender = response.allMasterGenders.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const vendorcode = response.allMasterVendors.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      display: _.name + \" (\" + _.shortCode + \" )\",\r\n    }));\r\n\r\n    const diamondsettings = response.allMasterDiamondsSettings.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n        value: _.id,\r\n        label: _.name,\r\n      })\r\n    );\r\n    const diamondshapes = response.allMasterDiamondsShapes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const themes = response.allMasterThemes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      themeName: _.name,\r\n    }));\r\n    const styles = response.allMasterStyles.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      styleName: _.name,\r\n    }));\r\n\r\n    const occasions = response.allMasterOccasions.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      occassionName: _.name,\r\n    }));\r\n    const collections = response.allMasterCollections.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      collectionName: _.name,\r\n    }));\r\n    const gemstonecolor = response.allMasterStonesColors.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      stonecolor: _.name,\r\n    }));\r\n    const stones = response.allMasterStones.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      stonecount: _.name,\r\n    }));\r\n    const metalcolour = response.allMasterMetalsColors.nodes.map((_) => ({\r\n      ..._,\r\n      productColor: _.name,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const metalpurity = response.allMasterMetalsPurities.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      purity: _.name,\r\n    }));\r\n    const diamondcolors = response.allMasterDiamondsColors.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n\r\n    const diamondclarities = response.allMasterDiamondClarities.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n        value: _.id,\r\n        label: _.name,\r\n      })\r\n    );\r\n    const productseries = response.allProductLists.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.productSeries,\r\n    }));\r\n    const gemstontypes = response.allMasterGemstonesTypes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.shortCode,\r\n      label: _.name,\r\n    }));\r\n\r\n    const gemstonshapes = response.allMasterGemstonesShapes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.alias,\r\n      label: _.name,\r\n    }));\r\n    const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n        value: _.alias,\r\n        label: _.name,\r\n      })\r\n    );\r\n    const earringbacking = response.allMasterEarringBackings.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.alias,\r\n      label: _.name,\r\n    }));\r\n\r\n    const diamondtypes = response.allMasterDiamondTypes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.diamondColor + _.diamondClarity,\r\n      label: _.diamondColor + _.diamondClarity,\r\n    }));\r\n    const hashtags = response.allMasterHashTags.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.name,\r\n      label: _.name,\r\n    }));\r\n    // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\r\n    //     ..._,\r\n    //     name: _.name,\r\n    //     size:_.size,\r\n    //     productType : _.productType ,\r\n    // }))\r\n\r\n    const metals = apidata.metals;\r\n\r\n    return {\r\n      category,\r\n      product_type,\r\n      material,\r\n      gender,\r\n      vendorcode,\r\n      metalcolour,\r\n      metals,\r\n      diamondsettings,\r\n      diamondshapes,\r\n      themes,\r\n      styles,\r\n      occasions,\r\n      collections,\r\n      gemstonecolor,\r\n      stones,\r\n      metalpurity,\r\n      diamondcolors,\r\n      diamondtypes,\r\n      diamondclarities,\r\n      productseries,\r\n      gemstontypes,\r\n      gemstonshapes,\r\n      gemstonesettings,\r\n      earringbacking,\r\n      // metalSizeMinToMax\r\n      hashtags,\r\n    };\r\n  },\r\n};\r\n\r\nexport const orderList = {\r\n  query: ORDERS,\r\n  mapper: (response) => {\r\n    const orders = response.allOrders.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    return {\r\n      orders,\r\n    };\r\n  },\r\n};\r\nexport const userOders = {\r\n  query: USERORDERS,\r\n  mapper: (response) => {\r\n    const orders = response.allOrders.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    return {\r\n      orders,\r\n    };\r\n  },\r\n};\r\nexport const materialMaster = {\r\n  query: VOUCHERMASTER,\r\n  mapper: (response) => {\r\n    const materials = response.allMasterMaterials.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const vendors = response.allMasterVendors.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    const product_categories = response.allMasterProductCategories.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n      })\r\n    );\r\n    const product_types = response.allMasterProductTypes.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const pricing_components = response.allMasterPricingComponents.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n      })\r\n    );\r\n    const collections = response.allMasterCollections.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const purities = response.allMasterMetalsPurities.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const styles = response.allMasterStyles.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    const themes = response.allMasterThemes.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const occations = response.allMasterOccasions.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const diamondtypes = response.allMasterDiamondTypes.nodes.map((_) => ({\r\n      ..._,\r\n      alias: _.shortCode,\r\n      diamondtype: _.diamondColor + _.diamondClarity,\r\n    }));\r\n\r\n    // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\r\n    //     ..._\r\n    // }))\r\n\r\n    // alert(JSON.stringify(product_types))\r\n    return {\r\n      vendors,\r\n      product_categories,\r\n      product_types,\r\n      materials,\r\n      pricing_components,\r\n      collections,\r\n      purities,\r\n      styles,\r\n      themes,\r\n      occations,\r\n      diamondtypes,\r\n      // metalSizeMinToMax\r\n    };\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { productCategory } from \"../services/mapper\";\r\nimport { API_URL } from \"../config\";\r\nimport { isString } from \"util\";\r\n\r\nconst TOKEN = \"accesstoken\";\r\n\r\nconst initialNetworkCtx = {\r\n  networkCtx: {\r\n    mapper: productCategory,\r\n    status: {\r\n      called: false,\r\n      data: [],\r\n      loading: true,\r\n      error: false,\r\n      parsedData: [],\r\n    },\r\n    notRequested: true,\r\n  },\r\n  setNetworkCtx: () => null,\r\n  sendNetworkRequest: () => null,\r\n};\r\n\r\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\r\n  url = API_URL + url;\r\n  console.info(\"URL\", url, data);\r\n  const method = data ? \"POST\" : \"GET\",\r\n    headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    };\r\n  let resdata = null;\r\n  if (auth) {\r\n    const token = localStorage.getItem(TOKEN);\r\n    if (token) headers[\"x-access-token\"] = token;\r\n    // else window.location = '/'\r\n  }\r\n  const response = await fetch(\r\n    url,\r\n    method === \"GET\"\r\n      ? { method }\r\n      : {\r\n          method,\r\n          body: isString(data) ? data : JSON.stringify(data),\r\n          headers,\r\n        }\r\n  );\r\n\r\n  if (response.status < 400) {\r\n    resdata = await response.json();\r\n  } else {\r\n    resdata = await response.json();\r\n    // if(url === 'https://api-staging.stylori.com/api/auth/signin')\r\n    // {\r\n    //    if(!resdata.auth)\r\n    //    {\r\n    //     //alert(resdata.message)\r\n    //    }\r\n    // }else{\r\n    //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\r\n    // }\r\n  }\r\n  resdata[\"statuscode\"] = response.status;\r\n\r\n  return resdata;\r\n};\r\n\r\nexport const NetworkContext = React.createContext(initialNetworkCtx);\r\n\r\nexport const NetworkConsumer = NetworkContext.Consumer;\r\n\r\nexport const NetworkProvider = (props) => {\r\n  const [networkCtx, setNetworkCtx] = React.useState(\r\n    initialNetworkCtx.networkCtx\r\n  );\r\n\r\n  return (\r\n    <NetworkContext.Provider\r\n      value={{ networkCtx, setNetworkCtx, sendNetworkRequest }}\r\n    >\r\n      {props.children}\r\n    </NetworkContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { CSVLink } from \"react-csv\";\r\nconst DownloadCsv = () => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [showdownload, setShowDownload] = useState(false);\r\n  const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const fetchCSVdata = async (event, done) => {\r\n    setLoader(true);\r\n    let responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\r\n    let responseData = responseCSV.res_json;\r\n\r\n    if (responseCSV.statuscode === 200) {\r\n      let keyData = [];\r\n\r\n      for (const [key] of Object.entries(responseData[0])) {\r\n        keyData.push({ label: key, key: key });\r\n      }\r\n\r\n      setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\r\n      setLoader(false);\r\n      setShowDownload(true);\r\n    }\r\n  };\r\n\r\n  const clearCsv = () => {\r\n    setDataCSV({ keyCSV: [], valueCSV: [] });\r\n    setShowDownload(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loader ? (\r\n        <Button variant=\"outlined\" disabled color=\"primary\" style={{ marginRight: \"8px\" }}>\r\n          <CircularProgress size={20} />\r\n        </Button>\r\n      ) : showdownload ? (\r\n        <CSVLink\r\n          header={dataCSV.keyCSV}\r\n          data={dataCSV.valueCSV}\r\n          filename={\"product-details.csv\"}\r\n          onClick={() => {\r\n            clearCsv();\r\n          }}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }}>\r\n            Download CSV\r\n          </Button>\r\n        </CSVLink>\r\n      ) : (\r\n        <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }} onClick={() => fetchCSVdata()}>\r\n          Load CSV\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DownloadCsv;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Collapse,\r\n  Divider,\r\n  Drawer,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Slider,\r\n  TextField,\r\n  Typography,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  drawer: {\r\n    width: 420,\r\n    maxWidth: '100%'\r\n  },\r\n  header: {\r\n    padding: theme.spacing(2, 1),\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 3),\r\n    flexGrow: 1\r\n  },\r\n  contentSection: {\r\n    padding: theme.spacing(2, 0)\r\n  },\r\n  contentSectionHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    cursor: 'pointer'\r\n  },\r\n  contentSectionContent: {},\r\n  formGroup: {\r\n   \r\n    padding: theme.spacing(2, 0)\r\n  },\r\n  fieldGroup: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  field: {\r\n    marginTop: 0,\r\n    marginBottom: 0\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  addButton: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  minAmount: {\r\n    marginRight: theme.spacing(3)\r\n  },\r\n  maxAmount: {\r\n    marginLeft: theme.spacing(3)\r\n  },\r\n  radioGroup: {},\r\n  actions: {\r\n    padding: theme.spacing(3),\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  }\r\n}));\r\n\r\nconst Filter = props => {\r\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const initialValues = {\r\n      name: '',\r\n      company: '',\r\n      mobile: '',\r\n      city: '',\r\n      version: null,\r\n      commodity: []\r\n  };\r\n\r\n  const [expandProject, setExpandProject] = useState(true);\r\n  const [expandCustomer, setExpandCustomer] = useState(false);\r\n  const [values, setValues] = useState({ ...initialValues });\r\n\r\n  const handleClear = () => {\r\n    setValues({ \r\n      ...initialValues });\r\n  };\r\n\r\n  const handleFieldChange = (event, field, value) => {\r\n    event.persist && event.persist();\r\n    setValues(values => ({\r\n      ...values,\r\n      [field]: value\r\n    }));\r\n  };\r\n  const handleoptionchange = type => (event, value) => {\r\n    setValues(values => ({\r\n      ...values,\r\n      [type]: value\r\n    }));\r\n  }\r\n  const handleinputchange = type => (e) => {\r\n    setValues({\r\n      ...values,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleTagAdd = () => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\r\n        newValues.tags = [...newValues.tags];\r\n        newValues.tags.push(newValues.tag);\r\n      }\r\n\r\n      newValues.tag = '';\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n\r\n  const handleTagDelete = tag => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      newValues.tags = newValues.tags.filter(t => t !== tag);\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n  const handleDateChange = type => (date) => {\r\n    setValues({\r\n      ...values,\r\n      [type]: date\r\n    })\r\n  };\r\n  const handleToggleProject = () => {\r\n    setExpandProject(expandProject => !expandProject);\r\n  };\r\n\r\n  const handleToggleCustomer = () => {\r\n    setExpandCustomer(expandCustomer => !expandCustomer);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    \r\n    onFilter && onFilter(values);\r\n    onClose && onClose()\r\n  };\r\n\r\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\r\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"right\"\r\n      classes={{ paper: classes.drawer }}\r\n      onClose={onClose}\r\n      open={open}\r\n      variant=\"temporary\"\r\n    >\r\n      <form\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className={classes.header}>\r\n          <Button\r\n            onClick={onClose}\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon className={classes.buttonIcon} />\r\n            Close\r\n          </Button>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <Grid container xs={12} spacing={1}>\r\n            {/* <Grid item xs={12}>\r\n                      <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={values.name}\r\n                            onChange={handleinputchange('name')}\r\n                           label=\"Name\"\r\n                          />\r\n            </Grid> */}\r\n             <Grid xs={12}>\r\n            <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={masters.product_categories}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={values.product_category}\r\n                  getOptionLabel={(option) => option.name}\r\n                  onChange={handleoptionchange('product_category')}\r\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\r\n                /> \r\n            </Grid> \r\n                      \r\n           \r\n            <Grid item xs={12}>\r\n            <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={masters.product_types}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={values.product_type}\r\n                  onChange={handleoptionchange('product_type')}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\r\n                /> \r\n            </Grid> \r\n           </Grid>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            fullWidth\r\n            onClick={handleClear}\r\n            variant=\"contained\"\r\n          >\r\n            <DeleteIcon className={classes.buttonIcon} />\r\n            Clear\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Apply filters\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  className: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  onFilter: PropTypes.func,\r\n  masters : PropTypes.object,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Button, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    height: 42,\r\n    padding: theme.spacing(0, 2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  searchIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.icon\r\n  },\r\n  searchInput: {\r\n    flexGrow: 1\r\n  },\r\n  searchButton: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Search = props => {\r\n  const { onSearch, className, ...rest } = props;\r\n  const [searchcontent, setSearchcontent] = React.useState('');\r\n\r\n  const classes = useStyles();\r\n  const handleinputchange = type => e => {\r\n    setSearchcontent(e.target.value)\r\n  }\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Paper\r\n        className={classes.search}\r\n        elevation={1}\r\n      >\r\n        <SearchIcon className={classes.searchIcon} />\r\n        <Input\r\n          className={classes.searchInput}\r\n          disableUnderline\r\n          placeholder=\"Search by order id, Name and Mobile\"\r\n          onChange={handleinputchange('searchcontent')}\r\n        />\r\n      </Paper>\r\n      <Button\r\n        className={classes.searchButton}\r\n        onClick={() => onSearch(searchcontent)}\r\n        size=\"large\"\r\n        variant=\"contained\"\r\n      >\r\n        Search\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  className: PropTypes.string,\r\n  onSearch: PropTypes.func\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nexport let AlertProps = {\r\n  vertical: {\r\n    top: \"top\",\r\n    bottom: \"bottom\",\r\n  },\r\n  horizontal: {\r\n    left: \"left\",\r\n    right: \"right\",\r\n    center: \"center\",\r\n  },\r\n  severity: {\r\n    success: \"success\",\r\n    error: \"error\",\r\n    warning: \"warning\",\r\n    info: \"info\",\r\n  },\r\n};\r\n\r\n/**\r\n * AlertContext store the props which are neccessary to show the Alert component,\r\n * which is provided at the /src/App.js using the /src/App.alert.js.\r\n */\r\nexport let AlertContext = React.createContext({\r\n  open: false,\r\n  severity: AlertProps.severity.success,\r\n  msg: \"\",\r\n  vertical: AlertProps.vertical.top,\r\n  horizontal: AlertProps.horizontal.center,\r\n  onclose: () => null,\r\n  setSnack: () => null,\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  CircularProgress,\r\n  Grid,\r\n  Switch,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { AlertContext } from \"../../../context/AlertContext\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport exportFromJSON from \"export-from-json\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst FullCSVData = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const [loader, setLoader] = React.useState(false);\r\n  const [productType, setProductType] = React.useState(\"\");\r\n  const [include, setInclude] = React.useState(false);\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    client\r\n      .query({\r\n        query: gql`\r\n          query {\r\n            type: allMasterProductTypes(orderBy: NAME_ASC) {\r\n              nodes {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        `,\r\n      })\r\n      .then((res) => {\r\n        setOptions(\r\n          res.data.type.nodes.filter((i) => i.name).map((i) => i.name)\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n\r\n  const onDownload = () => {\r\n    if (productType == null) {\r\n      return snack.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Please choose a product type!\",\r\n      });\r\n    }\r\n    setLoader(true);\r\n    sendNetworkRequest(\"/getcsvdata\", {}, { type: productType, include })\r\n      .then((data) => {\r\n        exportFromJSON({\r\n          data,\r\n          fileName: `${productType}`,\r\n          exportType: \"xls\",\r\n        });\r\n        setOpen(false);\r\n        setLoader(false);\r\n        setProductType(null);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setOpen(false);\r\n        setLoader(false);\r\n        return snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occurred while downloading, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n        style={{ marginRight: \"8px\" }}\r\n      >\r\n        Full Data Download\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Choose Product Type to download data?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Autocomplete\r\n            id=\"type\"\r\n            options={options}\r\n            value={productType}\r\n            getOptionLabel={(option) => option}\r\n            style={{ width: 300 }}\r\n            onChange={(e, value) => {\r\n              setProductType(value);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Product Type\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={include}\r\n                onChange={() => {\r\n                  setInclude(!include);\r\n                }}\r\n                color=\"primary\"\r\n                name=\"include\"\r\n              />\r\n            }\r\n            label={\"Include disabled products\"}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {loader && <CircularProgress size={28} />}\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onDownload} color=\"primary\">\r\n            Download\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FullCSVData;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DownloadCsv from \"./components/downloadcsv\";\r\nimport { Search, Filter } from \"./components\";\r\nimport FullCSVData from \"./components/FullCSVData\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    maxWidth: 480,\r\n    flexBasis: 480,\r\n  },\r\n  filterButton: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  filterIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ProductFilter = (props) => {\r\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n\r\n  const handleFilterOpen = () => {\r\n    setOpenFilter(true);\r\n  };\r\n\r\n  const handleFilterClose = () => {\r\n    setOpenFilter(false);\r\n  };\r\n\r\n  return (\r\n    <Grid {...rest} className={clsx(classes.root, className)} container spacing={3}>\r\n      <Grid item>\r\n        <Search className={classes.search} onSearch={onSearch} />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <Grid container>\r\n          <Grid>{window.location.pathname === \"/productlist\" && <DownloadCsv />}</Grid>\r\n          <Grid>{window.location.pathname === \"/productlist\" && <FullCSVData />}</Grid>\r\n          <Grid>\r\n            <Button className={classes.filterButton} color=\"primary\" onClick={handleFilterOpen} size=\"small\" variant=\"outlined\">\r\n              <FilterListIcon className={classes.filterIcon} /> Filter\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Filter onClose={handleFilterClose} onFilter={onFilter} open={openFilter} masters={masters} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nProductFilter.propTypes = {\r\n  className: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n  onSearch: PropTypes.func,\r\n  masters: PropTypes.object,\r\n};\r\n\r\nexport default ProductFilter;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\n//MuiAlert component which is shown inside the Snackbar component\r\nlet Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nexport const Alerts = (props) => {\r\n  const [open, setOpen] = React.useState(props.open);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    props.onclose();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      id=\"main_alert_snackbar\"\r\n      anchorOrigin={{\r\n        vertical: props.vertical,\r\n        horizontal: props.horizontal,\r\n      }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert id=\"main_alert\" severity={props.severity} onClose={handleClose}>\r\n        {props.msg}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n    backgroundColor:\"#fff\",\r\n    marginBottom:\"60px\"\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n","import { TableCell, TableRow, Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst getComponent = (data) => {\r\n  switch (data.type) {\r\n    case \"TEXT\": {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: data?.customWidth ? data?.customWidth : \"\",\r\n            lineBreak: data?.customWidth ? \"anywhere\" : \"unset\",\r\n          }}\r\n        >\r\n          {data.rowData}\r\n        </div>\r\n      );\r\n    }\r\n    case \"HTMLTEXT\":{\r\n      return(\r\n        <div>{parse(data.rowData)}</div>\r\n      )\r\n    }\r\n    case \"INCREMENT\": {\r\n      return <div>{data.rowIndex + 1}</div>;\r\n    }\r\n    case \"TOTAL_STORES\": {\r\n      return <div>{data?.rowData?.length}</div>;\r\n    }\r\n    case \"VIEW_STORES\": {\r\n      return (\r\n        <div\r\n          style={{ color: \"blue\", cursor: \"pointer\",textDecoration:\"underline\" }}\r\n          onClick={data?.handleViewStores}\r\n        >\r\n          View Stores\r\n        </div>\r\n      );\r\n    }\r\n    case \"MBL_IMAGE\": {\r\n      return (\r\n        <img\r\n          alt=\"nacimages\"\r\n          src={data.rowData}\r\n          style={{ width: \"150px\", height: \"auto\" }}\r\n        />\r\n      );\r\n    }\r\n    case \"WEB_IMAGE\": {\r\n      return (\r\n        <img\r\n          alt=\"nacimages\"\r\n          src={data.rowData}\r\n          style={{ width: \"150px\", height: \"auto\" }}\r\n        />\r\n      );\r\n    }\r\n    case \"ACTION\": {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            gap: 6,\r\n          }}\r\n        >\r\n          <EditIcon onClick={data?.handleEdit} style={{cursor:\"pointer\"}} />\r\n          <DeleteIcon onClick={data?.handleDelete} style={{color:\"red\",cursor:\"pointer\"}} />\r\n        </div>\r\n      );\r\n    }\r\n    case \"EDIT\": {\r\n      return (<EditIcon onClick={data?.handleEdit} />)\r\n    }\r\n  }\r\n};\r\n\r\nconst TableBodyRow = ({\r\n  tableData = [],\r\n  rowData = {},\r\n  rowIndex = null,\r\n  handleViewStores = () => null,\r\n  handleDelete = () => null,\r\n  handleEdit = () => null\r\n}) => {\r\n  return (\r\n    <TableRow>\r\n      {tableData.map((val, i) => (\r\n        <TableCell>\r\n          {getComponent({\r\n            type: val.type,\r\n            rowData: rowData[val.name],\r\n            rowIndex: rowIndex,\r\n            handleViewStores: (e) => {\r\n              handleViewStores(e, rowData, rowIndex);\r\n            },\r\n            handleDelete: (e) => {\r\n              handleDelete(e, rowData, rowIndex);\r\n            },\r\n            handleEdit: (e) => {\r\n              handleEdit(e, rowData, rowIndex);\r\n            },\r\n            customWidth: val?.width,\r\n          })}\r\n        </TableCell>\r\n      ))}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableBodyRow;\r\n","import {\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Link,\r\n  Button,\r\n  Table,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport TableBodyRow from \"./TableBodyRow\";\r\n\r\nconst TableComp = ({\r\n  header = [],\r\n  tableData = [],\r\n  data = [],\r\n  handleViewStores = () => null,\r\n  handleDelete = () => null,\r\n  handleEdit = () => null,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.tableWrapper}>\r\n      <Table\r\n        className={classes.table}\r\n        border={1}\r\n        borderColor={\"#ddd\"}\r\n        size=\"small\"\r\n        stickyHeader\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            {header?.map((val) => (\r\n              <TableCell>{val}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        {data.length > 0 ?\r\n          <TableBody>\r\n            {data.map((val, index) => (\r\n              <TableBodyRow\r\n                tableData={tableData}\r\n                rowData={val}\r\n                rowIndex={index}\r\n                handleViewStores={handleViewStores}\r\n                handleDelete={handleDelete}\r\n                handleEdit={handleEdit}\r\n              />\r\n            ))}\r\n          </TableBody> :\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              padding: \"10px 0px\",\r\n            }}\r\n          >\r\n            <Typography variant=\"body1\"> No data Found </Typography>\r\n          </div>}\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComp;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport {\r\n  ALLFEATUREDPRODUCT,\r\n  CREATEFEATUREDPRODUCT,\r\n  DELETEFEATUREDPRODUCT,\r\n  ISACTIVEFEATUREDPRODUCT,\r\n} from \"../../../graphql/query\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst FeaturedProuductComponent = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [allFeaturedProudct, setAllFeaturedProduct] = useState([]);\r\n  const [createFeaturedProduct, setCreateFeaturedProduct] = useState({\r\n    productId: \"\",\r\n    isActive: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function styloribannerfetch() {\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: ALLFEATUREDPRODUCT,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          let data = fatchvalue.data.allFeaturedProducts.nodes;\r\n\r\n          setAllFeaturedProduct(data);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onChangeChecked = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n  const handleChangeIsActive = (productId) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISACTIVEFEATUREDPRODUCT,\r\n        variables: { ProductId: productId, isActive: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleDelete = async (ProductId) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETEFEATUREDPRODUCT,\r\n        variables: { ProductId: ProductId },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let create_featured_Product = {\r\n      ProductId: createFeaturedProduct.productId,\r\n      isActive: createFeaturedProduct.isActive,\r\n    };\r\n\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CREATEFEATUREDPRODUCT,\r\n        variables: create_featured_Product,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Landing Page - Featured Product\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            {\" \"}\r\n            NAC - Landing Page - Featured Product :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"productId\"\r\n              label=\"Product Id\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createFeaturedProduct.productId}\r\n              name=\"productId\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={\r\n                <Switch\r\n                  checked={createFeaturedProduct.isActive}\r\n                  onChange={onChangeChecked}\r\n                  name=\"isActive\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                />\r\n              }\r\n              label=\"Product Active\"\r\n              labelPlacement=\"start\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Product Id</TableCell>\r\n                <TableCell>Proudct Name</TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Active</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {allFeaturedProudct.map((val, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{val.productId}</TableCell>\r\n                  <TableCell>\r\n                    {val?.productListByProductId?.productName}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={\r\n                        val?.productListByProductId?.productImagesByProductId\r\n                          ?.nodes[0]?.imageUrl\r\n                      }\r\n                      style={{ width: \"50px\", height: \"auto\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Switch\r\n                      checked={val.isActive ?? false}\r\n                      onChange={handleChangeIsActive(val.productId)}\r\n                      color=\"primary\"\r\n                      name=\"isActive\"\r\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.productId)}\r\n                      style={{\r\n                        color: \"#fff\",\r\n                        backgroundColor: \"red\",\r\n                        cursor: \"pointer !important\",\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProuductComponent;\r\n","import React from \"react\";\r\n\r\nimport { Breadcrumbs } from \"../index\";\r\nimport FeaturedProductComponent from \"./Component/FeaturedProductComponent\";\r\nconst FeaturedProduct = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <FeaturedProductComponent />\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProduct;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport {\r\n  ALLNEWARRIVALPRODUCT,\r\n  CREATENEWARRIVALPRODUCT,\r\n  DELETENEWARRIVALPRODUCT,\r\n  ISACTIVENEWARRIVALPRODUCT,\r\n} from \"../../../graphql/query\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst FeaturedProuductComponent = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [allFeaturedProudct, setAllFeaturedProduct] = useState([]);\r\n  const [createFeaturedProduct, setCreateFeaturedProduct] = useState({\r\n    productId: \"\",\r\n    isActive: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function styloribannerfetch() {\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: ALLNEWARRIVALPRODUCT,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          let data = fatchvalue.data.allNewArrivalProducts.nodes;\r\n          setAllFeaturedProduct(data);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onChangeChecked = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n  const handleChangeIsActive = (productId) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISACTIVENEWARRIVALPRODUCT,\r\n        variables: { ProductId: productId, isActive: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleDelete = async (ProductId) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETENEWARRIVALPRODUCT,\r\n        variables: { ProductId: ProductId },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let create_featured_Product = {\r\n      ProductId: createFeaturedProduct.productId,\r\n      isActive: createFeaturedProduct.isActive,\r\n    };\r\n\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CREATENEWARRIVALPRODUCT,\r\n        variables: create_featured_Product,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Landing Page - New Arrival\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            {\" \"}\r\n            NAC - Landing Page - Featured Product :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"productId\"\r\n              label=\"Product Id\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createFeaturedProduct.productId}\r\n              name=\"productId\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={\r\n                <Switch\r\n                  checked={createFeaturedProduct.isActive}\r\n                  onChange={onChangeChecked}\r\n                  name=\"isActive\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                />\r\n              }\r\n              label=\"Product Active\"\r\n              labelPlacement=\"start\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Product Id</TableCell>\r\n                <TableCell>Proudct Name</TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Active</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {allFeaturedProudct.map((val, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{val.productId}</TableCell>\r\n                  <TableCell>\r\n                    {val?.productListByProductId?.productName}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={\r\n                        val?.productListByProductId?.productImagesByProductId\r\n                          ?.nodes[0]?.imageUrl\r\n                      }\r\n                      style={{ width: \"50px\", height: \"auto\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Switch\r\n                      checked={val.isActive ?? false}\r\n                      onChange={handleChangeIsActive(val.productId)}\r\n                      color=\"primary\"\r\n                      name=\"isActive\"\r\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.productId)}\r\n                      style={{\r\n                        color: \"#fff\",\r\n                        backgroundColor: \"red\",\r\n                        cursor: \"pointer !important\",\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProuductComponent;\r\n","import React from \"react\";\r\nimport { Breadcrumbs } from \"../index\";\r\nimport Reviewcomponent from \"./component/NewarrivalComponent\";\r\n\r\nconst FeaturedProduct = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <Reviewcomponent />\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProduct;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport { REVIEWQUERY } from \"../../../graphql/query\";\r\n\r\nconst columns = [\r\n  { id: \"product_sku\", label: \"Product Sku\" },\r\n  { id: \"customerName\", label: \"customer Name\" },\r\n  { id: \"rating\", label: \"Rating\" },\r\n  { id: \"title\", label: \"Title\" },\r\n  { id: \"message\", label: \"Message\" },\r\n  { id: \"ispublish\", label: \"Publish\" },\r\n  { id: \"isactive\", label: \"Active\" },\r\n];\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\nconst ISACTIVEREVIEW = `mutation MyMutation($id: UUID!, $isActive: Boolean) {\r\n    updateCustomerReviewById(\r\n      input: { customerReviewPatch: { isActive: $isActive }, id: $id }\r\n    ) {\r\n      customerReview {\r\n        id\r\n        isActive\r\n        message\r\n        productId\r\n        title\r\n        customerName\r\n        productSku\r\n        rating\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst ISPUBLISHREVIEW = `mutation MyMutation($id: UUID!, $isPublish: Boolean) {\r\n  updateCustomerReviewById(\r\n    input: { customerReviewPatch: { isPublish: $isPublish }, id: $id }\r\n  ) {\r\n    customerReview {\r\n      id\r\n      isPublish\r\n      message\r\n      productId\r\n      title\r\n      customerName\r\n      productSku\r\n      rating\r\n    }\r\n  }\r\n}\r\n`;\r\nconst CustomerReview = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [allReview, setAllReview] = useState([]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: REVIEWQUERY }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allCustomerReviews.nodes;\r\n        console.log(data);\r\n        setAllReview(data);\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const handleChangeIsPublish = (Id) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISPUBLISHREVIEW,\r\n        variables: { id: Id, isPublish: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleChangeIsActive = (Id) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISACTIVEREVIEW,\r\n        variables: { id: Id, isActive: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((headCell) => (\r\n                <TableCell\r\n                  key={headCell.id}\r\n                  style={{ whiteSpace: \"nowrap\" }}\r\n                  align={headCell.numeric ? \"right\" : \"left\"}\r\n                  padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n                >\r\n                  {headCell.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {allReview\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell align=\"left\">{row.productSku}</TableCell>\r\n                  <TableCell align=\"left\">{row.customerName}</TableCell>\r\n                  <TableCell align=\"left\">{row.rating}</TableCell>\r\n                  <TableCell align=\"left\">{row.title}</TableCell>\r\n                  <TableCell align=\"left\">{row.message}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Switch\r\n                      checked={row.isPublish ?? false}\r\n                      onChange={handleChangeIsPublish(row.id)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Switch\r\n                      checked={row.isActive ?? false}\r\n                      onChange={handleChangeIsActive(row.id)}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 15, 20, 25, 50, 100]}\r\n                count={allReview.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default CustomerReview;\r\n","import React from \"react\";\r\nimport { Breadcrumbs } from \"../index\";\r\nimport Reviewcomponent from \"./Component/Reviewcoponent\";\r\n\r\nconst FeaturedProduct = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <Reviewcomponent />\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProduct;\r\n","import React from 'react';\r\nimport { GRAPHQL_DEV_CLIENT } from '../config';\r\n\r\nconst globalCtxInitial = {\r\n    globalCtx: {\r\n        auth:{\r\n            loggedIn: false,\r\n            userData: {}\r\n        },\r\n        sideBarOpen: false,\r\n        isExpand: false,\r\n        selectedIndex: 0,\r\n        gqlClient: GRAPHQL_DEV_CLIENT\r\n    },\r\n    setGlobalCtx: () => null\r\n}\r\n\r\nexport const GlobalContext = React.createContext(globalCtxInitial);\r\n\r\nexport const GlobalConsumer = GlobalContext.Consumer;\r\n\r\nexport const GlobalProvider = props => {\r\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n    return(\r\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\r\n            {props.children}\r\n        </GlobalContext.Provider>      \r\n    )\r\n}","import React from \"react\";\r\n\r\nconst productuploadCtxInitial = {\r\n  productCtx: {\r\n    product_categoy: \"\",\r\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\r\n    product_type: [],\r\n    productname: \"\",\r\n    material: \"\",\r\n    description: \"\",\r\n    minOrderQty: \"\",\r\n    maxOrderQty: \"\",\r\n    height: \"\",\r\n    length: \"\",\r\n    earringbacking: [],\r\n    product_type_shortcode: \"\",\r\n    category: [],\r\n    metalColour: \"\",\r\n    metalpurities: \"\",\r\n    isExpand: false,\r\n    selectedgender: \"\",\r\n    selected_metal_colour: {},\r\n    gender: {},\r\n    product_gender: [],\r\n    vendorcode: [],\r\n    productseries: [],\r\n    size: 0,\r\n    sizes: [],\r\n    selected_sizes: [],\r\n    productSize: [],\r\n    masterProductSize: [],\r\n    metal: {\r\n      value: 1,\r\n      label: \"Diamond\",\r\n    },\r\n    materials: [\r\n      \"Diamond\",\r\n      \"Gold\",\r\n      \"Gemstone\",\r\n      \"Solitaire\",\r\n      \"Silver\",\r\n      \"Platinum\",\r\n    ],\r\n    gemstontypes: \"\",\r\n    gemstonshapes: \"\",\r\n    product_code: \"\",\r\n    isactive: false,\r\n    gemstonelist: [],\r\n    diamondlist: [],\r\n    variants: [],\r\n    oldproductMetalColor: [],\r\n    oldproductMetalPurity: [],\r\n    productMetalColor: [],\r\n    productMetalPurity: [],\r\n    productDiamondColor: [],\r\n    productDiamondClarity: [],\r\n    productDiamondTypes: [],\r\n    productImages: [],\r\n    productDiamondTypesArray: [],\r\n    oldproductDiamondTypesArray: [],\r\n    productmaterials: [],\r\n    createVariantList: [],\r\n    editVariants: [],\r\n    editDiamondLists: [],\r\n    editGemstoneLists: [],\r\n    productVariantSize: [\r\n      8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\r\n    ],\r\n    variant_size: [],\r\n    gemstonetype: \"\",\r\n    gemstoneshape: \"\",\r\n    gemstonesettings: \"\",\r\n    gemstonesize: \"\",\r\n    gemstonecount: \"\",\r\n    gemstoneweight: \"\",\r\n    stonetype: \"\",\r\n    isactiveVariant: \"\",\r\n    editleadtime: \"\",\r\n    editreadytoship: false,\r\n    editisdefault: false,\r\n    editisactive: null,\r\n\r\n    editcostprice: 0,\r\n    editsellingprice: 0,\r\n    editmarkupprice: 0,\r\n    editdiscountprice: 0,\r\n    editcostpricetax: 0,\r\n    editsellingpricetax: 0,\r\n    editmarkuppricetax: 0,\r\n    editdiscountpricetax: 0,\r\n\r\n    diamondclarity: \"\",\r\n    diamondcolor: \"\",\r\n    diamondsettings: \"\",\r\n    diamondshape: \"\",\r\n    diamondcount: \"\",\r\n    diamondweight: \"\",\r\n    diamonditemname: \"\",\r\n    diamondsubitemname: \"\",\r\n    diamonddescription: \"\",\r\n    gemstoneitemname: \"\",\r\n    gemstonesubitemname: \"\",\r\n    gemstonedescription: \"\",\r\n    metalindex: -1,\r\n    themes: [],\r\n    prod_styles: [],\r\n    occassions: [],\r\n    collections: [],\r\n    hashtags: [],\r\n    stonecount: [],\r\n    stonecolour: [],\r\n    product_images: {},\r\n    metalcolour: [],\r\n    metal_purity: [],\r\n    metalpurity: [],\r\n    metal_color: 0,\r\n    metal_weight: 0,\r\n    diamond_colour: 0,\r\n    diamond_clarity: 0,\r\n    metal_height: 0,\r\n    metal_width: 0,\r\n    metal_length: 0,\r\n    metal_object: 0,\r\n    diamondtype: 0,\r\n    metals: [],\r\n    error_message: {},\r\n    showPriceBreakup: null,\r\n  },\r\n  masterData: {},\r\n  setProductCtx: () => null,\r\n};\r\n\r\nexport const ProductContext = React.createContext(productuploadCtxInitial);\r\n\r\nexport const ProductConsumer = ProductContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n  if (Object.keys(apiData).length === 0) return {};\r\n\r\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\r\n\r\n  return productuploadCtxInitial.productCtx;\r\n};\r\n\r\nexport const ProductProvider = (props) => {\r\n  console.info(\"PROPS\", props, props.value.mappertype);\r\n  const [productCtx, setProductCtx] = React.useState(\r\n    mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)\r\n  );\r\n  // on Mount get Data from storage\r\n  // on Unmount store data to storage\r\n\r\n  React.useEffect(() => {\r\n    console.info(\"productCtx s\", productCtx);\r\n  }, [productCtx.material]);\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{\r\n        productCtx,\r\n        setProductCtx,\r\n        masterData: mapDataToCtx(\r\n          props.value.data,\r\n          props.value.mapper,\r\n          props.value.mappertype\r\n        ),\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst materialCtxInitial = {\r\n    materialCtx: {\r\n        \r\n    },\r\n    materialMaster: {\r\n        materials: []\r\n    },\r\n    setMaterialCtx: () => null\r\n}\r\n\r\nexport const MaterialContext = React.createContext(materialCtxInitial);\r\n\r\nexport const MaterialConsumer = MaterialContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n    if(Object.keys(apiData).length === 0) return {};\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\r\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\r\n\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\r\n\r\n    return materialCtxInitial.materialCtx;\r\n}\r\n\r\nexport const MaterialProvider = props => {\r\n    console.info('PROPS',props,props.value.mappertype)\r\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('materialCtx s',materialCtx);\r\n    },[materialCtx.material])\r\n\r\n    return(\r\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </MaterialContext.Provider>      \r\n    )\r\n}","import React from 'react';\r\n\r\nconst voucherCtxInitial = {\r\n    voucherCtx: {\r\n        voucher:\"\",\r\n        attrobj:{}\r\n    },\r\n    voucherMaster: {\r\n        materials: []\r\n    },\r\n    setVoucherCtx: () => null\r\n}\r\n\r\nexport const VoucherContext = React.createContext(voucherCtxInitial);\r\n\r\nexport const VoucherConsumer = VoucherContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n    if(Object.keys(apiData).length === 0) return {};\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\r\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\r\n\r\n\r\n    return voucherCtxInitial.voucherCtx;\r\n}\r\n\r\nexport const VoucherProvider = props => {\r\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('materialCtx s',voucherCtx);\r\n    },[voucherCtx.voucher])\r\n\r\n    return(\r\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </VoucherContext.Provider>      \r\n    )\r\n}","import React from \"react\";\r\n\r\nconst orderCtxInitial = {\r\n  orderCtx: {},\r\n  orderMaster: {\r\n    orders: [],\r\n  },\r\n  setOrderCtx: () => null,\r\n};\r\n\r\nexport const OrderContext = React.createContext(orderCtxInitial);\r\n\r\nexport const OrderConsumer = OrderContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n  if (Object.keys(apiData).length === 0) return {};\r\n\r\n  orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\r\n\r\n  console.log(\"resposeobjvalue1\" + JSON.stringify(orderCtxInitial.orderCtx));\r\n\r\n  return orderCtxInitial.orderCtx;\r\n};\r\n\r\nexport const OrderProvider = (props) => {\r\n  console.info(\"PROPS\", props, props.value.mappertype);\r\n  const [orderCtx, setorderCtx] = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype));\r\n  // on Mount get Data from storage\r\n  // on Unmount store data to storage\r\n\r\n  React.useEffect(() => {\r\n    console.info(\"orderCtx s\", orderCtx);\r\n  }, [orderCtx.order]);\r\n\r\n  return (\r\n    <OrderContext.Provider\r\n      value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }}\r\n    >\r\n      {props.children}\r\n    </OrderContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Form, Grid, Select } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip } from \"@material-ui/core\";\r\n\r\nconst useStyless = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\",\r\n];\r\n\r\nexport default function FormPropsTextFields(props) {\r\n  const classess = useStyless();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [producttype, setProducttype] = React.useState(\"\");\r\n\r\n  // const handleinputChange =type => e => {\r\n  // props.searchproduct(e.target.value)\r\n  // }\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setSearchtext(e.target.value);\r\n  };\r\n  const handlecategoryChange = (type) => (event, value) => {\r\n    setCategory(value.name);\r\n    props.applyfilter(searchtext, value.name, producttype);\r\n  };\r\n  const handletypeChange = (type) => (event, value) => {\r\n    setProducttype(value.name);\r\n    props.applyfilter(searchtext, category, value.name);\r\n  };\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  function applyfilter() {\r\n    props.applyfilter(searchtext, category, producttype);\r\n  }\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div\r\n      className=\"search\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        background: \"white\",\r\n        borderTop: \"1px solid #e4e4e4\",\r\n        borderBottom: \"1px solid #e4e4e4\",\r\n      }}\r\n    >\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Autocomplete\r\n          fullWidth\r\n          id=\"free-solo-2-demo\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name}\r\n          options={props.mastercategory}\r\n          onChange={handlecategoryChange(\"product_category\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.name}\r\n                {...getTagProps({ index })}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Filter By Product Category\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                readOnly: true,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Autocomplete\r\n          id=\"free-solo-2-demo\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name}\r\n          options={props.masterproducttype}\r\n          onChange={handletypeChange(\"product_type\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.name}\r\n                {...getTagProps({ index })}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Filter By Product Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                readOnly: true,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <TextField\r\n          fullWidth\r\n          margin=\"dense\"\r\n          onChange={handleinputChange(\"productname\")}\r\n          placeholder={\"Search by product name or product id\"}\r\n          onChange={handleinputChange(\"productname\")}\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"18px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Button\r\n          onClick={(e) => applyfilter()}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{\r\n            marginLeft: \"10px\",\r\n            marginTop: \"18px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          Search\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nconst columns = [\r\n  { id: 'vendorcode', label: 'Vendor Code' },\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'Address', label: 'Address' },\r\n  { id: 'City', label: 'City' },\r\n  { id: 'gstNo', label: 'gstNo' },\r\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n  { id: 'updatedAt', label: 'updated on' },\r\n  { id: 'actions', label: 'actions' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  contantview: {\r\n   placeItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [add,setAdd] = React.useState(false)\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  async function addnewvendor()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \r\n    setIsadd(true)\r\n    setNewvendorcode(response.newvendorcode)\r\n  }\r\n  function Cancelcreate(refetch) {\r\n    window.location.reload();\r\n    // props.onCancel();\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      shortCode : vendordata.shortCode,\r\n      name : vendordata.name,\r\n      address : vendordata.address,\r\n      city : vendordata.city,\r\n      pincode : vendordata.pincode,\r\n      gstNo : vendordata.gstNo,\r\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n    if(!editcontent.isedit)\r\n    {\r\n      \r\n      editcontent['isedit'] = false\r\n      editcontent['shortCode'] = newvendorcode\r\n    }\r\n   \r\n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\r\n     props.onCancel()\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  // refetch()\r\n  if(!editcontent.isedit)\r\n    {\r\n      \r\n  window.location.reload();\r\n    }else{\r\n      refetch()\r\n    }\r\n\r\n  }\r\n  function CancelEdit(diamondData) {\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('product_id');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\r\n\r\n  }\r\n  useEffect( () => {\r\n\r\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\r\n  const query = props.client.query\r\n    query({\r\n      query: PRODUCTFILTERMASTER,\r\n      fetchPolicy: \"network-only\"\r\n    }).then((data) => {\r\n      if (data) {\r\n      // setProductlists(data.data.allProductLists.nodes)\r\n       setMastercategories(data.data.allMasterProductCategories.nodes)\r\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\r\n      }else{\r\n      }\r\n    })\r\n  .catch((error) => {console.log(\"smbcj\")})\r\n  }, [])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\r\n\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\r\n\r\n\r\n\r\n  };\r\n  function searchproduct(searchtext, productcategory, producttype)\r\n  {\r\n    let products = allproductlists.filter(l => {\r\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\r\n    });\r\n    setProductlists(products)\r\n  }\r\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\r\n{\r\n  let bodydata = {\r\n    size : pagesize ? pagesize : rowsPerPage,\r\n    offset : offsetValue,\r\n    searchtext: searchtext,\r\n    productcategory: productcategory,\r\n    producttype: producttype,\r\n    order: sort ? sort : order,\r\n    orderby : orderby ? orderby : orderBy\r\n  }\r\n\r\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\r\n  setProductlists(response.products.rows)\r\n  setPageCount(response.products.count)\r\n}\r\nfunction applyfilter(searchtext, categoryname, typename)\r\n{\r\n  getproductlist(searchtext,categoryname,typename)\r\n}\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\r\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\r\n          <Typography  component=\"h4\" variant=\"h4\" >\r\n            Vendors\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\r\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\r\n              Add New Vendor\r\n            </Button>\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          { <Query\r\n              query={VENDORLISTS}\r\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\r\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) { \r\n                           return <> \r\n                              {data.allMasterVendors.nodes.map((row, index) => (\r\n                           <>\r\n                           {index == 0 && isadd ? \r\n                           <TableRow key={row.name}>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              contentEditable={false}\r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={newvendorcode}\r\n                              onChange={handleInputChange('shortCode')}\r\n\r\n                              label=\"Vendor Code\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('name')}\r\n\r\n                              label=\"Vendor Name\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('address')}\r\n\r\n                              label=\"Address\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('city')}\r\n\r\n                              label=\"City\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.hsnNumber}\r\n                              onChange={handleInputChange('gstNo')}\r\n\r\n                              label=\"GST Number\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.hsnNumber}\r\n                              onChange={handleInputChange('vendorDelivaryDays')}\r\n\r\n                              label=\"vendordeliverydays\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {new Date()}\r\n                                  </Moment>\r\n                           </TableCell>\r\n                           \r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                           </TableRow> : null }\r\n                              \r\n                                \r\n                                <TableRow key={row.name}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.shortCode}\r\n                                  </TableCell>\r\n                {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                  <TableCell align=\"left\">\r\n                  <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"vendorname\"\r\n                        name=\"vendorname\"\r\n                        value={editcontent.name}\r\n                        onChange={handleInputChange('name')}\r\n                        label=\"Vendor Name\"\r\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                           </TableCell> }\r\n                           {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                  <TableCell align=\"left\">\r\n                  <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"vendoraddress\"\r\n                        name=\"vendoraddress\"\r\n                        value={editcontent.address}\r\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\r\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \r\n                           </TableCell> }\r\n\r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"vendorcity\"\r\n                              name=\"vendorcity\"\r\n                              value={editcontent.city}\r\n                              onChange={handleInputChange('city')}\r\n\r\n                              label=\"Vendor City\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \r\n                           </TableCell> }\r\n                                  \r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"gst_no\"\r\n                              name=\"gst_no\"\r\n                              value={editcontent.gstNo}\r\n                              onChange={handleInputChange('gstNo')}\r\n\r\n                              label=\"GST Number\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \r\n                           </TableCell> }  \r\n\r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.vendorDelivaryDays}\r\n                              onChange={handleInputChange('vendorDelivaryDays')}\r\n\r\n                              label=\"Vendor Delivery Days\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \r\n                           </TableCell> }\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.createdAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell> :\r\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                      <Button ><EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                }\r\n                                  \r\n                                </TableRow>\r\n                                </>\r\n\r\n                              ))}\r\n                              \r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import { Helmet } from 'react-helmet';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NODE_ENV = process.env.NODE_ENV;\r\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\r\n\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function Page(props) {\r\n  const classes = useStyles();\r\n  const { title, children, ...rest } = props;\r\n\r\n  // useEffect(() => {\r\n  //   if (NODE_ENV !== 'production') {\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (window.gtag) {\r\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\r\n  //       page_path: router.location.pathname,\r\n  //       page_name: title\r\n  //     });\r\n  //   }\r\n  // }, [title, router]);\r\n  return (\r\n    <div {...rest}>\r\n      {/* <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet> */}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst AttributeComponent = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState(props.attributes);\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  useEffect(() => {\r\n    // alert(JSON.stringify(props.attributes))\r\n    // setAttrobj(props.attributes)\r\n  }, [props.attributes])\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       disabled\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                        options={props.masters.shiprates}\r\n                       value={props.selectedrate}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Shipping Rate\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj ? attrobj.category : []}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={props.masters.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n           value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n           value={attrobj.materials}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={props.masters.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ||  attrobj.purities ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n  value={attrobj.purities}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={props.masters.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n //value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond || attrobj.components ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.components}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n\r\n           options={props.masters.diamondtypes}\r\n           onChange={handleoptionChange('components')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.collections}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.occations}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.styles}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.themes}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAttributeComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default AttributeComponent;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport { SHIPPINGMASTER } from '../../services/queries';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {AttributesComponent} from './components'\r\nimport { parse } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Addshippingattributes = withRouter(props => {\r\n  let history = useHistory()\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [rateid, setRateid] = React.useState('')\r\n\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [selectedrate, setSelectedrate] = React.useState({})\r\n  const [selectedattr, setSelectedattr] = React.useState({})\r\n  const [isloaded, setIsloaded] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  function addattributes(value)\r\n  {\r\n\r\n    let attrs = []\r\n  let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      \r\n      let displaytext = key + ' : ' + values.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n\r\n  updateattributes(value,display_arr.join(' | '))\r\n\r\n  }\r\n  async function updateattributes(taxcontent,displaytext)\r\n  {\r\n    let reqbody = {\r\n      rateid : rateid,\r\n      attributes : taxcontent,\r\n      display_text : displaytext\r\n    } \r\n\r\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\r\n    //  getmaster()\r\n     //   alert(JSON.stringify(response))\r\n     history.push('/shippingattributes')\r\n    \r\n  }\r\n  async function getmastervalues(ratevalue)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let selectedattributes = [];\r\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\r\n          ..._,\r\n          \"alias\": _.shortCode,\r\n          \"diamondtype\":_.diamondColor+_.diamondClarity\r\n      }))\r\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\r\n        {\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allShippingCharges.nodes\r\n          })\r\n          setIsloaded(true)\r\n        }\r\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n           \r\n          if(element.id == ratevalue)\r\n          {\r\n            let attr = {}\r\n            setSelectedrate(element)\r\n            let categories = element.productAttributes;\r\n            var selectedcategory = []\r\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n            attr['category'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['product_types'] = selectedcategory\r\n\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['materials'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['purities'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['collections'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['occations'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['styles'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['themes'] = selectedcategory\r\n            selectedcategory =[]\r\n            diamondtypes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['components'] = selectedcategory\r\n            setSelectedattr(attr)\r\n          }\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allShippingCharges.nodes\r\n          })\r\n          setIsloaded(true)\r\n        })\r\n\r\n\r\n        \r\n\r\n      })\r\n      .catch(console.error)\r\n     \r\n\r\n      \r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let prod_id = props.location.pathname.split('/')[2];\r\n    setRateid(prod_id)\r\n    getmastervalues(prod_id)\r\n   // getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n    \r\n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Addshippingattributes;","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst AttributeComponent = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState(props.attributes);\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  useEffect(() => {\r\n    // alert(JSON.stringify(props.attributes))\r\n    // setAttrobj(props.attributes)\r\n  }, [props.attributes])\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       disabled\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.hsnNumber}\r\n                        options={props.masters.shiprates}\r\n                       value={props.selectedrate}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Tax Settings\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj ? attrobj.category : []}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={props.masters.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n           value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n           value={attrobj.materials}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={props.masters.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ||  attrobj.purities ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n  value={attrobj.purities}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={props.masters.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n //value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond || attrobj.components ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.components}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n\r\n           options={props.masters.diamondtypes}\r\n           onChange={handleoptionChange('components')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.collections}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.occations}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.styles}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.themes}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAttributeComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default AttributeComponent;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {AttributesComponent} from './components'\r\nimport { parse } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Addtaxattributes = withRouter(props => {\r\n  let history = useHistory()\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [rateid, setRateid] = React.useState('')\r\n\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [selectedrate, setSelectedrate] = React.useState({})\r\n  const [selectedattr, setSelectedattr] = React.useState({})\r\n  const [isloaded, setIsloaded] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  function addattributes(value)\r\n  {\r\n\r\n    let attrs = []\r\n    let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      \r\n      let displaytext = key + ' : ' + values.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n\r\n  updateattributes(value,display_arr.join(' | '))\r\n\r\n  }\r\n  async function updateattributes(taxcontent,displaytext)\r\n  {\r\n    let reqbody = {\r\n      rateid : rateid,\r\n      attributes : taxcontent,\r\n      display_text : displaytext\r\n    } \r\n\r\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\r\n    //  getmaster()\r\n     history.push('/taxsettings')\r\n    \r\n  }\r\n  async function getmastervalues(ratevalue)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TAXMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let selectedattributes = [];\r\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\r\n          ..._,\r\n          \"alias\": _.shortCode,\r\n          \"diamondtype\":_.diamondColor+_.diamondClarity\r\n      }))\r\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\r\n        {\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\r\n          })\r\n          setIsloaded(true)\r\n        }\r\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\r\n           \r\n          if(element.id == ratevalue)\r\n          {\r\n            let attr = {}\r\n            setSelectedrate(element)\r\n            let categories = element.productAttributes;\r\n\r\n            var selectedcategory = []\r\n            \r\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n                if(categories.indexOf(catobj.alias) > -1)\r\n                {\r\n                  selectedcategory.push(catobj)\r\n                }\r\n              }\r\n              \r\n\r\n            })\r\n\r\n            attr['category'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['product_types'] = selectedcategory\r\n\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['materials'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['purities'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['collections'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['occations'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['styles'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['themes'] = selectedcategory\r\n            selectedcategory =[]\r\n            diamondtypes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['components'] = selectedcategory\r\n            setSelectedattr(attr)\r\n          }\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\r\n          })\r\n          setIsloaded(true)\r\n        })\r\n\r\n\r\n        \r\n\r\n      })\r\n      .catch(console.error)\r\n     \r\n\r\n      \r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let prod_id = props.location.pathname.split('/')[2];\r\n    setRateid(prod_id)\r\n    getmastervalues(prod_id)\r\n   // getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n    \r\n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Addtaxattributes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New Category\r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { CATGORYLIST } from \"../../../../graphql/query\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PropTypes from \"prop-types\";\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Label, ReviewStars } from \"../../../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 1150,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Results = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  const [editcontent, setEditcontent] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias: vendordata.alias,\r\n      name: vendordata.name,\r\n      isedit: true,\r\n    });\r\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\r\n  }\r\n  async function Savevendor(refetch) {}\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    props.onCancel();\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600],\r\n  };\r\n\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      <Card>\r\n        <CardHeader title=\"Category\" />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n\r\n                  <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                  <TableCell align=\"left\">Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {\r\n                  <Query\r\n                    query={CATGORYLIST}\r\n                    onCompleted={(data) =>\r\n                      setPageCount(data.allMasterProductCategories.totalCount)\r\n                    }\r\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\r\n                  >\r\n                    {({ data, loading, error, refetch }) => {\r\n                      if (loading) {\r\n                        // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>;\r\n                        // return false\r\n                      }\r\n                      if (data) {\r\n                        return (\r\n                          <>\r\n                            {data.allMasterProductCategories.nodes.map(\r\n                              (row, index) => (\r\n                                <>\r\n                                  {index == 0 && props.isadd ? (\r\n                                    <TableRow key={row.name}>\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          contentEditable={false}\r\n                                          id=\"vendordeliverydays\"\r\n                                          name=\"vendordeliverydays\"\r\n                                          value={props.newvendorcode}\r\n                                          onChange={handleInputChange(\r\n                                            \"shortCode\"\r\n                                          )}\r\n                                          label=\"Vendor Code\"\r\n                                        />\r\n                                      </TableCell>\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          contentEditable={false}\r\n                                          id=\"vendordeliverydays\"\r\n                                          name=\"vendordeliverydays\"\r\n                                          value={props.newvendorcode}\r\n                                          onChange={handleInputChange(\r\n                                            \"shortCode\"\r\n                                          )}\r\n                                          label=\"Vendor Code\"\r\n                                        />\r\n                                      </TableCell>\r\n\r\n                                      <TableCell\r\n                                        style={{ width: 20 }}\r\n                                        align=\"center\"\r\n                                      >\r\n                                        <Button\r\n                                          onClick={(e) => Savevendor(refetch)}\r\n                                        >\r\n                                          <SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => Cancelcreate()}>\r\n                                          <CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  ) : null}\r\n                                  <TableRow key={row.name}>\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          fullWidth\r\n                                          id=\"categoryname\"\r\n                                          name=\"categoryname\"\r\n                                          value={editcontent.name}\r\n                                          onChange={handleInputChange(\"name\")}\r\n                                          label=\"Name\"\r\n                                        />{\" \"}\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell align=\"left\">\r\n                                        {row.name}\r\n                                      </TableCell>\r\n                                    )}\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          fullWidth\r\n                                          id=\"alias\"\r\n                                          name=\"alias\"\r\n                                          value={editcontent.alias}\r\n                                          onChange={handleInputChange(\"alias\")}\r\n                                          label=\"alias\"\r\n                                        />{\" \"}\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell align=\"left\">\r\n                                        {row.shortCode}\r\n                                      </TableCell>\r\n                                    )}\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell\r\n                                        style={{ width: 20 }}\r\n                                        align=\"center\"\r\n                                      >\r\n                                        <Button\r\n                                          onClick={(e) => Savevendor(refetch)}\r\n                                        >\r\n                                          <SaveIcon />\r\n                                        </Button>\r\n                                        <Button\r\n                                          onClick={(e) => CancelEdit(row)}\r\n                                        >\r\n                                          <CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell\r\n                                        align=\"center\"\r\n                                        onClick={(e) => Editvendor(row)}\r\n                                        style={{ width: 20 }}\r\n                                      >\r\n                                        <Button>\r\n                                          <EditIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    )}\r\n                                  </TableRow>\r\n                                </>\r\n                              )\r\n                            )}\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return <div>{\"Fetch Products\"}</div>;\r\n                      }\r\n                    }}\r\n                  </Query>\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Results;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { MaterialContext } from '../../context';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n  \r\nexport default function Categorycontent() {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const [isadd, setIsadd] = useState(false);\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      setOrders( [\r\n        {\r\n          id: uuid(),\r\n          created_at: \"test\",\r\n          customer: {\r\n            name: 'Ekaterina Tankova'\r\n          },\r\n          payment: {\r\n            ref: 'FAD103',\r\n            method: 'CreditCard',\r\n            total: '500.00',\r\n            currency: '$',\r\n            status: 'pending'\r\n          },\r\n          status: 'inactive'\r\n        }])\r\n    };\r\n\r\n    fetchOrders();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Header onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n      className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n      orders={materialCtx.materialMaster.materials}\r\n    />\r\n    \r\n  </Page>\r\n  );\r\n}","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MaterialProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './Categorycontent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const CategoryList = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </MaterialProvider>\r\n\r\n)});\r\nexport default CategoryList;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./Configuration.css\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nexport const Configuration = withRouter((props) => {\r\n  const master_options = [\r\n    \"Daily Metal Rate\",\r\n    \"Countries & Fx Rates\",\r\n    \"Attribute Master\",\r\n    \"Categories\",\r\n    \"ProductTypes\",\r\n    \"Materials\",\r\n    \"Metal Colours\",\r\n    \"Metal Purities\",\r\n    \"Collections\",\r\n    \"Occassions\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n    \"Designs\",\r\n    \"Weights\",\r\n    \"Diamond Types\",\r\n    \"Diamond Settings\",\r\n    \"Diamond Shapes\",\r\n    \"Earring Backings\",\r\n    \"Gemstone Settings\",\r\n    \"Gemstone Shapes\",\r\n    \"Gemstone Types\",\r\n    \"Stones\",\r\n    \"Stone Colours\",\r\n    \"Stone Shapes\",\r\n    \"Gender\",\r\n    \"SEO Priorities\",\r\n    \"Tax Settings 1\",\r\n    \"Tax Settings 2\",\r\n    \"Payment Status\",\r\n    \"Order Status\",\r\n    \"Shipping Zones\",\r\n    \"Shipment Setting I\",\r\n    \"Shipment Setting II\",\r\n  ];\r\n  const master_options_url = [\r\n    \"daily_metal_rate\",\r\n    \"countries\",\r\n    \"masterattributes\",\r\n    \"categories\",\r\n    \"producttypes\",\r\n    \"materialmaster\",\r\n    \"mastercolors\",\r\n    \"masterpurities\",\r\n    \"collections\",\r\n    \"masteroccassions\",\r\n    \"masterstyles\",\r\n    \"masterthemes\",\r\n    \"designs\",\r\n    \"weights\",\r\n    \"diamonds\",\r\n    \"diamondsettings\",\r\n    \"diamondshapes\",\r\n    \"earringbacking\",\r\n    \"gemstonesettings\",\r\n    \"gemstoneshapes\",\r\n    \"gemstonetypes\",\r\n    \"masterstones\",\r\n    \"masterstonecolors\",\r\n    \"masterstoneshapes\",\r\n    \"genders\",\r\n    \"seopriority\",\r\n    \"Taxsetup\",\r\n    \"taxsettings\",\r\n    \"paymentstatus\",\r\n    \"orderstatus\",\r\n    \"zones\",\r\n    \"shipmensettings\",\r\n    \"shippingattributes\",\r\n  ];\r\n\r\n  const [raised, setRaised] = React.useState(false);\r\n  const [cardindex, setCardindex] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  const onMouseOver = () => {\r\n    setRaised(true);\r\n  };\r\n  const onMouseOut = () => {\r\n    setRaised(false);\r\n    // setCardindex(-1)\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          Configure\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {master_options.map((text, index) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          <Link\r\n            underline=\"none\"\r\n            component={RouterLink}\r\n            to={master_options_url[index]}\r\n          >\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography\r\n                  style={{ textAlign: \"center\", marginTop: 8 }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {text}\r\n                </Typography>\r\n\r\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n              </CardContent>\r\n            </Card>\r\n          </Link>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default Configuration;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n\r\n          {/* <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button> */}\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  colors\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport PersonIcon from '@material-ui/icons/PersonOutline';\r\n\r\nimport { Label } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  actions: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    '& > * + *': {\r\n      marginLeft: 0\r\n    }\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst General = props => {\r\n  const { customer, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Customer info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>\r\n                {customer ? customer.email : \"\"}\r\n                {customer.isemailverified && <div>\r\n                  <Label\r\n                    color={\r\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\r\n                    }\r\n                  >\r\n                    \r\n                  {customer.isemailverified\r\n                      ? 'Email verified'\r\n                      : 'Email not verified'} \r\n                  </Label>\r\n                </div>}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Phone</TableCell>\r\n               <TableCell>{customer.mobile}\r\n               {customer.isemailverified && <div>\r\n                  <Label\r\n                    color={\r\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\r\n                    }\r\n                  >\r\n                    \r\n                  {customer.ismobileverified\r\n                      ? 'Mobile verified'\r\n                      : 'Mobile not verified'} \r\n                  </Label>\r\n                </div>}\r\n                </TableCell>\r\n            </TableRow>\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      {/* <CardActions className={classes.actions}>\r\n        <Button onClick={handleEditOpen}>\r\n          <EditIcon className={classes.buttonIcon} />\r\n          Edit\r\n        </Button>\r\n        <Button>\r\n          <LockOpenIcon className={classes.buttonIcon} />\r\n          Reset &amp; Send Password\r\n        </Button>\r\n        <Button>\r\n          <PersonIcon className={classes.buttonIcon} />\r\n          Login as Customer\r\n        </Button>\r\n      </CardActions> */}\r\n      {/* <CustomerEdit\r\n        customer={customer}\r\n        onClose={handleEditClose}\r\n        open={openEdit}\r\n      /> */}\r\n    </Card>\r\n  );\r\n};\r\n\r\nGeneral.propTypes = {\r\n  className: PropTypes.string,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nexport default General;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n \r\n  console.log(props);\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ 'aria-label': 'select all desserts' }}\r\n            />\r\n          </TableCell> */}\r\n        {props.columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            width={headCell.type == 9 ? 300 : null}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label ? headCell.label : headCell.name}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"\" : \"\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default EnhancedTableHead;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  colors, Dialog,\r\n\r\n\r\n  FormControlLabel,\r\n  Grid, Switch,\r\n\r\n\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\nimport \"../../tmp.css\";\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    paddingBottom: theme.spacing(2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    marginRight: theme.spacing(2),\r\n    // backgroundColor: colors.green[600],\r\n    // '&:hover': {\r\n    //   backgroundColor: colors.green[900]\r\n    // }\r\n  },\r\n}));\r\n\r\nconst EditContent = (props) => {\r\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    ...diamond,\r\n  };\r\n  const [showpreview, setShowpreview] = useState(false);\r\n  const [previewurl, setpreviewurl] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  function previewimage(url) {\r\n    // setpreviewurl(url)\r\n    // setShowpreview(true)\r\n  }\r\n  const handleInputChange = (type) => (e) => {\r\n\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const toggleChecked = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\r\n  };\r\n  function handleInit() {\r\n    console.log(\"FilePond instance has initialised\");\r\n  }\r\n\r\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\r\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        foldername: \"banner_images\",\r\n        product_id: null,\r\n      },\r\n      false\r\n    );\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData.filepath;\r\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\r\n\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n    let previmagenames = editcontent[keyvalue];\r\n    let previmages = [];\r\n    if (previmagenames) {\r\n      previmages = previmagenames.split(\",\");\r\n      previmages.push(imageurl);\r\n    }\r\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\r\n  }\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => { }, [editcontent]);\r\n\r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            {props.title}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          {attributes.map((columnname, index) => (\r\n            <>\r\n              {showpreview && (\r\n                <Lightbox\r\n                  class=\"fade\"\r\n                  mainSrc={previewurl}\r\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\r\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n                  onCloseRequest={() => setShowpreview(false)}\r\n                  onMovePrevRequest={() => alert(\"prev\")}\r\n                  onMoveNextRequest={() => alert(\"next\")}\r\n                />\r\n              )}\r\n              <Grid container xs={12} spacing={2}>\r\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n                      label={columnname.label}\r\n                      disabled={columnname.type === 10}\r\n                    />\r\n                  </Grid>\r\n                ) : null}\r\n\r\n                {columnname.key == \"email\" && !diamond.isedit ? (\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n                      label={columnname.label}\r\n                      disabled={columnname.type === 10}\r\n                    />\r\n                  </Grid>\r\n                ) : null}\r\n                {columnname.type === 2 && (\r\n                  <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                      label={columnname.key}\r\n                      labelPlacement=\"start\"\r\n                      control={\r\n                        <Switch\r\n                          checked={editcontent[columnname.key]}\r\n                          name=\"checkedB\"\r\n                          color=\"primary\"\r\n                          onChange={toggleChecked(columnname.key)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                {columnname.type === 3 && (\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      multiple\r\n                      id=\"combo-box-demo\"\r\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={editcontent[columnname.defaultkey]}\r\n                      onChange={handleoptionChange(columnname.defaultkey)}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type == 4 && (\r\n                  <Grid item xs={12}>\r\n                    <Typography> {diamond[columnname.key]}</Typography>\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type == 5 && (\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      id=\"combo-box-demo\"\r\n                      // options={props.masters[columnname.mastervaluekey]}\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                      onChange={handleoptionChange(columnname.defaultkey)}\r\n                      value={editcontent[columnname.defaultkey]}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\r\n                      )}\r\n                    />{\" \"}\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type === 6 && (\r\n                  <Grid item xs={12}>\r\n                    <Button variant=\"outlined\" color=\"primary\">\r\n                      {columnname.controllabel}\r\n                    </Button>{\" \"}\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type === 9 && (\r\n                  <Grid container item xs={12}>\r\n                    <Grid item xs={12}>\r\n                      <AvatarGroup max={2}>\r\n                        {diamond[columnname.key]\r\n                          ? diamond[columnname.key]\r\n                            .split(\",\")\r\n                            .map((diamond, index) => (\r\n                              <Avatar\r\n                                alt=\"Remy Sharp\"\r\n                                src={diamond}\r\n                                onClick={() => previewimage(diamond)}\r\n                                className={classes.small}\r\n                              />\r\n                            ))\r\n                          : null}\r\n                      </AvatarGroup>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <FilePond\r\n                        style={{ height: \"100\", width: \"100\" }}\r\n                        oninit={() => handleInit()}\r\n                        labelIdle=\"Add Banner Image\"\r\n                        onaddfile={(error, fileItem) => {\r\n                          if (!error) {\r\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\r\n                          } else {\r\n                            // alert(row[columnname.key])\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </>\r\n          ))}\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n          <Button onClick={() => onClose()} variant=\"contained\">\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditContent.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  attributes: PropTypes.array,\r\n\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditContent;\r\n","import { Button, Grid, Paper, Switch, TextField } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\n// Import the Image EXIF Orientation and Image Preview plugins\r\n// Note: These need to be installed separately\r\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport EditContent from \"./components/EditContent\";\r\nimport \"./tmp.css\";\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\"></IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  button: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Vendor = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [masterlist, setMasterlist] = React.useState(props.values);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const [productlists, setProductlists] = React.useState([]);\r\n  const [allproductlists, setAllProductlists] = React.useState([]);\r\n  const [mastercategories, setMastercategories] = React.useState([]);\r\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editEmail, setEditEmail] = React.useState(false);\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [isedit, setIsedit] = React.useState(false);\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const [aliasName, setaliasName] = React.useState(\"\");\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  function addnewvendor() {\r\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\r\n    setaliasName(props.prefix + sort_id);\r\n\r\n    setEditcontent({\r\n      alias: aliasName,\r\n      ...editcontent,\r\n      isedit: false,\r\n    });\r\n\r\n    // let masters = masterlist;\r\n    // masters.insert(0, []);\r\n\r\n    //setMasterlist(masters)\r\n    setIsadd(true);\r\n    setOpenedit(true);\r\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\r\n  }\r\n  Array.prototype.insert = function (index, item) {\r\n    this.splice(index, 0, item);\r\n  };\r\n  function Editvendor(vendordata) {\r\n    setEditEmail(true);\r\n    delete vendordata[\"action\"];\r\n\r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit: true,\r\n    });\r\n    setOpenedit(true);\r\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n  }\r\n  async function Savevendor(content) {\r\n    props.onCreate(content);\r\n    setIsadd(false);\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\r\n    // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function searrchcontent() {\r\n    props.onSearch(\r\n      editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\"\r\n    );\r\n  }\r\n  function handleInit() {\r\n    console.log(\"FilePond instance has initialised\");\r\n  }\r\n  function removeimage(imagename, keyvalue) {\r\n    let previmagenames = editcontent[keyvalue];\r\n    let newimages = [];\r\n    let previmages = previmagenames.split(\",\");\r\n    previmages.forEach((element) => {\r\n      if (element == imagename) {\r\n      } else {\r\n        newimages.push(element);\r\n      }\r\n    });\r\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    if (isadd) {\r\n      let masters = masterlist;\r\n\r\n      masters.splice(0, 1);\r\n      setMasterlist(masterlist);\r\n    }\r\n    setIsadd(false);\r\n    setEditcontent({});\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleSearchChange = (type) => (e) => {\r\n    props.onSearch(e.target.value);\r\n  };\r\n  const handleChange = (type) => (event) => {\r\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\r\n  };\r\n  const [showpreview, setShowpreview] = useState(false);\r\n  const [previewurl, setpreviewurl] = useState(\"\");\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n\r\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\r\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        foldername: \"banner_images\",\r\n        product_id: null,\r\n      },\r\n      false\r\n    );\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData.filepath;\r\n    let imageurl =\r\n      \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\r\n\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n    let previmagenames = editcontent[keyvalue];\r\n    let previmages = [];\r\n    if (previmagenames) {\r\n      previmages = previmagenames.split(\",\");\r\n      previmages.push(imageurl);\r\n    }\r\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\r\n  }\r\n  useEffect(() => {\r\n    setMasterlist(props.values);\r\n  }, [props.values]);\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info(\"You clicked a breadcrumb.\");\r\n  }\r\n  function previewimage(url) {\r\n    setpreviewurl(url);\r\n    setShowpreview(true);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showpreview && (\r\n        <Lightbox\r\n          class=\"fade\"\r\n          mainSrc={previewurl}\r\n          // nextSrc={images[(photoIndex + 1) % images.length]}\r\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n          onCloseRequest={() => setShowpreview(false)}\r\n          onMovePrevRequest={() => alert(\"prev\")}\r\n          onMoveNextRequest={() => alert(\"next\")}\r\n        />\r\n      )}\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={3} sm={3}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\r\n            <Grid fullwidth item xs={9} sm={9}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                id=\"vendordeliverydays\"\r\n                name=\"vendordeliverydays\"\r\n                //  /  value={editcontent.searchcontent}\r\n                onChange={handleInputChange(\"searchcontent\")}\r\n                label=\"Search text\"\r\n              />\r\n            </Grid>\r\n            <Grid fullwidth item xs={3} sm={3}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => searrchcontent()}\r\n                color=\"primary\"\r\n              >\r\n                Search\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            {props?.fxSyncAPI && (\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                onClick={() => props.fxSyncAPI()}\r\n                color=\"primary\"\r\n              >\r\n                Sync Latest Fx Rate\r\n              </Button>\r\n            )}\r\n            {props.button_title ? (\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                onClick={() => addnewvendor()}\r\n                color=\"primary\"\r\n              >\r\n                {props.button_title}\r\n              </Button>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n            <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n            <TableBody>\r\n              {masterlist.map((row, index) => (\r\n                <>\r\n                  <TableRow>\r\n                    {props.columns.map((columnname, index) => (\r\n                      <>\r\n                        {columnname.key === \"action\" ? (\r\n                          <TableCell align=\"center\" style={{ width: 20 }}>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <>\r\n                                <Button onClick={(e) => Savevendor()}>\r\n                                  <SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}>\r\n                                  <CancelIcon />\r\n                                </Button>\r\n                              </>\r\n                            ) : (\r\n                              <Button onClick={(e) => Editvendor(row)}>\r\n                                <EditIcon />\r\n                              </Button>\r\n                            )}\r\n                          </TableCell>\r\n                        ) : (\r\n                          <>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <TableCell align=\"left\">\r\n                                {columnname.type === 2 ? (\r\n                                  <Switch\r\n                                    onChange={handleChange(columnname.key)}\r\n                                    checked={editcontent[columnname.key]}\r\n                                    color=\"primary\"\r\n                                    name=\"checkedB\"\r\n                                    inputProps={{\r\n                                      \"aria-label\": \"primary checkbox\",\r\n                                    }}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type === 6 ? (\r\n                                  <Button variant=\"outlined\" color=\"primary\">\r\n                                    {columnname.controllabel}\r\n                                  </Button>\r\n                                ) : null}\r\n                                {columnname.type == 3 ? (\r\n                                  <Autocomplete\r\n                                    multiple\r\n                                    id=\"combo-box-demo\"\r\n                                    options={\r\n                                      columnname.mastervaluekey\r\n                                        ? props.masters[\r\n                                            columnname.mastervaluekey\r\n                                          ]\r\n                                        : props.masters\r\n                                    }\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    value={editcontent[columnname.defaultkey]}\r\n                                    onChange={handleoptionChange(\r\n                                      columnname.defaultkey\r\n                                    )}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label={columnname.label}\r\n                                        variant=\"outlined\"\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type == 9 ? (\r\n                                  <>\r\n                                    <FilePond\r\n                                      oninit={() => handleInit()}\r\n                                      labelIdle=\"Add Banner Image\"\r\n                                      onaddfile={(error, fileItem) => {\r\n                                        if (!error) {\r\n                                          uploadimagetoserver(\r\n                                            fileItem,\r\n                                            columnname.key,\r\n                                            \"add\"\r\n                                          );\r\n                                        } else {\r\n                                          // alert(row[columnname.key])\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <div className={classes.imagecontainer}>\r\n                                      {editcontent[columnname.key]\r\n                                        ? editcontent[columnname.key]\r\n                                            .split(\",\")\r\n                                            .map((row, index) => (\r\n                                              <Badge\r\n                                                overlap=\"circle\"\r\n                                                anchorOrigin={{\r\n                                                  vertical: \"top\",\r\n                                                  horizontal: \"right\",\r\n                                                }}\r\n                                                badgeContent={\r\n                                                  <HighlightOffIcon\r\n                                                    fontSize=\"small\"\r\n                                                    onClick={() =>\r\n                                                      removeimage(\r\n                                                        row,\r\n                                                        columnname.key\r\n                                                      )\r\n                                                    }\r\n                                                  />\r\n                                                }\r\n                                              >\r\n                                                <Avatar\r\n                                                  alt=\"Remy Sharp\"\r\n                                                  src={row}\r\n                                                  className={classes.small}\r\n                                                />\r\n                                              </Badge>\r\n                                            ))\r\n                                        : null}\r\n                                    </div>\r\n                                  </>\r\n                                ) : null}\r\n                                {columnname.type == 5 ? (\r\n                                  <Autocomplete\r\n                                    id=\"combo-box-demo\"\r\n                                    // options={\r\n                                    //   props.masters[columnname.mastervaluekey]\r\n                                    // }\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    options={\r\n                                      columnname.mastervaluekey\r\n                                        ? props.masters[\r\n                                            columnname.mastervaluekey\r\n                                          ]\r\n                                        : props.masters\r\n                                    }\r\n                                    onChange={handleoptionChange(\r\n                                      columnname.defaultkey\r\n                                    )}\r\n                                    value={editcontent[columnname.defaultkey]}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label={columnname.label}\r\n                                        variant=\"outlined\"\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type == 4 ? (\r\n                                  <Typography>\r\n                                    {\" \"}\r\n                                    {row[columnname.key]}\r\n                                  </Typography>\r\n                                ) : null}\r\n                                {columnname.type == 8 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    View\r\n                                  </Button>\r\n                                ) : null}\r\n                                {!columnname.type || columnname.type == 1 ? (\r\n                                  <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    id={columnname.key}\r\n                                    name={columnname.key}\r\n                                    value={editcontent[columnname.key]}\r\n                                    onChange={handleInputChange(columnname.key)}\r\n                                    label={columnname.label}\r\n                                  />\r\n                                ) : null}{\" \"}\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell>\r\n                                {/* {columnname.type === 8 ?\r\n                  <Button\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  size=\"small\"\r\n                  to={'/management/invoices/1'}\r\n                  variant=\"outlined\"\r\n                >\r\n                  View\r\n                </Button>\r\n                : null} */}\r\n\r\n                                {columnname.type == 8 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    View\r\n                                  </Button>\r\n                                ) : null}\r\n                                {columnname.type === 6 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    {columnname.controllabel}\r\n                                  </Button>\r\n                                ) : null}\r\n\r\n                                {columnname.type === 9 ? (\r\n                                  <AvatarGroup max={2}>\r\n                                    {row[columnname.key]\r\n                                      ? row[columnname.key]\r\n                                          .split(\",\")\r\n                                          .map((row, index) => (\r\n                                            <Avatar\r\n                                              alt=\"Remy Sharp\"\r\n                                              src={row}\r\n                                              onClick={() => previewimage(row)}\r\n                                              className={classes.small}\r\n                                            />\r\n                                          ))\r\n                                      : null}{\" \"}\r\n                                    {/* className={classes.small} />)) : null } */}\r\n                                  </AvatarGroup>\r\n                                ) : null}\r\n                                {columnname.type === 2 ? (\r\n                                  <Switch\r\n                                    color=\"primary\"\r\n                                    name=\"checkedB\"\r\n                                    onChange={handleInputChange(columnname.key)}\r\n                                    checked={row[columnname.key]}\r\n                                    inputProps={{\r\n                                      \"aria-label\": \"primary checkbox\",\r\n                                    }}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type != 2 &&\r\n                                columnname.type != 6 &&\r\n                                columnname.type != 8 &&\r\n                                columnname.type != 9 ? (\r\n                                  <Typography>\r\n                                    {\" \"}\r\n                                    {row[columnname.key]}\r\n                                  </Typography>\r\n                                ) : null}\r\n                              </TableCell>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    ))}\r\n                  </TableRow>\r\n                </>\r\n              ))}\r\n\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 200, 500]}\r\n                  count={[props.values.length]}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  SelectProps={{\r\n                    inputProps: { \"aria-label\": \"rows per page\" },\r\n                    native: true,\r\n                  }}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  // ActionsComponent={TablePaginationActions}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n          {editcontent && (\r\n            <EditContent\r\n              diamond={editcontent}\r\n              attributes={props.columns}\r\n              title={props.title}\r\n              masters={props.masters}\r\n              onApply={Savevendor}\r\n              onClose={handleApplicationClose}\r\n              open={openedit}\r\n              prefix={aliasName}\r\n              editemail={editEmail}\r\n            />\r\n          )}\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(Vendor);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport {General, Results} from './components'\r\nimport Mastercontent from '../../components/Mastercontent'\r\nimport data from './data.json'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Grid,\r\n  Divider,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  colors\r\n} from '@material-ui/core';\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    height: '80vh'\r\n  },\r\n  tabs: {\r\n    minWidth: '250px',\r\n    maxWidth: '250px',\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginRight : theme.spacing(2),\r\n    borderRight: `2px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\nconst master_options = ['Address Book','Wish List','Orders']\r\n  const master_options_url = ['/address','/userwishlist','/orderlist']\r\n\r\nexport const Customerdetails = withRouter(props => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({});\r\n  const [customer, setCustomer] = React.useState({});\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    // history.push(`orderlist/${id}`)\r\n    window.location.href = `orderlist/${id}`\r\n  }\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\nasync function getmaster()\r\n  {\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n\r\n    setCustomer(response.userprofile)\r\n  }\r\n  React.useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid> */}\r\n    <Grid container item xs={12} sm={12} lg={12} >\r\n    <Grid  item xs={12} sm={6} lg={6} >\r\n    <General customer ={customer} /> \r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={2} lg={2} >\r\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\r\n     <Card fullwidth\r\n    //  onClick={(e) => ProductEdit(customer.id)}\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n    // <div className={classes.root}>\r\n      \r\n    //   <Tabs\r\n    //     orientation=\"vertical\"\r\n    //     variant=\"standard\"\r\n    //     value={value}\r\n    //     onChange={handleChange}\r\n    //     aria-label=\"Vertical tabs example\"\r\n    //     className={classes.tabs}\r\n    //   >\r\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\r\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\r\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\r\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\r\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\r\n \r\n    //   </Tabs>\r\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\r\n    //   <General customer ={customer} /> </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \r\n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\r\n    //   </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\r\n\r\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\r\n      \r\n    //   </TabPanel>\r\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\r\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\r\n    //   </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\r\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\r\n    //   </TabPanel>\r\n      \r\n     \r\n    // </div>\r\n  );\r\n});\r\n\r\nexport default Customerdetails;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Page from '../../components/Page/Page'\r\nimport { Header } from './components';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  tabs: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\r\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\r\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\r\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\r\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\r\n\r\nexport const CustomerManagementDetails = withRouter(props => {\r\n\r\n  const { match, history } = props;\r\n  const classes = useStyles();\r\n  const { id, tab } = match.params;\r\n\r\n  const handleTabsChange = (event, value) => {\r\n    history.push(value);\r\n  };\r\n\r\n  const tabs = [\r\n    { value: 'summary', label: 'Summary' },\r\n    { value: 'invoices', label: 'Invoices' },\r\n    { value: 'logs', label: 'Logs' }\r\n  ];\r\n\r\n  if (!tab) {\r\n    //return <Redirect to={`/customerdetails`} />;\r\n  }\r\n\r\n  if (!tabs.find(t => t.value === tab)) {\r\n   // return <Redirect to=\"/errors/error-404\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid>\r\n    \r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={4} lg={3} >\r\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\r\n     <Card fullwidth\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n    // <Page\r\n    //   className={classes.root}\r\n    //   title=\"Customer Management Details\"\r\n    // >\r\n    //   <Header />\r\n    //    <Tabs\r\n    //     className={classes.tabs}\r\n    //     onChange={handleTabsChange}\r\n    //     scrollButtons=\"auto\"\r\n    //     value={tab}\r\n    //     variant=\"scrollable\"\r\n    //   >\r\n    //     {tabs.map(tab => (\r\n    //       <Tab\r\n    //         key={tab.value}\r\n    //         label={tab.label}\r\n    //         value={tab.value}\r\n    //       />\r\n    //     ))}\r\n    //   </Tabs>\r\n    //   <Divider className={classes.divider} />\r\n    //  {/* <div className={classes.content}>\r\n    //     {tab === 'summary' && <Summary />}\r\n    //     {tab === 'invoices' && <Invoices />}\r\n    //     {tab === 'logs' && <Logs />}\r\n    //   </div> */}\r\n    // </Page>\r\n  );\r\n});\r\n\r\nCustomerManagementDetails.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CustomerManagementDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const customer = {\r\n    name: 'Ekaterina Tankova'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        component=\"h2\"\r\n        gutterBottom\r\n        variant=\"overline\"\r\n      >\r\n        Customers\r\n      </Typography>\r\n      <Typography\r\n        component=\"h1\"\r\n        variant=\"h3\"\r\n      >\r\n        {customer.name}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  }\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n      //     setInvoices(response.data.invoices);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title=\"Customer invoices\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell>Payment Method</TableCell>\r\n                    <TableCell>Total</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {invoices.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React from \"react\";\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\nimport propTypes from \"prop-types\";\r\n\r\n// NOTABLE POINTS\r\n//  Min and Max\r\n// Email ID\r\n// Confirm Email ID\r\n// Mobile Number\r\n// Number\r\n// Password\r\n// Repeat Password\r\n// On Button Submit\r\n// On Moving Out\r\n// Live\r\n\r\nexport const Input = props => {\r\n  let {\r\n    isNumber = false,\r\n    pattern,\r\n    maxLength,\r\n    minLength,\r\n    helperText,\r\n    ...rest\r\n  } = props;\r\n  const defaultStyle = {\r\n    margin: \"dense\",\r\n    variant: \"outlined\",\r\n    'input-label': {\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'nowrap',\r\n      overflow: 'hidden',\r\n      width: '100%',\r\n      color: 'red'\r\n    },\r\n  \r\n    'input': {\r\n      '&::placeholder': {\r\n        textOverflow: 'ellipsis !important',\r\n        color: 'red'\r\n      }\r\n    }\r\n  };\r\n\r\n  // INTEGRATE THEME HERE\r\n\r\n  const handleKeyPress = e => {\r\n    if (isNumber) {\r\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <TextField\r\n                inputProps={{ pattern, maxLength, minLength  }}\r\n\r\n        style={{ width: \"100%\" }}\r\n        helperText={helperText}\r\n        onKeyPress={handleKeyPress}\r\n        {...defaultStyle}\r\n        {...rest}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  isNumber: propTypes.bool\r\n};\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport {Input} from '../../components/Input.js'\r\n\r\nimport \"./Dashboard.css\"\r\n\r\nclass Dashboard_ extends React.Component {\r\n  \r\n   \r\n  render() {\r\n  return (\r\n    <Container className=\"root\" component=\"main\">\r\n    <Input />\r\n  </Container>\r\n         \r\n  );\r\n}\r\n}\r\n\r\nexport const Dashboard = withRouter(Dashboard_);\r\n  export default Dashboard;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n\r\n          {/* <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button> */}\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Divider} from '@material-ui/core'\r\nexport default function ConformationAlert(props) {\r\n  \r\n  const handleOk = () => {\r\n    props.onSuccess(props.data, props.refetch)\r\n  };\r\n  const handleClose = () => {\r\n    props.onCancel()\r\n  };\r\n  return (\r\n    <div>\r\n\r\n      <Dialog\r\n        open={props.isshow}\r\n        onClose={handleClose}\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.message}\r\n            Verify details before deleting\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\r\n          {props.positivebtn}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\r\nimport ConformationAlert from '../../../../components/ConformationAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibileIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  FormControlLabel,\r\n  Switch,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n   // minWidth: 1150\r\n   overflowX: 'auto',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  let history = useHistory();\r\n\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation,setIsconformation] = React.useState(false)\r\n\r\n  \r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nfunction handleDelete(diamondData) {\r\n\r\n  setDeleteid(diamondData.id)\r\n  setIsconformation(true);\r\n}\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function DiscountEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n   // history.push(`product_attributes/${id}`)\r\n   history.push(`salediscount/${id}`)\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleChange(event,voucherid, refetch)\r\n  {\r\n    handlestatusChange(voucherid,event.target.checked, refetch)\r\n  }\r\n\r\n  async function handlestatusChange(id,isactive,refetch){\r\n    let variables ={\r\n      discountId:id,\r\n      isActive:isactive\r\n    }\r\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n  \r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title={props.title}\r\n          action={\r\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n          >\r\n            Add New \r\n          </Button>\r\n          </Link>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {props.tablecolumns.map((row, index) => (\r\n                          <TableCell>{row}</TableCell>\r\n                    ))}   \r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={SALEDISCOUNTS}\r\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n                                 <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                  \r\n                                 <>\r\n\r\n                                  <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">{row.discountName} \r\n                                              </TableCell>\r\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\r\n                                              } \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\"> <FormControlLabel\r\n                                                    label={row.isActive ? \"\" : \"\"}\r\n\r\n                                                    control={\r\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\r\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\r\n                                                      />\r\n                                                    }\r\n                                                  /></TableCell>\r\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell> */}\r\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\r\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={pageCount}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default withApollo(Results);\r\n","import React,{useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page/Page'\r\nimport { Header, Results } from './components';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nlet colimns = [\r\n  \"Name\",\r\n  \"Components\",\r\n  \"discount_value\",\r\n  \"product attributes\",\r\n  \"Active\",\r\n  \"actions\"\r\n]\r\nexport const DiscountList = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    \r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n    title={\"Sale Discount\"}\r\n       className={classes.results}\r\n       tablecolumns={colimns}\r\n      searchtext={searchtext}\r\n      onAdd={addcategory}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    />\r\n   \r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default DiscountList;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Earringbacking = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: EARRINGBACKING  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    \r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {Card,TextField,Checkbox} from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Goldpriceupdate = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervendors, setMastervendors] = React.useState([])\r\n  const [goldprice, setGoldprice] = React.useState({\r\n    cost_price : '',\r\n    selling_price : ''\r\n  })\r\n  const [defaultpurity, setDefaultpurity] = React.useState({})\r\n  const [purityprices, setPurityprices] = React.useState({})\r\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\r\n  const [defaultmetal, setDefaultmetal] = React.useState({})\r\n  const [pricetype, setPricetype] = React.useState({})\r\n\r\n  const [selectedvendors, setSelectedvendors] = React.useState([])\r\n  const [materials, setMaterials] = React.useState([])\r\n  \r\n  const [masterpurities, setMasterpurities] = React.useState([])\r\n\r\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function updateprice()\r\n  {\r\n    let bodycondent = {\r\n      costprices : purityprices,\r\n      sellingprices : puritysellingprices,\r\n      vendors : selectedvendors,\r\n      metal : defaultmetal,\r\n      pricetype : pricetype\r\n    }\r\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\r\n     alert(\"price updated successfully\")\r\n  }\r\n  const handleChange = type => (event) => {\r\n    let vendorids =[]\r\n    selectedvendors.forEach(element => {\r\n      vendorids.push(element)\r\n    })\r\n    if(event.target.checked)\r\n    {\r\n\r\n      if(type == 'All')\r\n      {\r\n        mastervendors.forEach(element => {\r\n          vendorids.push(element.shortCode)\r\n        })\r\n        setSelectedvendors(vendorids)\r\n      }else\r\n      {\r\n        vendorids.push(type)\r\n        setSelectedvendors(vendorids)\r\n\r\n      }\r\n    }else{\r\n      if(type == 'All')\r\n      {\r\n        setSelectedvendors([])\r\n\r\n      }else{\r\n\r\n        let indexval = selectedvendors.indexOf(type)\r\n        vendorids.splice(indexval,1)\r\n        let allindexval = selectedvendors.indexOf('All')\r\n        if(allindexval >  -1)\r\n        {\r\n          vendorids.splice(allindexval,1)\r\n\r\n        }\r\n\r\n        setSelectedvendors(vendorids)\r\n\r\n      }\r\n    }\r\n   // setChecked(event.target.checked);\r\n  };\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let allobj =  {\r\n          \"name\": \"All Vendors\",\r\n          \"id\": \"All\",\r\n          \"shortCode\": \"All\"\r\n        }\r\n        let vendors = [];\r\n        vendors.push(allobj)\r\n\r\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\r\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\r\n          vendors.push(vendorobj)\r\n          selectedvendors.push(vendorobj.shortCode)\r\n        })\r\n         setMastervendors(vendors)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  const handleoptionChange = type => (event, value) => {\r\n   // setEditcontent({ ...editcontent, [type]: value  })\r\n   let vendorid = []\r\n   value.forEach(element => {\r\n    if(element.shortCode == 'All')\r\n    {\r\n      mastervendors.forEach(element => {\r\n        vendorid.push(element.shortCode)\r\n      })\r\n      setSelectedvendors(vendorid)\r\n    }else{\r\n      vendorid.push(element.shortCode)\r\n      setSelectedvendors(vendorid)\r\n\r\n    }\r\n   })\r\n  }\r\n  const handlepricetypeChange = (event, value) => {\r\n    setPricetype(value)\r\n  }\r\n  const handlemetalChange = type => (event, value) => {\r\n    // setEditcontent({ ...editcontent, [type]: value  })\r\n    //alert(JSON.stringify(value))\r\n    if(value)\r\n    { \r\n    if(value.shortCode === 'G')\r\n    {\r\n      setIspricecalculated(false)\r\n    }else\r\n    {\r\n      setIspricecalculated(true)\r\n    }\r\n    if(data[value.name])\r\n    {\r\n      setDefaultpurity(data[value.name])\r\n\r\n    }\r\n  }else\r\n  {\r\n    setIspricecalculated(false)\r\n\r\n  }\r\n    setDefaultmetal(value)\r\n   //setDefaultpurity(value)\r\n   }\r\n  const handleInputChange = type => event => {\r\n   // setGoldprice(event.target.value);\r\n   //alert(JSON.stringify(goldprice))\r\n   if(defaultmetal.name === 'Gold')\r\n    {\r\n    }else\r\n    {\r\n      let sellingpricejson = {}\r\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\r\n      if(type === 'cost_price')\r\n      {\r\n        setPurityprices(sellingpricejson)\r\n\r\n      }\r\n      if(type === 'selling_price')\r\n      {\r\n        setPuritysellingprices(sellingpricejson)\r\n\r\n      }\r\n    }\r\n    setGoldprice({...goldprice,[type]: event.target.value })\r\n  }\r\n  const handlePriceChange = type => event => {\r\n\r\n    // let goldpriceval = purityprices;\r\n    // goldpriceval[type] = event.target.value;\r\n    setPurityprices({...purityprices,[type]:event.target.value});\r\n\r\n    \r\n  }\r\n  const handlesellingPriceChange = type => event => {\r\n\r\n    // let goldpriceval = purityprices;\r\n    // goldpriceval[type] = event.target.value;\r\n    \r\n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\r\n  }\r\n  function getgoldvalue()\r\n  {\r\n    if(defaultmetal.name === 'Gold')\r\n    {\r\n       let default_purity = parseInt()\r\n     let pricejson = {}\r\n     let sellingpricejson = {}\r\n    data.goldpurity.forEach(element => {\r\n      var sellingprice = goldprice.selling_price\r\n      if(pricetype.value == 2) \r\n      {\r\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\r\n       \r\n      }\r\n      let priceratio = element.shortCode / defaultpurity.shortCode;\r\n\r\n      let goldprice_val = priceratio*goldprice.cost_price\r\n      let goldsellingprice_val = priceratio*sellingprice\r\n      sellingpricejson[element.shortCode] = goldsellingprice_val\r\n\r\n      pricejson[element.shortCode] = goldprice_val\r\n    })\r\n    setPuritysellingprices(sellingpricejson)\r\n    setPurityprices(pricejson)\r\n    }else{\r\n      let pricejson = {}\r\n      let sellingpricejson = {}\r\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\r\n\r\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\r\n      setPuritysellingprices(sellingpricejson)\r\n      setPurityprices(pricejson)\r\n    }\r\n\r\n    \r\n     setIspricecalculated(true)\r\n   \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n     <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n          <Grid container>\r\n          <Grid container item row alignItems=\"center\" >\r\n          <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={materials}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  disableClearable={true}\r\n                 value={defaultmetal}\r\n                   onChange={handlemetalChange(\"material\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\r\n                /> \r\n\r\n                \r\n\r\n\r\n\r\n          <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{marginLeft: 16}}\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={goldprice.cost_price}\r\n                             onChange={handleInputChange(\"cost_price\")}\r\n                            label=\"Cost Price\"\r\n                          />\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={data.pricetype}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  style={{marginLeft: 16}}\r\n                 value={pricetype}\r\n                  onChange={handlepricetypeChange}\r\n                  getOptionLabel={(option) => option.label}\r\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\r\n                /> \r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{marginLeft: 16}}\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={goldprice.selling_price}\r\n                             onChange={handleInputChange(\"selling_price\")}\r\n                            label=\"Selling Price\"\r\n                          />\r\n              \r\n             {defaultpurity.name ?  <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={masterpurities}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  disabled\r\n                  style={{marginLeft: 16, width:200}}\r\n                  value={defaultpurity}\r\n                   onChange={handleoptionChange(\"defaultpurity\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\r\n                  variant=\"outlined\" />}\r\n                />  : null }\r\n                {defaultmetal.name == 'Gold' ? \r\n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\r\n                  Get Price\r\n               </Button> : null}\r\n          </Grid>\r\n          {ispricecalculated ?\r\n          <>\r\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\r\n          {data.goldpurity.map((purityname, index) =>(\r\n           \r\n           <Grid container item row alignItems=\"center\" >\r\n\r\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\r\n               Price for {purityname.name}\r\n             </Typography>\r\n                 \r\n                 <TextField\r\n                     variant=\"outlined\"\r\n                     margin=\"dense\"\r\n                     autoComplete=\"off\"\r\n                     id=\"vendordeliverydays\"\r\n                     name=\"vendordeliverydays\"\r\n                     value={purityprices[purityname.shortCode]}\r\n                      onChange={handlePriceChange(purityname.shortCode)}\r\n                     label=\"Price\"\r\n                   />\r\n                    <TextField\r\n                     variant=\"outlined\"\r\n                     margin=\"dense\"\r\n                     autoComplete=\"off\"\r\n                     style={{marginLeft: 16}}\r\n\r\n                     id=\"vendordeliverydays\"\r\n                     name=\"vendordeliverydays\"\r\n                     value={puritysellingprices[purityname.shortCode]}\r\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\r\n                     label=\"Price\"\r\n                   />\r\n   </Grid>\r\n          ))} </>:null }\r\n          <Grid item xs={12} sm={6} lg={3} >\r\n          <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={mastervendors}\r\n                    multiple\r\n                  // value={editcontent[columnname.defaultkey]}\r\n                   onChange={handleoptionChange(\"defaultpurity\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\r\n                /> \r\n        </Grid>\r\n          </> : null}\r\n          \r\n         </Grid>\r\n         <Grid item  >\r\n\r\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\r\n                  Update Vendor Gold Price\r\n               </Button>\r\n            </Grid>\r\n      </CardContent>\r\n      </Card>\r\n\r\n{/* \r\n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\r\n      <CardContent>\r\n          <Grid container>\r\n          \r\n           {mastervendors.map((vendors, index) =>(\r\n            <Grid container item row alignItems=\"center\" >\r\n              <Grid item xs={3} alignItems=\"center\" >\r\n\r\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\r\n              {vendors.name}\r\n             </Typography>\r\n             </Grid>\r\n             <Grid item xs={3} alignItems=\"center\" >\r\n\r\n             <Checkbox\r\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\r\n                onChange={handleChange(vendors.shortCode)}\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n                   </Grid>\r\n   </Grid>\r\n          ))}\r\n         </Grid>\r\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\r\n                  Update Vendor Gold Price\r\n               </Button>\r\n\r\n      </CardContent>\r\n      </Card> : null}\r\n    */}\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Goldpriceupdate;","import gql from \"graphql-tag\";\r\n\r\nlet CREATE_HOLIDAY = gql`\r\n  mutation ($item: HolidayManagerInput!) {\r\n    createHolidayManager(input: { holidayManager: $item }) {\r\n      holidayManager {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_HOLIDAY = gql`\r\n  mutation ($id: Int!, $item: HolidayManagerPatch!) {\r\n    updateHolidayManagerById(input: { id: $id, holidayManagerPatch: $item }) {\r\n      holidayManager {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_HOLIDAY = gql`\r\n  mutation ($id: Int!) {\r\n    deleteHolidayManagerById(input: { id: $id }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_WAREHOUSE = gql`\r\n  mutation ($item: WarehouseInput!) {\r\n    createWarehouse(input: { warehouse: $item }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_WAREHOUSE = gql`\r\n  mutation ($id: Int!, $item: WarehousePatch!) {\r\n    updateWarehouseById(input: { id: $id, warehousePatch: $item }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_WAREHOUSE = gql`\r\n  mutation ($id: Int!) {\r\n    deleteWarehouseById(input: { id: $id }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_INVENTORY = gql`\r\n  mutation ($item: InventoryInput!) {\r\n    createInventory(input: { inventory: $item }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_INVENTORY = gql`\r\n  mutation ($id: UUID!, $item: InventoryPatch!) {\r\n    updateInventoryById(input: { id: $id, inventoryPatch: $item }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_INVENTORY = gql`\r\n  mutation ($id: UUID!) {\r\n    deleteInventoryById(input: { id: $id }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_ORDER = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $awbNumber: String\r\n    $comments: String\r\n    $orderStatus: String\r\n    $paymentStatus: String\r\n  ) {\r\n    updateOrderById(\r\n      input: {\r\n        orderPatch: {\r\n          awbNumber: $awbNumber\r\n          comments: $comments\r\n          orderStatus: $orderStatus\r\n          paymentStatus: $paymentStatus\r\n        }\r\n        id: $id\r\n      }\r\n    ) {\r\n      order {\r\n        id\r\n        paymentStatus\r\n        awbNumber\r\n        paymentMode\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_APPOINTMENT_DATE = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $createdAt: Datetime!\r\n    $updatedAt: Datetime!\r\n    $isActive: Boolean\r\n    $date: Datetime\r\n    $startDate: Date\r\n  ) {\r\n    createAppointmentDate(\r\n      input: {\r\n        appointmentDate: {\r\n          id: $id\r\n          createdAt: $createdAt\r\n          updatedAt: $updatedAt\r\n          startDateTime: $date\r\n          endDateTime: $date\r\n          isActive: $isActive\r\n          startDate: $startDate\r\n          endDate: $startDate\r\n        }\r\n      }\r\n    ) {\r\n      appointmentDate {\r\n        createdAt\r\n        createdBy\r\n        isActive\r\n        updatedBy\r\n        startDateTime\r\n        id\r\n        endDateTime\r\n        isUnavailable\r\n        nodeId\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_APPOINTMENT_TIME = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $createdAt: Datetime!\r\n    $startDateTime: Datetime\r\n    $endDateTime: Datetime\r\n    $appointmentDateId: UUID\r\n    $updatedAt: Datetime!\r\n    $startTime: Time\r\n    $endTime: Time\r\n    $appointmentTypeId : Int!\r\n  ) {\r\n    createAppointmentDateTimeSlot(\r\n      input: {\r\n        appointmentDateTimeSlot: {\r\n          id: $id\r\n          createdAt: $createdAt\r\n          updatedAt: $updatedAt\r\n          endDateTime: $endDateTime\r\n          startDateTime: $startDateTime\r\n          isActive: true\r\n          appointmentDateId: $appointmentDateId\r\n          startTime: $startTime\r\n          endTime: $endTime\r\n          appointmentTypeId : $appointmentTypeId\r\n        }\r\n      }\r\n    ) {\r\n      appointmentDateByAppointmentDateId {\r\n        id\r\n        isActive\r\n        startDateTime\r\n        endDateTime\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_APPOINTMENT_TIME = gql`\r\n  mutation MyMutation($id: UUID!) {\r\n    deleteAppointmentDateTimeSlotById(input: { id: $id }) {\r\n      appointmentDateByAppointmentDateId {\r\n        id\r\n        isActive\r\n        startDate\r\n        endDate\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst DELETE_APPOINTMENT_DATE = gql`\r\n  mutation MyMutation($id: UUID!) {\r\n    deleteAppointmentDateById(input: { id: $id }) {\r\n      appointmentDate {\r\n        id\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  CREATE_HOLIDAY,\r\n  UPDATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  CREATE_WAREHOUSE,\r\n  UPDATE_WAREHOUSE,\r\n  DELETE_WAREHOUSE,\r\n  CREATE_INVENTORY,\r\n  UPDATE_INVENTORY,\r\n  DELETE_INVENTORY,\r\n  UPDATE_ORDER,\r\n  CREATE_APPOINTMENT_DATE,\r\n  CREATE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_DATE,\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst HolidayModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Holiday-Modal\"}\r\n    >\r\n      <DialogTitle disableTypography className={classes.root}>\r\n        <Typography variant=\"h6\">{`${props.type} Holiday`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Holiday\"}\r\n              name=\"holiday\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.holiday}\r\n              onChange={props.editItem}\r\n            />\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                className={classes.inputField}\r\n                label={\"Date\"}\r\n                name=\"date\"\r\n                fullWidth\r\n                inputVariant=\"outlined\"\r\n                value={props.item.date}\r\n                onChange={(_, value) => props.editItem(value, \"date\")}\r\n                format={\"yyyy-MM-dd\"}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default HolidayModal;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  CREATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  UPDATE_HOLIDAY,\r\n} from \"../../graphql/mutation\";\r\nimport { HOLIDAYLIST } from \"../../graphql/query\";\r\nimport HolidayModal from \"./HolidayModal\";\r\nimport { AlertContext } from \"../../context\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport const HolidayManager = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    HOLIDAYLIST,\r\n    {\r\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\r\n    }\r\n  );\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({ holiday: \"\", date: null });\r\n\r\n  const editItem = (event, type) => {\r\n    var name, value;\r\n    if (type == \"date\") {\r\n      name = type;\r\n      value = event;\r\n    } else {\r\n      name = event.target.name;\r\n      value = event.target.value;\r\n    }\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n    setItem({ holiday: \"\", date: null });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (type == \"Edit\") {\r\n      var id = item.id;\r\n      delete item.id;\r\n      delete item.createdAt;\r\n      delete item.updatedAt;\r\n      delete item.__typename;\r\n      item[\"updatedAt\"] = new Date();\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_HOLIDAY,\r\n          variables: {\r\n            id,\r\n            item,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type == \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_HOLIDAY,\r\n          variables: {\r\n            item,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type == \"Delete\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_HOLIDAY,\r\n          variables: {\r\n            id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    // console.log(file);\r\n    axios\r\n      .post(API_URL + \"/addholidays\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully added holidays!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Holiday Manager</Typography>\r\n\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Holidays\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href = \"/sample/holidays.csv\";\r\n            a.setAttribute(\"download\", \"holidays.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Holiday\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Holiday</TableCell>\r\n                <TableCell align={\"center\"}>Date</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allHolidayManagers?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>No Holidays found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allHolidayManagers?.nodes.length > 0 &&\r\n                data?.allHolidayManagers?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.holiday}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.date, \"YYYY-MM-DD\").format(\"MMM DD,YYYY\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={5}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allHolidayManagers?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <HolidayModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { VALIDATEGENERATEDSKU, WAREHOUSELIST } from \"../../graphql/query\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst InventoryModal = (props) => {\r\n  const classes = useStyles();\r\n  const { loading, data } = useQuery(WAREHOUSELIST);\r\n\r\n  const client = useApolloClient();\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const validateGeneratedSku = (generatedSku) => {\r\n    client\r\n      .mutate({\r\n        mutation: VALIDATEGENERATEDSKU,\r\n        variables: { generatedSku },\r\n      })\r\n      .then((res) => {\r\n        if (res?.data?.allTransSkuLists?.nodes?.length === 0) {\r\n          setError(\"Tag No doesn't exists!\");\r\n        } else {\r\n          setError(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Holiday-Modal\"}\r\n    >\r\n      <DialogTitle disableTypography className={classes.root}>\r\n        <Typography variant=\"h6\">{`${props.type} Inventory`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              required\r\n              label={\"Tag No\"}\r\n              name=\"generatedSku\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.generatedSku}\r\n              onChange={props.editItem}\r\n              error={Boolean(error)}\r\n              helperText={error}\r\n              onBlur={() => validateGeneratedSku(props.item.generatedSku)}\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              required\r\n              type={\"Number\"}\r\n              label={\"Quantity\"}\r\n              name=\"numberOfItems\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.numberOfItems}\r\n              onChange={props.editItem}\r\n            />\r\n            <Autocomplete\r\n              loading={loading}\r\n              options={data?.allWarehouses?.nodes}\r\n              getOptionSelected={(option, value) => option.name === value.name}\r\n              getOptionLabel={(option) => option.name}\r\n              value={props.item.warehouse}\r\n              onChange={props.editItem}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Warehouse\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    ...params.InputProps,\r\n                    endAdornment: (\r\n                      <React.Fragment>\r\n                        {loading ? (\r\n                          <CircularProgress color=\"inherit\" size={20} />\r\n                        ) : null}\r\n                        {params.InputProps.endAdornment}\r\n                      </React.Fragment>\r\n                    ),\r\n                  }}\r\n                />\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default InventoryModal;\r\n","import React from \"react\";\r\nimport {\r\n  Badge,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  CREATE_INVENTORY,\r\n  DELETE_INVENTORY,\r\n  UPDATE_INVENTORY,\r\n} from \"../../graphql/mutation\";\r\nimport { INVENTORYLIST, STOCKSTATUS } from \"../../graphql/query\";\r\nimport InventoryModal from \"./InventoryModal\";\r\nimport { AlertContext } from \"../../context\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport moment from \"moment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  iconButton: {\r\n    margin: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  icon: {\r\n    padding: 0,\r\n    \"&:hover\": {\r\n      backgroundColor: \"inherit\",\r\n    },\r\n  },\r\n  searchInput: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      borderRadius: 8,\r\n    },\r\n  },\r\n}));\r\n\r\nconst StockStatus = (props) => {\r\n  const classes = useStyles();\r\n  const { data } = useQuery(STOCKSTATUS);\r\n  return (\r\n    <>\r\n      {data &&\r\n        data.allWarehouses.nodes.length > 0 &&\r\n        data.allWarehouses.nodes.map((item, index) => (\r\n          <Badge\r\n            badgeContent={\r\n              item?.inventoriesByWarehouseId?.aggregates?.sum?.numberOfItems\r\n            }\r\n            max={99999999}\r\n            color={\"error\"}\r\n            key={index}\r\n            component=\"div\"\r\n            className={classes.iconButton}\r\n            overlap=\"circle\"\r\n          >\r\n            <IconButton\r\n              disableRipple\r\n              className={classes.icon}\r\n              onClick={() => {\r\n                props.setWarehouse(item?.name);\r\n              }}\r\n            >\r\n              <StoreIcon\r\n                style={{ fontSize: 35 }}\r\n                color={item?.name === props.warehouse ? \"secondary\" : \"default\"}\r\n              />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle2\">{item?.name}</Typography>\r\n          </Badge>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const Inventory = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [search, setSearch] = React.useState(null);\r\n  const [warehouse, setWarehouse] = React.useState(null);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    INVENTORYLIST,\r\n    {\r\n      variables: {\r\n        first: rowsPerPage,\r\n        offset: page * rowsPerPage,\r\n        filter: {\r\n          [\"generatedSku\"]: search ? { includesInsensitive: search } : null,\r\n          warehouseByWarehouseId: {\r\n            name: {\r\n              includesInsensitive: warehouse,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }\r\n  );\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({\r\n    generatedSku: \"\",\r\n    numberOfItems: \"\",\r\n    warehouse: { id: \"\", name: \"\" },\r\n  });\r\n\r\n  const editItem = (event, newValue) => {\r\n    var name, value;\r\n    if (newValue) {\r\n      console.log(newValue);\r\n      name = \"warehouse\";\r\n      value = newValue;\r\n    } else {\r\n      name = event.target.name;\r\n      value = event.target.value;\r\n    }\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (type === \"Edit\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_INVENTORY,\r\n          variables: {\r\n            id,\r\n            item: {\r\n              generatedSku: item.generatedSku,\r\n              numberOfItems: parseInt(item.numberOfItems),\r\n              warehouseId: item.warehouse.id,\r\n              updatedAt: new Date(),\r\n            },\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_INVENTORY,\r\n          variables: {\r\n            item: {\r\n              id: uuid(),\r\n              generatedSku: item.generatedSku,\r\n              numberOfItems: parseInt(item.numberOfItems),\r\n              warehouseId: item.warehouse.id,\r\n            },\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Delete\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_INVENTORY,\r\n          variables: {\r\n            id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    console.log(file);\r\n    axios\r\n      .post(API_URL + \"/addinventories\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: res.data.message || \"Successfully uploaded!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Inventory</Typography>\r\n\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Inventory\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href = \"/sample/inventory.csv\";\r\n            a.setAttribute(\"download\", \"inventory.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n            setItem({\r\n              generatedSku: \"\",\r\n              numberOfItems: \"\",\r\n              warehouse: { id: \"\", name: \"\" },\r\n            });\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Inventory\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n        <TextField\r\n          className={classes.searchInput}\r\n          name=\"tagno\"\r\n          placeholder=\"Search Tag No.\"\r\n          size=\"medium\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n      >\r\n        <StockStatus warehouse={warehouse} setWarehouse={setWarehouse} />\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Tag No</TableCell>\r\n                <TableCell align={\"center\"}>Quantity</TableCell>\r\n                <TableCell align={\"center\"}>Warehouse</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || networkStatus === NetworkStatus.refetch) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allInventories?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>No items in inventory!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allInventories?.nodes.length > 0 &&\r\n                data?.allInventories?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.generatedSku}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.numberOfItems}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.warehouse.name}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={6}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allInventories?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <InventoryModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst buildGradient = (start, end) =>\r\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\r\n\r\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\r\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\r\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\r\nconst green = buildGradient(colors.green[400], colors.green[600]);\r\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\r\nconst red = buildGradient(colors.red[500], colors.red[700]);\r\n\r\nexport default {\r\n  grey,\r\n  blue,\r\n  indigo,\r\n  green,\r\n  orange,\r\n  red\r\n};\r\n","/* eslint-disable no-unused-vars */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport gradients from '../../../../utils/gradients';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { NetworkContext } from '../../../../context/NetworkContext';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { GlobalContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Divider,\r\n  Link,\r\n  Avatar\r\n} from '@material-ui/core';\r\nvar validate = require(\"validate.js\");\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n   \r\n  },\r\n  card: {\r\n    maxWidth: '100%',\r\n    overflow: 'unset',\r\n    display: 'flex',\r\n    position: 'relative',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      flexBasis: '50%',\r\n      width: '50%'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(8, 4, 8, 4)\r\n  },\r\n  media: {\r\n    borderTopRightRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    color: theme.palette.white,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  icon: {\r\n    backgroundImage: gradients.green,\r\n    color: theme.palette.white,\r\n    borderRadius: theme.shape.borderRadius,\r\n    padding: theme.spacing(1),\r\n    position: 'absolute',\r\n    top: -32,\r\n    left: theme.spacing(3),\r\n    height: 64,\r\n    width: 64,\r\n    fontSize: 32\r\n  },\r\n  loginForm: {\r\n\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  person: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fields: {\r\n    margin: theme.spacing(-1),\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  submitButton: {\r\n    marginTop: theme.spacing(2),\r\n    width: '100%'\r\n  }\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst LoginForm = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n  const [showmessage, setShowmessage] = React.useState(\"\");\r\n  const [iserror, setIserror] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n   const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if(formState.isValid)\r\n    {\r\n      //alert(JSON.stringify(formState.values))\r\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\r\n   \r\n   if(signinobj.statuscode === 200)\r\n   {\r\n    localStorage.setItem('accesstoken', signinobj.accessToken);\r\n\r\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\r\n    let pages = [];\r\n    let pagepermissions = [];\r\n    pageaccess.pages.forEach(element => {\r\n      pages.push(element.pageurl)\r\n      // pagepermissions[element.pageurl] = {\r\n      //   isread : element.is_view,\r\n      //   iswrite : element.is_write\r\n      // }\r\n      if(element.is_write)\r\n      {\r\n        pagepermissions.push(element.pageurl)\r\n      }\r\n    });\r\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\r\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\r\n\r\n    localStorage.setItem('accesspages', pages);\r\n    localStorage.setItem('pagepermissions', pagepermissions);\r\n\r\n    \r\n    props.history.push('/productlist')\r\n\r\n\r\n   }else\r\n   {\r\n\r\n    setShowmessage(signinobj.message)\r\n    setOpen(true);\r\n   }\r\n  \r\n    }else{\r\n      alert(\"has some error\")\r\n    }\r\n\r\n\r\n    //alert(JSON.stringify(formState))\r\n    // dispatch(login());\r\n    //alert(\"i am here\")\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.content}>\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"h3\"\r\n        >\r\n        Log in Page\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\">\r\n        {/* Sign in on the internal platform */}\r\n        </Typography>\r\n        \r\n        <form\r\n          {...rest}\r\n          className={clsx(classes.root, className)}\r\n          autoComplete={\"off\"}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className={classes.fields}>\r\n            <TextField\r\n              error={hasError('email')}\r\n              fullWidth\r\n              helperText={hasError('email') ? formState.errors.email[0] : null}\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              \r\n              onChange={handleChange}\r\n              value={formState.values.email || ''}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              error={hasError('password')}\r\n              fullWidth\r\n              helperText={\r\n                hasError('password') ? formState.errors.password[0] : null\r\n              }\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              type=\"password\"\r\n              value={formState.values.password || ''}\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <Button\r\n            className={classes.submitButton}\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n        Log in\r\n          </Button>\r\n          <Snackbar open={open} autoHideDuration={6000}\r\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\r\n          onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n             {showmessage}\r\n            </Alert>\r\n      </Snackbar>\r\n        </form>\r\n       \r\n      </CardContent>\r\n     \r\n    </Card>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport {Input} from '../../components/Input.js'\r\nimport Page from '../../components/Page'\r\n\r\nimport \"./Login.css\"\r\nimport { LoginForm } from './components';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Divider,\r\n  Link,\r\n  Avatar\r\n} from '@material-ui/core';\r\n\r\n\r\nexport class Login extends React.Component {\r\n\r\n   \r\n  render() {\r\n  return (\r\n    <Page\r\n    className='root'\r\n      title=\"Login\"\r\n    >\r\n    <LoginForm />\r\n        </Page>\r\n         \r\n  );\r\n}\r\n}\r\n\r\n\r\n  \r\n  export default (withRouter(Login));","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Manageadminusers = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n  const [masterroles, setMasterroles] = React.useState([]);\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    let roles = [];\r\n    taxcontent.roles.forEach((element) => {\r\n      roles.push(element.name);\r\n    });\r\n    let bodydata = {\r\n      username: taxcontent.username,\r\n      password: \"123456789\",\r\n      email: taxcontent.email,\r\n      roles: roles,\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\"/api/auth/signup\", {}, bodydata);\r\n    getmaster();\r\n  }\r\n  async function getmasterroles() {\r\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\r\n\r\n    setMasterroles(response.roles);\r\n\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    let response = await sendNetworkRequest(\"/getadminusers\", {}, {});\r\n    let adminusers = response.users;\r\n    let users = [];\r\n    adminusers.forEach((element) => {\r\n      let userobj = {};\r\n      userobj[\"id\"] = element.id;\r\n      userobj[\"username\"] = element.username;\r\n      userobj[\"password\"] = element.password;\r\n      userobj[\"email\"] = element.email;\r\n      userobj[\"mobile\"] = element.mobile;\r\n      userobj[\"status\"] = element.status === \"Active\" ? true : false;\r\n      let roles = [];\r\n      let rolesnames = [];\r\n\r\n      let userroles = element.user_roles;\r\n      userroles.forEach((userroleobj) => {\r\n        let roleobj = {};\r\n        roleobj[\"id\"] = userroleobj.master_role.id;\r\n        roleobj[\"name\"] = userroleobj.master_role.name;\r\n        roles.push(roleobj);\r\n        rolesnames.push(userroleobj.master_role.name);\r\n      });\r\n      userobj[\"roles\"] = roles;\r\n      userobj[\"rolenames\"] = rolesnames.join(\" , \");\r\n      users.push(userobj);\r\n    });\r\n\r\n    setFiltervalue(users);\r\n    setMastervalue(users);\r\n    //getmaster()\r\n  }\r\n  useEffect(() => {\r\n    getmasterroles();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs\r\n          url=\"userconfiguration\"\r\n          name=\"User Configuration\"\r\n        ></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          title={\"Admin Users\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          masters={masterroles}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Manageadminusers;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst SheduleModal = (props) => {\r\n  const classes = makeStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Schedule-Modal\"}\r\n    >\r\n      <DialogTitle\r\n        id=\"Shedule-Modal\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h6\">{`Add Schedule Date`}</Typography>\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            className={classes.inputField}\r\n            name=\"date\"\r\n            placeholder=\"Select a date\"\r\n            fullWidth\r\n            inputVariant=\"outlined\"\r\n            value={props.date ?? null}\r\n            onChange={(_, value) => props.editItem(value)}\r\n            minDate={new Date()}\r\n            format={\"yyyy-MM-dd\"}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          Save\r\n        </Button>\r\n\r\n        <Button onClick={props.onClose} variant=\"contained\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SheduleModal;\r\n","import {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Backdrop,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  datecard: {\r\n    backgroundColor: \"white\",\r\n    padding: \"15px\",\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0px 3px 6px #c1c1c1\",\r\n    position:\"relative\"\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  title: {\r\n    fontSize: \"22px\",\r\n    paddingTop: \"8px\",\r\n    paddingBottom: \"8px\",\r\n  },\r\n  available: {\r\n    fontSize: \"20px\",\r\n    paddingBottom: \"8px\",\r\n  },\r\n  availableTitle:{\r\n    fontSize: \"20px\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  time: {\r\n    fontSize: \"16px\",\r\n  },\r\n  notchedOutline:{\r\n   width:\"20%\"\r\n  },\r\n  day:{\r\n    fontSize:\"14px\"\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst SheduleModalShow = (props) => {\r\n  const classes = useStyles();\r\n  const {appointmentTypes} = props;\r\n\r\n  const getTime=(time)=>{\r\n    let x = time;\r\n    const [ hour,minute,second] = x.split(\":\");\r\n    let d = new Date();\r\n    d.setHours(hour);\r\n    d.setMinutes(minute);\r\n    d.setSeconds(second)\r\n    return moment(d).format('hh:mm a');\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.close}\r\n      maxWidth=\"md\"\r\n      fullWidth={true}\r\n    >\r\n       <Backdrop className={classes.backdrop} open={props.loading}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n      <DialogTitle id=\"Schedule-Modal\">\r\n      <div style={{display:\"flex\",justifyContent:\"space-between\",}}>\r\n           <Typography className={classes.availableTitle}>\r\n            Available Timing - ({moment(props.date).format(\"MMM\")} -\r\n          {moment(props.date).format(\"DD\")} -\r\n          {moment(props.date).format(\"YYYY\")})\r\n          </Typography>\r\n          <Select\r\n                className={classes.notchedOutline}\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                defaultValue={1}\r\n                id=\"demo-controlled-open-select\"\r\n                placeholder=\"Select Type\"\r\n                onChange={(e) => props.filterType(e.target.value)}\r\n           >\r\n         {appointmentTypes?.map((_)=>{\r\n          return(\r\n            <MenuItem value={_.id}>{_.name}</MenuItem>\r\n          )\r\n         })}\r\n        </Select>\r\n        </div>\r\n        <br/>\r\n        <Divider/>\r\n        \r\n      </DialogTitle>\r\n      <DialogContent>\r\n        \r\n        {props.timing && props.timing.length > 0 ? (\r\n          <Typography className={classes.available}>\r\n           \r\n          </Typography>\r\n        ) : (\r\n          <Typography className={classes.available}>No Data</Typography>\r\n        )}\r\n\r\n       <Grid container spacing={1}>\r\n          <Grid item xs={7} container spacing={1}>\r\n          {props.timing &&\r\n          props.timing.length > 0 &&\r\n          props.timing.map((val) => {\r\n            return (  \r\n              <Grid item xs={6}>\r\n                <div\r\n                  className={\r\n                    classes.datecard\r\n                  }\r\n                >\r\n                  <div  style={{ position: 'absolute',\r\n                    right: '5px',\r\n                    top: '30px',}}>\r\n                      <IconButton  onClick={() => props.deleteTime(val.id)}>\r\n                         <DeleteOutline style={{color:\"red\"}}/>\r\n                      </IconButton>\r\n                  </div>\r\n                \r\n\r\n                <div style={{paddingTop:\"20px\"}}>\r\n                  \r\n                 <Typography className={classes.day}>\r\n                  {`Start Time : ${getTime(val?.startTime)}`}\r\n                  </Typography>\r\n                  <Typography className={classes.day}>\r\n                  {`End Time : ${getTime(val?.endTime)}`}\r\n                  </Typography>\r\n                  \r\n                </div>\r\n                 \r\n                </div>       \r\n              </Grid>              \r\n            );\r\n          })}\r\n          </Grid>\r\n          <Grid item xs={1} style={{display: 'flex',\r\n              justifyContent: 'center',}}>\r\n            <Divider variant=\"vertical\"/>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n          <>\r\n            {\" \"}\r\n            <Typography className={classes.available}>Start Time :</Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <TimePicker\r\n                className={classes.inputField}\r\n                name=\"startTime\"\r\n                placeholder=\"Select Start Time\"\r\n                inputVariant=\"outlined\"\r\n                value={props?.timeValue?.startTime ?? null}\r\n                fullWidth\r\n                onChange={(value) => props.handleTimeValue(value, \"startTime\")}\r\n                minDate={new Date()}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n            <Typography className={classes.available}>End Time :</Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <TimePicker\r\n                className={classes.inputField}\r\n                name=\"endTime\"\r\n                placeholder=\"Select End Time\"\r\n                inputVariant=\"outlined\"\r\n                fullWidth\r\n                value={props?.timeValue?.endTime ?? null}\r\n                onChange={(value) => props.handleTimeValue(value, \"endTime\")}\r\n                minDate={new Date()}\r\n              />\r\n            </MuiPickersUtilsProvider>{\" \"}\r\n            {/* <Typography className={classes.available}>Type :</Typography>\r\n            <Select\r\n               className={classes.inputField}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                placeholder=\"Select Type\"\r\n                onChange={(e) => props.handleTimeValue(e.target.value, \"type\")}\r\n             >\r\n            {appointmentTypes?.map((_)=>{\r\n              return(\r\n                <MenuItem value={_.id}>{_.name}</MenuItem>\r\n              )\r\n             })}\r\n             </Select> */}\r\n\r\n                     <Button\r\n                      onClick={() => props.handleSubmitTime(props.appointmentDateId,props.date,props.endDate)}\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                     >\r\n                      Add Time\r\n                    </Button>\r\n          </>\r\n      \r\n          </Grid>\r\n        </Grid>\r\n\r\n       \r\n        <br />\r\n        <Divider />\r\n        <br />\r\n        \r\n      </DialogContent>\r\n      <DialogActions>\r\n  \r\n          {/* <Button\r\n            onClick={() => props.handleSubmitTime(props.appointmentDateId)}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Submit Time\r\n          </Button> */}\r\n        <Button onClick={props.close} variant=\"contained\">\r\n          {\" \"}\r\n          Close\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => props.deleteDate(props.appointmentDateId)}\r\n        >\r\n          Delete Date\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SheduleModalShow;\r\n","import {\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Tooltip,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Backdrop,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport uuid from \"uuid/v1\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { AlertContext } from \"../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport SheduleModal from \"./shedulemodal\";\r\nimport SheduleModalShow from \"./shedulemodalshow\";\r\nimport { ALL_APPOINTMENTS_DATE,APPOINTMENTS_TYPE,ALL_APPOINTMENTS_TIMESLOT,FILTER_APPOINTEMENTS ,CHECK_APPOINTMENT,CHECK_TIMESLOT} from \"../../graphql/query\";\r\nimport {\r\n  CREATE_APPOINTMENT_DATE,\r\n  CREATE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_DATE,\r\n} from \"../../graphql/mutation\";\r\nimport { TimePicker, MuiPickersUtilsProvider,DatePicker,KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\r\n\r\n\r\nexport const ManageShedule = (props) => {\r\n  // States\r\n  const [open, setOpen] = React.useState(false);\r\n  const [appointmentDateId, setAppointmentDateId] = React.useState(null);\r\n  const [type, setType] = React.useState();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [modalloading, setModalLoading] = React.useState(false);\r\n  const [date, setDate] = React.useState(new Date());\r\n  const [appointmentDate, setAppointmentDate] = useState([]);\r\n  const [appointmentTypes, setAppointmentTypes] = useState([]);\r\n  const [appointmentSlots, setAppointmentSlots] = useState([]);\r\n  const [openAppointmentTime, setOpenAppointmentTime] = useState(false);\r\n  const [showTime, setShowTime] = useState(false);\r\n  const [timeValue, setTimeValue] = useState({\r\n    startTime: new Date(),\r\n    endTime: new Date(),\r\n    type: 1\r\n  });\r\n  const [filterDate, setFilterDate] = useState({\r\n    startTime: moment(new Date()).startOf('month').format(\"YYYY-MM-DD\"),\r\n    endTime: moment(new Date()).endOf('month').format(\"YYYY-MM-DD\"),\r\n    date: new Date()\r\n  });\r\n\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const useStyles = makeStyles((theme) => ({\r\n    datecard: {\r\n      backgroundColor: \"white\",\r\n      padding: \"12px\",\r\n      cursor: \"pointer\",\r\n      border: \"1px solid black\",\r\n      boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      width:\"140px\",\r\n      height:\"130px\",\r\n      margin:5,\r\n      \"&:hover\": {\r\n        borderTop: \"5px solid #3F51B5\",\r\n        boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      },\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n    calenderCard:{\r\n      display:\"flex\",flexWrap:\"wrap\",marginLeft:\"14px\"\r\n    },\r\n    inputField: {\r\n      marginBottom: theme.spacing(1),\r\n      \"& .MuiOutlinedInput-input\":{\r\n        padding: \"12.5px 14px\"\r\n      }\r\n    },\r\n    closedCard: {\r\n      backgroundColor: \"white\",\r\n      padding: \"12px\",\r\n      cursor: \"pointer\",\r\n      border: \"1px solid black\",\r\n      boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      width:\"140px\",\r\n      height:\"130px\",\r\n      margin:5,\r\n      \"&:hover\": {\r\n        borderTop: \"5px solid red\",\r\n        boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      },\r\n    },\r\n\r\n    date: {\r\n      fontSize: \"22px\",\r\n      padding: \"10px 0px\",\r\n    },\r\n    day: {\r\n      fontSize: \"14px\",\r\n    },\r\n  }));\r\n\r\n \r\n  // LifeCycles\r\n  useEffect(() => {\r\n    GetAllAppointmentTypes();\r\n    FilterDates(filterDate.startTime,filterDate.endTime)\r\n  }, []);\r\n\r\n  // Handle Funcs\r\n  const editItem = (value) => {\r\n    setDate(value);\r\n  };\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n  };\r\n  const handlemodalshow = (id) => {  \r\n    GetAllAppointment_TimeSlots(id,1)\r\n  };\r\n\r\n  const handleTimeValue = (value, name) => {\r\n    setTimeValue({ ...timeValue, [name]: value });\r\n  };\r\n\r\n  // Query Func\r\n  const GetAllAppointment = async () => {\r\n    setLoading(true)\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALL_APPOINTMENTS_DATE,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setAppointmentDate(res.data.allAppointmentDates.nodes);\r\n        setLoading(false)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const CheckAppointment = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CHECK_APPOINTMENT,\r\n        variables:{ startDate: moment(date).format('YYYY-MM-DD'), endDate: moment(date).format('YYYY-MM-DD')}\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then(async(res) => {\r\n        if(res?.data?.allAppointmentDates?.nodes.length > 0){\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: 'warning',\r\n            msg: \"Date already available!\",\r\n          });   \r\n        }\r\n        else{\r\n         await handleSave();\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const GetAllAppointment_TimeSlots = async (id,type) => {\r\n    setModalLoading(true)\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALL_APPOINTMENTS_TIMESLOT(id ? id : appointmentDateId,type).loc.source.body,\r\n      })\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n         setAppointmentSlots(res.data.allAppointmentDateTimeSlots.nodes)\r\n         setOpenAppointmentTime(true);\r\n         setAppointmentDateId(id);\r\n         setModalLoading(false)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const GetAllAppointmentTypes = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: APPOINTMENTS_TYPE,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n          setAppointmentTypes(res.data.allAppointmentTypeMasters.nodes)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleSave = async () => {  \r\n    setLoading(true)\r\n    await client\r\n      .mutate({\r\n        mutation: CREATE_APPOINTMENT_DATE,\r\n        variables: {\r\n          id: uuid(),\r\n          createdAt: new Date(),\r\n          updatedAt: new Date(),\r\n          date: date,\r\n          startDate: moment(date).format(\"YYYY-MM-DD\"),\r\n          isActive: true,\r\n        },\r\n      })\r\n      .then((res) => {         \r\n          FilterDates(filterDate.startTime,filterDate.endTime);\r\n          onClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const CheckTimeslot = async (id,date,endDate)=>{\r\n    await client.query({\r\n      query : CHECK_TIMESLOT,\r\n      variables:{\r\n        startTime: moment(timeValue.startTime).format(\"HH:mm\"),\r\n        endTime: moment(timeValue.endTime).format(\"HH:mm\"),\r\n      },\r\n      fetchPolicy:\"no-cache\"\r\n    }).then((res)=>{\r\n      if(res?.data?.allAppointmentDateTimeSlots?.nodes.length > 0){\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: 'warning',\r\n          msg: \"TimeSlot already available!\",\r\n        });   \r\n      }\r\n      else{\r\n        handleSubmitTime(id,date,endDate);\r\n      }\r\n    })\r\n    .catch((err)=>{\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  const handleSubmitTime = async (id,date,endDate) => {\r\n    if(timeValue.type !== ''){\r\n      setModalLoading(true)\r\n      await client\r\n      .mutate({\r\n        mutation: CREATE_APPOINTMENT_TIME,\r\n        variables: {\r\n          id: uuid(),\r\n          createdAt: new Date(),\r\n          updatedAt: new Date(),\r\n          startDateTime: new Date(date),\r\n          endDateTime: new Date(endDate) ,\r\n          appointmentTypeId: timeValue.type,\r\n          appointmentDateId: id,\r\n          startTime: moment(timeValue.startTime).format(\"HH:mm:ss\"),\r\n          endTime: moment(timeValue.endTime).format(\"HH:mm:ss\"),\r\n        },\r\n        fetchPolicy:\"no-cache\"\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          GetAllAppointment_TimeSlots(appointmentDateId,timeValue.type);\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully Updated!\",\r\n          });\r\n          setModalLoading(false)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n\r\n    setShowTime(!showTime);\r\n    }   \r\n  };\r\n  \r\n  const deleteTime = async (id) => {\r\n    setModalLoading(true)\r\n    await client\r\n      .mutate({\r\n        mutation: DELETE_APPOINTMENT_TIME,\r\n        variables: {\r\n          id: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          GetAllAppointment_TimeSlots(appointmentDateId,timeValue.type);\r\n          onClose();\r\n          setModalLoading(false)\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Deleted Successfully!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const deleteDate = async (id) => {\r\n    setOpenAppointmentTime(false);\r\n    await client\r\n      .mutate({\r\n        mutation: DELETE_APPOINTMENT_DATE,\r\n        variables: {\r\n          id: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          FilterDates(filterDate.startTime,filterDate.endTime)\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Deleted Successfully!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleDateChange= async (date) =>{\r\n    var start = moment(date).startOf('month').format(\"YYYY-MM-DD\");\r\n    var end = moment(date).endOf(\"month\").format(\"YYYY-MM-DD\");\r\n    setFilterDate({...filterDate,date:date,startTime:start,endTime:end}) \r\n    FilterDates(start,end)   \r\n  }\r\n\r\n  const FilterDates = async (start,end) =>{\r\n    setLoading(true)\r\n    await client\r\n    .query({\r\n      query: FILTER_APPOINTEMENTS,\r\n      variables:{\r\n        startDate:start,\r\n        endDate:end \r\n      },\r\n      fetchPolicy:'no-cache'\r\n    })\r\n    .then((res) => {\r\n      setAppointmentDate(res.data.allAppointmentDates.nodes);\r\n      setLoading(false)  \r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    console.log(file);\r\n    axios\r\n      .post(API_URL + \"/appointment/upload_schedule\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: res.data.message || \"Successfully uploaded!\",\r\n          });\r\n          FilterDates(filterDate.startTime,filterDate.endTime)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const FilterTimeSlotes=(type)=>{\r\n    GetAllAppointment_TimeSlots(appointmentDateId,type)\r\n    setTimeValue({...timeValue,type:type})\r\n  }\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Manage Schedule</Typography>\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Dates\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Warehouse\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Grid item xs={5}>\r\n        <Typography className={classes.available}>Month and Year :</Typography>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"MM/yyyy\"\r\n              margin=\"normal\"\r\n              views={['year', 'month']}\r\n              value={filterDate.date}\r\n              onChange={(date) => handleDateChange(date)}\r\n              style={{ marginTop: 0 }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          \r\n        </Grid>\r\n\r\n      </Grid>\r\n      <div className={classes.calenderCard}>\r\n     \r\n        {appointmentDate && appointmentDate.length > 0 ? (\r\n          appointmentDate.map((val) => {\r\n            return (\r\n              <Box  key={val.id}>\r\n                <div\r\n                  className={\r\n                    moment(\r\n                      moment(val.startDateTime).format(\"YYYY-MM-DD\")\r\n                    ).isSameOrAfter(\r\n                      moment(new Date()).format(\"YYYY-MM-DD\"),\r\n                      \"day\"\r\n                    )\r\n                      ? classes.datecard\r\n                      : classes.closedCard\r\n                  }\r\n                  onClick={() => {\r\n                    handlemodalshow(val.id);\r\n                  }}\r\n                >\r\n                  <Typography className={classes.day}>\r\n                    {moment(val.startDateTime).format(\"MMM\")}\r\n                  </Typography>\r\n                  <Typography className={classes.date}>\r\n                    {moment(val.startDateTime).format(\"DD\")}\r\n                  </Typography>\r\n                  <Typography className={classes.day}>\r\n                    {moment(val.startDateTime).format(\"YYYY\")}\r\n                  </Typography>\r\n                </div>\r\n                {appointmentDateId === val.id && openAppointmentTime && (\r\n                  <SheduleModalShow\r\n                    open={openAppointmentTime}\r\n                    date={val.startDateTime}\r\n                    endDate={val.endDateTime}\r\n                    appointmentDateId={appointmentDateId}\r\n                    timing={\r\n                      appointmentSlots ? appointmentSlots : []\r\n                    }\r\n                    close={() => setOpenAppointmentTime(false)}\r\n                    showTime={showTime}\r\n                    timeValue={timeValue}\r\n                    handleTimeValue={handleTimeValue}\r\n                    handleSubmitTime={CheckTimeslot}\r\n                    filterType={FilterTimeSlotes}\r\n                    deleteTime={deleteTime}\r\n                    deleteDate={deleteDate}\r\n                    appointmentTypes={appointmentTypes}\r\n                    loading={modalloading}\r\n                  />\r\n                )}\r\n              </Box>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No Data</p>\r\n        )}\r\n      </div>\r\n      <SheduleModal\r\n        open={open}\r\n        type={type}\r\n        date={date}\r\n        editItem={editItem}\r\n        handleSave={CheckAppointment}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\r\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n  const [filtercontent,setFiltercontent] = React.useState({\r\n    \"seacrchtext\" : props.fitltercontent.searchtext,\r\n    \"size\": props.fitltercontent.size,\r\n    \"offset\":props.fitltercontent.offset\r\n  })\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n   // alert(editcontent.searchcontent)\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\r\n\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n    props.onPagechange((newPage*rowsPerPage))\r\n  }\r\n\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n   \r\n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    props.onPagesizechange(parseInt(event.target.value, 10))\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> : null }\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                         {row[columnname.key]} \r\n                                       </Moment>:null } \r\n                                       {columnname.type == 8 ?  <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/customerdetails/'+row['id']}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>:null }                 \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.totalcount]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from './Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Manageusers = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masterroles, setMasterroles] = React.useState([])\r\n  const [totalcount, setTotalcount] = React.useState(0)\r\n\r\n  const [bodycontent, setBodycontent] = React.useState({\r\n    \"seacrchtext\" : '',\r\n    \"size\": 50,\r\n    \"offset\":0\r\n  })\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let roles = []\r\n    taxcontent.roles.forEach(element => {\r\n      roles.push(element.name)\r\n    })\r\n    let bodydata = { \r\n      username : taxcontent.username,\r\n      password : '123456789',\r\n      email: taxcontent.email,\r\n      roles : roles\r\n\r\n    }\r\n\r\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\r\n     getmaster()\r\n  }\r\n  async function getmasterroles()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\r\n  \r\n    \r\n    setMasterroles(response.roles) \r\n\r\n     getmaster(50,0)\r\n  }\r\n  function changeresult(filtercontent)\r\n  {\r\n    setBodycontent(filtercontent)\r\n  }\r\n  async function getmaster(size,offset,searchtext)\r\n  {\r\n   \r\n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\r\n    let adminusers = response.users.rows;\r\n    let users = []\r\n    setTotalcount(response.users.count)\r\n    adminusers.forEach(element => {\r\n      //   let userobj = {}\r\n      //   userobj['id'] = element.id;\r\n      //  // userobj['username'] = element.username;\r\n      //  // userobj['password'] = element.password;\r\n      //   userobj['email'] = element.email;\r\n      //   userobj['mobile'] = element.mobile;\r\n      //   userobj['status'] = element.status === 'Active' ? true : false;\r\n      //   let roles = []\r\n      //   let rolesnames = []\r\n\r\n      //   let userroles = element.user_roles;\r\n      //   userroles.forEach(userroleobj => {\r\n\r\n      //     let roleobj = {}\r\n      //     roleobj['id'] = userroleobj.master_role.id\r\n      //     roleobj['name'] = userroleobj.master_role.name\r\n      //     roles.push(roleobj)\r\n      //     rolesnames.push(userroleobj.master_role.name)\r\n      //   })\r\n      //   userobj['roles'] = roles\r\n      //   userobj['rolenames'] = rolesnames.join(' , ')\r\n        if(element.orders)\r\n        {\r\n          element['orders'] = element.orders.length\r\n        }else{\r\n          element['orders'] = 0\r\n        }\r\n        users.push(element)\r\n    });\r\n\r\n    setFiltervalue(users)\r\n    setMastervalue(users)\r\n    //getmaster()\r\n  }\r\n  useEffect(() => {\r\n    getmasterroles()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    //setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\r\n  }\r\n  async function changepageoffset(taxcontent)\r\n  {\r\n    setBodycontent({...bodycontent,offset: taxcontent})\r\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\r\n  }\r\n  async function changepagesize(taxcontent)\r\n  {\r\n    setBodycontent({...bodycontent,size: taxcontent})\r\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Manageusers;","import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { TableContainer ,IconButton,Grid,TextField,InputAdornment, Select, MenuItem,LinearProgress,Backdrop,CircularProgress } from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport moment from \"moment\";\r\nimport { SHOW_APPOINMENT_DETAILS,MUTATE_STATUS,APPOINTMENTS_TYPE } from \"../../graphql/query\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n  KeyboardTimePicker\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\n\r\nconst columns = [\r\n  { id: \"user_id\", label: \"Id\" },\r\n  { id: \"name\", label: \"Name\" },\r\n  { id: \"email\", label: \"Email\" },\r\n  { id: \"mobile\", label: \"Mobile\" },\r\n  { id: \"date\", label: \"Date\" },\r\n  // { id: \"location\", label: \"Location\" },\r\n  { id: \"StartTime\", label: \"Start Time\" },\r\n  { id: \"EndTime\", label: \"End Time\" },\r\n  { id: \"Type\", label: \"Type\" },\r\n  { id: \"Status\", label: \"Status\" },\r\n  { id: \"actions\", label: \"\" },\r\n];\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n    backgroundColor:\"white\"\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  title: {\r\n    color: \"black\",\r\n    fontSize: \"16px\",\r\n    padding: \"20px\",\r\n  },\r\n  select:{\r\n    \"& .MuiInputBase-root\":{\r\n      height:\"85%\"\r\n    }\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nlet filterData = {};\r\n\r\nexport const Manageappoinment = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [startDate, setStartDate] = React.useState(null);\r\n  const [endDate, setEndDate] = React.useState(null);\r\n  const [appointmentFilter, setAppointmentFilter] = React.useState({\r\n    ...filterData,\r\n    id: { isNull: false },\r\n  });\r\n  const [appointmentTypes, setAppointmentTypes] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = React.useState(\"\");\r\n  const [selectedType, setSelectedType] = React.useState(\"\");\r\n  const [orderBy, setOrderBy] = React.useState([\"CREATED_AT_DESC\"]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const { loading, data, error, networkStatus } = useQuery(SHOW_APPOINMENT_DETAILS, {\r\n    variables: {\r\n      limit: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      appointment_filter: { ...appointmentFilter },\r\n      order_by: orderBy,\r\n    },\r\n  });\r\n\r\n  React.useEffect(()=>{\r\n    GetAllAppointmentTypes();\r\n  },[])\r\n\r\n  const GetAllAppointmentTypes = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: APPOINTMENTS_TYPE,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n          setAppointmentTypes(res.data.allAppointmentTypeMasters.nodes)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  let rowData = data?.allAppointments?.nodes;\r\n\r\n  const handleDateChange = (date, value) => {\r\n    if (value === \"start\") {\r\n      setStartDate(date);\r\n    }\r\n    if (value === \"end\") {\r\n      if (date > startDate && startDate) {\r\n        setEndDate(date);\r\n        setAppointmentFilter({\r\n          ...appointmentFilter,\r\n          appointmentDateTimeSlotBySlotId: {\r\n            appointmentDateByAppointmentDateId: {\r\n              startDate: { greaterThanOrEqualTo: moment(startDate).format(\"YYYY-MM-DD\"),lessThanOrEqualTo: moment(date).format(\"YYYY-MM-DD\")},\r\n              endDate: { greaterThanOrEqualTo: moment(startDate).format(\"YYYY-MM-DD\"), lessThanOrEqualTo: moment(date).format(\"YYYY-MM-DD\")}\r\n            }\r\n          },   \r\n        });\r\n      } else alert(\"the To date must be higher than from\");\r\n    }\r\n  };\r\n\r\n  const ActionIcon = (props) => {\r\n    return (\r\n      <>\r\n        <IconButton\r\n          onClick={() => {\r\n            window.open(`appointmentdetails/${props.id}`);\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleSelect = async (value,id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: MUTATE_STATUS,\r\n        variables: { id: id,status:value },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  function tConvert(time) {\r\n    // Check correct time format and split into components\r\n    time = time\r\n      .toString()\r\n      .match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      // If time format correct\r\n      time = time.slice(1); // Remove full string match value\r\n      time[5] = +time[0] < 12 ? \"AM\" : \"PM\"; // Set AM/PM\r\n      time[0] = +time[0] % 12 || 12; // Adjust hours\r\n    }\r\n    return time.join(\"\"); // return adjusted time or original string\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n             \r\n        <Typography className={classes.title}>Manage Appointment</Typography>\r\n        <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Grid container item xs={3}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            placeholder=\"Search by name, email, phone\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={(event) => {\r\n              setAppointmentFilter({\r\n                  ...appointmentFilter,\r\n                  or: [ {mobile: { includesInsensitive: event.target.value }} , {customerName: { includesInsensitive: event.target.value }}, {email: { includesInsensitive: event.target.value } }]\r\n              });\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          label=\"Start Date\"\r\n          value={startDate}\r\n          onChange={(date) => handleDateChange(date, \"start\")}\r\n          style={{ marginTop: 0 }}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n          autoOk\r\n          variant=\"inline\"\r\n          inputVariant=\"outlined\"\r\n        />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          label=\"End Date\"\r\n          value={endDate}\r\n          onChange={(date) => handleDateChange(date, \"end\")}\r\n          style={{ marginTop: 0 }}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n          autoOk\r\n          variant=\"inline\"\r\n          inputVariant=\"outlined\"\r\n        />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n        <TextField \r\n        fullWidth\r\n        variant=\"outlined\"\r\n        select\r\n        label=\"Status\"\r\n        value={selectedStatus}\r\n        onChange={(event) => {\r\n          setSelectedStatus(event.target.value);\r\n          setAppointmentFilter({\r\n            ...appointmentFilter,\r\n            status: {equalTo: event.target.value}\r\n          })\r\n        }}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n              {selectedStatus !== \"\" && (\r\n                <CancelOutlinedIcon\r\n                  onClick={(event) => {\r\n                    setSelectedStatus(\"\");\r\n                    delete appointmentFilter.status;\r\n                    setAppointmentFilter({ ...appointmentFilter });\r\n                  }}\r\n                />\r\n              )}\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        >\r\n                          <MenuItem value=\"In-Progress\">In-Progress</MenuItem>\r\n                          <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                          <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                          <MenuItem value=\"Submitted\">Submitted</MenuItem>\r\n                          <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n        <TextField \r\n        fullWidth\r\n        variant=\"outlined\"\r\n        select\r\n        label=\"Type\"\r\n        value={selectedType}\r\n        onChange={(event) => {\r\n          setSelectedType(event.target.value);\r\n          setAppointmentFilter({\r\n            ...appointmentFilter,\r\n            appointmentTypeId: {equalTo: event.target.value}\r\n          })\r\n        }}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n              {selectedType !== \"\" && (\r\n                <CancelOutlinedIcon\r\n                  onClick={(event) => {\r\n                    setSelectedType(\"\");\r\n                    delete appointmentFilter.appointmentTypeId;\r\n                    setAppointmentFilter({ ...appointmentFilter });\r\n                  }}\r\n                />\r\n              )}\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        >\r\n                            {appointmentTypes?.map((_)=>{\r\n          return(\r\n            <MenuItem value={_.id}>{_.name}</MenuItem>\r\n          )\r\n         })}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n        <TableContainer component={Paper}>\r\n        <Table      \r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((headCell) => (\r\n                <TableCell\r\n                  key={headCell.id}\r\n                  style={{ whiteSpace: \"nowrap\" }}\r\n                  align={headCell.numeric ? \"right\" : \"left\"}\r\n                  padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n                >\r\n                  {headCell.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rowData &&\r\n                rowData.length > 0 ?\r\n                rowData.map((row, index) => (\r\n                    <TableRow key={row.id}>\r\n                      <TableCell align=\"left\">{row?.id ?? \"\"}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.customerName ?? \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row?.email ?? \"\"}</TableCell>\r\n                      <TableCell align=\"left\">{row?.mobile ?? \"\"}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.appointmentDateTimeSlotBySlotId?.startDateTime\r\n                          ? moment(\r\n                              row?.appointmentDateTimeSlotBySlotId\r\n                                ?.startDateTime\r\n                            ).format(\"Do MMM YYYY\")\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      {/* <TableCell align=\"left\">\r\n                        {row?.storeLocationByLocationId?.name ?? \"\"}\r\n                      </TableCell> */}\r\n                      <TableCell align=\"left\">\r\n                        {row?.appointmentDateTimeSlotBySlotId?.startTime\r\n                          ? tConvert(\r\n                              row?.appointmentDateTimeSlotBySlotId?.startTime\r\n                            )\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.appointmentDateTimeSlotBySlotId?.endTime\r\n                          ? tConvert(\r\n                              row?.appointmentDateTimeSlotBySlotId?.endTime\r\n                            )\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.type?.name ?? \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.status ?? \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <ActionIcon id={row.id}/>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n              : <p style={{position:'absolute',right:\"50%\"}}>{\"No Data\"}</p>}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 15, 20, 25, 50, 100]}\r\n                count={data?.allAppointments?.totalCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                onPageChange={() => {}}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        </TableContainer>\r\n        \r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { TextField, Grid, Chip } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmarkup(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [markup, setMarkup] = React.useState({});\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(markup, props.refetch);\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setMarkup({ ...markup, [type]: value });\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setMarkup({\r\n      ...markup,\r\n      [type]: e.target.value,\r\n    });\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Add Markup Price For {props.material}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"category\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.category}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose category\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"producttype\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.producttype}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose product type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"materiallist\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.materiallist}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose Material type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"puritylist\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.puritylist}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose Purity type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Selling Price Min\"\r\n                fullWidth\r\n                onChange={handleinputChange(\"sellpricemin\")}\r\n                id=\"productvendorcode\"\r\n                name=\"Selling Price Min\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Selling Price Max\"\r\n                fullWidth\r\n                onChange={handleinputChange(\"sellpricemax\")}\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                fullWidth\r\n                disableClearable\r\n                getOptionLabel={(option) => option.name}\r\n                onChange={handleoptionChange(\"markuptype\")}\r\n                options={[\r\n                  { label: 1, name: \"Flat\" },\r\n                  { label: 2, name: \"Percentage\" },\r\n                ]}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Markup Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Markup Value \"\r\n                onChange={handleinputChange(\"markup\")}\r\n                fullWidth\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport Moment from \"react-moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from \"../../../components/ConformationAlert\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport {\r\n  DELETEMARKUPPRICE, DIAMONDMARKUP\r\n} from \"../../../graphql/query\";\r\nimport Addmarkup from \"./Addmarkup\";\r\n\r\nconst columns = [\r\n  { id: \"Component\", label: \"Components\" },\r\n  { id: \"Product Category\", label: \"product Category\" },\r\n  { id: \"Product Type\", label: \"Product Type\" },\r\n  { id: \"Selling Price Min\", label: \"Selling Price Min\" },\r\n  { id: \"Selling Price Max\", label: \"Selling Price Max\" },\r\n  { id: \"Markup Type\", label: \"Markup Type\" },\r\n  { id: \"Markup value\", label: \"Markup value\" },\r\n  { id: \"updatedAt\", label: \"updatedAt\" },\r\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\"></IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [editmarkup, setEditmarkup] = React.useState({});\r\n  const [goldpricelist, setGoldpricelist] = React.useState({});\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [deleteid, setDeleteid] = React.useState(\"\");\r\n  const [refetch, setRefetch] = React.useState(null);\r\n  const [isdelete, setIsdelete] = React.useState(false);\r\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n    setIsdelete(true);\r\n    let variables = {\r\n      elementId: deleteid,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: DELETEMARKUPPRICE, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n          // refetchval()\r\n        }\r\n      })\r\n      .catch((err) => { });\r\n    setIsconformation(false);\r\n  }\r\n  function handleDelete(diamondData, refetch) {\r\n    setDeleteid(diamondData.id);\r\n\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function updatemarkup(markupcontent, refetch) {\r\n    let product_type = markupcontent.producttype\r\n      ? markupcontent.producttype\r\n      : [];\r\n    let material_list = markupcontent.materiallist\r\n      ? markupcontent.materiallist\r\n      : [];\r\n    let purity_list = markupcontent.puritylist ? markupcontent.puritylist : [];\r\n\r\n    var bodydata = {};\r\n    bodydata[\"category\"] = markupcontent.category.name;\r\n    bodydata[\"producttype\"] = product_type;\r\n    bodydata[\"sellingPriceMin\"] = markupcontent.sellpricemin;\r\n    bodydata[\"sellingPriceMax\"] = markupcontent.sellpricemax;\r\n    bodydata[\"markuptype\"] = markupcontent.markuptype.label;\r\n    bodydata[\"material_list\"] = material_list;\r\n    bodydata[\"purity_list\"] = purity_list;\r\n    bodydata[\"markupValue\"] = markupcontent.markup;\r\n    bodydata[\"material\"] = pricecomponent;\r\n    console.log(\"XXXXXXXX\");\r\n    await sendNetworkRequest(\"/addmarkup\", {}, bodydata);\r\n    setOpen(false);\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    refetch();\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditmarkup({\r\n      ...editmarkup,\r\n      markupid: diamondData.id,\r\n      sellingPriceMin: diamondData.sellingPriceMin,\r\n      sellingPriceMax: diamondData.sellingPriceMax,\r\n      markupValue: diamondData.markupValue,\r\n      updatedAt: new Date(),\r\n    });\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {};\r\n\r\n    await sendNetworkRequest(\"/updatemarkup\", {}, editmarkup);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    refetch();\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditmarkup({ ...editmarkup, [type]: value });\r\n  };\r\n  const handlecomponentChange = (type) => (event, value) => {\r\n    setPriceomponent(value);\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setEditmarkup({\r\n      ...editmarkup,\r\n      [type]: e.target.value,\r\n    });\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n  };\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.cardcontent}>\r\n        <Grid\r\n          container\r\n          justify=\"left\"\r\n          alignItems=\"center\"\r\n          className={classes.cardroot}\r\n          spacing={4}\r\n        >\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"h6\">{\"Selling Price Markup Setup\"}</Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              className={classes.fixedTag}\r\n              defaultValue={pricecomponent}\r\n              options={[\"Diamond\", \"Gemstone\", \"Gold\", \"Making Charge\", \"All\"]}\r\n              onChange={handlecomponentChange(\"earringbacking\")}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    label={option}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Pricing Components\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  // error = {productCtx.error_message.earringbacking}\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              style={{ paddingRight: 16, paddingLeft: 16 }}\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={DIAMONDMARKUP}\r\n                onCompleted={(data) =>\r\n                  setPageCount(data.allPricingMarkups.totalCount)\r\n                }\r\n                variables={{ vendorCode: pricecomponent }}\r\n              >\r\n                {({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>;\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    setGoldpricelist(data);\r\n                    return (\r\n                      <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          refetch={refetch}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation}\r\n                        />\r\n                        {open ? (\r\n                          <Addmarkup\r\n                            isadd={open}\r\n                            material={pricecomponent}\r\n                            refetch={refetch}\r\n                            actionSave={updatemarkup}\r\n                            category={props.categories}\r\n                            producttype={props.producttypes}\r\n                            materiallist={props.materiallist}\r\n                            puritylist={props.puritylist}\r\n                            title={props.title}\r\n                            actionclose={handleClose}\r\n                          />\r\n                        ) : null}\r\n\r\n                        {data.allPricingMarkups.nodes.map((row, index) => (\r\n                          <>\r\n                            <TableRow key={row.category}>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.material}\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.category}\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.productType ? row.productType : \"All\"}\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.sellingPriceMin}\r\n                                    onChange={handleinputChange('sellingPriceMin')}\r\n\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPriceMin}{\" \"}\r\n                                </Typography>\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.sellingPriceMax}\r\n                                    onChange={handleinputChange('sellingPriceMax')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPriceMax}{\" \"}\r\n                                </Typography>\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"center\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? (\r\n                                  <Autocomplete\r\n                                    id=\"free-solo-2-demo\"\r\n                                    fullWidth\r\n                                    disableClearable\r\n                                    className={classes.fixedTag}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    onChange={handleoptionChange(\r\n                                      \"sellingPriceType\"\r\n                                    )}\r\n                                    options={[\r\n                                      { label: 1, name: \"Flat\" },\r\n                                      { label: 2, name: \"Percentage\" },\r\n                                    ]}\r\n                                    renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                        <Chip\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          label={option.name}\r\n                                          {...getTagProps({ index })}\r\n                                        />\r\n                                      ))\r\n                                    }\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label=\"Price Type\"\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        InputProps={{\r\n                                          ...params.InputProps,\r\n                                          readOnly: true,\r\n                                          type: \"search\",\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : (\r\n                                    <Typography className={classes.heading}>\r\n                                      {row.markupType === 1\r\n                                        ? \"Flat\"\r\n                                        : \"Percentage\"}{\" \"}\r\n                                    </Typography>\r\n                                  )}\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"left\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? (\r\n                                  <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value={editmarkup.markupValue}\r\n                                    onChange={handleinputChange(\"markupValue\")}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                  />\r\n                                ) : (\r\n                                    <Typography className={classes.heading}>\r\n                                      {row.markupValue}{\" \"}\r\n                                    </Typography>\r\n                                  )}\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"left\">\r\n                                <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {btnEdit.action && btnEdit.id == row.id\r\n                                    ? editmarkup.updatedAt\r\n                                    : row.updatedAt}\r\n                                </Moment>\r\n                              </TableCell>\r\n                              {btnEdit.action && btnEdit.id == row.id ? (\r\n                                <TableCell\r\n                                  style={{ width: 170 }}\r\n                                  align=\"center\"\r\n                                >\r\n                                  <Button\r\n                                    onClick={(e) => handleSave(row.id, refetch)}\r\n                                  >\r\n                                    <SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}>\r\n                                    <CancelIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                              ) : (\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ width: 170 }}\r\n                                  >\r\n                                    <Button onClick={(e) => handleEdit(row)}>\r\n                                      <EditIcon />\r\n                                    </Button>\r\n                                    <Button\r\n                                      onClick={(e) => handleDelete(row, refetch)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                          </>\r\n                        ))}\r\n                      </>\r\n                    );\r\n                  } else {\r\n                    return <div>{\"Fetch Products\"}</div>;\r\n                  }\r\n                }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import { Button, Chip, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DIAMONDPRICELIST, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <Query\r\n              query={DIAMONDPRICELIST}\r\n              onCompleted={data => setPageCount(data.allDiamondPriceSettings.totalCount)}\r\n              variables={{ \"vendorCode\": 'STYPA 010' }}>\r\n              {\r\n                ({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return <>\r\n                      {data.allDiamondPriceSettings.nodes.map((row, index) => (\r\n                        <TableRow key={row.diamondClarity}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.diamondClarity}\r\n\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.diamondColour}\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                variant=\"outlined\"\r\n                                margin=\"dense\"\r\n                                label=\"Cost Price\"\r\n                                fullWidth\r\n                                className={classes.helperinput}\r\n                                value={editdiamond.costPrice}\r\n                                id=\"productvendorcode\"\r\n                                name=\"Cost Price\"\r\n                              /> :\r\n                                <Typography className={classes.heading}>\r\n                                  {row.costPrice} </Typography>}\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                variant=\"outlined\"\r\n                                margin=\"dense\"\r\n                                label=\"Cost Price\"\r\n                                fullWidth\r\n                                className={classes.helperinput}\r\n                                value={editdiamond.sellingPrice}\r\n                                id=\"productvendorcode\"\r\n                                name=\"Cost Price\"\r\n                              /> :\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPrice} </Typography>}\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                id=\"free-solo-2-demo\"\r\n                                fullWidth\r\n                                disableClearable\r\n                                className={classes.fixedTag}\r\n                                getOptionLabel={option => option.name}\r\n                                options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                renderTags={(value, getTagProps) =>\r\n                                  value.map((option, index) => (\r\n                                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                  ))\r\n                                }\r\n                                renderInput={params => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    label=\"Price Type\"\r\n                                    margin=\"dense\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                  />\r\n                                )}\r\n                              /> : <Typography className={classes.heading}>\r\n                                  {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                          </TableCell>\r\n\r\n                          <TableCell align=\"left\">\r\n                            <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                              {row.updatedAt}\r\n                            </Moment>\r\n                          </TableCell>\r\n                          {\r\n                            btnEdit.action && btnEdit.id == row.id ?\r\n                              <TableCell style={{ width: 20 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                </Button>\r\n                              </TableCell> :\r\n                              <TableCell align=\"center\" style={{ width: 20 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                          }\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  }\r\n                  else {\r\n                    return <div>{\"Fetch Products\"}</div>\r\n                  }\r\n                }}\r\n            </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import {\r\n  Button, Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GEMPRICELIST, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n\r\n  function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <Query\r\n              query={GEMPRICELIST}\r\n              onCompleted={data => setPageCount(data.allGemstonePriceSettings.totalCount)}\r\n              variables={{ \"vendorCode\": 'STYPA 010' }}>\r\n              {\r\n                ({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return <>\r\n                      {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                        <TableRow key={row.gemstoneType}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.gemstoneType}\r\n\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.weightStart}\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{row.weightEnd}</TableCell>\r\n                          <TableCell align=\"left\">{row.price}</TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                id=\"free-solo-2-demo\"\r\n                                fullWidth\r\n                                disableClearable\r\n                                className={classes.fixedTag}\r\n                                getOptionLabel={option => option.name}\r\n                                options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                renderTags={(value, getTagProps) =>\r\n                                  value.map((option, index) => (\r\n                                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                  ))\r\n                                }\r\n                                renderInput={params => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    label=\"Price Type\"\r\n                                    margin=\"dense\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                  />\r\n                                )}\r\n                              /> : <Typography className={classes.heading}>\r\n                                  {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                          </TableCell>\r\n\r\n                          <TableCell align=\"left\">\r\n                            <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                              {row.updatedAt}\r\n                            </Moment>\r\n                          </TableCell>\r\n                          {\r\n                            btnEdit.action && btnEdit.id == row.id ?\r\n                              <TableCell style={{ width: 20 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                </Button>\r\n                              </TableCell> :\r\n                              <TableCell align=\"center\" style={{ width: 20 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                          }\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  }\r\n                  else {\r\n                    return <div>{\"Fetch Products\"}</div>\r\n                  }\r\n                }}\r\n            </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 20, 200, 500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import { Button } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MAKINGCHARGEPRICELIST, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n\r\n  function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <Query\r\n              query={MAKINGCHARGEPRICELIST}\r\n              onCompleted={data => setPageCount(data.allMakingChargeSettings.totalCount)}\r\n              variables={{ \"vendorCode\": 'STYPA 010' }}>\r\n              {\r\n                ({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return <>\r\n                      {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                        <TableRow key={row.material}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.material}\r\n\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.weightStart}\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{row.weightEnd}</TableCell>\r\n                          <TableCell align=\"left\">{row.purity}</TableCell>\r\n                          <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\r\n\r\n                          <TableCell align=\"left\">\r\n                            <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                              {row.updatedAt}\r\n                            </Moment>\r\n                          </TableCell>\r\n                          {\r\n                            btnEdit.action && btnEdit.id == row.id ?\r\n                              <TableCell style={{ width: 20 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                </Button>\r\n                              </TableCell> :\r\n                              <TableCell align=\"center\" style={{ width: 20 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                          }\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  }\r\n                  else {\r\n                    return <div>{\"Fetch Products\"}</div>\r\n                  }\r\n                }}\r\n            </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 100, 200, 500]}\r\n\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Product from \"./components/Product\";\r\nimport Diamonds from \"./components/Diamonds\";\r\nimport Gemstones from \"./components/Gemstones\";\r\nimport Makingcharge from \"./components/Makingcharge\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport {\r\n  VENDORLIST,\r\n  MASTERCATEGORY,\r\n  PRODUCTDIAMONDTYPES,\r\n} from \"../../graphql/query\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({}));\r\nexport const Markupprice = withRouter((props) => {\r\n  const [vendorcode, setVendorcode] = React.useState(0);\r\n  const [vendorlist, setVendorlist] = React.useState(0);\r\n  const [categorylist, setCategorylist] = React.useState([]);\r\n  const [producttypes, setProducttypes] = React.useState([]);\r\n  const [materiallist, setMateriallist] = React.useState([]);\r\n  const [puritylist, setPuritylist] = React.useState([]);\r\n  const [isadd, setIsadd] = React.useState(false);\r\n\r\n  const classes = useStyle();\r\n\r\n  const handlevendorchange = (type) => (event, value) => {\r\n    setVendorcode(value.shortCode);\r\n  };\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: {} }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes);\r\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes);\r\n        setMateriallist(fatchvalue.data.allMasterMaterials.nodes);\r\n        setPuritylist(fatchvalue.data.allMasterMetalsPurities.nodes);\r\n        // setVendorlist({\r\n        //   ...vendorlist,\r\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\r\n        // })\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {/* <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            Vendor Based Price List\r\n          </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      fullWidth\r\n                      disableClearable\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => option.name}\r\n                      options={vendorlist.vendors}\r\n                      onChange={handlevendorchange('vendor')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Product Materials\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n    </Grid> */}\r\n\r\n      <Grid item xs={12} sm={12}>\r\n        <Product\r\n          categories={categorylist}\r\n          producttypes={producttypes}\r\n          materiallist={materiallist}\r\n          puritylist={puritylist}\r\n          vendor={\"Gold\"}\r\n        />\r\n      </Grid>\r\n      {/* <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Gem Stone Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Gem Stone\"} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Gold Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Gold\"} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Making Charge Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Making Charge\"} />\r\n          </Grid> */}\r\n      {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Diamond Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Diamonds />\r\n    </Grid> */}\r\n\r\n      {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Gemstone Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones /> \r\n    </Grid> */}\r\n\r\n      {/* \r\n    <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge />\r\n    </Grid> */}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default withApollo(withRouter(Markupprice));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Masterattribute = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function Masterattribute(taxcontent) {\r\n    let response = await sendNetworkRequest(\r\n      \"/managemasterattributes\",\r\n      {},\r\n      taxcontent\r\n    );\r\n\r\n    //getmaster()\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERATTRIBUTES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes);\r\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs></Breadcrumbs>\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          title={\"Material List\"}\r\n          button_title=\"Add New\"\r\n          onCreate={Masterattribute}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Masterattribute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Mastercategories = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    alert(JSON.stringify(taxcontent));\r\n    // let response = await sendNetworkRequest(\r\n    //   \"/managecategories\",\r\n    //   {},\r\n    //   taxcontent\r\n    // );\r\n    // getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\r\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          prefix={data.prefix}\r\n          title={\"Master Category\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Mastercategories;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastercollections = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastercollections;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdesigns = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DESIGNMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamonds = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\r\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamondsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamondshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamondshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemsettings;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  useEffect(() => {\r\n   \r\n  }, [])\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemtypes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemtypes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergenders = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGENDER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergenders;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastermetalcolors = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n      alert(JSON.stringify(taxcontent))\r\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastermetalcolors;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masteroccassions = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterorderstatus = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs ></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterpaymentstatus = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterproducttypes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterproducttypes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterpurities = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterpurities;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Paper,Button,Grid,Typography, \r\n  FormControlLabel,\r\n  Checkbox,\r\n  Divider} from '@material-ui/core';\r\n\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst   Addpermissions=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n  const [permissions, setPermissions] = React.useState(props.permissions);\r\n\r\n  const handleClose = () => {\r\n    props.onClose()\r\n\r\n  };\r\n  const handleSave = () => {\r\n    //setOpen(false);\r\n    props.onSave(permissions, props.role_id)\r\n\r\n  };\r\n  const updateread = (permission_id,key) => (event) => {\r\n    var permissonobj = {}\r\n\r\n      if(permissions[permission_id])\r\n      {\r\n        permissonobj = permissions[permission_id];\r\n       \r\n      }\r\n      permissonobj[key] = event.target.checked\r\n    setPermissions({...permissions,[permission_id] :permissonobj})\r\n    //setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={props.isopen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          {props.pages.map((pagecontent, index) => (\r\n            <Grid container xs= {12} spacing={3}>\r\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\r\n\r\n               <Typography variant=\"h6\" component=\"h5\">\r\n               {pagecontent.displayname}\r\n              </Typography>\r\n              </Grid>\r\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\r\n                     onChange={updateread(pagecontent.id,'isview')}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"View\"\r\n              />\r\n               <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\r\n\r\n                  onChange={updateread(pagecontent.id,'iswrite')}\r\n\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Edit\"\r\n              />\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n          </DialogContentText>\r\n          </DialogContent>\r\n          <Divider />\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\r\n            Update \r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n       \r\n      </>\r\n  );\r\n}\r\nexport default withApollo(Addpermissions);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Addpermissions from \"../../components/Addpermissions/Addpermissions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Masterroles = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false);\r\n  const [masterpages, setMasterpages] = React.useState([]);\r\n  const [editroleid, setEditroleid] = React.useState(\"\");\r\n  const [editpermissons, setEditpermissions] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    let response = await sendNetworkRequest(\"/manageroles\", {}, taxcontent);\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPAGES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMasterpages(fatchvalue.data.allUniquepages.nodes);\r\n      })\r\n      .catch(console.error);\r\n\r\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\r\n    setMastervalue(response.roles);\r\n    setFiltervalue(response.roles);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n  async function showpermissions(rowcontent) {\r\n    let response = await sendNetworkRequest(\r\n      \"/getrolepermissions\",\r\n      {},\r\n      { role_id: rowcontent.id }\r\n    );\r\n    setEditpermissions(response.permissions);\r\n    setEditroleid(rowcontent.id);\r\n    setIsshowpermissions(true);\r\n    // alert(JSON.stringify(rowcontent))\r\n  }\r\n  async function updatepermissions(rowcontent) {\r\n    let bodydata = {\r\n      permissions: rowcontent,\r\n      role_id: editroleid,\r\n    };\r\n    console.log(JSON.stringify(bodydata));\r\n    setIsshowpermissions(false);\r\n    let response = await sendNetworkRequest(\"/managepermissions\", {}, bodydata);\r\n    getmaster();\r\n  }\r\n  function cancelpermissions(rowcontent) {\r\n    setIsshowpermissions(false);\r\n    // alert(JSON.stringify(rowcontent))\r\n  }\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs\r\n          url=\"userconfiguration\"\r\n          name=\"User Configuration\"\r\n        ></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {isshowpermissions ? (\r\n          <Addpermissions\r\n            role_id={editroleid}\r\n            isopen={isshowpermissions}\r\n            permissions={editpermissons}\r\n            pages={masterpages}\r\n            onClose={cancelpermissions}\r\n            onSave={updatepermissions}\r\n          />\r\n        ) : null}\r\n        <Mastercontent\r\n          title={\"Master Category\"}\r\n          button_title=\"Add New\"\r\n          onPermissionadd={showpermissions}\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Masterroles;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Masterscreens = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    let response = await sendNetworkRequest(\"/managepages\", {}, taxcontent);\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPAGES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allUniquepages.nodes);\r\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x?.name?.toLowerCase()\r\n        ? x?.name?.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs\r\n          url=\"userconfiguration\"\r\n          name=\"User Configuration\"\r\n        ></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          title={\"Master Screens\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Masterscreens;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstonecolors = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       \r\n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstones = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstoneshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\r\n    };\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstoneshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstyles = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: STYLEMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstyles;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterthemes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: THEMEMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterweights = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       \r\n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterweights;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Materialmaster = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERMATERIAL  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Materialmaster;","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  InputAdornment,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ORDERS } from \"./../../services/queries\";\r\nimport { PAYMENTSTATUSMASTER } from \"./../../graphql/query\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport moment from \"moment\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport { gql } from \"apollo-boost\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport ViewColumnIcon from \"@material-ui/icons/ViewColumn\";\r\n\r\nlet getAddress = (data) => {\r\n  if (!data) return \"\";\r\n  return (\r\n    data?.addressline1 +\r\n    \",\" +\r\n    data?.addressline2 +\r\n    \",\" +\r\n    data?.city +\r\n    \",\" +\r\n    data?.state +\r\n    \",\" +\r\n    data?.pincode\r\n  );\r\n};\r\n\r\nlet getGiftMessage = (data) => {\r\n  if (!data) return \"\";\r\n  return data?.message + \"  from:\" + data?.giftFrom + \"  to:\" + data?.giftTo;\r\n};\r\n\r\nlet getPaymentStatus = (data) => {\r\n  if (data?.paymentMode === \"COD\") {\r\n    return data.paymentStatus;\r\n  }\r\n  if (!data?.paymentResponse) return data.paymentStatus;\r\n  let payment_response = JSON.parse(data?.paymentResponse);\r\n  return (\r\n    <div>\r\n      <p style={{ margin: 0, padding: 0 }}>\r\n        {payment_response?.APTRANSACTIONID}\r\n      </p>\r\n      <p style={{ margin: 0, padding: 0 }}>\r\n        {payment_response?.MESSAGE ||\r\n          payment_response?.TRANSACTIONPAYMENTSTATUS}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet defaultColumns = {\r\n  \"Order ID\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"id\",\r\n  },\r\n  \"Order Date\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"order_date\",\r\n  },\r\n  \"Customer Name\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"customer_name\",\r\n  },\r\n  SKUs: { is_active: false, identifier: \"SKUs\" },\r\n  Email: { is_active: true, identifier: \"email\" },\r\n  \"Phone Number\": { is_active: true, identifier: \"phone_number\" },\r\n  \"Shipping Address\": { is_active: true, identifier: \"shipping_address\" },\r\n  \"Gift Message\": { is_active: false, identifier: \"gift_message\" },\r\n  \"Order Status\": { is_active: false, identifier: \"order_status\" },\r\n  \"Payment Mode\": { is_active: true, identifier: \"payment_mode\" },\r\n  \"Payment Status\": { is_active: true, identifier: \"payment_status\" },\r\n  \"Waybill No\": { is_active: false, identifier: \"waybill\" },\r\n  Comments: { is_active: false, identifier: \"comments\" },\r\n \r\n  Actions: {\r\n    is_active: true,\r\n    is_default: true,\r\n  },\r\n};\r\n\r\nconst ActionIcon = (props) => {\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => {\r\n          window.open(`orderdetails/${props.id}`);\r\n        }}\r\n      >\r\n        <VisibilityIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nlet filterData = {};\r\n\r\nexport const OrderList = withRouter((props) => {\r\n  \r\n  let user_id = props.location.pathname.split(\"/\")[2];\r\n  if (user_id) {\r\n    filterData = {\r\n      userProfileId: {\r\n        equalTo: user_id,\r\n      },\r\n    };\r\n  }\r\n  const [columnName, setColumnName] = React.useState(defaultColumns);\r\n  const [orderFilter, setOrderFilter] = React.useState({\r\n    ...filterData,\r\n    id: { isNull: false },\r\n  });\r\n  const [orderBy, setOrderBy] = React.useState([\"CREATED_AT_DESC\"]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [masterData, setMasterData] = React.useState({\r\n    orderMaster: [],\r\n    paymentMaster: [\r\n      { name: \"SUCCESS\" },\r\n      { name: \"FAIL\" },\r\n      { name: \"TRANSACTION CANCELLED\" },\r\n    ],\r\n  });\r\n  const [selectedStatus, setSelectedStatus] = React.useState({\r\n    orderStatus: \"\",\r\n    paymentStatus: \"\",\r\n  });\r\n  const [fromDate, setFromDate] = React.useState(null);\r\n  const [ToDate, setToDate] = React.useState(null);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDateChange = (date, value) => {\r\n    let createdAt = orderFilter?.createdAt;\r\n    if (value === \"from\") {\r\n      setFromDate(date);\r\n      setOrderFilter({\r\n        ...orderFilter,\r\n        createdAt: {\r\n          ...createdAt,\r\n          greaterThanOrEqualTo: moment(date).format(\"yyyy-MM-DD\"),\r\n        },\r\n      });\r\n    }\r\n    if (value === \"to\") {\r\n      if (date > fromDate) {\r\n        setToDate(date);\r\n        setOrderFilter({\r\n          ...orderFilter,\r\n          createdAt: {\r\n            ...createdAt,\r\n            lessThanOrEqualTo: moment(date).format(\"yyyy-MM-DD\"),\r\n          },\r\n        });\r\n      } else alert(\"the To date must be higher thean from\");\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  React.useEffect(() => {\r\n    client\r\n      .query({\r\n        query: gql`\r\n          ${PAYMENTSTATUSMASTER}\r\n        `,\r\n      })\r\n      .then(({ data: { allOrderStatusMasters, allPaymentStatusMasters } }) => {\r\n        setMasterData({\r\n          orderMaster: allOrderStatusMasters?.nodes || [],\r\n          paymentMaster: [\r\n            ...masterData.paymentMaster,\r\n            ...allPaymentStatusMasters?.nodes,\r\n          ],\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const { loading, data, error, networkStatus } = useQuery(ORDERS, {\r\n    variables: {\r\n      limit: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      order_filter: { ...orderFilter },\r\n      order_by: orderBy,\r\n    },\r\n  });\r\n\r\n  let rowData = data?.allOrders?.nodes;\r\n  if (rowData) {\r\n    rowData = rowData.map((item) => {\r\n      return {\r\n        id: item.id,\r\n        order_date: moment(item?.createdAt).format(\"DD MMM YYYY HH:mm:ss\"),\r\n        SKUs: item?.shoppingCartByCartId?.shoppingCartItemsByShoppingCartId?.nodes\r\n          .map((i) => i?.transSkuListByProductSku?.generatedSku)\r\n          .join(\", \"),\r\n        customer_name:\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n            ?.firstname,\r\n        email: item?.shoppingCartByCartId?.userProfileByUserprofileId?.email,\r\n        phone_number:\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n            ?.contactNumber,\r\n        shipping_address: getAddress(\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n        ),\r\n        gift_message: getGiftMessage(item?.shoppingCartByCartId?.nodes?.[0]),\r\n        payment_mode: item?.paymentMode,\r\n        order_status: item?.orderStatus,\r\n        payment_status: getPaymentStatus({\r\n          paymentMode: item?.paymentMode,\r\n          paymentResponse:\r\n            item?.paymentDetailsByOrderId?.nodes?.[0]?.paymentResponse,\r\n        }),\r\n        emailMessageId: item?.emailMessageId,\r\n        smsDeliveredId: item?.smsDeliveredId?.replace(\"otp-nacjotp-\", \"\"),\r\n        waybill: item?.awbNumber,\r\n        comments: item?.comments,\r\n      };\r\n    });\r\n  }\r\n  let colSpan = Object.keys(columnName).filter(\r\n    (item) => columnName[item].is_active\r\n  ).length;\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Orders</Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Grid container item xs={3}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            placeholder=\"Search by name, email, phone\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={(event) => {\r\n              setOrderFilter({\r\n                shoppingCartByCartId: {\r\n                  or: [\r\n                    {\r\n                      userProfileByUserprofileId: {\r\n                        email: { includesInsensitive: event.target.value },\r\n                      },\r\n                    },\r\n                    {\r\n                      cartAddressesByCartId: {\r\n                        some: {\r\n                          or: [\r\n                            {\r\n                              firstname: {\r\n                                includesInsensitive: event.target.value,\r\n                              },\r\n                            },\r\n                            {\r\n                              contactNumber: {\r\n                                includesInsensitive: event.target.value,\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              });\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={selectedStatus?.orderStatus}\r\n            onChange={(event) => {\r\n              setSelectedStatus({\r\n                ...selectedStatus,\r\n                orderStatus: event.target.value,\r\n              });\r\n              setOrderFilter({\r\n                ...orderFilter,\r\n                orderStatus: { includesInsensitive: event.target.value },\r\n              });\r\n            }}\r\n            select\r\n            label=\"Order Status\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n                  {selectedStatus?.orderStatus !== \"\" && (\r\n                    <CancelOutlinedIcon\r\n                      onClick={(event) => {\r\n                        setSelectedStatus({\r\n                          ...selectedStatus,\r\n                          orderStatus: \"\",\r\n                        });\r\n                        delete orderFilter.orderStatus;\r\n                        setOrderFilter({ ...orderFilter });\r\n                      }}\r\n                    />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          >\r\n            {masterData.orderMaster.map((option, index) => (\r\n              <MenuItem key={index} value={option.name}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={selectedStatus?.paymentStatus}\r\n            onChange={(event) => {\r\n              setSelectedStatus({\r\n                ...selectedStatus,\r\n                paymentStatus: event.target.value,\r\n              });\r\n              setOrderFilter({\r\n                ...orderFilter,\r\n                paymentDetailsByOrderId: {\r\n                  some: {\r\n                    paymentResponse: {\r\n                      includesInsensitive: event.target.value,\r\n                    },\r\n                  },\r\n                },\r\n              });\r\n            }}\r\n            select\r\n            label=\"Payment Status\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n                  {selectedStatus?.paymentStatus !== \"\" && (\r\n                    <CancelOutlinedIcon\r\n                      onClick={(event) => {\r\n                        setSelectedStatus({\r\n                          ...selectedStatus,\r\n                          paymentStatus: \"\",\r\n                        });\r\n                        delete orderFilter.paymentDetailsByOrderId;\r\n                        setOrderFilter({ ...orderFilter });\r\n                      }}\r\n                    />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          >\r\n            {masterData.paymentMaster.map((option, index) => (\r\n              <MenuItem key={index} value={option.name}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"normal\"\r\n              label=\"From\"\r\n              value={fromDate}\r\n              style={{ marginTop: 0 }}\r\n              onChange={(date) => handleDateChange(date, \"from\")}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"normal\"\r\n              label=\"To\"\r\n              value={ToDate}\r\n              disableFuture={true}\r\n              style={{ marginTop: 0 }}\r\n              onChange={(date) => handleDateChange(date, \"to\")}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={1}>\r\n          <IconButton onClick={handleClick}>\r\n            <ViewColumnIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"long-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={open}\r\n            onClose={handleClose}\r\n            PaperProps={{\r\n              style: {\r\n                height:\r\n                  Object.keys(columnName).filter((item) => !item?.is_default)\r\n                    .length * 20,\r\n                width: \"50ch\",\r\n              },\r\n            }}\r\n          >\r\n            <Grid container style={{ padding: 10 }}>\r\n              {Object.keys(columnName).map(\r\n                (item) =>\r\n                  !columnName[item]?.is_default && (\r\n                    <Grid item xs={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            name={item}\r\n                            color=\"primary\"\r\n                            checked={columnName[item].is_active}\r\n                            onClick={(_) => {\r\n                              columnName[item].is_active =\r\n                                !columnName[item].is_active;\r\n                              setColumnName({ ...columnName });\r\n                            }}\r\n                          />\r\n                        }\r\n                        label={item}\r\n                      />\r\n                    </Grid>\r\n                  )\r\n              )}\r\n            </Grid>\r\n          </Menu>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {Object.keys(columnName).map(\r\n                  (item) =>\r\n                    columnName[item].is_active && (\r\n                      <TableCell key={item} align={\"center\"}>\r\n                        {item}\r\n                      </TableCell>\r\n                    )\r\n                )}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {rowData &&\r\n                rowData.length > 0 &&\r\n                rowData.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    {Object.keys(columnName).map(\r\n                      (column) =>\r\n                        columnName[column].is_active && (\r\n                          <TableCell key={column} align={\"center\"}>\r\n                            {column !== \"Actions\" &&\r\n                              item[columnName[column]?.identifier]}\r\n                            {column === \"Actions\" && (\r\n                              <ActionIcon id={item.id} />\r\n                            )}\r\n                          </TableCell>\r\n                        )\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n              {rowData && rowData.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"}>\r\n                    <Typography>No Orders found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={colSpan}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allOrders?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  onPageChange={() => {}}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\nexport default OrderList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  toolbar: {\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  deleteButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.red[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.red[900]\r\n    }\r\n  },\r\n  deleteIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Header = props => {\r\n  const { order, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Orders\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Order #{order.id}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          {/* <Button\r\n            className={classes.deleteButton}\r\n            variant=\"contained\"\r\n          >\r\n            <DeleteIcon className={classes.deleteIcon} />\r\n            Delete\r\n          </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nimport {\r\n  PAYMENTSTATUSMASTER,\r\n  GETORDERCOMMUNICATIONLOGS,\r\n} from \"../../../../graphql/query\";\r\nimport { UPDATE_ORDER } from \"../../../../graphql/mutation\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst OrderInfo = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const [paymentstatus, setPaymentstatus] = useState([]);\r\n  const [orderstatus, setOrderstatus] = useState([]);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [updateOrder, setUpdateOrder] = useState({\r\n    waybillNum: null,\r\n    paymentStatus: null,\r\n    orderStatus: null,\r\n    comments: null,\r\n  });\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n  const handleChange = (event) => {\r\n    setUpdateOrder({ ...updateOrder, [event.target.name]: event.target.value });\r\n    if (updateOrder?.comments?.length > 0) {\r\n      setErrorMsg(\"\");\r\n    }\r\n  };\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\r\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\r\n\r\n        setUpdateOrder({\r\n          waybillNum: order?.awb_number ?? null,\r\n          paymentStatus: order?.payment_status ?? null,\r\n          orderStatus: order?.order_status ?? null,\r\n          comments: order?.comments ?? null,\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  const getOrderCommunicationLogs = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETORDERCOMMUNICATIONLOGS,\r\n\r\n        variables: {\r\n          id: order?.id,\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.orderById?.communicationLogsByOrderId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  React.useEffect(() => {\r\n    getmaster();\r\n    getOrderCommunicationLogs();\r\n  }, []);\r\n\r\n  const sendEmail = (order_id, type) => {\r\n    const url = API_URL + \"/trigger_mail\";\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ order_id: order_id, type: type }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Mail Send Successfully!\",\r\n        });\r\n        console.log(fatchvalue);\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n  const handleSubmit = () => {\r\n    if (updateOrder?.comments?.length > 0) {\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_ORDER,\r\n          variables: {\r\n            id: order?.id,\r\n            awbNumber: updateOrder?.waybillNum ?? \"\",\r\n            comments: updateOrder?.comments ?? \"\",\r\n            orderStatus: updateOrder?.orderStatus,\r\n            paymentStatus: updateOrder?.paymentStatus,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    } else {\r\n      setErrorMsg(\"Enter Comments\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"Order info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Customer</TableCell>\r\n              <TableCell>\r\n                <Link\r\n                  target=\"_blank\"\r\n                  component={RouterLink}\r\n                  to={`/customerdetails/${order.user_profile.id}`}\r\n                >\r\n                  {order.user_profile.first_name} {order.user_profile.last_name}\r\n                </Link>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].addressline1\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].addressline2\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].city\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].state\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].country\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email ID</TableCell>\r\n              <TableCell>{order.user_profile.email}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Mobile Number</TableCell>\r\n              <TableCell>\r\n                {order.shopping_cart\r\n                  ? order.shopping_cart.cart_addresses\r\n                    ? order.shopping_cart.cart_addresses.length > 0\r\n                      ? order.shopping_cart.cart_addresses[0].contact_number\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>\r\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Amount</TableCell>\r\n              <TableCell>\r\n                {order.currency}\r\n                {order.shopping_cart.discounted_price}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Waybil Number</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  name=\"waybillNum\"\r\n                  placeholder=\"Waybill Number\"\r\n                  onChange={handleChange}\r\n                  value={updateOrder.waybillNum}\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Gift Message</TableCell>\r\n              <TableCell>\r\n                {order.shopping_cart\r\n                  ? order.shopping_cart.giftwraps\r\n                    ? order.shopping_cart.giftwraps.length > 0\r\n                      ? order.shopping_cart.giftwraps[0].message\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Payment Mode</TableCell>\r\n              <TableCell>{order.payment_mode}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Payment Status</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"paymentStatus\"\r\n                  onChange={handleChange}\r\n                  select\r\n                  margin=\"dense\"\r\n                  SelectProps={{ native: true }}\r\n                  value={updateOrder.paymentStatus}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {paymentstatus.map((option) => (\r\n                    <option key={option.name} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Order Status</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"orderStatus\"\r\n                  onChange={handleChange}\r\n                  select\r\n                  margin=\"dense\"\r\n                  SelectProps={{ native: true }}\r\n                  value={updateOrder.orderStatus}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {orderstatus.map((option) => (\r\n                    <option key={option.id} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Comments</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  name=\"comments\"\r\n                  placeholder=\"Comments\"\r\n                  onChange={handleChange}\r\n                  value={updateOrder.comments}\r\n                  variant=\"outlined\"\r\n                />\r\n                <span style={{ color: \"red\" }}>{errorMsg}</span>\r\n              </TableCell>\r\n            </TableRow>\r\n          \r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <Grid>\r\n          {updateOrder.paymentStatus === \"Paid\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"order\")}\r\n              >\r\n                Order Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"payment\")}\r\n              >\r\n                Payment Confirmation Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" &&\r\n          updateOrder.orderStatus === \"Shipped\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"shipping\")}\r\n              >\r\n                Shipping Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" &&\r\n          updateOrder.orderStatus === \"Delivered\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"shipping\")}\r\n              >\r\n                Shipping Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"rate\")}\r\n              >\r\n                Rate Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"4px 0px\" }}\r\n            onClick={handleSubmit}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderInfo.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderInfo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nconst OrderItems = props => {\r\n  const { order, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Order items\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Sku</TableCell>\r\n                  <TableCell>Product Image</TableCell>\r\n                  <TableCell>Quantity</TableCell>\r\n                  <TableCell>Amount</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {order.shopping_cart.shopping_cart_items.map(item => (\r\n                  <TableRow key={item.id}>\r\n                     <TableCell>\r\n                      {item.product_sku}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {item.qty}\r\n                    </TableCell>\r\n                    <TableCell>{item.price}</TableCell>\r\n                    \r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderItems.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default OrderItems;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  CardContent,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inner_card: {\r\n    padding: \"10px\",\r\n    marginBottom: \"16px\",\r\n  },\r\n  image_container: {\r\n    padding: \"16px\",\r\n  },\r\n  product_image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n  },\r\n  text_heading: {\r\n    // fontWeight: \"400\",\r\n    margin: \"8px 0px\",\r\n  },\r\n  text_content: {\r\n    margin: \"8px 0px\",\r\n  },\r\n  final_total_text: {\r\n    textAlign: \"right\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\nconst OrderDetails = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  console.log(order, \"samir\");\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ marginTop: 30 }}>\r\n      <Card>\r\n        <CardHeader title=\"Order Details\" />\r\n        <Divider />\r\n\r\n        <CardContent>\r\n          {order.shopping_cart.shopping_cart_items.map((item) => (\r\n            <Card key={item.id} className={classes.inner_card}>\r\n              <Grid container xs={12}>\r\n                {/*-------------------------------- Image part-------------------------------- */}\r\n                <Grid\r\n                  container\r\n                  xs={12}\r\n                  md={3}\r\n                  className={classes.image_container}\r\n                >\r\n                  <img\r\n                    src=\"\"\r\n                    alt=\"Product Image\"\r\n                    className={classes.product_image}\r\n                  />\r\n                </Grid>\r\n                <Grid container xs={12} md={9}>\r\n                  <Grid container xs={12} md={6}>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Product Code</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.product_sku}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Metal</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}\r\n                      </p>\r\n                    </Grid>{\" \"}\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.trans_sku_list.sku_weight}\r\n                      </p>\r\n                    </Grid>{\" \"}\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Diamond Quality</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.trans_sku_list.diamond_type}{\" \"}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>\r\n                        Diamond Weight (Ct)\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> ? </p>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {/* ----------------------------------------------------------------- */}\r\n                  <Grid container xs={12} md={6}>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Quantity</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> {item.qty} </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Total</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(item.trans_sku_list.discount_price)}`}{\" \"}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Saved</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(\r\n                          item.trans_sku_list.discount_price -\r\n                            item.trans_sku_list.markup_price\r\n                        )} (${\r\n                          item.trans_sku_list.discount === null\r\n                            ? \"0\"\r\n                            : item.trans_sku_list.discount\r\n                        }%off)`}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Shipping</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> Free </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Grand Total</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(item.trans_sku_list.markup_price)}`}\r\n                      </p>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          ))}\r\n          <Grid>\r\n            <p className={classes.final_total_text}>\r\n              Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;\r\n            </p>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default OrderDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  TableHead,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport moment from \"moment\";\r\nimport Page from \"../../components/Page\";\r\nimport { Header, OrderInfo, OrderItems } from \"./components\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { GETORDERCOMMUNICATIONLOGS } from \"../../graphql/query\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const OrderManagementDetails = withRouter((props) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(null);\r\n  const [productDetails, setProductDetails] = useState([]);\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  async function fetchorderdetails(order_id) {\r\n    let response = await sendNetworkRequest(\r\n      \"/getorderdetails\",\r\n      {},\r\n      { order_id }\r\n    );\r\n    console.log(response);\r\n    setOrder(response.orders);\r\n    setProductDetails(response.product_detail);\r\n  }\r\n\r\n  const getOrderCommunicationLogs = async (order_id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETORDERCOMMUNICATIONLOGS,\r\n\r\n        variables: {\r\n          id: order_id,\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n       \r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.orderById?.communicationLogsByOrderId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    var com_id = props.location.pathname.split(\"/\")[2];\r\n\r\n    fetchorderdetails(com_id);\r\n    getOrderCommunicationLogs(com_id);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Order Management Details\">\r\n      <Header order={order} />\r\n      <Grid className={classes.container} container spacing={3}>\r\n        <Grid item md={4} xl={3} xs={12}>\r\n          <OrderInfo order={order} />\r\n        </Grid>\r\n        <Grid item md={8} xl={9} xs={12}>\r\n          <OrderItems order={order} productDetails={productDetails} />\r\n          <OrderDetails\r\n            order={order}\r\n            productDetails={productDetails}\r\n            style={{ marginTop: 30 }}\r\n          />\r\n          <Grid container xs={12} style={{ marginTop: \"10px\" }}>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Email Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.type === \"email\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId}</TableCell>\r\n                              <TableCell>{val.type}</TableCell>\r\n                              <TableCell>{val.messageType}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Message Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.type === \"sms\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId}</TableCell>\r\n                              <TableCell>{val.type}</TableCell>\r\n                              <TableCell>{val.messageType}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Page>\r\n  );\r\n});\r\n\r\nexport default OrderManagementDetails;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Chip,\r\n  Switch,\r\n  FormControlLabel,\r\n  Radio\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 10,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AppointmentInfo = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  \r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"Appointment Info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Grid container spacing={2}>\r\n           <Grid item xs={4} >\r\n             <Typography>Name :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.customerName ?? 'no data'}</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Email :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.email ?? 'no data'}</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Mobile :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.mobile ?? 'no data'}</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Type :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.appointmentDateTimeSlotBySlotId?.appointmentTypeId === 1 ? \"Alive\" : order?.allAppointments?.nodes[0]?.appointmentTypeId === 2 ? \"Lotus\" :order?.allAppointments?.nodes[0]?.appointmentTypeId === 3 ? \"Piercing\" : order?.allAppointments?.nodes[0]?.appointmentTypeId === 4 ? \"Stones\" : order?.allAppointments?.nodes[0]?.appointmentDateTimeSlotBySlotId?.appointmentTypeId === 5 ? \"Enquiry\" :\"no Data\" }</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Category :</Typography>\r\n             <div style={{marginTop:\"5px\"}}>\r\n              {order?.allAppointments?.nodes[0]?.productCategory?.length > 0  ? order?.allAppointments?.nodes[0]?.productCategory?.map((val)=>(\r\n                <Chip label={val} color=\"primary\" style={{marginLeft:'3px',textTransform:'capitalize'}}/>\r\n              )) : 'no data'}\r\n             </div>              \r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Metal Type :</Typography>\r\n             <div style={{marginTop:\"5px\"}}>\r\n             {order?.allAppointments?.nodes[0]?.metalType?.length > 0 ? order?.allAppointments?.nodes[0]?.metalType?.map((val)=>(\r\n                <Chip label={val} color=\"primary\" style={{marginLeft:'3px',textTransform:'capitalize'}}/>\r\n              )) : 'no data'}\r\n             </div>     \r\n           </Grid>\r\n           <Grid item xs={4} >\r\n             <Typography>isOnline :</Typography>\r\n             <div style={{marginTop:\"5px\",marginLeft:\"10px\"}}>\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isOnline ? true : null}/>} label=\"Yes\" />\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isOnline ? null : true}/>} label=\"No\" />\r\n            </div> \r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>is IT required :</Typography>\r\n             <div style={{marginTop:\"5px\",marginLeft:\"10px\"}}>\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isItRequired ? true : null}/>} label=\"Yes\" />\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isItRequired ? null : true}/>} label=\"No\" />\r\n            </div> \r\n           </Grid>\r\n           <Grid item xs={4} >\r\n             <Typography>Are more Members Joining :</Typography>\r\n             <div style={{marginTop:\"5px\",marginLeft:\"10px\"}}> \r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.areMoreMembersJoining ? true : null}/>} label=\"Yes\" />\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.areMoreMembersJoining ? null : true}/>} label=\"No\" />\r\n             </div>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Special Requests :</Typography>\r\n             <p style={{width:\"80%\",overflowWrap:'break-word'}}>{order?.allAppointments?.nodes[0]?.specialRequests ?? 'no data'}</p>\r\n           </Grid>\r\n        </Grid>\r\n      </CardContent>    \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppointmentInfo;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Chip,Switch, Input,MenuItem,Select\r\n} from \"@material-ui/core\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport { API_URL } from \"../../../config\";\r\nimport { MUTATE_STATUS,MUTATE_MEETING } from \"../../../graphql/query\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 10,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AppointmentExtra= (props) => {\r\n  const { order, className,id, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  const [selected,setSelected] = React.useState('')\r\n  const [meetingLink,setmeetingLink] = React.useState('');\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  React.useEffect(()=>{\r\n   setSelected(order?.allAppointments?.nodes[0]?.status)\r\n   setmeetingLink(order?.allAppointments?.nodes[0]?.meetingLink)\r\n  },[order])\r\n\r\n\r\n  const handleMeeting = async ()=>{\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: MUTATE_MEETING,\r\n        variables: { id: parseInt(id), meetingLink:meetingLink },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Meeting Link Send Successfully!\",\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n  const handleSelect = async (value) => {\r\n    setSelected(value)\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: MUTATE_STATUS,\r\n        variables: { id: parseInt(id), status:value },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        props.refetch()\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleLinkchange=(val)=>{\r\n     setmeetingLink(val)\r\n  }\r\n\r\n  const sendEmail = () => {\r\n    if(meetingLink !== ''){\r\n      const url = API_URL + \"/trigger_mail\";\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ appointment_id: parseInt(id),\r\n        meeting_link: meetingLink }),\r\n      };\r\n      fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          handleMeeting()\r\n        })\r\n        .catch((err) => {\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    } \r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader/>\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Grid container spacing={1}>\r\n           <Grid item xs={6} >\r\n             <Typography>MeetingLink :</Typography>   \r\n             <TextField fullWidth variant=\"outlined\" onChange={(event)=>handleLinkchange(event.target.value)} value={meetingLink} disabled={order?.allAppointments?.nodes[0]?.appointmentDateTimeSlotBySlotId?.appointmentTypeId === 5}/>       \r\n           </Grid>\r\n           <Grid item xs={6} >\r\n             <Typography>Status :</Typography>\r\n             <TextField \r\n        fullWidth\r\n        variant=\"outlined\"\r\n        select\r\n        value={selected}\r\n        onChange={(event)=>handleSelect(event.target.value)}\r\n        >\r\n                          <MenuItem value=\"In-Progress\">In-Progress</MenuItem>\r\n                          <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                          <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                          <MenuItem value=\"Submitted\">Submitted</MenuItem>\r\n                          <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n            </TextField>      \r\n           </Grid>\r\n        </Grid>\r\n      </CardContent>   \r\n      <CardActions>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={sendEmail}>Send Invite</Button>\r\n      </CardActions> \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppointmentExtra;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  TableHead,\r\n  Typography,\r\n  Backdrop,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport AppointmentInfo from \"./components/AppointmentInfo\";\r\nimport AppointmentExtra from \"./components/AppointmentExtra\";\r\nimport moment from \"moment\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport { GETORDERCOMMUNICATIONLOGS,SHOW_ALL_PPOINMENT_DETAILS,GETAPPLICATIONCOMMUNICATIONLOGS } from \"../../graphql/query\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport const AppointmentManagementDetails = withRouter((props) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(null);\r\n  const [productDetails, setProductDetails] = useState([]);\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const getOrderCommunicationLogs = async (order_id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETAPPLICATIONCOMMUNICATIONLOGS,\r\n        variables: {\r\n          id: parseInt(order_id),\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.appointmentById?.appointmentCommunicationLogsByAppointmentId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const { loading, data, error, networkStatus,refetch } = useQuery(SHOW_ALL_PPOINMENT_DETAILS, {\r\n    variables: {\r\n      id: parseInt(order)\r\n    },\r\n    notifyOnNetworkStatusChange:true,\r\n    fetchPolicy:\"network-only\"\r\n  });\r\n \r\n  useEffect(() => {\r\n    var com_id = props.location.pathname.split(\"/\")[2];\r\n    getOrderCommunicationLogs(com_id);\r\n    setOrder(com_id)\r\n  }, []);\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  const handleStatusChange=()=>{\r\n    refetch()\r\n  }\r\n\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Appointment Management Details\">\r\n\r\n       <Backdrop className={classes.backdrop} open={loading || NetworkStatus.refetch === networkStatus}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n       <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Appointments\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Appointment #{order}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid className={classes.container} container spacing={3}>\r\n          <Grid container xs={12} style={{ marginTop: \"10px\" }}>\r\n            <Grid item md={12} xl={12} xs={12} style={{ padding: \"14px\" }}>\r\n                   <AppointmentInfo order={data}/>\r\n            </Grid>\r\n            <Grid item md={12} xl={12} xs={12} style={{ padding: \"14px\" }}>\r\n                 <AppointmentExtra order={data} id={order} refetch={refetch}/>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Email Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.communicationType === \"email\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.communicationType ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.type ?? \"-\"}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Message Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.communicationType === \"sms\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.communicationType ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.type ?? \"-\"}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n  \r\n      </Grid>\r\n    </Page>\r\n  );\r\n});\r\n\r\nexport default AppointmentManagementDetails;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    overflowX: \"auto\",\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Results = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const [status, setStatus] = useState({});\r\n\r\n  function handleAdd(e) {\r\n    setStatus({ ...status, [e.id]: \"0 out of \" + props.products.length });\r\n\r\n    props.update(e);\r\n  }\r\n  function handleupdate(e) {\r\n    setStatus({ ...status, [e.id]: \"0 out of \" + props.products.length });\r\n\r\n    props.resumeupdate(e);\r\n  }\r\n\r\n  function handledownload(e) {\r\n    props.downloadlog();\r\n  }\r\n  async function handlestatus(e) {\r\n    let bodydata = {\r\n      component: e.label,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getcomponentpricestatus\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n\r\n    setStatus({ ...status, [e.id]: response.message });\r\n  }\r\n\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      <Card style={{ marginTop: 16 }}>\r\n        <CardContent className={classes.content}>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Components</TableCell>\r\n\r\n                  <TableCell align=\"center\">Action</TableCell>\r\n\r\n                  <TableCell align=\"center\">Status</TableCell>\r\n                  <TableCell align=\"center\">Restart</TableCell>\r\n\r\n                  <TableCell align=\"center\">Log</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.pricingrows.map((order) => (\r\n                  <TableRow>\r\n                    <TableCell>{order.id}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        onClick={(e) => handleAdd(order)}\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        className={classes.margin}\r\n                      >\r\n                        ₹ Run\r\n                      </Button>\r\n                    </TableCell>\r\n\r\n                    <TableCell align=\"center\">\r\n                      {status[order.id] ? status[order.id] : \"\"}\r\n\r\n                      <IconButton\r\n                        aria-label=\"delete\"\r\n                        onClick={(e) => handlestatus(order)}\r\n                        color=\"primary\"\r\n                      >\r\n                        <RefreshIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={(e) => handleupdate(order)}\r\n                        size=\"small\"\r\n                      >\r\n                        Re Run\r\n                      </Button>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={(e) => handledownload()}\r\n                        size=\"small\"\r\n                      >\r\n                        Download\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}></CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Results;\r\n","export const makeid = ((length, prefix,couponcount) => {\r\n  var count = 1;\r\n  var codes = []\r\n  if(couponcount)\r\n  {\r\n    count = couponcount;\r\n  }\r\n  let codelength = length - prefix.length\r\n  var result           = '';\r\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  var charactersLength = characters.length;\r\n  generatecode(0)\r\n  function generatecode(generatedcount)\r\n  {\r\n  for ( var i = 0; i < codelength; i++ ) {\r\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  result = prefix.toUpperCase() + result.toUpperCase();\r\n  codes.push(result)\r\n  result = \"\"\r\n  generatedcount = generatedcount + 1\r\n  if(count > generatedcount)\r\n  {\r\n    generatecode(generatedcount);\r\n  }\r\n  }\r\n  return codes;\r\n});","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { VoucherContext } from \"../../../../context\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from \"../../../../utils/commonmethod\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  Chip,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n\r\n    cursor: \"pointer\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n    cursor: \"pointer\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  cardcontent: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    // border: `3px solid ${theme.palette.divider}`,\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n    // border: `3px solid ${theme.palette.divider}`,\r\n  },\r\n  optionRadio: {\r\n    margin: -10,\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst AboutVoucher = (props) => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\r\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\r\n  const [producttypelist, setProducttypelist] = useState(\r\n    props.masterData.product_type\r\n  );\r\n  const [productids, setProductids] = useState(props.productids);\r\n\r\n  const [updatestatus, setUpdatestatus] = useState(\"\");\r\n\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n  const [discounttype, setDiscounttype] = useState(\"\");\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n\r\n  const handleproducttypechange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.name);\r\n    });\r\n    setFormData({ ...formData, producttypes: vendorsarray });\r\n    props.apply(formData.vendorid, formData.categories, vendorsarray);\r\n  };\r\n  const handlecategorychange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.name);\r\n    });\r\n    setFormData({ ...formData, categories: vendorsarray });\r\n\r\n    props.apply(formData.vendorid, vendorsarray, formData.producttypes);\r\n  };\r\n  const hangeoptionchange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.shortCode);\r\n    });\r\n    setFormData({ ...formData, vendorid: vendorsarray });\r\n\r\n    props.apply(vendorsarray, formData.categories, formData.producttypes);\r\n  };\r\n\r\n  const handleClick = async (event, option) => {\r\n    let response = await sendNetworkRequest(\r\n      \"/updatepricelist\",\r\n      {},\r\n      formData,\r\n      false\r\n    );\r\n    if (response.status < 400) {\r\n    } else {\r\n      alert(\"error\");\r\n    }\r\n  };\r\n  const handleuploadstatus = async (event, option) => {\r\n    let response = await sendNetworkRequest(\r\n      \"/getpriceupdatestatus\",\r\n      {},\r\n      formData,\r\n      false\r\n    );\r\n    if (response.status < 400) {\r\n      setUpdatestatus(response.message);\r\n    } else {\r\n    }\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setVouchercode(e.target.value.toUpperCase());\r\n  };\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n    setIsonce(!isonce);\r\n  };\r\n  const generateCoupon = (event) => {\r\n    // alert(JSON.stringify(voucherCtx))\r\n    setVouchercode(makeid(10));\r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6} sm={4}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.vendorlist || []}\r\n              getOptionLabel={(option) => option.display}\r\n              fullWidth\r\n              onChange={hangeoptionchange(\"vendorcode\")}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Selct Vendor\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.categorylist || []}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={handlecategorychange(\"category\")}\r\n              fullWidth\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Product Category\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.producttypelist || []}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={handleproducttypechange(\"product_type\")}\r\n              fullWidth\r\n              margin=\"dense\"\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Product type\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              disabled={props.isdisabled}\r\n              className={classes.fixedTag}\r\n              value={props.productids}\r\n              options={productids}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label={\r\n                    props.productids.length > 0\r\n                      ? \"Products (\" + props.productids.length + \") \"\r\n                      : \"Products\"\r\n                  }\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={6} sm={3} >\r\n\r\n        <Button variant=\"contained\" \r\n          onClick={handleClick}\r\n        color=\"primary\">\r\n        Update Price\r\n      </Button>\r\n      </Grid>\r\n      \r\n      <Grid item xs={6} sm={3} >\r\n\r\n        <Button variant=\"contained\" \r\n          onClick={handleuploadstatus}\r\n        color=\"primary\">\r\n        Update Status\r\n      </Button>\r\n      <Typography variant=\"subtitle1\">\r\n                {updatestatus}\r\n      </Typography>\r\n\r\n      </Grid> */}\r\n          {/* <Grid item xs={6} sm={3} >\r\n      <Button variant=\"contained\" \r\n          onClick={handleuploadstatus}\r\n        color=\"primary\">\r\n        Price Update\r\n      </Button>\r\n       \r\n      </Grid> */}\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    loader: {\r\n      display: 'flex',\r\n      width: 100,\r\n      paddingLeft: 25\r\n    }\r\n  }));\r\nfunction FullLoader(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n      <Dialog\r\n      open={props.isopen}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n      <div className={classes.loader}>\r\n\r\n      <CircularProgress />\r\n\r\n      </div>\r\n\r\n      </DialogContent>\r\n      \r\n    </Dialog>\r\n \r\n    )\r\n}\r\nexport default FullLoader;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AlertContext } from \"../../context\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { Button, Link } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Page from \"../../components/Page\";\r\nimport { Results, AboutVoucher } from \"./components\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport FullLoader from \"../../components/Loader\";\r\nconst rows = [\r\n  { id: \"Markup & Discount price update\", label: \"updateskuprice\" },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PriceupdateContent(props) {\r\n  const classes = useStyles();\r\n\r\n  const [masters, setMasters] = useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const snack = React.useContext(AlertContext);\r\n  const [products, setProducts] = useState([]);\r\n  const [, setCategories] = useState([]);\r\n  const [, setVendors] = useState([]);\r\n  const [startrun, setStartrun] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  async function updateprices(component) {\r\n    if (products.length) {\r\n      setOpen(true);\r\n      var bodydata = {};\r\n      bodydata = {\r\n        component: component.label,\r\n        req_product_id: products,\r\n      };\r\n      setStartrun(true);\r\n      let response = await sendNetworkRequest(\r\n        \"/price_run_new\",\r\n        {},\r\n        bodydata,\r\n        false\r\n      );\r\n      if (response.statuscode == 200) {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: response.message || \"Started Successfully!\",\r\n        });\r\n      } else {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Something went wrong, Please try later!\",\r\n        });\r\n      }\r\n      setOpen(false);\r\n    } else {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Apply filter to load products!\",\r\n      });\r\n    }\r\n  }\r\n  async function rerun(component) {\r\n    var bodydata = {};\r\n    bodydata = {\r\n      component: component.label,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getincompletepricerun\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    let history_id = response.id;\r\n    let update_products = response.products;\r\n    if (response.products && response.products.length > 0) {\r\n      setOpen(true);\r\n\r\n      var bodydata = {};\r\n      bodydata = {\r\n        pricingcomponent: component.label,\r\n        req_product_id: update_products,\r\n        history_id: history_id,\r\n      };\r\n      setStartrun(true);\r\n      let response1 = await sendNetworkRequest(\r\n        \"/productpriceupdate\",\r\n        {},\r\n        bodydata,\r\n        false\r\n      );\r\n      setOpen(false);\r\n    } else {\r\n      alert(\" Doesn't have any incomplete products\");\r\n    }\r\n  }\r\n\r\n  async function filterapllied(filterdata, categories, producttypes) {\r\n    var bodydata = {};\r\n\r\n    bodydata = {\r\n      vendorid: filterdata && filterdata.length > 0 ? filterdata : \"\",\r\n      product_category: categories && categories.length > 0 ? categories : \"\",\r\n      product_type: producttypes && producttypes.length > 0 ? producttypes : \"\",\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\r\n      \"/getdistinctproduct\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    setProducts(response.products);\r\n    setCategories(response.category);\r\n    setVendors(response.vendorlist);\r\n  }\r\n  async function downloadlog() {\r\n    window.location.href = \"https://api-staging.stylori.com/getlogfile\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    setMasters(productCategory.mapper(props.data));\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <FullLoader title={\"Running Price Update\"} isopen={open}></FullLoader>\r\n        <AboutVoucher\r\n          isdisabled={startrun}\r\n          className={classes.aboutvoucher}\r\n          apply={filterapllied}\r\n          productids={products.length > 0 ? products : []}\r\n          categorylist={masters.category}\r\n          producttypelist={masters.product_type}\r\n          vendorlist={masters.vendorcode}\r\n          masterData={masters}\r\n          categories={[\"Fixed Amount\", \"percentage\", \"Free Shipping\"]}\r\n        />\r\n        <Results\r\n          products={products}\r\n          pricingrows={rows}\r\n          downloadlog={downloadlog}\r\n          update={updateprices}\r\n          resumeupdate={rerun}\r\n        />\r\n        <div\r\n          style={{\r\n            padding: \"12px 0px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Link href=\"/price-logs\">\r\n            <Button color=\"primary\" variant=\"contained\">\r\n              Price History Logs\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </Page>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { productCategory } from '../../services/mapper';\r\nimport Component from './PriceupdateContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Priceupdate = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} data={data} />\r\n    // </VoucherProvider>\r\n\r\n)});\r\nexport default Priceupdate;","import { Button, FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport VisibityIcon from \"@material-ui/icons/Visibility\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport Moment from \"react-moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\r\n\r\nconst columns = [\r\n  { id: \"product_id\", label: \"product id\" },\r\n  { id: \"product_name\", label: \"product name\" },\r\n  { id: \"product_type\", label: \"product type\" },\r\n  { id: \"vendor_code\", label: \"vendor code\" },\r\n  { id: \"product_category\", label: \"product category\" },\r\n  { id: \"isactive\", label: \"active\" },\r\n  { id: \"createdAt\", label: \"Created on\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"\" : \"\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\"></IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"updatedAt\");\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [productlists, setProductlists] = React.useState([]);\r\n  const [allproductlists, setAllProductlists] = React.useState([]);\r\n  const [mastercategories, setMastercategories] = React.useState([]);\r\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n    getproductlist(\"\", \"\", \"\", \"\", newPage);\r\n  }\r\n  useEffect(() => {\r\n    getproductlist(\"\", \"\", \"\", \"\", \"\", order, orderBy);\r\n  }, []);\r\n  useEffect(() => {\r\n    getproductlist(\r\n      props.filterparams.searchtext,\r\n      props.filterparams.categoryname,\r\n      props.filterparams.product_type,\r\n      \"\",\r\n      \"\",\r\n      order,\r\n      orderBy\r\n    );\r\n  }, [props.filterparams]);\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    getproductlist(\"\", \"\", \"\", event.target.value, \"\");\r\n  }\r\n  async function showproductdetails(prod_id) {\r\n    let bodycontent = {\r\n      productid: prod_id,\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\"/getproducturl\", {}, bodycontent);\r\n    console.log(response);\r\n    //setProductlists(response.products.rows)\r\n    window.open(response.url, \"_blank\");\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n    getproductlist(\"\", \"\", \"\", \"\", \"\", isAsc ? \"desc\" : \"asc\", property);\r\n  };\r\n  function searchproduct(searchtext, productcategory, producttype) {\r\n    let products = allproductlists.filter((l) => {\r\n      return (\r\n        l.productId.toLowerCase().match(searchtext.toLowerCase()) ||\r\n        l.productName.toLowerCase().match(searchtext.toLowerCase())\r\n      );\r\n    });\r\n    setProductlists(products);\r\n  }\r\n  async function getproductlist(\r\n    searchtext,\r\n    productcategory,\r\n    producttype,\r\n    pagesize,\r\n    offsetvalue,\r\n    sort,\r\n    orderby\r\n  ) {\r\n    let bodydata = {\r\n      size: pagesize ? pagesize : rowsPerPage,\r\n      offset: offsetValue,\r\n      searchtext: searchtext,\r\n      productcategory: productcategory,\r\n      producttype: producttype,\r\n      order: sort ? sort : order,\r\n      orderby: orderby ? orderby : orderBy,\r\n    };\r\n    let response = await sendNetworkRequest(\"/getproductlist\", {}, bodydata);\r\n\r\n    console.log(response);\r\n    setProductlists(response.products.rows);\r\n    setPageCount(response.products.count);\r\n  }\r\n  function applyfilter(searchtext, categoryname, typename) {\r\n    getproductlist(searchtext, categoryname, typename);\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n          <EnhancedTableHead\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n          />\r\n          <TableBody>\r\n            {/* <Query\r\n              query={PRODUCTLIST(true,\"Bangles\")}\r\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\r\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                  \r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) { \r\n                           return <> */}\r\n            {stableSort(productlists, getComparator(order, orderBy)).map(\r\n              (row, index) => (\r\n                <TableRow key={row.product_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row?.trans_sku_lists?.[0].sku_id}\r\n                    <Button onClick={(e) => ProductEdit(row.product_id)}>\r\n                      <EditIcon />\r\n                    </Button>\r\n                    <Button onClick={(e) => showproductdetails(row.product_id)}>\r\n                      <VisibityIcon />\r\n                    </Button>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    onClick={() => showproductdetails(row)}\r\n                  >\r\n                    {/* <Link variant=\"body2\">  */}\r\n                    {row.product_name}\r\n\r\n                    {/* </Link>   */}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.product_type}</TableCell>\r\n                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\r\n                  <TableCell align=\"left\">{row.product_category}</TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    {\" \"}\r\n                    <FormControlLabel\r\n                      label={row.isactive ? \"\" : \"\"}\r\n                      control={\r\n                        <Switch checked={row.isactive} value=\"checkedA\" />\r\n                      }\r\n                    />\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                      {row.createdAt}\r\n                    </Moment>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            )}\r\n            {/* </> */}\r\n            {/* }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  */}\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 50, 100, 200, 500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Dialog,\r\n  IconButton,\r\n  Slide,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  Grid,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  TextField,\r\n  LinearProgress,\r\n  Box,\r\n  CircularProgress,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Backdrop,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport { AlertContext, AlertProps } from \"../../context\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { API_URL } from \"../../config\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport SyncIcon from \"@material-ui/icons/Sync\";\r\nimport AssignmentTurnedInOutlinedIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { VERIFYTAGNO, WAREHOUSELIST } from \"../../graphql/query\";\r\nimport { isEmpty } from \"validate.js\";\r\nimport axios from \"axios\";\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    width: \"90%\",\r\n    margin: theme.spacing(5),\r\n  },\r\n  textarea: {\r\n    resize: \"both\",\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n  errorTable: {\r\n    margin: 10,\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  customWidth: {\r\n    maxWidth: 420,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst ChooseWareHouse = (props) => {\r\n  const { loading, data } = useQuery(WAREHOUSELIST);\r\n  return (\r\n    <Autocomplete\r\n      id={\"warehouse-id\"}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={(option) => option.name}\r\n      options={data?.allWarehouses?.nodes ?? []}\r\n      value={props.warehouse || null}\r\n      onChange={(event, newValue) => {\r\n        props.setWarehouse(newValue);\r\n      }}\r\n      loading={loading}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Warehouse\"\r\n          fullWidth\r\n          required\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? (\r\n                  <CircularProgress color=\"inherit\" size={20} />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst ProductSync = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  var [data, setData] = React.useState({\r\n    action_type: \"price_sync\",\r\n    sync_url: \"\",\r\n    new_tagno: [],\r\n  });\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [warehouse, setWarehouse] = React.useState(null);\r\n  const [errorTagNo, setErrorTagNo] = React.useState([]);\r\n  const [validatedTagNo, setValidatedTagNo] = React.useState({\r\n    status: false,\r\n    errors: {},\r\n  });\r\n  const [backDrop, setBackDrop] = React.useState(false);\r\n  var handleChange = (event) => {\r\n    var { name, value } = event.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  var handleAddChip = (chip) => {\r\n    var _ = data;\r\n    chip.split(\",\").forEach((item) => {\r\n      _.new_tagno.push(item);\r\n      setData({ ..._ });\r\n      client\r\n        .query({ query: VERIFYTAGNO, variables: { tagno: item } })\r\n        .then(({ data }) => {\r\n          if (data?.list?.nodes && data?.list?.nodes.length >= 1) {\r\n            setErrorTagNo([...errorTagNo, item]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  var handleDeleteChip = (chip, index) => {\r\n    var _ = data;\r\n    _.new_tagno.splice(index, 1);\r\n    setData({ ..._ });\r\n  };\r\n\r\n  var { open, handleClose } = props;\r\n\r\n  React.useEffect(() => {\r\n    const socket = socketIOClient(API_URL);\r\n    socket.on(\"sync_data\", (data) => {\r\n      if (data.status !== \"completed\") {\r\n        setProgress(data?.completed * 100);\r\n      } else {\r\n        setData({\r\n          action_type: \"price_sync\",\r\n          sync_url: \"\",\r\n          new_tagno: [],\r\n        });\r\n        snack.setSnack({\r\n          severity: AlertProps.severity.info,\r\n          msg: `Process Completed ${data.timeElapsed}`,\r\n        });\r\n        socket.close();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleRun = () => {\r\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"TAG Number cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    if (data.sync_url === \"\") {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Sync Data URL cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    if (!warehouse?.id && data.action_type === \"new_uploads\") {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Warehouse is mandatory!\",\r\n      });\r\n      return;\r\n    }\r\n    setProgress(0);\r\n    var Product_lists = data.Product_lists;\r\n    delete data.Product_lists;\r\n    setBackDrop(true);\r\n    sendNetworkRequest(\r\n      \"/product_sync\",\r\n      {},\r\n      {\r\n        ...data,\r\n        warehouse: warehouse?.id,\r\n      }\r\n    )\r\n      .then((res) => {\r\n        setBackDrop(false);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"success\",\r\n          msg: res.message,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setBackDrop(false);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured while processing!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const validatePreSync = () => {\r\n    if (data.sync_url === \"\") {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Sync Data URL cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"TAG Number cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    setBackDrop(true);\r\n    sendNetworkRequest(\"/preSync_validator\", {}, { ...data })\r\n      .then((response) => {\r\n        let errorStatus = true;\r\n        data.new_tagno.forEach((tagno) => {\r\n          if (response[tagno] && !isEmpty(response[tagno])) {\r\n            errorStatus = false;\r\n          }\r\n        });\r\n        setBackDrop(false);\r\n        setValidatedTagNo({\r\n          status: errorStatus,\r\n          errors: !errorStatus ? response : {},\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setBackDrop(false);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n\r\n    axios\r\n      .post(API_URL + \"/file_upload_sync\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully started sync!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Dialog fullScreen open={open} TransitionComponent={Transition}>\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\r\n            Product Sync\r\n          </Typography>\r\n          {data.action_type !== \"price_sync\" && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={validatePreSync}\r\n              disabled\r\n              startIcon={<AssignmentTurnedInOutlinedIcon />}\r\n            >\r\n              {\"Validate Product Sync\"}\r\n            </Button>\r\n          )}\r\n          <Button\r\n            autoFocus\r\n            color=\"inherit\"\r\n            variant=\"outlined\"\r\n            onClick={handleRun}\r\n            startIcon={<SyncIcon />}\r\n            // disabled={\r\n            //   data.action_type !== \"price_sync\" && !validatedTagNo?.status\r\n            // }\r\n          >\r\n            {data.action_type === \"price_sync\"\r\n              ? \"Run Price Sync\"\r\n              : \"Run Product Sync\"}\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid\r\n        className={classes.content}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\" fullWidth required>\r\n            <Typography variant=\"h4\">Choose action type</Typography>\r\n            <RadioGroup\r\n              aria-label=\"action-type\"\r\n              name=\"action_type\"\r\n              value={data.action_type}\r\n              onChange={handleChange}\r\n            >\r\n              <FormControlLabel\r\n                value={\"price_sync\"}\r\n                control={<Radio />}\r\n                label={\"Price Sync\"}\r\n              />\r\n              <FormControlLabel\r\n                value={\"new_uploads\"}\r\n                control={<Radio />}\r\n                label={\"Product Sync\"}\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ padding: \"9px\" }}>\r\n          <TextField\r\n            value={data.sync_url}\r\n            onChange={handleChange}\r\n            rows={15}\r\n            fullWidth\r\n            label={\"Sync Data URL\"}\r\n            name=\"sync_url\"\r\n            variant=\"outlined\"\r\n            required\r\n            inputProps={{ className: classes.textarea }}\r\n          />\r\n        </Grid>\r\n        {data.action_type === \"new_uploads\" && (\r\n          <>\r\n            <Grid item xs={12}>\r\n              <ChooseWareHouse\r\n                warehouse={warehouse}\r\n                setWarehouse={setWarehouse}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <ChipInput\r\n                value={data.new_tagno}\r\n                onAdd={handleAddChip}\r\n                onDelete={handleDeleteChip}\r\n                fullWidth\r\n                newChipKeyCodes={[13, 32]}\r\n                newChipKeys={[\",\"]}\r\n                variant=\"outlined\"\r\n                label={\"TAG Number\"}\r\n                error={errorTagNo.length > 0}\r\n                helperText={\r\n                  errorTagNo.length > 0\r\n                    ? `${errorTagNo.join(\r\n                        \",\"\r\n                      )} already exists syncing again could cause loss of data. Please proceed with caution and validate the same in product edit!`\r\n                    : ``\r\n                }\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n        {!isEmpty(validatedTagNo?.errors) && (\r\n          <Grid item xs={12} className={classes.errorTable}>\r\n            <Typography variant=\"overline\" color=\"error\" style={{ padding: 5 }}>\r\n              {\r\n                \"Below masters are missing respectively, Please add them before syncing products\"\r\n              }\r\n            </Typography>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Tag No.</TableCell>\r\n                  <TableCell align=\"center\">Master Type</TableCell>\r\n                  <TableCell align=\"center\">Value</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data.new_tagno.map(\r\n                  (element, index) =>\r\n                    !isEmpty(validatedTagNo.errors[element]) && (\r\n                      <React.Fragment key={index}>\r\n                        {console.log(\r\n                          Object.keys(validatedTagNo.errors[element]).length\r\n                        )}\r\n                        <TableRow>\r\n                          <TableCell\r\n                            rowSpan={\r\n                              Object.keys(validatedTagNo.errors[element]).length\r\n                            }\r\n                            align=\"center\"\r\n                          >\r\n                            {element}\r\n                          </TableCell>\r\n                          {Object.keys(validatedTagNo.errors[element]).map(\r\n                            (item, i) =>\r\n                              i == 0 && (\r\n                                <React.Fragment key={i}>\r\n                                  <TableCell align=\"center\">{item}</TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    {validatedTagNo.errors[element][item]}\r\n                                  </TableCell>\r\n                                </React.Fragment>\r\n                              )\r\n                          )}\r\n                        </TableRow>\r\n                        {Object.keys(validatedTagNo.errors[element]).map(\r\n                          (item, i) =>\r\n                            i > 0 && (\r\n                              <TableRow key={i}>\r\n                                <TableCell align=\"center\">{item}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                  {validatedTagNo.errors[element][item]}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            )\r\n                        )}\r\n                      </React.Fragment>\r\n                    )\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        )}\r\n        {progress > 0 && (\r\n          <Grid item xs={12}>\r\n            <LinearProgressWithLabel value={progress} />\r\n          </Grid>\r\n        )}\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            component=\"h5\"\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"center\",\r\n              borderBottom: \"1px solid #000\",\r\n              lineHeight: \"0.1em\",\r\n              margin: \"10px 0 20px\",\r\n            }}\r\n          >\r\n            <span style={{ background: \"#fff\", padding: \"0 10px\" }}>OR</span>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <div className={classes.root}>\r\n            <input\r\n              className={classes.input}\r\n              accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n              id=\"file\"\r\n              type=\"file\"\r\n              onChange={(event) => {\r\n                const files = event.target.files;\r\n                if (files) {\r\n                  handleUpload(files[0]);\r\n                }\r\n              }}\r\n            />\r\n            <label htmlFor=\"file\">\r\n              <Tooltip\r\n                title={\r\n                  <div\r\n                    style={{\r\n                      whiteSpace: \"normal\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                  >\r\n                    1.Please make sure data is in sample file format.\r\n                    <br />\r\n                    2.materials,collections,occasions,themes,styles,stone_color,stone_count,hashtags\r\n                    should be comma seperated and already existing in respective\r\n                    masters.\r\n                    <br />\r\n                    3.Diamonds and Gemstones to be added in separate sheets, if\r\n                    multiple entries add each row with same tag no.\r\n                  </div>\r\n                }\r\n                classes={{ tooltip: classes.customWidth }}\r\n                arrow\r\n              >\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  Upload Excel file\r\n                </Button>\r\n              </Tooltip>\r\n            </label>\r\n          </div>\r\n          <IconButton\r\n            onClick={() => {\r\n              const link = document.createElement(\"a\");\r\n              link.download = `sample_upload.xlsx`;\r\n              link.href =\r\n                \"https://s3.ap-southeast-1.amazonaws.com/media.nacjewellers.com/resources/assets/sample_upload.xlsx\";\r\n              link.click();\r\n            }}\r\n          >\r\n            <CloudDownloadIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Backdrop className={classes.backdrop} open={backDrop}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </Grid>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProductSync;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport { PRODUCTFILTERMASTER } from \"../../graphql/query\";\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Product from \"../../components/Products\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ProductFilter } from \"../../components\";\r\nimport ProductSync from \"./ProductSync\";\r\n\r\nexport const Productlist = withRouter(\r\n  withApollo((props) => {\r\n    const [masters, setMasters] = useState({});\r\n    const [filterparams, setFilterparams] = useState({});\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    function onFilter(filterobj) {\r\n      let filtercontent = {};\r\n\r\n      if (filterobj.product_category) {\r\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\r\n        // alert(JSON.stringify(categoryname))\r\n      }\r\n      if (filterobj.product_type) {\r\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\r\n        // alert(JSON.stringify(categoryname))\r\n      }\r\n      setFilterparams({\r\n        ...filterparams,\r\n        ...filtercontent,\r\n      });\r\n      // fetchadminusers()\r\n    }\r\n    function onSearch(searchtext) {\r\n      //  alert(searchtext)\r\n      setFilterparams({\r\n        ...filterparams,\r\n        searchtext,\r\n      });\r\n      // fetchadminusers()\r\n    }\r\n    useEffect(() => {\r\n      const query = props.client.query;\r\n      query({\r\n        query: PRODUCTFILTERMASTER,\r\n        fetchPolicy: \"network-only\",\r\n      })\r\n        .then((data) => {\r\n          if (data) {\r\n            let product_categories = data.data.allMasterProductCategories.nodes;\r\n            let product_types = data.data.allMasterProductTypes.nodes;\r\n            setMasters({\r\n              product_categories,\r\n              product_types,\r\n            });\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"smbcj\");\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\r\n          <Grid fullwidth item xs={6} sm={6}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              Products\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\r\n            <Link underline=\"none\">\r\n              <Button variant=\"contained\" color=\"primary\" disabled>\r\n                Add New Product\r\n              </Button>\r\n            </Link>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen} style={{ marginLeft: 2 }}>\r\n              Product Sync\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <ProductFilter masters={masters} onSearch={onSearch} onFilter={onFilter} />\r\n        <Product filterparams={filterparams} />\r\n        <ProductSync open={open} handleClose={handleClose} />\r\n      </Grid>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Productlist;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport clsx from \"clsx\";\r\n\r\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { Input } from \"../../components/Input.js\";\r\nimport { ProductContext } from \"../../context\";\r\nimport FullLoader from \"../../components/Loader\";\r\nimport \"./Productupload.css\";\r\nimport Select from \"react-select\";\r\nimport \"./floating_dropdown.css\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  Divider,\r\n  RadioGroup,\r\n  Radio,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\r\nimport { arrayIncludes } from \"@material-ui/pickers/_helpers/utils\";\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  dropdownlayout: {\r\n    \"& .menu\": {\r\n      position: \"Relative !important\",\r\n    },\r\n  },\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  alert: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  formGroup: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  fieldGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  fieldHint: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1),\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1,\r\n  },\r\n  dateField: {\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddressForm(props) {\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [initailRingSize, updateRingSize] = useState([]);\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  React.useEffect(async () => {\r\n    fetch(GRAPHQL_DEV_CLIENT, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\r\n  }, []);\r\n\r\n  React.useEffect(() => {}, [productCtx]);\r\n  // const handleChange = selectedOption => {\r\n\r\n  // };\r\n  const handlesizeChange = (selectedOption) => {\r\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\r\n  };\r\n  const handlevendorChange = (selectedOption) => {\r\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\r\n  };\r\n\r\n  const changeproducttype = (type) => (event, newvalue) => {\r\n    setProductCtx({ ...productCtx, product_type: newvalue });\r\n  };\r\n  const handlechange = (type) => (selectedOption) => {\r\n    if (type === \"product_type\") {\r\n      if (selectedOption) {\r\n        var size = \"\";\r\n        var minvalue = 0;\r\n        var maxvalue = 0;\r\n        var selected_sizes = [];\r\n        var default_size = 0;\r\n        if (selectedOption.shortCode === \"K\") {\r\n          selected_sizes.push({\r\n            value: \"XS\",\r\n            label: \"XS\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"S\",\r\n            label: \"S\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"M\",\r\n            label: \"M\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"L\",\r\n            label: \"L\",\r\n          });\r\n        } else {\r\n          // if (\r\n          //   selectedOption.shortCode === \"R\" &&\r\n          //   productCtx.selectedgender.name === \"Male\"\r\n          // ) {\r\n          //   minvalue = 13;\r\n          //   maxvalue = 25;\r\n          //   default_size = 15;\r\n          // }\r\n          // if (\r\n          //   selectedOption.shortCode === \"R\" &&\r\n          //   productCtx.selectedgender.name === \"Female\"\r\n          // ) {\r\n          //   minvalue = 8;\r\n          //   maxvalue = 23;\r\n          //   default_size = 12;\r\n          // }\r\n          // for (var i = minvalue; i < maxvalue; i++) {\r\n          //   selected_sizes.push({\r\n          //     value: i,\r\n          //     label: \"\" + i,\r\n          //   });\r\n          // }\r\n        }\r\n\r\n        setProductCtx({\r\n          ...productCtx,\r\n          product_type_shortcode: selectedOption.shortCode,\r\n          product_type: selectedOption,\r\n          size,\r\n          default_size,\r\n          selected_sizes,\r\n        });\r\n      } else {\r\n        setProductCtx({\r\n          ...productCtx,\r\n          product_type_shortcode: \"\",\r\n          product_type: \"\",\r\n          size,\r\n          selected_sizes: \"\",\r\n        });\r\n      }\r\n    } else {\r\n      setProductCtx({ ...productCtx, [type]: selectedOption });\r\n    }\r\n  };\r\n  const handleTextChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    if (type === \"vendorcode\") {\r\n      setProductCtx({\r\n        ...productCtx,\r\n        [type]: value,\r\n        vendorleadtime: value.vendorDelivaryDays,\r\n      });\r\n    } else {\r\n      setProductCtx({ ...productCtx, [type]: value });\r\n    }\r\n  };\r\n\r\n  const switchisorderable = (event) => {\r\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\r\n  };\r\n\r\n  const purityChange = (type) => (selectedOption) => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption });\r\n  };\r\n\r\n  const handleGenderChange = (type) => (event, value) => {\r\n    var minvalue = 0;\r\n    var maxvalue = 0;\r\n    var selected_sizes = [];\r\n    var sizes = [];\r\n    var default_size = 0;\r\n    // if (productCtx.product_type.shortCode === \"K\") {\r\n    //   default_size = \"XS\";\r\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\r\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\r\n    // } else {\r\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\r\n    //   minvalue = 13;\r\n    //   maxvalue = 26;\r\n    //   default_size = \"\" + 15;\r\n    // }\r\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\r\n    //   minvalue = 8;\r\n    //   maxvalue = 24;\r\n    //   default_size = \"\" + 12;\r\n    // }\r\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Male\") {\r\n    //   minvalue = 13;\r\n    //   maxvalue = 26;\r\n    //   default_size = \"\" + 15;\r\n    // }\r\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Female\") {\r\n    //   minvalue = 8;\r\n    //   maxvalue = 24;\r\n    //   default_size = \"\" + 12;\r\n    // }\r\n\r\n    // for (var i = minvalue; i < maxvalue; i++) {\r\n    // selected_sizes.push(\"\" + i);\r\n    // sizes.push(\"\" + i);\r\n    // }\r\n\r\n    // if (productCtx.product_type.shortCode !== \"K\" ) {\r\n     \r\n      // updateRingSize(\r\n      //   initailRingSize.sort(\r\n      //     (a, b) => parseFloat(a.sizeValue) - parseFloat(b.sizeValue)\r\n      //   )\r\n      // );\r\n    \r\n\r\n    initailRingSize.forEach((e) => {\r\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\r\n        selected_sizes.push(\"\" + e.sizeValue);\r\n        sizes.push(\"\" + e.sizeValue);\r\n      }\r\n    });\r\n    // }\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n      sizes,\r\n      selected_sizes,\r\n      default_size,\r\n    });\r\n  };\r\n\r\n  const handleMaterialChange = (type) => (event, value) => {\r\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\r\n    if (value) {\r\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\r\n        if (steps.indexOf(\"Step3\") === -1) {\r\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\r\n        }\r\n      }\r\n    }\r\n    setProductCtx({ ...productCtx, [type]: value, steps });\r\n  };\r\n\r\n  const handleInputChange = (type) => (e) => {\r\n    var size = productCtx.size;\r\n    var materials = productCtx.materials;\r\n    var selected_sizes = productCtx.selected_sizes;\r\n\r\n    if (type === \"selectedgender\") {\r\n      var minvalue = 0;\r\n      var maxvalue = 0;\r\n      selected_sizes = [];\r\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\r\n      //   size = \"13-25\";\r\n      //   minvalue = 13;\r\n      //   maxvalue = 26;\r\n      // }\r\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\r\n      //   size = \"8-18\";\r\n      //   minvalue = 8;\r\n      //   maxvalue = 19;\r\n      // }\r\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Male\") {\r\n      //   size = \"13-25\";\r\n      //   minvalue = 13;\r\n      //   maxvalue = 26;\r\n      // }\r\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Female\") {\r\n      //   size = \"8-18\";\r\n      //   minvalue = 8;\r\n      //   maxvalue = 19;\r\n      // }\r\n\r\n      // for (var i = minvalue; i < maxvalue; i++) {\r\n      //   selected_sizes.push({\r\n      //     value: i,\r\n      //     label: \"\" + i,\r\n      //   });\r\n      // }\r\n    }\r\n\r\n    if (type === \"product_categoy\") {\r\n      if (e.target.value === \"Platinum Jewellery\") {\r\n        materials.push(\"Platinum Jewellery\");\r\n        var index = materials.indexOf(\"Silver Jewellery\");\r\n\r\n        if (index >= 0) {\r\n          materials.splice(index, 1);\r\n        }\r\n      } else if (e.target.value === \"Silver Jewellery\") {\r\n        materials.push(\"Silver Jewellery\");\r\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\r\n        if (index1 >= 0) {\r\n          materials.splice(index1, 1);\r\n        }\r\n      } else {\r\n        var indexval = materials.indexOf(\"Silver Jewellery\");\r\n\r\n        if (indexval >= 0) {\r\n          materials.splice(indexval, 1);\r\n        }\r\n        indexval = materials.indexOf(\"Platinum Jewellery\");\r\n        if (indexval >= 0) {\r\n          materials.splice(indexval, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      size,\r\n      [type]: e,\r\n      materials,\r\n      selected_sizes,\r\n    });\r\n  };\r\n\r\n  const materialChange = (type) => (selectedOption) => {\r\n    //   let material = { ...productCtx.material, [type]: selectedOption }\r\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\r\n    //   if(material.material)\r\n    //   {\r\n    //   material.material.forEach(element => {\r\n    let material_names = [];\r\n    if (selectedOption) {\r\n      selectedOption.forEach((element) => {\r\n        material_names.push(element.name);\r\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\r\n          if (steps.indexOf(\"Step3\") === -1) {\r\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\r\n          }\r\n        }\r\n      });\r\n    }\r\n    //   });\r\n    // }\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: selectedOption,\r\n      steps,\r\n      material_names,\r\n    });\r\n  };\r\n  const keyPress = (type) => (e) => {\r\n    const re = /^[a-zA-Z \\b]+$/;\r\n    if (e.target.value === \"\" || re.test(e.target.value)) {\r\n      setProductCtx({ ...productCtx, [type]: e.target.value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {/* <FullLoader /> */}\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={6} spacing={1}>\r\n            <Card {...rest} className={clsx(classes.root, className)}>\r\n              <CardHeader title=\"Product Information 1\" />\r\n              <Divider />\r\n              <CardContent className={classes.cardcontent}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} sm={12} spacing={1}>\r\n                    <Input\r\n                      className={classes.helperinput}\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={productCtx.productname}\r\n                      id=\"productname\"\r\n                      error={productCtx.error_message.productname}\r\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\r\n                      name=\"productname\"\r\n                      label=\"Product Name\"\r\n                      onChange={keyPress(\"productname\")}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\r\n                    <Autocomplete\r\n                      id=\"product_category\"\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.product_categoy}\r\n                      onChange={handleoptionChange(\"product_categoy\")}\r\n                      options={productCtx.masterData.category.map(\r\n                        (option) => option.label\r\n                      )}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip\r\n                            variant=\"outlined\"\r\n                            label={option.label}\r\n                            {...getTagProps({ index })}\r\n                          />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Select Product Category\"\r\n                          margin=\"dense\"\r\n                          error={productCtx.error_message.product_categoy}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} spacing={1}>\r\n                    <Autocomplete\r\n                      id=\"product_type\"\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={(option) => option.label}\r\n                      defaultValue={productCtx.product_type}\r\n                      options={productCtx.masterData.product_type}\r\n                      onChange={handleoptionChange(\"product_type\")}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip\r\n                            variant=\"outlined\"\r\n                            label={option.label}\r\n                            {...getTagProps({ index })}\r\n                          />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Select Product Type\"\r\n                          margin=\"dense\"\r\n                          variant=\"outlined\"\r\n                          error={productCtx.error_message.product_type}\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {productCtx.product_type ? (\r\n              <>\r\n                <Card {...rest} className={clsx(classes.root, className)}>\r\n                  <CardHeader title=\"Product Information 2\" />\r\n                  <Divider />\r\n                  <CardContent className={classes.cardcontent}>\r\n                    <Grid container spacing={1}>\r\n                      {productCtx.product_type ? (\r\n                        <>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <Autocomplete\r\n                              id=\"free-solo-2-demo\"\r\n                              multiple\r\n                              className={classes.fixedTag}\r\n                              defaultValue={productCtx.material_names}\r\n                              options={productCtx.masterData.material.map(\r\n                                (option) => option.label\r\n                              )}\r\n                              onChange={handleMaterialChange(\"material_names\")}\r\n                              renderTags={(value, getTagProps) =>\r\n                                value.map((option, index) => (\r\n                                  <Chip\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    label={option}\r\n                                    {...getTagProps({ index })}\r\n                                  />\r\n                                ))\r\n                              }\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label=\"Select Product Materials\"\r\n                                  margin=\"dense\"\r\n                                  variant=\"outlined\"\r\n                                  error={\r\n                                    productCtx.error_message.material_names\r\n                                  }\r\n                                  fullWidth\r\n                                  InputProps={{\r\n                                    ...params.InputProps,\r\n                                    type: \"search\",\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Grid>\r\n                        </>\r\n                      ) : null}\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Autocomplete\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          defaultValue={productCtx.selectedgender}\r\n                          options={productCtx.masterData.gender.map(\r\n                            (option) => option.label\r\n                          )}\r\n                          onChange={handleGenderChange(\"selectedgender\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                label={option}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Select Gender\"\r\n                              margin=\"dense\"\r\n                              error={productCtx.error_message.selectedgender}\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\r\n                      </Grid>\r\n                      <Grid item xs={6} sm={6}>\r\n                        <Autocomplete\r\n                          multiple\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          getOptionLabel={(option) => option.label}\r\n                          defaultValue={productCtx.metalpurity}\r\n                          options={productCtx.masterData.metalpurity}\r\n                          onChange={handleoptionChange(\"metalpurity\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                label={option.label}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Metal Purity\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              error={productCtx.error_message.metalpurity}\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\r\n                      </Grid>\r\n                      <Grid item xs={6} sm={6}>\r\n                        <Autocomplete\r\n                          multiple\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          getOptionLabel={(option) => option.label}\r\n                          defaultValue={productCtx.metalcolour}\r\n                          options={productCtx.masterData.metalcolour}\r\n                          onChange={handleoptionChange(\"metalcolour\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                label={option.label}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Metal Colour\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              error={productCtx.error_message.metalcolour}\r\n                              fullWidth\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={6}>\r\n            {productCtx.product_type ? (\r\n              <>\r\n                <Card {...rest} className={clsx(classes.root, className)}>\r\n                  <CardHeader title=\"Vendor Information\" />\r\n                  <Divider />\r\n                  <CardContent className={classes.cardcontent}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Autocomplete\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          defaultValue={productCtx.vendorcode}\r\n                          getOptionLabel={(option) => option.label}\r\n                          options={productCtx.masterData.vendorcode}\r\n                          onChange={handleoptionChange(\"vendorcode\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                label={option.label}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Select Vendor Code\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              error={productCtx.error_message.vendorcode}\r\n                              fullWidth\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <Input\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          label=\"Vendor Product Code\"\r\n                          fullWidth\r\n                          className={classes.helperinput}\r\n                          value={productCtx.productvendorcode}\r\n                          error={productCtx.error_message.productvendorcode}\r\n                          id=\"productvendorcode\"\r\n                          name=\"productvendorcode\"\r\n                          onChange={handleTextChange(\"productvendorcode\")}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <Input\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          label=\"Vendor Lead Time\"\r\n                          fullWidth\r\n                          className={classes.helperinput}\r\n                          error={productCtx.error_message.vendorleadtime}\r\n                          value={productCtx.vendorleadtime}\r\n                          InputLabelProps={{\r\n                            shrink: productCtx.vendorleadtime,\r\n                          }}\r\n                          id=\"vendorleadtime\"\r\n                          name=\"vendorleadtime\"\r\n                          onChange={handleTextChange(\"vendorleadtime\")}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <FormControl component=\"fieldset\">\r\n                          <FormLabel component=\"legend\">\r\n                            IsReorderable\r\n                          </FormLabel>\r\n                          <RadioGroup\r\n                            aria-label=\"position\"\r\n                            name=\"position\"\r\n                            value={productCtx.isreorderable}\r\n                            onChange={switchisorderable}\r\n                            row\r\n                          >\r\n                            <FormControlLabel\r\n                              value=\"Yes\"\r\n                              control={<Radio color=\"primary\" />}\r\n                              label=\"Yes\"\r\n                              labelPlacement=\"right\"\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"No\"\r\n                              control={<Radio color=\"primary\" />}\r\n                              label=\"No\"\r\n                              labelPlacement=\"right\"\r\n                            />\r\n                          </RadioGroup>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>{\" \"}\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={12}>\r\n                {productCtx.product_type ? (\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader\r\n                      title=\"Default SKU For Display\r\n  \"\r\n                    />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_category\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.default_metal_colour}\r\n                            onChange={handleoptionChange(\r\n                              \"default_metal_colour\"\r\n                            )}\r\n                            options={productCtx.metalcolour.map(\r\n                              (option) => option.label\r\n                            )}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option.label}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Metal Colour\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={\r\n                                  productCtx.error_message.default_metal_colour\r\n                                }\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_category\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.default_metal_purity}\r\n                            onChange={handleoptionChange(\r\n                              \"default_metal_purity\"\r\n                            )}\r\n                            options={productCtx.metalpurity.map(\r\n                              (option) => option.label\r\n                            )}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option.label}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Metal Purity\"\r\n                                margin=\"dense\"\r\n                                error={\r\n                                  productCtx.error_message.default_metal_purity\r\n                                }\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>\r\n                ) : null}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              {productCtx.product_type &&\r\n              (productCtx.product_type.shortCode === \"K\" ||\r\n                productCtx.product_type.shortCode === \"R\" ||\r\n                productCtx.product_type.shortCode === \"BA\") &&\r\n              productCtx.sizes.length > 0 ? (\r\n                <>\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader title=\"Size Information\" />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"free-solo-2-demo\"\r\n                            multiple\r\n                            freeSolo\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.selected_sizes}\r\n                            options={productCtx.sizes}\r\n                            onChange={handleoptionChange(\"selected_sizes\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Ring Sizes\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.selected_sizes}\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_type\"\r\n                            className={classes.fixedTag}\r\n                            freeSolo\r\n                            defaultValue={productCtx.default_size}\r\n                            options={productCtx.selected_sizes}\r\n                            onChange={handleoptionChange(\"default_size\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Select Default Size\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.default_size}\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>{\" \"}\r\n                </>\r\n              ) : null}\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              {productCtx.product_type &&\r\n              productCtx.product_type.alias === \"Earrings\" ? (\r\n                <>\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader title=\"Type of Fit\" />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                          <Autocomplete\r\n                            id=\"free-solo-2-demo\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.earringbacking}\r\n                            options={productCtx.masterData.earringbacking.map(\r\n                              (option) => option.label\r\n                            )}\r\n                            onChange={handleoptionChange(\"earringbacking\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  label={option.label}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Earring Backing\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.earringbacking}\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>{\" \"}\r\n                </>\r\n              ) : null}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}></Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Select from 'react-select';\r\nimport { View, Text} from \"react-primitives\";\r\nimport \"../screens/Productupload/Productupload.css\"\r\n\r\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\r\n  position: 'absolute',\r\n  transition: 'all .25s',\r\n  pointerEvents: 'none',\r\n  top: placeholderUp ? -8 : 10,\r\n  left: 8,\r\n  zIndex: placeholderzindex,\r\n  paddingLeft: 8,\r\n  paddingRight: 8,\r\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\r\n  fontSize: placeholderUp ? 12 : 15,\r\n  color: placeholderUp ? '#3F51B5' : '#263238',\r\n}));\r\n\r\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\r\n  position: 'relative',\r\n  display: 'flex',\r\n  zIndex: selectzindex\r\n}));\r\n\r\nconst SelectView = props => {\r\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\r\n  return (\r\n    <SelectContainer selectzindex={selectzindex}>\r\n      <Select \r\n        fullWidth\r\n        isClearable\r\n      {...props} placeholder=\"\" />\r\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\r\n    </SelectContainer>\r\n  );\r\n};\r\n\r\nclass SelectPlaceholder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      placeholderUp: false,\r\n      placeholderzindex : 1\r\n    };\r\n  }\r\n\r\n  onFocus = () => {\r\n    const { onFocus } = this.props;\r\n    this.setState({ placeholderUp: true });\r\n    onFocus && onFocus();\r\n  };\r\n\r\n  onBlur = () => {\r\n    const { value, onBlur } = this.props;\r\n    onBlur && onBlur();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SelectView\r\n      className={'dropdownlayout'}\r\n        fullWidth\r\n        {...this.props}\r\n        onBlur={this.onBlur}\r\n        onFocus={this.onFocus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectPlaceholder;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {Checkbox,\r\n  Card,\r\n  CardHeader,\r\n  TextField,\r\n  Divider,\r\n  Chip,\r\nCardContent} from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Select from 'react-select';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { ProductContext } from '../../context';\r\nimport Box from '@material-ui/core/Box';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\n\r\nimport \"./Productupload.css\"\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n}));\r\n\r\n\r\nexport default function PaymentForm(props) {\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const materialChange = type => e => {\r\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\r\n    setProductCtx({ ...productCtx, selected_metal_colour })\r\n    }\r\n  const purityChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]:selectedOption })\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n  \r\n      setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n<Grid container  spacing={1}> \r\n    <Grid item xs={12} sm={6}>\r\n      <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n      <Grid container spacing={1}>\r\n      <Grid item container xs={12} sm={12}>\r\n      <Grid item xs={6} sm={3}>\r\n\r\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\r\n                  <Input\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      disabled\r\n                      id=\"size\"\r\n                      onChange={handleInputChange('product_code')}\r\n                      name=\"size\"\r\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\r\n                      \r\n                      />\r\n                      </Grid>\r\n     </Grid>\r\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\r\n      <>\r\n     <Grid item xs={4} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Height\"\r\n          name=\"size\"\r\n          autoComplete=\"size\"\r\n          onChange = {handleInputChange('metal_height')}\r\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\r\n          \r\n          />\r\n     </Grid> \r\n\r\n    <Grid item xs={4} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Width\"\r\n          name=\"size\"\r\n          onChange = {handleInputChange('metal_width')}\r\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\r\n\r\n          autoComplete=\"size\"\r\n          \r\n          />\r\n    </Grid>\r\n    </>\r\n     }\r\n      \r\n   \r\n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Length\"\r\n          name=\"size\"\r\n          autoComplete=\"size\"\r\n          onChange = {handleInputChange('metal_length')}\r\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\r\n\r\n          />\r\n    </Grid> : null }\r\n  \r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Enter weights for different Purity\r\n\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container spacing={1}>\r\n\r\n    <Grid item xs={12}>\r\n\r\n    </Grid>\r\n    {productCtx.metalpurity.map(row => (\r\n  \r\n  <Grid item container xs={12} spacing={2} >\r\n    \r\n    <Grid item xs={6} >\r\n\r\n      <Input\r\n    variant=\"outlined\"\r\n    disabled\r\n    margin=\"dense\"\r\n    fullWidth\r\n    id=\"size\"\r\n    label=\"Purity\"\r\n    name=\"size\"\r\n    autoComplete=\"size\"\r\n    value={row.name}\r\n    />\r\n</Grid>\r\n    <Grid item xs={6} >\r\n\r\n<Input\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    id=\"size\"\r\n    label=\"Weight\"\r\n    name=\"size\"\r\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\r\n    autoComplete=\"size\"\r\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\r\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\r\n    />\r\n</Grid>\r\n    </Grid> ))}\r\n\r\n      </Grid>\r\n      </CardContent>\r\n</Card>\r\n</Grid>\r\n<Grid item xs={12} sm={6}>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} sm={12} spacing={2}>\r\n    <Grid item xs={6} sm={6} >\r\n                   \r\n                      \r\n           <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.themes}\r\n                      onChange={handleoptionChange('themes')}\r\n                      options={productCtx.masterData.themes.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Themes\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.themes}\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n           \r\n           \r\n            </Grid>\r\n   \r\n    <Grid item xs={12} sm={6}>\r\n                     \r\n    \r\n\r\n              <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.prod_styles}\r\n                      onChange={handleoptionChange('prod_styles')}\r\n                      options={productCtx.masterData.styles.map(option => option.label)}\r\n\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Style\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.prod_styles}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n      \r\n    \r\n          <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.occassions}\r\n                      onChange={handleoptionChange('occassions')}\r\n                      options={productCtx.masterData.occasions.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Occasions\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.occassions}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n  \r\n   \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.collections}\r\n                      onChange={handleoptionChange('collections')}\r\n                      options={productCtx.masterData.collections.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.collections}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n              </Grid>\r\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\r\n              <>\r\n               <Grid item xs={12} sm={6} >\r\n    \r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecount}\r\n                      onChange={handleoptionChange('stonecount')}\r\n                      options={productCtx.masterData.stones.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"No of Stones\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n    \r\n  \r\n\r\n<Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecolour}\r\n                      onChange={handleoptionChange('stonecolour')}\r\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Stone Colour\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    </> : null }\r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n\r\n</Grid>\r\n</Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React,{useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from 'react-select';\r\nimport { ProductContext } from '../../context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  TextField,\r\n  Divider,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport \"./Productupload.css\"\r\nimport { func } from 'prop-types';\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    fixedTag: {\r\n      padding: 0,\r\n      '& .MuiOutlinedInput-root':{\r\n        padding: 0,\r\n      }\r\n    },\r\n    root:{\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    table:{\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: theme.spacing(0),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      width: '100%'\r\n    },\r\n    gempapper: {\r\n      padding: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n      width: '100%'\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  \r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const inputLabel = React.useRef(null);\r\n  const { className, ...rest } = props;\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const handleChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption })\r\n  };\r\n  function editmaterial(name) {\r\n    clearmetalvalue();\r\n    assignvalue(productCtx.metals[name], name);\r\n  }\r\n  function deletematerial(name) {\r\n    clearmetalvalue();\r\n    var metalsarr  = productCtx.metals;\r\n    metalsarr.splice(name,1)\r\n    setProductCtx({ ...productCtx, metals: metalsarr }) \r\n\r\n  }\r\n\r\n  const handleoptionChange = type => (event, value) => {\r\n    \r\n      setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  }\r\n  function clearmetalvalue()\r\n  {\r\n    // for(let value in initialState){\r\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\r\n    //     setProductCtx({  \r\n    //       [value]:initialState[value]\r\n    //     })\r\n    //   }\r\n    // }\r\n    setProductCtx({...productCtx,\r\n      diamondsettings: \"\",\r\n      diamondcolor:\"\",\r\n      diamondclarity:\"\",\r\n      diamondshape:\"\",\r\n      diamondcount:\"\",\r\n      diamondweight:\"\",\r\n      gemstonetype:\"\",\r\n      gemstoneshape:\"\",\r\n      gemstonesettings:\"\",\r\n      gemstonesize:\"\",\r\n      gemstonecount:\"\",\r\n      gemstoneweight:\"\"\r\n    })\r\n    // alert(productCtx)\r\n    // console.log(productCtx)\r\n    \r\n\r\n  }\r\n  function assignvalue(metalobj, indexval)\r\n  {\r\n    if(metalobj.metalname === 'Diamond')\r\n    {\r\n    setProductCtx({ ...productCtx, \r\n      diamondsettings: metalobj.settings,\r\n      diamondcolor:metalobj.color,\r\n      diamondclarity:metalobj.clarity,\r\n      diamondshape:metalobj.shape,\r\n      diamondcount:metalobj.count,\r\n      diamondweight:metalobj.weight,\r\n    metalindex: indexval})\r\n    }else\r\n    {\r\n      setProductCtx({ ...productCtx, \r\n        gemstonesettings: metalobj.settings,\r\n        gemstoneshape:metalobj.color,\r\n        gemstonetype:metalobj.clarity,\r\n        gemstonesize:metalobj.shape,\r\n        gemstonecount:metalobj.count,\r\n        gemstoneweight:metalobj.weight,\r\n      metalindex: indexval})\r\n    }\r\n\r\n  }\r\n  function handleClick(e) {\r\n    var metalsarr  = productCtx.metals;\r\n    var stonedetails = {};\r\n    stonedetails['metalname'] = productCtx.metal.label;\r\n    var isvalid = true\r\n    if(productCtx.diamondclarity)\r\n    {\r\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\r\n      productCtx.diamondweight)\r\n      {      stonedetails['metalname'] = \"Diamond\"\r\n    stonedetails['settings'] = productCtx.diamondsettings;\r\n    stonedetails['color'] = productCtx.diamondcolor;\r\n    stonedetails['clarity'] = productCtx.diamondclarity;\r\n    stonedetails['shape'] = productCtx.diamondshape;\r\n    stonedetails['count'] = productCtx.diamondcount;\r\n    stonedetails['weight'] = productCtx.diamondweight;\r\n      }else\r\n      {\r\n        isvalid = false\r\n        alert(\"Fill all fields\")\r\n      }\r\n\r\n    }else{\r\n      if(productCtx.gemstonetype && \r\n        productCtx.gemstoneshape && \r\n        productCtx.gemstonesettings && \r\n        productCtx.gemstonesize && productCtx.gemstonecount &&\r\n        productCtx.gemstoneweight)\r\n        { \r\n      stonedetails['metalname'] = \"Gemstone\"\r\n      stonedetails['clarity'] = productCtx.gemstonetype;\r\n      stonedetails['color'] = productCtx.gemstoneshape;\r\n      stonedetails['settings'] = productCtx.gemstonesettings;\r\n      stonedetails['shape'] = productCtx.gemstonesize;\r\n      stonedetails['count'] = productCtx.gemstonecount;\r\n      stonedetails['weight'] = productCtx.gemstoneweight;\r\n    }else\r\n    {\r\n      isvalid = false\r\n      alert(\"Fill all fields\")\r\n    }\r\n    }\r\n\r\n    if(isvalid)\r\n    {\r\n    if(productCtx.metalindex === -1)\r\n    {\r\n      stonedetails['id'] = metalsarr.length;\r\n\r\n      metalsarr.push(stonedetails) \r\n\r\n    }else\r\n    {\r\n      stonedetails['id'] = productCtx.metalindex\r\n\r\n      metalsarr[productCtx.metalindex] = stonedetails;\r\n    }\r\n    setProductCtx({ ...productCtx, metals: metalsarr })\r\n    clearmetalvalue()\r\n  }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \r\n\r\n      <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      fullWidth\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container xs={12} spacing={1}>\r\n\r\n        <Grid container xs={12} spacing={1}>\r\n\r\n        <Grid item xs={4} >\r\n                   \r\n\r\n                <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondclarity}\r\n                    options={productCtx.masterData.diamondclarities}\r\n                    onChange={handleoptionChange('diamondclarity')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Type/Clarity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n              \r\n        </Grid>\r\n\r\n        <Grid item xs={4} >\r\n        \r\n                      \r\n\r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondcolor}\r\n                    options={productCtx.masterData.diamondcolors}\r\n                    onChange={handleoptionChange('diamondcolor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Colour\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n        \r\n        </Grid>\r\n        <Grid item xs={4} >\r\n        \r\n          \r\n\r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondsettings}\r\n                    options={productCtx.masterData.diamondsettings}\r\n                    onChange={handleoptionChange('diamondsettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Setting\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n        </Grid>\r\n        <Grid item xs={4} >\r\n      \r\n       \r\n                      <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondshape}\r\n                    options={productCtx.masterData.diamondshapes}\r\n                    onChange={handleoptionChange('diamondshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n        \r\n        </Grid>\r\n        <Grid item xs={4} >\r\n        \r\n          <Input\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondcount')}\r\n              value={productCtx.diamondcount}\r\n              />\r\n        </Grid>\r\n        <Grid item xs={4} >\r\n      \r\n          <Input\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Weight\"\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondweight')}\r\n              value={productCtx.diamondweight}\r\n              />\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"flex-end\">\r\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\r\n            Add Diamond\r\n          </Button>\r\n\r\n        </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n        </CardContent>\r\n        </Card>\r\n   }\r\n\r\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \r\n\r\n  \r\n       <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n\r\n          <Grid  container xs={12} spacing={1}>\r\n\r\n      <Grid item xs={4} >\r\n      \r\n                 \r\n                       <Autocomplete\r\n                    \r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstonetype}\r\n                    options={productCtx.masterData.gemstontypes}\r\n                    onChange={handleoptionChange('gemstonetype')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n              \r\n      </Grid>\r\n    \r\n      <Grid item xs={4} >\r\n    \r\n          \r\n\r\n<Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstoneshape}\r\n                    options={productCtx.masterData.gemstonshapes}\r\n                    onChange={handleoptionChange('gemstoneshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      \r\n      </Grid>\r\n      <Grid item xs={4} >\r\n      \r\n          \r\n                    <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstonesettings}\r\n                    options={productCtx.masterData.gemstonesettings}\r\n                    onChange={handleoptionChange('gemstonesettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Setting\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      </Grid>\r\n      <Grid item xs={4} >\r\n    \r\n      <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"Gemstone Size\"\r\n            name=\"size\"\r\n            onChange={handleInputChange('gemstonesize')}\r\n            autoComplete=\"size\"\r\n            value={productCtx.gemstonesize}\r\n            />\r\n      \r\n      \r\n      </Grid>\r\n      <Grid item xs={4} >\r\n      \r\n        <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstonecount')}\r\n            value={productCtx.gemstonecount}\r\n            />\r\n      </Grid>\r\n      <Grid item xs={4} >\r\n        \r\n        <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"Weight\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstoneweight')}\r\n            value={productCtx.gemstoneweight}\r\n            />\r\n      </Grid>\r\n      <Grid container item xs={12} justify=\"flex-end\">\r\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\r\n          Add Gemstone\r\n        </Button>\r\n\r\n      </Grid>\r\n      </Grid>\r\n            </CardContent>\r\n            </Card>}\r\n\r\n            <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n    <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Stone</TableCell>\r\n            <TableCell align=\"right\">Type/Clarity</TableCell>\r\n            <TableCell align=\"right\">Colour</TableCell>\r\n            <TableCell align=\"right\">Setting</TableCell>\r\n            <TableCell align=\"right\">Shape</TableCell>\r\n            <TableCell align=\"right\">#of stone</TableCell>\r\n            <TableCell align=\"right\">Weight</TableCell>\r\n            <TableCell align=\"center\">Edit</TableCell>\r\n            <TableCell align=\"center\">Delete</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {productCtx.metals.map(row => (\r\n            <TableRow key={row.metalname}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.metalname}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\r\n              <TableCell align=\"right\">{row.color.label}</TableCell>\r\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\r\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\r\n              <TableCell align=\"right\">{row.count}</TableCell>\r\n              <TableCell align=\"right\">{row.weight}</TableCell>\r\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\r\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\r\n\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      </CardContent>\r\n      </Card>\r\n         \r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from 'react-select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport { ProductContext } from '../../context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Multiselect from '../../components/Select';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\nCardContent} from '@material-ui/core';\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    fixedTag: {\r\n      padding: 0,\r\n      '& .MuiOutlinedInput-root':{\r\n        padding: 0,\r\n      }\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  function createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n  }\r\n  \r\n  const rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  const theme = useTheme();\r\n  const inputLabel = React.useRef(null);\r\n\r\n\r\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const handleChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\r\n  };\r\n  const handlemetalcolorChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\r\n  };\r\n  const handlediamndcolorChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\r\n  };\r\n  const handlediamndclarityChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\r\n  };\r\n\r\n  const handlemetalpurityChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\r\n  };\r\n  function handleClick(e) {\r\n    var metalsarr  = productCtx.metals;\r\n    metalsarr.push(\"test\") \r\n    setProductCtx({ ...productCtx, metals: metalsarr })\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Default SKU For Display\r\n\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\r\n    \r\n    \r\n    \r\n    \r\n    <Grid item xs={4} >\r\n\r\n                  \r\n                \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_colour}\r\n                      onChange={handleChange('default_metal_colour')}\r\n                      options={productCtx.metalcolour}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Metal Colour\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={4} >\r\n           \r\n\r\n                <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_purity}\r\n                      onChange={handleChange('default_metal_purity')}\r\n                      options={productCtx.metalpurity}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Metal Purity\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n   \r\n    </Grid>\r\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \r\n    <Grid item xs={4} >\r\n           \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      isDisabled \r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_size}\r\n                      onChange={handleChange('default_metal_size')}\r\n                      options={productCtx.selected_sizes}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Default Size\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n   \r\n    </Grid> : null}\r\n    {/* <Grid item xs={3} >\r\n                <Select\r\n                    value={productCtx.diamond_colour}\r\n                    placeholder=\"Diamond Colour\"\r\n                    onChange={handlediamndcolorChange}\r\n                    options={productCtx.masterData.diamondcolors}\r\n                  />\r\n   \r\n    </Grid>\r\n    <Grid item xs={3} >\r\n    <Select\r\n                    value={productCtx.diamond_clarity}\r\n                    placeholder=\"Diamond Clarity\"\r\n                    onChange={handlediamndclarityChange}\r\n                    options={productCtx.masterData.diamondclarities}\r\n                  />\r\n\r\n    </Grid>                 */}\r\n    \r\n    \r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Chip,\r\n  TextField,\r\nCardContent} from '@material-ui/core';\r\nimport { ProductContext } from '../../context';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root':{\r\n      padding: 0,\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { className, ...rest } = props;\r\n  const handleChange = type => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value  })\r\n\r\n  };\r\n \r\n  \r\n  return (\r\n    <React.Fragment>\r\n         <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} sm={12} spacing={2}>\r\n    <Grid item xs={6} sm={4} >\r\n                   \r\n                      \r\n           <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.themes}\r\n                      onChange={handleChange('themes')}\r\n                      options={productCtx.masterData.themes.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Themes\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n           \r\n           \r\n            </Grid>\r\n   \r\n    <Grid item xs={12} sm={4}>\r\n                     \r\n    \r\n\r\n              <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.prod_styles}\r\n                      onChange={handleChange('prod_styles')}\r\n                      options={productCtx.masterData.styles.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Style\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n      \r\n    \r\n          <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.occassions}\r\n                      onChange={handleChange('occassions')}\r\n                      options={productCtx.masterData.occasions.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Occasions\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n  \r\n   \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.collections}\r\n                      onChange={handleChange('collections')}\r\n                      options={productCtx.masterData.collections.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4} >\r\n    \r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecount}\r\n                      onChange={handleChange('stonecount')}\r\n                      options={productCtx.masterData.stones.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n    \r\n  \r\n\r\n<Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecolour}\r\n                      onChange={handleChange('stonecolour')}\r\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    \r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n </React.Fragment>\r\n  );\r\n}","import Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\r\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\r\n// Import FilePond styles\r\nimport 'filepond/dist/filepond.min.css';\r\nimport React from 'react';\r\n// Import React FilePond\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\n// Register the plugins\r\nimport { ProductContext } from '../../context';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n\r\n\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n  },\r\n  img: {\r\n    height: '100%',\r\n    width: '100%',\r\n    objectFit: 'contain'\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function Review() {\r\n  let count = 0;\r\n  const classes = useStyles();\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [metalcolour, setMetalcolour] = React.useState([]);\r\n  const [files, setFiles] = React.useState([]);\r\n  const [images, setImages] = React.useState({});\r\n  React.useEffect(() => {\r\n    let metalcolour = []\r\n    let product_images = [];\r\n\r\n    productCtx.metalcolour.forEach(element => {\r\n      if (element.name === productCtx.default_metal_colour) {\r\n        product_images[element.name] = []\r\n        if (metalcolour.length > 0) {\r\n          metalcolour.unshift(element);\r\n        } else {\r\n          metalcolour.push(element)\r\n        }\r\n\r\n      } else {\r\n        metalcolour.push(element)\r\n        product_images[element.name] = []\r\n      }\r\n    })\r\n    setMetalcolour(metalcolour)\r\n\r\n  }, []);\r\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\r\n\r\n    //alert(JSON.stringify(bodaydata))\r\n\r\n    let prodimages = productCtx.product_images;\r\n    if (prodimages) {\r\n      var prodid = \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1)\r\n      let imagecolourobj = productCtx.product_images[imagecolor];\r\n      var imagecount = 1;\r\n      if (imagecolourobj) {\r\n        imagecount = imagecolourobj.length + 1;\r\n      }\r\n\r\n      let imagename = (prodid + \"-\" + (imagecount) + imagecolor.charAt(0));\r\n      let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\r\n      var returnData = responsedata.data.returnData;\r\n      var signedRequest = returnData.signedRequest;\r\n      var url = returnData.url;\r\n      console.log(\"responseurl\" + url);\r\n      var filepathname = returnData.filepath\r\n      filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\r\n      var options = {\r\n        headers: {\r\n          'Content-Type': bodaydata.fileExtension,\r\n          'Access-Control-Allow-Origin': '*'\r\n        }\r\n      };\r\n\r\n      if (imagecolourobj) {\r\n        const imageobj = {\r\n          \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\r\n          \"position\": (imagecolourobj.length + 1),\r\n          \"color\": imagecolor,\r\n          \"image_url\": filepathname,\r\n          \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\r\n        }\r\n        if (uploadtype === 'edit') {\r\n          imagecolourobj[imageposition] = imageobj;\r\n\r\n        } else {\r\n          imagecolourobj.push(imageobj)\r\n\r\n        }\r\n        prodimages[imagecolor] = imagecolourobj;\r\n\r\n      } else {\r\n        const imageobj = {\r\n          \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\r\n          \"position\": imageposition,\r\n          \"color\": imagecolor,\r\n          \"image_url\": filepathname,\r\n          \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\r\n        }\r\n        imagecolourobj = [];\r\n        imagecolourobj.push(imageobj)\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n\r\n      setProductCtx({ ...productCtx, product_images: prodimages })\r\n      // setFiles([])\r\n    }\r\n    await axios.put(signedRequest, bodaydata.file, options)\r\n\r\n\r\n\r\n  }\r\n\r\n  function removefiles(imageposition, imagecolor) {\r\n\r\n\r\n    let prodimages = productCtx.product_images;\r\n\r\n    if (prodimages) {\r\n      let imagecolourobj = prodimages[imagecolor];\r\n\r\n      if (imagecolourobj) {\r\n        if (imagecolourobj.length > imageposition) {\r\n          let removedfile = imagecolourobj[imageposition]\r\n\r\n          imagecolourobj[imageposition] = { ...removedfile, url: \"\" }\r\n\r\n        }\r\n\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n      setProductCtx({ ...productCtx, product_images: prodimages })\r\n      //alert(JSON.stringify(productCtx.product_images))\r\n    }\r\n  }\r\n\r\n  const handleInit = () => {\r\n    // alert(\"initialized\")\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container className={classes.root} spacing={2}>\r\n\r\n        <Grid item direction=\"row\" xs={12}>\r\n          <Grid container justify=\"left\" spacing={2}>\r\n\r\n            {metalcolour === undefined ? null : metalcolour.map((value, index) => (\r\n              <Grid xs={12} container spacing={1} item>\r\n                <Grid xs={12} item>\r\n\r\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n                    {value.name}\r\n                  </Typography>\r\n                </Grid>\r\n                {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\r\n\r\n            <Grid  xs={3} alignItems=\"center\" item>\r\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            {row.url}\r\n             </Typography> \r\n           {row.url.length === 0 ? <FilePond \r\n                          labelIdle=\"Image For\"\r\n                          allowMultiple={true}\r\n                          maxFiles={3}  \r\n                          files = {files}\r\n                          onupdatefiles={fileItem => {\r\n                              // Set currently active file objects to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItem)=> {\r\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n\r\n                          }}>\r\n                </FilePond> :  <FilePond \r\n                          labelIdle=\"Image For\"\r\n                          files={[{\r\n                            source: row.url,\r\n                            options: {\r\n                                type: 'local'\r\n                            }\r\n                        }]}\r\n                          server={{\r\n                            load: (source, load) => {\r\n                                // simulates loading a file from the server\r\n                                fetch(source).then(res => \r\n                                  \r\n                                  res.blob()).then(load);\r\n                            }\r\n                        }} \r\n                          onupdatefiles={fileItems => {\r\n                              // Set currently active file objects to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItems)=> {\r\n                            \r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n                            removefiles(imageindex, value.name)\r\n                          }}>\r\n                </FilePond>\r\n               \r\n                \r\n                         } </Grid>\r\n             ))} */}\r\n                <Grid xs={12} sm={12} md={12} item>\r\n                  <FilePond\r\n                    allowImageValidateSize\r\n                    imageValidateSizeMinWidth=\"2400\"\r\n                    imageValidateSizeMinHeight=\"2400\"\r\n                    imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\r\n                      console.log(file);\r\n                      console.log('filepond property');\r\n\r\n                    })}\r\n                    labelIdle=\"Upload Image\"\r\n                    allowMultiple={true}\r\n                    //files = {files}\r\n                    onupdatefiles={fileItem => {\r\n                      // Set currently active file objectsfiles to this.state\r\n\r\n                    }}\r\n                    onaddfile={(error, fileItem) => {\r\n                      uploadimagetoserver(fileItem, index, value.name, \"add\")\r\n                    }}\r\n                    onremovefile={(error, fileItem) => {\r\n\r\n                    }}\r\n                    fileRenameFunction={\r\n                      (file) => new Promise(resolve => {\r\n                        var prodid = \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1)\r\n                        let imagecolourobj = productCtx.product_images[value.name];\r\n                        var imagecount = 1;\r\n                        if (imagecolourobj) {\r\n                          imagecount = imagecolourobj.length + 1;\r\n                        }\r\n                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\r\n                        resolve(imagename)\r\n\r\n                      })\r\n                    }\r\n                  >\r\n                  </FilePond>\r\n                  {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\r\n                <Grid  xs={8} item>\r\n\r\n                <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\r\n                      id=\"imagename\"\r\n                      name=\"imagename\"\r\n                      label=\"imagename\"\r\n                      />  \r\n                                        </Grid>          \r\n\r\n                <Grid  xs={4}  item>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                  >Upload</Button> \r\n                                    </Grid>          \r\n  \r\n                  </Grid>           */}\r\n                </Grid>\r\n\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\nexport default function Review() {\r\n \r\n  return (\r\n    <React.Fragment>\r\n    <Grid container xs={12} spacing={2}>\r\n    <Grid item xs={12} >\r\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            Page Not Found\r\n          </Typography> \r\n    </Grid>\r\n    \r\n        </Grid>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ReactDOM from 'react-dom';\r\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\r\nimport 'react-pivottable/pivottable.css'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ProductContext } from '../../context';\r\nimport TableRenderers from 'react-pivottable/TableRenderers';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\r\n\r\n// create Plotly React component via dependency injection\r\nconst Plot = createPlotlyComponent(window.Plotly);\r\n\r\n// create Plotly renderers via dependency injection\r\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\r\n\r\n// see documentation for supported input formats\r\nconst data = [{\r\n'id':'1',\r\n'productid':'SE30002',\r\n'productname':'Gold Ring', \r\n'purity':'18K',\r\n'material':'Gold',\r\n'diamondcolor':'EF',\r\n'diamondclarity':'VVS',\r\n'gemstone':'Navrathna',\r\n'size':'18',\r\n'costprice':30000,\r\n'sellingprice':38000,\r\n'margin':8000\r\n}, \r\n{\r\n  'id':'2',\r\n  'productid':'SE30002',\r\n  'productname':'Diamond Ring', \r\n  'purity':'18K',\r\n  'material':'Diamond',\r\n  'diamondcolor':'EF',\r\n  'diamondclarity':'VVS',\r\n  'gemstone':'Navrathna',\r\n  'size':'12',\r\n  'costprice':70000,\r\n  'sellingprice':98000,\r\n  'margin':28000\r\n  }\r\n];\r\n\r\n  \r\n  const dimensions = [\r\n    {value: 'firstName', title: 'First Name'}\r\n  ]\r\n\r\n  const reduce = function(row, memo) {\r\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\r\n    return memo\r\n  }\r\n\r\n  const calculations = [\r\n    {\r\n      title: 'Amount', value: 'amountTotal',\r\n      template: function(val, row) {\r\n        return '$' + val.toFixed(2)\r\n      },\r\n      sortBy: function(row) {\r\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\r\n      }\r\n    }\r\n  ]\r\n  \r\n  \r\n  \r\nexport default function Pivot(props) {\r\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\r\n  function setcurrentstate(s)\r\n  {\r\n    setProductCtx({ ...productCtx, s })\r\n\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container xs={12} spacing={2}>\r\n    <Grid item xs={12} >\r\n    <PivotTableUI\r\n                data={data}\r\n                onChange={s => setcurrentstate(s)}\r\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\r\n                {...productCtx.s}\r\n\r\n          />\r\n    </Grid>\r\n    \r\n        </Grid>\r\n </React.Fragment>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nimport Step4 from \"./Step4\";\r\nimport Step5 from \"./Step5\";\r\nimport Step6 from \"./Step6\";\r\nimport Step7 from \"./Step7\";\r\nimport Step8 from \"./Step8\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { element } from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n    background: \"#fff\",\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(1, 0, 1),\r\n    background: \"#fff\",\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case \"Step1\":\r\n      return <AddressForm />;\r\n    case \"Step2\":\r\n      return <PaymentForm />;\r\n    case \"Step3\":\r\n      return <Review />;\r\n    case \"Step4\":\r\n      return <Step5 />;\r\n    case \"Step5\":\r\n      return <Step4 />;\r\n    case \"Step6\":\r\n      return <Step6 />;\r\n\r\n    case \"Step7\":\r\n      return <Step7 />;\r\n    default:\r\n      throw new Error(\"Unknown step\");\r\n  }\r\n}\r\n\r\nexport default function Productupload() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [failure, setfailure] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setSuccess(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSuccess(false);\r\n  };\r\n  const handleNext = async () => {\r\n    var isvalid = true;\r\n    var error_content = {};\r\n    // if(productCtx.error_message)\r\n    // {\r\n    //   error_content = productCtx.error_message\r\n\r\n    // }\r\n\r\n    if (activeStep === 0) {\r\n      if (!productCtx.product_type) {\r\n        isvalid = false;\r\n        error_content[\"product_type\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.productname) {\r\n        isvalid = false;\r\n        error_content[\"productname\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.product_categoy) {\r\n        isvalid = false;\r\n        error_content[\"product_categoy\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.metalcolour) {\r\n        isvalid = false;\r\n        error_content[\"metalcolour\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.material_names) {\r\n        isvalid = false;\r\n        error_content[\"material_names\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\r\n        isvalid = false;\r\n\r\n        error_content[\"metalpurity\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\r\n        isvalid = false;\r\n\r\n        error_content[\"metalcolour\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.vendorcode) {\r\n        isvalid = false;\r\n        error_content[\"vendorcode\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.vendorleadtime) {\r\n        isvalid = false;\r\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.default_metal_colour) {\r\n        isvalid = false;\r\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.default_metal_purity) {\r\n        isvalid = false;\r\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.productvendorcode) {\r\n        isvalid = false;\r\n        error_content[\"productvendorcode\"] = \"Error messsage\";\r\n      }\r\n      if (\r\n        !productCtx.earringbacking &&\r\n        productCtx.product_type.alias === \"Earrings\"\r\n      ) {\r\n        isvalid = false;\r\n        error_content[\"earringbacking\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.selectedgender) {\r\n        isvalid = false;\r\n        error_content[\"selectedgender\"] = \"Error messsage\";\r\n      }\r\n      if (\r\n        (!productCtx.selected_sizes ||\r\n          productCtx.selected_sizes.length === 0) &&\r\n        productCtx.product_type === \"Rings\"\r\n      ) {\r\n        isvalid = false;\r\n        error_content[\"selected_sizes\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (\r\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\r\n        productCtx.product_type === \"Rings\"\r\n      ) {\r\n        isvalid = false;\r\n        error_content[\"default_size\"] = \"Error messsage\";\r\n      }\r\n      // isvalid = true;\r\n    }\r\n\r\n    if (activeStep === 1) {\r\n      productCtx.metalpurity.forEach((element) => {\r\n        const keyvalue = element.name + \"_metal_weight\";\r\n\r\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\r\n          isvalid = false;\r\n\r\n          error_content[keyvalue] = \"Error messsage\";\r\n        }\r\n      });\r\n      if (!productCtx.themes || productCtx.themes.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"themes\"] = \"Error messsage\";\r\n      }\r\n      if (productCtx.product_type_shortcode === \"R\") {\r\n        if (!productCtx.metal_height) {\r\n          isvalid = false;\r\n          error_content[\"metal_height\"] = \"Error messsage\";\r\n        }\r\n        if (!productCtx.metal_width) {\r\n          isvalid = false;\r\n          error_content[\"metal_width\"] = \"Error messsage\";\r\n        }\r\n      }\r\n\r\n      if (!productCtx.themes || productCtx.themes.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"themes\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"prod_styles\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"occassions\"] = \"Error messsage\";\r\n      }\r\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\r\n      // {\r\n      //   isvalid = false\r\n      //   error_content['collections'] = \"Error messsage\"\r\n      // }\r\n\r\n      //  isvalid = true;\r\n    }\r\n\r\n    setProductCtx({ ...productCtx, error_message: error_content });\r\n    if (activeStep === productCtx.steps.length - 1) {\r\n      console.info(\"HANDLE\", sendNetworkRequest);\r\n      const productseries =\r\n        productCtx.masterData.productseries[0].productSeries;\r\n\r\n      delete productCtx[\"masterData\"];\r\n\r\n      var formdata = productCtx;\r\n      formdata[\"productseries\"] = productseries;\r\n\r\n      setLoading(true);\r\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\r\n      setLoading(false);\r\n      setSuccess(true);\r\n      await sleep(500);\r\n      window.location.replace(\"/productlist\");\r\n    } else {\r\n      if (isvalid) {\r\n        setActiveStep(activeStep + 1);\r\n      }\r\n    }\r\n\r\n    //else\r\n    //  {\r\n    //  }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n  async function sleep(millis) {\r\n    return new Promise((resolve) => setTimeout(resolve, millis));\r\n  }\r\n  console.log(productCtx, \"Component Samir\");\r\n  return (\r\n    <Grid item xs={12} sm={12}>\r\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"info\">\r\n          Please Wait ...\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          Please try again\r\n        </Alert>\r\n      </Snackbar>\r\n      <Paper className={classes.paper}>\r\n        <Stepper activeStep={activeStep} className={classes.stepper}>\r\n          {productCtx.steps.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepLabel></StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      </Paper>\r\n\r\n      <React.Fragment>\r\n        {activeStep === productCtx.steps.length ? (\r\n          <React.Fragment>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Product Added Successfully\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\"></Typography>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            {getStepContent(productCtx.steps[activeStep])}\r\n            <div className={classes.buttons}>\r\n              {activeStep !== 0 && (\r\n                <Button onClick={handleBack} className={classes.button}>\r\n                  Back\r\n                </Button>\r\n              )}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === productCtx.steps.length - 1\r\n                  ? \"Product Upload\"\r\n                  : \"Next\"}\r\n              </Button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Component from \"./Component\";\r\nimport { ProductProvider } from \"../../context\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"./Productupload.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport const Productupload = withRouter((props) => {\r\n  const classes = useStyles();\r\n\r\n  const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"loaderdiv\">\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n  return (\r\n    <ProductProvider\r\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\r\n    >\r\n      <Component {...props} />\r\n    </ProductProvider>\r\n  );\r\n});\r\nexport default Productupload;\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  \r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.indigo[500],\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200]\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px'\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px'\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px'\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px'\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px'\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    lineHeight: '18px'\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '12px'\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px'\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase'\r\n  }\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n  MuiButton,\r\n  MuiIconButton,\r\n  MuiPaper,\r\n  MuiTableCell,\r\n  MuiTableHead,\r\n  MuiTypography\r\n};\r\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  elevation1: {\r\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\r\n  }\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\r\n  gutterBottom: {\r\n    marginBottom: 8\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Product Type\"\r\n          action ={\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n\r\n          >\r\n            Add New Producttype\r\n          </Button>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.name}</TableCell>\r\n                      <TableCell align=\"center\">{order.alias}</TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport data from './data.json'\r\nimport { Fullloader } from '../../../../components/Loader';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  \r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [discountobj, setDiscountobj] = useState({});\r\n  const [vouchername, setVouchername] = useState(\"\");\r\n  const [vouchercount, setVouchercount] = useState(\"\");\r\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\r\n\r\n  const [discounttype, setDiscounttype] = useState(1);\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\nReact.useEffect(() => {\r\n  // setDiscountobj({\r\n  //   ...discountobj,\r\n  //   \"discountname\": props.discountcontent.discountname,\r\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\r\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\r\n  //   \"componenets\":props.discountcontent.componenets\r\n  // })\r\n},[])\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  \r\n \r\n  const handleClick = (event, option) => {\r\n    setDiscounttype(option);\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n\r\n  };\r\n\r\n  const handleInputChange = type => e => {\r\n    props.onAdded(type,e.target.value)\r\n\r\n  }\r\n  function changediscountype(optionvalue)\r\n  {\r\n    setDiscountobj({\r\n      ...discountobj,\r\n      \"discounttype\": optionvalue\r\n    })\r\n    props.onAdded(\"discounttype\",optionvalue)\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n      setDiscountobj({\r\n        ...discountobj,\r\n        [type]: value\r\n      })\r\n\r\n      props.onAdded(type,value)\r\n  }\r\n  const handleCountChange = type => e => {\r\n    setVouchercount(e.target.value.toUpperCase())\r\n  }\r\n  const handlePrefixChange = type => e => {\r\n    setVoucherprefix(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n    setIsonce(!isonce);\r\n  };\r\n \r\n  \r\n  return (\r\n\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <CardHeader title=\"General Information\" />\r\n      <Divider /> */}\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={2}> \r\n      <Grid container item xs={12} sm={6}  spacing={2}> \r\n\r\n\r\n<Grid item xs={12} sm={6} spacing={1}>\r\n\r\n  <TextField\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    value={discountobj.discountname}\r\n    onChange={handleInputChange(\"discountname\")}\r\n    id=\"discountname\"\r\n    name=\"discountname\"\r\n    label=\"Name\"\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"dense\"\r\n      fullWidth\r\n      value={discountobj.discounttitle}\r\n      onChange={handleInputChange(\"discounttitle\")}\r\n      id=\"discounttitle\"\r\n      name=\"discounttitle\"\r\n      label=\"Title\"\r\n      />\r\n    </Grid>\r\n<Grid   item xs={12} sm={12} >\r\n        \r\n                 \r\n\r\n  <Autocomplete\r\n                 id=\"free-solo-2-demo\"\r\n                 multiple\r\n                 defaultValue={discountobj.componenets}\r\n                 value={discountobj.componenets}\r\n                 className={classes.fixedTag}\r\n                 fullWidth\r\n                 getOptionLabel={option => option.name}\r\n                 options={voucherCtx.voucherMaster.pricing_components}\r\n                 onChange={handleoptionChange('componenets')}\r\n                 renderTags={(value, getTagProps) =>\r\n                 value.map((option, index) => (\r\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                 ))\r\n                 }\r\n                 renderInput={params => (\r\n                 <TextField\r\n                 {...params}\r\n                 label=\"Pricing Components\"\r\n                 margin=\"dense\"\r\n                 variant=\"outlined\"\r\n                 fullWidth\r\n                //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                 />\r\n                 )}\r\n                 />\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n  </Grid>\r\n  \r\n \r\n \r\n\r\n  <Grid container item xs={12} sm={12} spacing={1}>\r\n  <Grid  item xs={12} sm={6} spacing={1}>\r\n\r\n<Typography\r\n  gutterBottom\r\n  variant=\"h5\"\r\n>\r\nDiscount Type\r\n</Typography>\r\n</Grid>\r\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n  {props.categories.map(option => (\r\n    \r\n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n    \r\n  ))}\r\n  </ButtonGroup>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n  <TextField\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    value={discountobj.discountvalue}\r\n    onChange={handleInputChange(\"discountvalue\")}\r\n    id=\"discountvalue\"\r\n    name=\"discountvalue\"\r\n    label=\"Discount Value\"\r\n    />\r\n  </Grid>\r\n\r\n  <Grid container item xs={12} sm={12} spacing={1}>\r\n  \r\n    </Grid>\r\n         </Grid> \r\n  \r\n      <Grid container item xs={12} sm={6}  spacing={2}> \r\n      </Grid>\r\n     </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { CategoryComponents } from \"./../../components\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button,\r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs,\r\n  Tab,\r\n  Divider,\r\n  colors,\r\n} from \"@material-ui/core\";\r\nimport { VoucherContext } from \"../../../../context\";\r\nconst tabs = [\r\n  { value: \"Category\", label: \"Category\" },\r\n  { value: \"Producttype\", label: \"Product type\" },\r\n  { value: \"Material\", label: \"Material\" },\r\n  { value: \"Collections\", label: \"Collections\" },\r\n  { value: \"Occations\", label: \"Occations\" },\r\n  { value: \"Styles\", label: \"Styles\" },\r\n  { value: \"Themes\", label: \"Themes\" },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n    maxWidth: \"100%\",\r\n    minWidth: \"100%\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300],\r\n  },\r\n  cardcontent: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200],\r\n  },\r\n  optionRadio: {\r\n    margin: -10,\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst VoucherComponent = (props) => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx, voucherMaster } =\r\n    React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState({});\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const myFunction = () => {\r\n    props.onAdded(attrobj);\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    if (type === \"materials\") {\r\n      let elements_arr = [];\r\n      value.forEach((element) => {\r\n        elements_arr.push(element.name);\r\n      });\r\n      if (elements_arr.indexOf(\"Gold\") > -1) {\r\n        setIsgold(true);\r\n      } else {\r\n        setIsgold(false);\r\n      }\r\n\r\n      if (elements_arr.indexOf(\"Diamond\") > -1) {\r\n        setIsdiamond(true);\r\n      } else {\r\n        setIsdiamond(false);\r\n      }\r\n    }\r\n    setAttrobj({\r\n      ...attrobj,\r\n      [type]: value,\r\n    });\r\n\r\n    // props.onAdded(type,value)\r\n  };\r\n  const handleTabsChange = (event, value) => {\r\n    if (value == \"Material\") {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if (tabnames.indexOf(\"Purity\") === -1) {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n      }\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <div className={classes.content}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              value={attrobj.category}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              getOptionLabel={(option) => option.name}\r\n              options={voucherCtx.voucherMaster.product_categories}\r\n              onChange={handleoptionChange(\"category\")}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Category\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              value={attrobj.product_types}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.product_types}\r\n              onChange={handleoptionChange(\"product_types\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.product_types}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Types\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.materials}\r\n              onChange={handleoptionChange(\"materials\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.materials}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Materials\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          {isgold ? (\r\n            <Grid item xs={4} sm={4}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                //  value={attrobj.componenets}\r\n                className={classes.fixedTag}\r\n                fullWidth\r\n                options={voucherCtx.voucherMaster.purities}\r\n                onChange={handleoptionChange(\"purities\")}\r\n                getOptionLabel={(option) => option.name}\r\n                value={attrobj.purities}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Purity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          ) : null}\r\n          {isdiamond ? (\r\n            <Grid item xs={4} sm={4}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                //  value={attrobj.componenets}\r\n                className={classes.fixedTag}\r\n                fullWidth\r\n                getOptionLabel={(option) => option.diamondtype}\r\n                options={voucherCtx.voucherMaster.diamondtypes}\r\n                onChange={handleoptionChange(\"diamondtype\")}\r\n                value={attrobj.diamondtype}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.diamondtype}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Diamond Types\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          ) : null}\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.collections}\r\n              onChange={handleoptionChange(\"collections\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.collections}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Collections\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.occations}\r\n              onChange={handleoptionChange(\"occations\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.occations}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Occassions\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.styles}\r\n              onChange={handleoptionChange(\"styles\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.styles}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Styles\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.themes}\r\n              onChange={handleoptionChange(\"themes\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.themes}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Themes\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\r\n            <Button\r\n              onClick={() => props.onAdded(attrobj)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              Check Applicable Products\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVoucherComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired,\r\n};\r\nexport default VoucherComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n  const [attributenames, setAttributenames] = useState(\"\");\r\n  const [attributealias, setAttributealias] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    alert(JSON.stringify(option))\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option.name}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  productcontent: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  errorchip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: theme.palette.error.dark,\r\n    textColor : theme.palette.white\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n   \r\n  }\r\n\r\n}));\r\nexport default function Viewsku(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [markup, setMarkup] = React.useState({});\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(markup,props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMarkup({ ...markup, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMarkup({\r\n    ...markup,\r\n    [type]: e.target.value\r\n  })\r\n}\r\nconst handleDelete = chipToDelete => () => {\r\n\r\n }\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         SKUs\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n        {props.products.map(data => (\r\n        <Chip\r\n        key={data.generated_sku}\r\n        label={data.generated_sku}\r\n        variant=\"outlined\"\r\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\r\n         onDelete={handleDelete(data.generated_sku)}\r\n        className={classes.chip}\r\n      />\r\n\r\n      \r\n      ))}\r\n       \r\n       </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          \r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n// import moment from 'moment';\r\nimport PropTypes from \"prop-types\";\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport Viewsku from \"../Viewsku\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Label, ReviewStars } from \"../../../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 1150,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Products = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectskus, setSelectskus] = useState([]);\r\n\r\n  const handleSelectAll = (event) => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map((order) => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function handlecancel() {\r\n    setOpen(false);\r\n  }\r\n  function handleOpen(prodskus) {\r\n    setOpen(true);\r\n    setSelectskus(prodskus);\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600],\r\n  };\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      {open ? (\r\n        <Viewsku\r\n          isadd={open}\r\n          products={selectskus}\r\n          actionclose={handlecancel}\r\n        />\r\n      ) : null}\r\n\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader title={props.title} />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Product ID</TableCell>\r\n\r\n                  {/* <TableCell align=\"center\">SKU Count</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.products\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((order) => (\r\n                    <TableRow\r\n                    // key={order.id}\r\n                    // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      <TableCell>{order}</TableCell>\r\n                      {/* <TableCell align=\"center\"> \r\n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\r\n                          <VisibilityIcon />\r\n                      </IconButton>\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      \r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={props.products.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nProducts.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nProducts.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Products;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { VoucherContext } from \"../../context\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Chip, IconButton } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport uuid from \"uuid/v1\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { palette } from \"../../theme\";\r\nimport Page from \"../../components/Page\";\r\nimport {\r\n  Header,\r\n  Results,\r\n  Products,\r\n  AboutVoucher,\r\n  VoucherComponent,\r\n} from \"./components\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport FullLoader from \"../../components/Loader\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  productcontent: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  errorchip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: theme.palette.error.dark,\r\n    textColor: theme.palette.white,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function Salediscountcontent(props) {\r\n  const classes = useStyles();\r\n  const [products, setProducts] = useState([]);\r\n  const [deletedids, setDeletedids] = useState([]);\r\n\r\n  const [skus, setSkus] = useState([]);\r\n  const [isloading, setIsloading] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [productattr, setProductattr] = useState({});\r\n  const [productattrtext, setProductattrtext] = useState(\"\");\r\n  const [errorskus, setErrorskus] = useState([]);\r\n  const [isloaded, setIsloaded] = useState(false);\r\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\r\n  const [statusmessage, setStatusmessage] = useState(\"\");\r\n  const [titlecontent, setTitlecontent] = useState(\"\");\r\n  const [discount_id, setDiscount_id] = useState(\"\");\r\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\r\n\r\n  const [attributeobj, setAttributeobj] = useState({});\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"Created Successfully\",\r\n    severity: \"Success\",\r\n  });\r\n\r\n  const { voucherCtx, setVoucherCtx, materialMaster } =\r\n    React.useContext(VoucherContext);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  async function getdiscountvalue(discount_id) {\r\n    let bodydata = {\r\n      discountid: discount_id,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getdiscount\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    let comparr = [];\r\n    let displyarr = [];\r\n    response.discunt.components.forEach((comp) => {\r\n      comparr.push({\r\n        name: comp,\r\n      });\r\n    });\r\n    // alert(JSON.stringify(response.discunt))\r\n\r\n    // alert(Object.keys(response.discunt.product_attributes))\r\n\r\n    setProducts(response.discunt.product_ids);\r\n    setAttributeobj({\r\n      ...setAttributeobj,\r\n      discountname: response.discunt.discount_name,\r\n      discountvalue: response.discunt.discount_value,\r\n      discounttype: response.discunt.discount_type,\r\n      discounttitle: response.discunt.discount_title,\r\n      componenets: comparr,\r\n      skucount: response.discunt.product_ids.length,\r\n      displaycomp: response.discunt.components,\r\n      attributes: response.discunt.product_attributes,\r\n      allkeys: Object.keys(response.discunt.product_attributes),\r\n    });\r\n    setIsloaded(true);\r\n  }\r\n  async function creatediscount(ispricerun) {\r\n    let skuarray = [];\r\n    while (skus.length > 0) {\r\n      let sku_content = skus.splice(0, 25000);\r\n      skuarray.push(sku_content);\r\n    }\r\n    if (errorskus.length > 0) {\r\n      alert(\"Some skus are overlapping\");\r\n    } else {\r\n      let discount_count = 0;\r\n      setIsloading(true);\r\n      updatediscount(discount_count);\r\n      async function updatediscount() {\r\n        let bodydata = {\r\n          discountvalue: parseFloat(attributeobj.discountvalue),\r\n          discounttype: attributeobj.discounttype,\r\n          componenets: attributeobj.componenets,\r\n          discountname: attributeobj.discountname,\r\n          discounttitle: attributeobj.discounttitle,\r\n          product_attributes: productattr,\r\n          product_attributes_text: productattrtext,\r\n          skus: skuarray[discount_count],\r\n        };\r\n        console.log(JSON.stringify(productattr));\r\n        let response = await sendNetworkRequest(\r\n          \"/creatediscount\",\r\n          {},\r\n          bodydata,\r\n          false\r\n        );\r\n\r\n        discount_count = discount_count + 1;\r\n        if (skuarray.length > discount_count) {\r\n          setLoadingtitle(skus.length + \" Left\");\r\n          updatediscount(discount_count);\r\n        } else {\r\n          setIsloading(false);\r\n          setOpen(true);\r\n          setIsshowpriceupdate(false);\r\n\r\n          window.location = \"/salediscountlist\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const handleDelete = (chipToDelete) => () => {\r\n    //setProducts([])\r\n    let errorindex = errorskus.indexOf(chipToDelete);\r\n    if (errorindex > -1) {\r\n      errorskus.splice(errorindex, 1);\r\n      var erroritems = [];\r\n      errorskus.forEach((itemname) => {\r\n        erroritems.push(itemname);\r\n      });\r\n      setErrorskus(erroritems);\r\n    }\r\n    let index = products.indexOf(chipToDelete);\r\n    products.splice(index, 1);\r\n    var items = [];\r\n    products.forEach((itemname) => {\r\n      items.push(itemname);\r\n    });\r\n    setProducts(items);\r\n\r\n    //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\r\n  };\r\n\r\n  async function filterapllied(value) {\r\n    var bodydata = {};\r\n\r\n    let product_ids = [];\r\n    let response = await sendNetworkRequest(\r\n      \"/getaliasproduct\",\r\n      {},\r\n      value,\r\n      false\r\n    );\r\n    setProducts(response.products);\r\n    setSkus(response.skus);\r\n    setErrorskus(response.eror_skus);\r\n    setIsloading(false);\r\n    setTitlecontent(response.title);\r\n  }\r\n  async function updateprices() {\r\n    alert(\"i am here\");\r\n    var bodydata = {};\r\n    bodydata = {\r\n      pricingcomponent: \"updateskuprice\",\r\n      req_product_id: products,\r\n    };\r\n    setIsshowpriceupdate(true);\r\n\r\n    let response = await sendNetworkRequest(\r\n      \"/productpriceupdate\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n  }\r\n  async function handlestatus(e) {\r\n    let bodydata = {\r\n      component: \"updateskuprice\",\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getcomponentpricestatus\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n\r\n    setStatusmessage(response.message);\r\n  }\r\n  function attributeadded(value) {\r\n    let componentsstring = {};\r\n    let attrs = [];\r\n    let display_arr = [];\r\n    let keys = Object.keys(value);\r\n    keys.forEach((key) => {\r\n      let values = [];\r\n      let alias_arr = [];\r\n      value[key].forEach((valueobj) => {\r\n        values.push(valueobj.name);\r\n        alias_arr.push(valueobj.alias);\r\n        attrs.push(valueobj.name);\r\n      });\r\n      componentsstring[key] = {\r\n        values: values,\r\n        alias: alias_arr,\r\n      };\r\n      let displaytext = key + \" : \" + attrs.join(\" , \");\r\n      display_arr.push(displaytext);\r\n    });\r\n    setProductattr(componentsstring);\r\n    setProductattrtext(display_arr.join(\" | \"));\r\n    //alert(JSON.stringify(componentsstring))\r\n    setIsloading(true);\r\n    //setAttributeobj(value)\r\n    filterapllied(value);\r\n  }\r\n  function valuechange(type, value) {\r\n    setAttributeobj({\r\n      ...attributeobj,\r\n      [type]: value,\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {};\r\n    fetchOrders();\r\n    if (\r\n      props.location.pathname &&\r\n      props.location.pathname.split(\"/\").length > 2\r\n    ) {\r\n      let discount_id = props.location.pathname.split(\"/\")[2];\r\n      setDiscount_id(discount_id);\r\n      getdiscountvalue(discount_id);\r\n    } else {\r\n      setIsloaded(true);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <FullLoader title={loadingtitle} isopen={isloading} />\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Page className={classes.root} title=\"Orders Management List\">\r\n          {!discount_id ? (\r\n            <>\r\n              <VoucherComponent\r\n                onAdded={attributeadded}\r\n                className={classes.aboutvoucher}\r\n              />\r\n              {products.length > 0 ? (\r\n                <Products title={titlecontent} products={errorskus} />\r\n              ) : null}\r\n              {/* <Paper className={classes.productcontent}>\r\n     <Typography variant=\"h5\" component=\"h2\">\r\n        {products.length} Products and {skus.length} skus\r\n      </Typography>\r\n\r\n     \r\n    </Paper> \r\n    {products.map(data => (\r\n        <Chip\r\n        key={data}\r\n        label={data}\r\n        variant=\"outlined\"\r\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\r\n        onDelete={handleDelete(data)}\r\n        className={classes.chip}\r\n      />\r\n\r\n      \r\n      ))} */}\r\n              {isloaded || !discount_id ? (\r\n                <AboutVoucher\r\n                  discountcontent={attributeobj}\r\n                  className={classes.aboutvoucher}\r\n                  onAdded={valuechange}\r\n                  categories={[\"Fixed Amount\", \"percentage\"]}\r\n                />\r\n              ) : null}\r\n\r\n              {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\r\n\r\n              <Grid\r\n                container\r\n                xs={12}\r\n                spacing={2}\r\n                style={{ textAlign: \"center\" }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ marginTop: 16, textAlign: \"center\" }}\r\n                  spacing={2}\r\n                >\r\n                  {!isshowpriceupdate ? (\r\n                    <>\r\n                      <Button\r\n                        onClick={() => creatediscount(false)}\r\n                        color=\"primary\"\r\n                        style={{ margin: 16 }}\r\n                        variant=\"contained\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n\r\n                      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\r\n                    </>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <Grid container xs={12} spacing={2}>\r\n              <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Name\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discountname}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Title\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discounttitle}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Value\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discounttype == 2\r\n                      ? attributeobj.discountvalue + \"%\"\r\n                      : attributeobj.discountvalue}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Pricing Compponent\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.displaycomp}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {attributeobj.allkeys ? (\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  {attributeobj.allkeys.map((row, index) => (\r\n                    <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                      <Typography variant=\"body2\" component=\"body2\">\r\n                        {row}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" component=\"h5\">\r\n                        {attributeobj.attributes[row].values}\r\n                      </Typography>\r\n                    </Grid>\r\n                  ))}\r\n                  <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                    <Typography variant=\"body2\" component=\"body2\">\r\n                      Total Sku\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h5\">\r\n                      {attributeobj.skucount}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              ) : null}\r\n              <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\r\n                {!isshowpriceupdate ? (\r\n                  <>\r\n                    {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {\" \"}\r\n                    {statusmessage}\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      onClick={(e) => handlestatus()}\r\n                      color=\"primary\"\r\n                    >\r\n                      <RefreshIcon />\r\n                    </IconButton>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Page>\r\n      </MuiPickersUtilsProvider>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from \"../../context\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { useQuery } from \"react-apollo\";\r\nimport { materialMaster } from \"../../services/mapper\";\r\nimport Component from \"./Salediscountcontent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\nexport const Salediscount = withRouter((props) => {\r\n  const classes = useStyles();\r\n\r\n  const { data, loading, error } = useQuery(materialMaster.query);\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n  return (\r\n    <VoucherProvider\r\n      value={{\r\n        data,\r\n        mapper: materialMaster.mapper,\r\n        mappertype: \"voucherMaster\",\r\n      }}\r\n    >\r\n      <Component {...props} />\r\n    </VoucherProvider>\r\n  );\r\n});\r\nexport default Salediscount;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Seopriority = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SEOPRIORITIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\r\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\r\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\r\n      x.priority && x.priority == taxcontent ||\r\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\r\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\r\n\r\n\r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  // element.email &&  element.email.match(searchtext+'.*')  || \r\n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\r\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \r\n  //     element.username && element.username.match(searchtext+'.*')\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Seopriority;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shipmentsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\r\n\r\n    getmaster()\r\n  }\r\n  async function getmastervalues()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n      \r\n        setMasters({\r\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\r\n          \"ranges\":[{\r\n            \"id\":1,\r\n            \"name\":\"By Weight\"\r\n          },{\r\n            \"id\":2  ,\r\n            \"name\":\"By Value\"\r\n          }]\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n            shipobj['isCart'] = element.isCart;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastervalues()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Shipment Settings\"} \r\n        masters={masters}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`addshippingattributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> */}\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                     {columnname.key === 'action' ?                  \r\n                          <TableCell align=\"center\" style = {{width: 20}}>\r\n                            <Button onClick={(e) => ProductEdit(row.id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                        </TableCell>   :            <TableCell>\r\n\r\n                      <Typography> {row[columnname.key]}</Typography>\r\n                     \r\n                    </TableCell>}\r\n                \r\n              \r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Attributescontent from './Attributescontent/Attributescontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shippingattributes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n    console.log(JSON.stringify(taxcontent))\r\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmastervalues()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n      \r\n        setMasters({\r\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\r\n          \"ranges\":[{\r\n            \"id\":1,\r\n            \"name\":\"By Weight\"\r\n          },{\r\n            \"id\":1,\r\n            \"name\":\"By Value\"\r\n          }]\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['displayAttributes'] = element.displayAttributes;\r\n\r\n            shipobj['isActive'] = element.isActive;\r\n            \r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastervalues()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Attributescontent title= {\"Shipment Settings II\"} \r\n        masters={masters}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shippingattributes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shippingzones = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [mastercountries, setMastercountries] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\r\n    getmaster()\r\n  }\r\n  async function getmastercountries()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let zones = []\r\n        if(fatchvalue.data.allShippingZones.nodes)\r\n        {\r\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\r\n            let countries = []\r\n            let countrydefault = []\r\n            let shippingcharges = []\r\n\r\n            if(element.shippingZoneCountriesByZoneId)\r\n            {\r\n              \r\n              if(element.shippingZoneCountriesByZoneId.nodes)\r\n              {\r\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\r\n                  countries.push(countryobj.masterCountryByCountryId.name)\r\n                  countrydefault.push(countryobj.masterCountryByCountryId)\r\n                })\r\n              }\r\n            }\r\n            if(element.shippingChargesByZoneId)\r\n            {\r\n              \r\n              if(element.shippingChargesByZoneId.nodes)\r\n              {\r\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\r\n                  shippingcharges.push(countryobj.name)\r\n                })\r\n              }\r\n            }\r\n            let zoneobj = {\r\n              id : element.id,\r\n              isActive : element.isActive,\r\n              name : element.name,\r\n              country  : countries.join(\" , \"),\r\n              charges : shippingcharges.join(\" , \"),\r\n              zonecountry : countrydefault\r\n            }\r\n            zones.push(zoneobj)\r\n          });\r\n        }\r\n\r\n        setMastervalue(zones)\r\n        setFiltervalue(zones)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastercountries()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\r\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \r\n        masters={mastercountries}\r\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shippingzones;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`addtaxattributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> */}\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                     {columnname.key === 'action' ?                  \r\n                          <TableCell align=\"center\" style = {{width: 20}}>\r\n                            <Button onClick={(e) => ProductEdit(row.id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                        </TableCell>   :            <TableCell>\r\n\r\n                      <Typography> {row[columnname.key]}</Typography>\r\n                     \r\n                    </TableCell>}\r\n                \r\n              \r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Attributescontent from './Attributescontent/Attributescontent';\r\n\r\nimport Mastercontent from '../../components/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\n\r\nexport const Taxsettings = withRouter(props => {\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\r\n   // alert(JSON.stringify(response))\r\n    getmaster()\r\n  } \r\n  \r\n\r\n  // async function createtax(taxcontent){\r\n    \r\n  //   let variables ={\r\n     \r\n  //      taxValue: taxcontent.taxValue, \r\n  //      taxName: taxcontent.taxName,\r\n  //     hsnNumber: taxcontent.hsnNumber\r\n  //   }\r\n  //   console.log()\r\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\r\n\r\n  //   //   if(res!==null){\r\n        \r\n  //   //   }\r\n  //   // }).catch(console.error)\r\n  \r\n  // }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \r\n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TaxList  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <Grid container  spacing={2}>  \r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\r\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n     <Attributescontent title= {\"Shipment Settings II\"} \r\n        masters={[]}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default withApollo(Taxsettings);","import React,{useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Query, withApollo } from 'react-apollo';\r\n\r\nimport Mastercontent from '../../components/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\n\r\nexport const Taxsetup = withRouter(props => {\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\r\n   // alert(JSON.stringify(response))\r\n    getmaster()\r\n  } \r\n  \r\n\r\n  // async function createtax(taxcontent){\r\n    \r\n  //   let variables ={\r\n     \r\n  //      taxValue: taxcontent.taxValue, \r\n  //      taxName: taxcontent.taxName,\r\n  //     hsnNumber: taxcontent.hsnNumber\r\n  //   }\r\n  //   console.log()\r\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\r\n\r\n  //   //   if(res!==null){\r\n        \r\n  //   //   }\r\n  //   // }).catch(console.error)\r\n  \r\n  // }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \r\n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TaxList  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <Grid container  spacing={2}>  \r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\r\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default withApollo(Taxsetup);","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\nimport data from \"./../data.json\"\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport  Results from './components/Results'\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Useraddresses = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masters, setMasters] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Useraddresses;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport data from \"./data.json\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./Configuration.css\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nexport const Userconfiguration = withRouter((props) => {\r\n  const master_options = [\r\n    \"Attribute Master\",\r\n    \"Categories\",\r\n    \"ProductTypes\",\r\n    \"Materials\",\r\n    \"Metal Colours\",\r\n    \"Metal Purities\",\r\n    \"Collections\",\r\n    \"Occassions\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n    \"Designs\",\r\n    \"Weights\",\r\n    \"Diamond Types\",\r\n    \"Diamond Settings\",\r\n    \"Diamond Shapes\",\r\n    \"Earring Backings\",\r\n    \"Gemstone Settings\",\r\n    \"Gemstone Shapes\",\r\n    \"Gemstone Types\",\r\n    \"Stones\",\r\n    \"Stone Colours\",\r\n    \"Stone Shapes\",\r\n    \"Gender\",\r\n    \"SEO Priorities\",\r\n    \"Tax Settings 1\",\r\n    \"Tax Settings 2\",\r\n    \"Payment Status\",\r\n    \"Order Status\",\r\n    \"Shipping Zones\",\r\n    \"Shipment Setting I\",\r\n    \"Shipment Setting II\",\r\n  ];\r\n  const master_options_url = [\r\n    \"masterattributes\",\r\n    \"categories\",\r\n    \"producttypes\",\r\n    \"materialmaster\",\r\n    \"mastercolors\",\r\n    \"masterpurities\",\r\n    \"collections\",\r\n    \"masteroccassions\",\r\n    \"masterstyles\",\r\n    \"masterthemes\",\r\n    \"designs\",\r\n    \"weights\",\r\n    \"diamonds\",\r\n    \"diamondsettings\",\r\n    \"diamondshapes\",\r\n    \"earringbacking\",\r\n    \"gemstonesettings\",\r\n    \"gemstoneshapes\",\r\n    \"gemstonetypes\",\r\n    \"masterstones\",\r\n    \"masterstonecolors\",\r\n    \"masterstoneshapes\",\r\n    \"genders\",\r\n    \"seopriority\",\r\n    \"Taxsetup\",\r\n    \"taxsettings\",\r\n    \"paymentstatus\",\r\n    \"orderstatus\",\r\n    \"zones\",\r\n    \"shipmensettings\",\r\n    \"shippingattributes\",\r\n  ];\r\n\r\n  const [raised, setRaised] = React.useState(false);\r\n  const [cardindex, setCardindex] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  const onMouseOver = () => {\r\n    setRaised(true);\r\n  };\r\n  const onMouseOut = () => {\r\n    setRaised(false);\r\n    // setCardindex(-1)\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          User and Roles Management\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {data.options.map((menu, index) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography\r\n                  style={{ textAlign: \"center\", marginTop: 8 }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {menu.title}\r\n                </Typography>\r\n\r\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n              </CardContent>\r\n            </Card>\r\n          </Link>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default Userconfiguration;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\nimport data from \"./../data.json\"\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport  Results from './components/Results'\r\nimport {Breadcrumbs } from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Userwishlist = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masters, setMasters] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Userwishlist;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    loader: {\r\n      display: 'flex',\r\n      width: 100,\r\n      paddingLeft: 25\r\n    }\r\n  }));\r\nfunction Newvendor(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n      <Dialog\r\n      open={props.isopen}\r\n      fullWidth={true}\r\n      maxWidth={'md'}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n      <Grid container  spacing={2}> \r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendorname\"\r\n            name=\"vendorname\"\r\n            value={\"test\"}\r\n            label=\"Vendor Name\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendorcode\"\r\n            name=\"vendorcode\"\r\n            value={\"test\"}\r\n            label=\"Vendor Code\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"organization\"\r\n            name=\"organization\"\r\n            value={\"test\"}\r\n            label=\"Organization\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"partnercategory\"\r\n            name=\"partnercategory\"\r\n            value={\"test\"}\r\n            label=\"Partner Category\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"gstno\"\r\n            name=\"gstno\"\r\n            value={\"test\"}\r\n            label=\"GST Number\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendordeliverydays\"\r\n            name=\"vendordeliverydays\"\r\n            value={\"test\"}\r\n            label=\"Vendor Delivery Days\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={12} sm={12} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            rows={3}\r\n            multiline\r\n            id=\"vendordeliverydays\"\r\n            name=\"vendordeliverydays\"\r\n            value={\"test\"}\r\n            label=\"Vendor Delivery Days\"\r\n            />\r\n          </Grid>\r\n      </Grid>\r\n\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button  color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button  color=\"primary\">\r\n            Update\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n \r\n    )\r\n}\r\nexport default Newvendor;","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Newvendor from '../../components/Newvendor'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n\r\n\r\nexport const Vendorlist = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  \r\n \r\n  function cancelvendorcreation()\r\n  {\r\n    setIsadd(false)\r\n\r\n\r\n  }\r\n  return (\r\n    <>\r\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\r\n    <Grid container  spacing={2}>  \r\n    \r\n    \r\n    <Vendor  onCancel={cancelvendorcreation}  />\r\n   \r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Vendorlist;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmetalprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [metaldata, setMetaldata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.save(metaldata,props.refetch)\r\n  };\r\n\r\nconst handleoptionChange = type => (event, value) => {\r\n    setMetaldata({ ...metaldata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMetaldata({\r\n    ...metaldata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         New Gold Price\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.metals}\r\n              onChange={handleoptionChange('metal')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Metal\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.purities}\r\n              onChange={handleoptionChange('purity')}\r\n\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              onChange={handleoptionChange('pricetype')}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingPrice')}\r\n              id=\"sellingprice\"\r\n              name=\"Selling Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEGOLDPRICE, GOLDPRICELIST, METALMASTER, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Addmetalprice from './Addmetalprice';\r\n\r\nconst columns = [\r\n  { id: 'Metal', label: 'Metal' },\r\n  { id: 'Purity', label: 'Purity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n  const [goldpricelist, setGoldpricelist] = React.useState({})\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [metalmaster, setMetalmaster] = React.useState([])\r\n  const [puritymaster, setPuritymaster] = React.useState([])\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n\r\n    let variables = {\r\n      elementId: deleteid\r\n    }\r\n    await props.client.mutate({ mutation: DELETEGOLDPRICE, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  async function handleAdd(metalcontent, refetch) {\r\n    var bodydata = {}\r\n    bodydata = {\r\n      material: metalcontent.metal.name,\r\n      purity: metalcontent.purity.shortCode,\r\n      costprice: metalcontent.costPrice,\r\n      sellingprice: metalcontent.sellingPrice,\r\n      pricetype: metalcontent.pricetype.label,\r\n      vendor: props.vendor,\r\n      isadd: true\r\n    }\r\n    console.log(\"--------\")\r\n\r\n    console.log(JSON.stringify(bodydata))\r\n    await sendNetworkRequest('/updatemetalprice', {}, bodydata)\r\n\r\n    setOpen(false)\r\n    refetch()\r\n    //  setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n\r\n  function handleEdit(diamondData) {\r\n    let pricetypes = [{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]\r\n    let selectedsellingPriceType = {}\r\n    pricetypes.forEach(element => {\r\n\r\n      if (element.label == diamondData.sellingPriceType) {\r\n        selectedsellingPriceType = element\r\n      }\r\n    })\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      priceid: diamondData.id,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      selectedsellingPriceType: selectedsellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {}\r\n    bodydata = {\r\n      priceid: editdiamond.priceid,\r\n      costprice: editdiamond.costPrice,\r\n      sellingprice: editdiamond.sellingPrice,\r\n      pricetype: editdiamond.sellingPriceType.label\r\n    }\r\n    await sendNetworkRequest('/updatemetalprice', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    refetch()\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditdiamond({ ...editdiamond, [type]: value })\r\n  }\r\n  const handleinputChange = type => e => {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      [type]: e.target.value\r\n    })\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n  }\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  // useEffect(() => {\r\n  //   const query = props.client.query\r\n  //     query({\r\n  //       query: ALLPRODUCTLIST,\r\n  //       fetchPolicy: \"network-only\"\r\n  //     }).then((data) => {\r\n  //       // if (data) {\r\n  //       // setProductlists(data.data.allProductLists.nodes)\r\n  //       // setAllProductlists(data.data.allProductLists.nodes)\r\n  //       // setPageCount( data.data.allProductLists.totalCount )\r\n  //       // }else{\r\n  //       //   alert(\"success\")\r\n  //       // }\r\n  //     })\r\n  //   .catch((error) => {console.log(\"smbcj\")})\r\n  //   }, [])\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: METALMASTER, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\r\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {\"Gold Price Setup\"}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item> \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={GOLDPRICELIST}\r\n                onCompleted={data => setPageCount(data.allGoldPriceSettings.totalCount)}\r\n                variables={{ \"vendorCode\": props.vendor }}>\r\n                {\r\n                  ({ data, loading, error, refetch }) => {\r\n\r\n                    if (loading) {\r\n                      // return <Loader />\r\n                    }\r\n                    if (error) {\r\n                      return <div>{error}</div>\r\n                      // return false\r\n                    }\r\n                    if (data) {\r\n                      setGoldpricelist(data)\r\n                      return <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          data={deleteid}\r\n                          refetch={refetch}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation} />\r\n                        {open ? <Addmetalprice isadd={open} refetch={refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n                        {data.allGoldPriceSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.material}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.material}\r\n\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.purity}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.costPrice}\r\n                                  onChange={handleinputChange('costPrice')}\r\n                                  id=\"productvendorcode\"\r\n\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.costPrice} </Typography>}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.sellingPrice}\r\n                                  onChange={handleinputChange('sellingPrice')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.sellingPrice} </Typography>}\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"center\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                  id=\"free-solo-2-demo\"\r\n                                  fullWidth\r\n                                  disableClearable\r\n                                  className={classes.fixedTag}\r\n                                  value={editdiamond.selectedsellingPriceType}\r\n                                  onChange={handleoptionChange('sellingPriceType')}\r\n                                  getOptionLabel={option => option.name}\r\n                                  options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                  renderTags={(value, getTagProps) =>\r\n                                    value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                    ))\r\n                                  }\r\n                                  renderInput={params => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                    />\r\n                                  )}\r\n                                /> : <Typography className={classes.heading}>\r\n                                    {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                            </TableCell>\r\n\r\n\r\n\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\r\n                              </Moment>\r\n                            </TableCell>\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ?\r\n                                <TableCell style={{ width: 170 }} align=\"center\">\r\n                                  <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                  </Button>\r\n                                </TableCell> :\r\n                                <TableCell align=\"center\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                            }\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    else {\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                    }\r\n                  }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmetalprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [diamonddata, setDiamonddata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.actionSave(diamonddata, props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setDiamonddata({ ...diamonddata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setDiamonddata({\r\n    ...diamonddata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         New Diamond Price\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\r\n              options={props.diamonds}\r\n              onChange={handleoptionChange('diamondtype')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Diamond Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingprice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEDIAMONDCHARGE, DIAMONDPRICELIST, PRODUCTDIAMONDTYPES, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Adddiamondprice from './Adddiamondprice';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n    let variables = {\r\n      elementId: deleteid\r\n    }\r\n    await props.client.mutate({ mutation: DELETEDIAMONDCHARGE, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function handleAdd(metalcontent, refetch) {\r\n    alert(\"i am here\")\r\n    let bodydata = {}\r\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\r\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\r\n    bodydata['costprice'] = metalcontent.costPrice\r\n    bodydata['pricetype'] = metalcontent.pricetype.label\r\n    bodydata['sellingprice'] = metalcontent.sellingprice\r\n    bodydata['vendor_code'] = props.vendor\r\n    bodydata['isadd'] = true\r\n\r\n\r\n\r\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\r\n    setOpen(false)\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    refetch()\r\n  }\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      priceid: diamondData.id,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {}\r\n    bodydata = {\r\n      priceid: editdiamond.priceid,\r\n      costprice: editdiamond.costPrice,\r\n      sellingprice: editdiamond.sellingPrice,\r\n      pricetype: editdiamond.sellingPriceType.label\r\n    }\r\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    refetch()\r\n\r\n\r\n  }\r\n\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditdiamond({ ...editdiamond, [type]: value })\r\n  }\r\n  const handleinputChange = type => e => {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        // alert(JSON.stringify(fatchvalue))\r\n        setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {\"Diamond Price Setup\"}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={DIAMONDPRICELIST}\r\n                onCompleted={data => setPageCount(data.allDiamondPriceSettings.totalCount)}\r\n                variables={{ \"vendorCode\": props.vendor }}>\r\n                {\r\n                  ({ data, loading, error, refetch }) => {\r\n\r\n                    if (loading) {\r\n                      // return <Loader />\r\n                    }\r\n                    if (error) {\r\n                      return <div>{error}</div>\r\n                      // return false\r\n                    }\r\n                    if (data) {\r\n                      return <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          refetch={refetch}\r\n                          data={deleteid}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation} />\r\n                        {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n                        {data.allDiamondPriceSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.diamondClarity}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.diamondClarity}\r\n\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.diamondColour}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.costPrice}\r\n                                  onChange={handleinputChange('costPrice')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.costPrice} </Typography>}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.sellingPrice}\r\n                                  onChange={handleinputChange('sellingPrice')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.sellingPrice} </Typography>}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                  id=\"free-solo-2-demo\"\r\n                                  fullWidth\r\n                                  disableClearable\r\n                                  className={classes.fixedTag}\r\n                                  getOptionLabel={option => option.name}\r\n                                  options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                  onChange={handleoptionChange('sellingPriceType')}\r\n                                  renderTags={(value, getTagProps) =>\r\n                                    value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                    ))\r\n                                  }\r\n                                  renderInput={params => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                    />\r\n                                  )}\r\n                                /> : <Typography className={classes.heading}>\r\n                                    {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                {row.updatedAt}\r\n                              </Moment>\r\n                            </TableCell>\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ?\r\n                                <TableCell style={{ width: 170 }} align=\"center\">\r\n                                  <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                  </Button>\r\n                                </TableCell> :\r\n                                <TableCell align=\"center\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                            }\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    else {\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                    }\r\n                  }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n        </div>\r\n\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addgemstoneprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [gemstonedata, setGemstonedata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(gemstonedata)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setGemstonedata({ ...gemstonedata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setGemstonedata({\r\n    ...gemstonedata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('gemstone')}\r\n              getOptionLabel={option => option.name}\r\n              options={props.gems}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Gemstone\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          {props.viewtype == 1 ? \r\n          <>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight Start\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightstart')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight End\"\r\n              onChange={handleinputChange('weightend')}\r\n              fullWidth\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          </> : null }\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              id=\"productvendorcode\"\r\n              onChange={handleinputChange('costprice')}\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEGEMCHARGE, GEMSTONEMASTER, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Addgemstoneprice from './Addgemstoneprice';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\r\n  { id: 'From weight', label: 'From weight' },\r\n  { id: 'To Weight', label: 'To Weight' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\nconst stonecountcolumns = [\r\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\r\n\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorid, setVendorid] = React.useState(props.vendor);\r\n  const [deleteid, setDeleteid] = React.useState([]);\r\n  const [gemmaster, setGemmaster] = React.useState([]);\r\n\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editgem, setEditgem] = React.useState({})\r\n  const [gemlist, setgemlist] = React.useState([])\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(diamondcontent) {\r\n    if (deleteid.length > 0) {\r\n      let variables = {\r\n        elementId: deleteid[0]\r\n      }\r\n      await props.client.mutate({ mutation: DELETEGEMCHARGE, variables })\r\n    }\r\n    if (deleteid.length > 1) {\r\n      let variables = {\r\n        elementId: deleteid[1]\r\n      }\r\n      await props.client.mutate({ mutation: DELETEGEMCHARGE, variables })\r\n    }\r\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\r\n\r\n    //   if(res!==null){\r\n    //    // refetch();\r\n    //     // refetchval()\r\n    //     getgemlist()\r\n    //   }\r\n    // }).catch(err => {\r\n\r\n    // })\r\n    setgemlist([])\r\n\r\n    setDeleteid([])\r\n    getgemlist()\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n\r\n    let deleteids = [];\r\n    deleteids.push(diamondData.costprice.id)\r\n    deleteids.push(diamondData.sellprice.id)\r\n\r\n    setDeleteid(deleteids)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function handleAdd(gemstonedata) {\r\n    var bodydata = {}\r\n    bodydata['gemstone_type'] = gemstonedata.name\r\n    bodydata['weight_start'] = gemstonedata.weightstart\r\n    bodydata['weight_end'] = gemstonedata.weightend\r\n    bodydata['cost_price'] = gemstonedata.costprice\r\n    bodydata['vendor_code'] = props.vendor\r\n    bodydata['selling_price_type'] = gemstonedata.pricetype.label\r\n    bodydata['selling_price'] = gemstonedata.sellingprice\r\n    bodydata['isadd'] = true\r\n\r\n    // alert(JSON.stringify(gemstonedata))\r\n\r\n    await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\r\n    setOpen(false)\r\n    getgemlist()\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditgem({\r\n      ...editgem,\r\n      cost_price_id: diamondData.costprice.id,\r\n      weight_start: diamondData.costprice.weight_start,\r\n      weight_end: diamondData.costprice.weight_end,\r\n      cost_price: diamondData.costprice.price,\r\n      selling_price: diamondData.sellprice.price,\r\n      selling_price_id: diamondData.sellprice.id,\r\n\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.costprice.id, action: true })\r\n\r\n  }\r\n\r\n  async function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n    await sendNetworkRequest('/updategemstoneprice', {}, editgem)\r\n\r\n    getgemlist()\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  async function getgemlist() {\r\n    let bodydata = {\r\n      vendorid: props.vendor,\r\n      ratetype: props.viewtype\r\n    }\r\n    let response = await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\r\n    // setProductlists(response.products)\r\n    setgemlist(response.gems)\r\n\r\n  }\r\n  useEffect(() => {\r\n    getgemlist()\r\n  }, [vendorid])\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  const handleinputChange = type => e => {\r\n    setEditgem({\r\n      ...editgem,\r\n      [type]: e.target.value\r\n    })\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      <ConformationAlert\r\n        title={\"Are you sure to delete?\"}\r\n        positivebtn={\"Yes\"}\r\n        negativebtn={\"No\"}\r\n        message={\"\"}\r\n        onSuccess={handledelete}\r\n        data={deleteid}\r\n        onCancel={hidedeleteconformation}\r\n        isshow={isconformation} />\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item> \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n        {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\r\n        \r\n      </div> */}\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              {props.viewtype == 1 ?\r\n                <TableRow>\r\n\r\n                  {columns.map(column => (\r\n\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow> : <TableRow>\r\n\r\n                  {stonecountcolumns.map(column => (\r\n\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>}\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* <Query\r\n              query={GEMPRICELIST}\r\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    \r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <> */}\r\n              {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\r\n                <TableRow key={row.gemstoneType}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.costprice.gemstone_type}\r\n\r\n                  </TableCell>\r\n                  {props.viewtype == 1 ?\r\n                    <>\r\n                      <TableCell align=\"left\">\r\n                        <Typography className={classes.heading}>\r\n                          {row.costprice.weight_start}\r\n                        </Typography>\r\n                        {/* {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editgem.weight_start}\r\n                                    onChange={handleinputChange('weight_start')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costprice.weight_start}\r\n                                   </Typography>  } */}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Typography className={classes.heading}>\r\n                          {row.costprice.weight_end}\r\n                        </Typography>\r\n                        {/* {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editgem.weight_end}\r\n                                    onChange={handleinputChange('weight_end')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costprice.weight_end}\r\n                                   </Typography>  } */}\r\n                      </TableCell>\r\n                    </> : null}\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        label=\"Cost Price\"\r\n                        fullWidth\r\n                        className={classes.helperinput}\r\n                        value={editgem.cost_price}\r\n                        onChange={handleinputChange('cost_price')}\r\n                        id=\"productvendorcode\"\r\n                        name=\"Cost Price\"\r\n                      /> :\r\n                        <Typography className={classes.heading}>\r\n                          {row.costprice.price}\r\n                        </Typography>}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        label=\"Cost Price\"\r\n                        fullWidth\r\n                        className={classes.helperinput}\r\n                        value={editgem.selling_price}\r\n                        onChange={handleinputChange('selling_price')}\r\n                        id=\"productvendorcode\"\r\n                        name=\"Cost Price\"\r\n                      /> :\r\n                        <Typography className={classes.heading}>\r\n                          {row.sellprice.price}\r\n                        </Typography>}\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      btnEdit.action && btnEdit.id == row.costprice.id ? <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        fullWidth\r\n                        disableClearable\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={option => option.name}\r\n                        options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={params => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Price Type\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                          />\r\n                        )}\r\n                      /> : <Typography className={classes.heading}>\r\n                          {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                      {row.updatedAt}\r\n                    </Moment>\r\n                  </TableCell>\r\n                  {\r\n                    btnEdit.action && btnEdit.id == row.costprice.id ?\r\n                      <TableCell style={{ width: 170 }} align=\"center\">\r\n                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                        </Button>\r\n                      </TableCell> :\r\n                      <TableCell align=\"center\" style={{ width: 170 }}>\r\n                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                  }\r\n                </TableRow>\r\n              ))}\r\n              {/* </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      } \r\n                  }}*/}\r\n              {/* </Query> */}\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,20,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter> */}\r\n          </Table>\r\n        </div>\r\n        {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmakingchargeprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [makingcharge, setMakingcharge] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.actionSave(makingcharge)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMakingcharge({ ...makingcharge, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMakingcharge({\r\n    ...makingcharge,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.metals}\r\n              onChange={handleoptionChange('metal')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Metal\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight Start\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightstart')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight End\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightend')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.purities}\r\n              onChange={handleoptionChange('purity')}\r\n\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingprice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Grid, Input } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEMAKINGCHARGE, MAKINGCHARGEPRICELIST, METALMASTER, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Addmakingchargeprice from './Addmakingchargeprice';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Metal', label: 'Metal' },\r\n  { id: 'Purity', label: 'Purity' },\r\n  { id: 'From Weight', label: 'From Weight' },\r\n  { id: 'To weight', label: 'To weight' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n\r\n  { id: 'updated On', label: 'updated On' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorid, setVendorid] = React.useState(props.vendor);\r\n  const [editmc, setEditmc] = React.useState({})\r\n  const [puritymaster, setPuritymaster] = React.useState([])\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n  const [mchargelist, setMchargelist] = React.useState([])\r\n  const [deleteid, setDeleteid] = React.useState('')\r\n  const [metalmaster, setMetalmaster] = React.useState([])\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: '',\r\n    add: false\r\n  })\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent) {\r\n    let variables = {\r\n      elementId: deleteid\r\n    }\r\n    await props.client.mutate({ mutation: DELETEMAKINGCHARGE, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        //refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false, add: true })\r\n\r\n  }\r\n  async function handleAdd(makingcontent) {\r\n    let bodydata = {}\r\n    bodydata['material'] = makingcontent.metal.name;\r\n    bodydata['weight_start'] = makingcontent.weightstart;\r\n    bodydata['weight_end'] = makingcontent.weightend;\r\n    bodydata['price_type'] = makingcontent.pricetype.label;\r\n    bodydata['vendor_code'] = props.vendor;\r\n    bodydata['purity'] = makingcontent.purity.shortCode;\r\n    bodydata['cost_price'] = makingcontent.costPrice;\r\n    bodydata['selling_price'] = makingcontent.sellingprice;\r\n    bodydata['isadd'] = true\r\n\r\n    await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    setOpen(false)\r\n    getmclist()\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditmc({\r\n      ...editmc,\r\n      price: diamondData.price,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  async function getmclist() {\r\n    let bodydata = {\r\n      vendorid: props.vendor\r\n    }\r\n\r\n    let response = await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\r\n    setMchargelist(response.gems)\r\n\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: METALMASTER, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\r\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getmclist()\r\n  }, [vendorid])\r\n  async function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    await sendNetworkRequest('/updatemakingcharge', {}, editmc)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    getmclist()\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  const handleinputChange = type => e => {\r\n    setEditmc({\r\n      ...editmc,\r\n      [type]: e.target.value\r\n    })\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      <ConformationAlert\r\n        title={\"Are you sure to delete?\"}\r\n        positivebtn={\"Yes\"}\r\n        negativebtn={\"No\"}\r\n        message={\"\"}\r\n        data={deleteid}\r\n        onSuccess={handledelete}\r\n        onCancel={hidedeleteconformation}\r\n        isshow={isconformation} />\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item > \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search By Purity\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n\r\n\r\n\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\" : column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={MAKINGCHARGEPRICELIST}\r\n                onCompleted={data => setPageCount(data.allMakingChargeSettings.totalCount)}\r\n                variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype }}>\r\n                {\r\n                  ({ data, loading, error, refetch }) => {\r\n\r\n                    if (loading) {\r\n                      // return <Loader />\r\n                    }\r\n                    if (error) {\r\n                      return <div>{error}</div>\r\n                      // return false\r\n                    }\r\n                    if (data) {\r\n                      return <>\r\n                        {data.allMakingChargeSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.material}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.material}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">{row.purity}</TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.weight_start}\r\n                                    onChange={handleinputChange('weight_start')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                              <Typography className={classes.heading}>\r\n                                {row.weightStart}\r\n                              </Typography>\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.weight_end}\r\n                                    onChange={handleinputChange('weight_end')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                              <Typography className={classes.heading}>\r\n                                {row.weightEnd}\r\n                              </Typography>\r\n                            </TableCell>\r\n\r\n\r\n\r\n\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editmc.price}\r\n                                  onChange={handleinputChange('selling_price')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.price}\r\n                                  </Typography>}\r\n                            </TableCell>\r\n\r\n                            {/* <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                    </TableCell> */}\r\n\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                {row.updatedAt}\r\n                              </Moment>\r\n                            </TableCell>\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ?\r\n                                <TableCell style={{ width: 170 }} align=\"left\">\r\n                                  <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                  </Button>\r\n                                </TableCell> :\r\n                                <TableCell align=\"left\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                            }\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    else {\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                    }\r\n                  }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,100,200,500]}\r\n                \r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter> */}\r\n          </Table>\r\n        </div>\r\n        {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster} isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Product from './components/Product'\r\nimport Diamonds from './components/Diamonds'\r\nimport Gemstones from './components/Gemstones'\r\nimport Makingcharge from './components/Makingcharge'\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n}))\r\nexport const Vendorprice = withRouter(props => {\r\n  const [vendorcode, setVendorcode] = React.useState(0);\r\n  const [vendorlist, setVendorlist] = React.useState(0);\r\n\r\n   \r\n  const classes = useStyle();\r\n\r\n  const handlevendorchange = type => (event, value) => { \r\n    setVendorcode(value.shortCode)\r\n\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n\r\n        setVendorlist({ \r\n          ...vendorlist,\r\n          vendors : fatchvalue.data.allMasterVendors.nodes\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n   \r\n  return (\r\n         <Grid container  spacing={1}>  \r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            Vendor Based Price List\r\n          </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      fullWidth\r\n                      disableClearable\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\r\n                      options={vendorlist.vendors}\r\n                      onChange={handlevendorchange('vendor')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Choose Vendor\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n    </Grid>\r\n         \r\n         {vendorcode ? <>\r\n          {/* <Grid item xs={12} sm={12}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n           Gold Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={vendorcode} />\r\n          </Grid>\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Diamond Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Diamonds vendor={vendorcode}/>\r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Gemstone Price Setup By weight\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           \r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \r\n    </Grid>\r\n\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Cost Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Selling Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\r\n    </Grid>\r\n          </> : null }\r\n    </Grid>\r\n\r\n    \r\n  )\r\n});\r\n\r\nexport default withRouter(Vendorprice);","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Product Type\"\r\n          action ={\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n\r\n          >\r\n            Add New Producttype\r\n          </Button>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.name}</TableCell>\r\n                      <TableCell align=\"center\">{order.alias}</TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  ButtonGroup,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Switch,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState([]);\r\n  const [vouchername, setVouchername] = useState(\"\");\r\n  const [vouchercount, setVouchercount] = useState(\"\");\r\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\r\n\r\n  const [discounttype, setDiscounttype] = useState(\"\");\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  const handleendDateChange = val => {\r\n      setSelectedendDate(val)\r\n      setVoucherCtx({\r\n        ...voucherCtx,\r\n        \"enddate\": val\r\n      })\r\n    };\r\n  const handleDateChange = val => {\r\n    setSelectedDate(val)\r\n\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"startdate\": val\r\n    })\r\n};\r\n  const handleClick = (event, option) => {\r\n   // setDiscounttype(option);\r\n   setVoucherCtx({\r\n     ...voucherCtx,\r\n     \"discounttype\": option\r\n   })\r\n  };\r\n  const handleMinimumreq = (event, option) => {\r\n   // setDiscounttype(option);\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"minimumreq\": option\r\n    })\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n    \r\n  };\r\n  const handleInputChange = type => (event, value) => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"vouchercodes\":value\r\n    })\r\n    setVouchercode(value)\r\n  }\r\n  // const handleInputChange = (event, option) => {\r\n  //   alert(JSON.stringify(option))\r\n  // }\r\n  // const handleInputChange = type => e => {\r\n  //   setVouchercode(e.target.value.toUpperCase())\r\n  // }\r\n  const handlevouchername = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n  const handlevaluechange = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n  const handleisloggedin = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.checked\r\n    })\r\n  }\r\n  const handleCountChange = type => e => {\r\n    setVouchercount(e.target.value.toUpperCase())\r\n  }\r\n  const handlePrefixChange = type => e => {\r\n    setVoucherprefix(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n  //  setIsonce(!isonce);\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"isonce\": !voucherCtx.isonce\r\n    })\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVoucherCtx({\r\n     ...voucherCtx,\r\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\r\n   })\r\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid container item xs={12} sm={12} spacing={1} >\r\n      <Grid   item xs={6} sm={6} >\r\n      <Grid container  item xs={12} sm={12} spacing={1}>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handlevouchername('vouchername')}\r\n            id=\"vouchername\"\r\n            name=\"vouchername\"\r\n            value={voucherCtx.vouchername}\r\n            label=\"Voucher Name\"\r\n            />\r\n      <Grid   item xs={6} sm={6} >\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handlePrefixChange('voucherprefix')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n             value={voucherprefix}\r\n            label=\"Voucher Prefix\"\r\n            />\r\n      </Grid>\r\n      <Grid   item xs={6} sm={6} >\r\n\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handleCountChange('vouchercount')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n            // value={vouchercode}\r\n            label=\"No of vouchers\"\r\n            />\r\n      </Grid>\r\n      <Grid   item xs={12} sm={12} >\r\n\r\n         {/* <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            \r\n            onChange={handleInputChange('vouchercode')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n            value={vouchercode}\r\n            label=\"Voucher Code\"\r\n            />  */}\r\n\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       freeSolo\r\n                       defaultValue={voucherCtx.vouchercode}\r\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       options={[]}\r\n                        onChange={handleInputChange('vouchercode')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Voucher Codes\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                      //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                       />\r\n                       )}\r\n                       />\r\n                       </Grid>\r\n      </Grid>\r\n      </Grid> \r\n      <Grid   item xs={6} sm={6} >\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            multiline\r\n            rows=\"7\"\r\n            onChange={handlevaluechange('voucherdescription')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n           value={voucherCtx.voucherdescription}\r\n            label=\"Voucher Description\"\r\n            />\r\n\r\n      </Grid>\r\n      \r\n    \r\n      <Grid   item xs={2} sm={2} >\r\n        <Button size=\"small\" variant=\"contained\" \r\n        onClick={event => generateCoupon(event)}\r\n        className={classes.margin}>\r\n            Generate Voucher\r\n          </Button>\r\n      </Grid>\r\n      \r\n          \r\n\r\n        </Grid>\r\n        \r\n       \r\n       \r\n     \r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n        <FormControlLabel\r\n        control={\r\n          <Switch\r\n             checked={voucherCtx.isloggedin}\r\n             onChange={handleisloggedin('isloggedin')}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        labelPlacement=\"start\"\r\n\r\n        label=\"Applicable for loggedin user\"\r\n      />  \r\n      </Grid>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n                      \r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n      >\r\n      Discount Type\r\n      </Typography>\r\n      </Grid>\r\n        \r\n\r\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n            {props.categories.map(option => (\r\n              \r\n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n              \r\n            ))}\r\n            </ButtonGroup>\r\n        </Grid>\r\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid item xs={6} sm={6} spacing={1}>\r\n            <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"orderqty\"\r\n          name=\"orderqty\"\r\n          label=\"Minimum order Quantity\"\r\n          onChange={handlevaluechange('minimumqty')}\r\n          value={voucherCtx.minimumqty}\r\n          />\r\n        </Grid> </Grid> :  \r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid item xs={6} sm={6} spacing={1}>\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Discount Value\"\r\n          onChange={handlevaluechange('voucherdiscount')}\r\n          value={voucherCtx.voucherdiscount}\r\n          />\r\n          </Grid>\r\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Maximun Discount Value\"\r\n          onChange={handlevaluechange('maxvoucherdiscount')}\r\n          value={voucherCtx.maxvoucherdiscount}\r\n          />\r\n          </Grid> : null}\r\n\r\n        </Grid>\r\n}\r\n      \r\n        <Grid  item xs={6} sm={6} spacing={1}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Uses per user\"\r\n          defaultValue=\"1\"\r\n          helperText=\"One User can use how many times\"\r\n          onChange={handlevaluechange('isonce')}\r\n          value={voucherCtx.isonce}\r\n          />\r\n        {/* <CardActionArea>\r\n\r\n        <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOptiondefault]: voucherCtx.isonce\r\n            })}\r\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\r\n\r\n            key={\"\"}\r\n          >\r\n                <CardActions>\r\n\r\n            <Radio\r\n              checked={voucherCtx.isonce}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              label\r\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\r\n              />\r\n            </CardActions>\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n               Only once per order\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"title\"\r\n              >\r\n               If this option is disabled, discount will be counted for every eligible product\r\n              </Typography>\r\n              </div>\r\n            \r\n          </div>\r\n          </CardActionArea> */}\r\n          </Grid>\r\n         \r\n          <Grid item xs={6} sm={6} spacing={1}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          onChange={handlevaluechange('limittouse')}\r\n          fullWidth\r\n          value={voucherCtx.limittouse}\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Limit of uses\"\r\n          helperText=\"How may times we can  use this\"\r\n\r\n          />\r\n        \r\n        </Grid>\r\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n\r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n      >\r\n        Minimum Requirements\r\n        </Typography>\r\n      </Grid>\r\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\r\n              \r\n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n              \r\n            ))}\r\n            </ButtonGroup>\r\n        \r\n        </Grid> */}\r\n\r\n\r\n\r\n        \r\n\r\n\r\n\r\n        <Grid item xs={12} sm={12} spacing={1}>\r\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          onChange={handlevaluechange('minorder')}\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          value={voucherCtx.minorder}\r\n          label={'Minimum Order Value'}\r\n          />\r\n        {/* } */}\r\n        </Grid>\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\r\n\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n          >\r\n            Usage Limits\r\n            </Typography>\r\n          </Grid> */}\r\n{/* \r\n          <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\r\n            })}\r\n            key={\"\"}\r\n            onClick={event => handleusagelimit(event, \"once\")}\r\n\r\n          >\r\n            <Radio\r\n              checked={usagelimit === \"once\"}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              onClick={event => handleusagelimit(event, \"once\")}\r\n            />\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                className={selected === \"\" ? classes.selectedtext : null}\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n               Only once per order\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"title\"\r\n              >\r\n               Limit to one use per customer\r\n              </Typography>\r\n              </div>\r\n            \r\n          </div>\r\n          \r\n            </Grid>\r\n            <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n<div\r\n  className={clsx(classes.option, {\r\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\r\n  })}\r\n  key={\"\"}\r\n  onClick={event => handleusagelimit(event, \"usagecount\")}\r\n\r\n>\r\n  <Radio\r\n    checked={usagelimit === \"usagecount\"}\r\n    className={classes.optionRadio}\r\n    color=\"primary\"\r\n    onClick={event => handleusagelimit(event, \"usagecount\")}\r\n  />\r\n  <div className={classes.optionDetails}>\r\n    <Typography\r\n      gutterBottom\r\n      variant=\"h5\"\r\n    >\r\n     Usage Limit\r\n    </Typography>\r\n    <Typography\r\n      gutterBottom\r\n      variant=\"title\"\r\n    >\r\n     Limit number of times this discount can be used in total\r\n    </Typography>\r\n    </div>\r\n  \r\n</div>\r\n<Grid item xs={12} sm={12} spacing={1}>\r\n        {usagelimit === 'once' ? null :\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          \r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Limit of uses\"\r\n          />\r\n        }\r\n        </Grid>\r\n  </Grid> */}\r\n          </Grid>\r\n          <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n        <DateTimePicker\r\n          label=\"Start Date\"\r\n          fullWidth\r\n          inputVariant=\"outlined\"\r\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \r\n          minDate={new Date()}    \r\n          onChange={handleDateChange}\r\n        />\r\n    </Grid>\r\n            <Grid  item xs={6} sm={6} spacing={1}>\r\n            <DateTimePicker\r\n      label=\"End Date\"\r\n      fullWidth\r\n      inputVariant=\"outlined\"\r\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\r\n      minDate={selectedDate}\r\n      strictCompareDates={true}\r\n      onChange={handleendDateChange}\r\n    />\r\n    </Grid>\r\n        </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst VoucherComponent = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState({});\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={voucherCtx.voucherMaster.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n            value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={voucherCtx.voucherMaster.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n//  value={attrobj.componenets}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={voucherCtx.voucherMaster.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\r\n           onChange={handleoptionChange('componenets')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVoucherComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default VoucherComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { VoucherContext } from '../../context';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport FullLoader from '../../components/Loader'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\r\nimport { Button, Grid,Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n  \r\nexport default function Voucherdiscountcontent(props) {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const [attributes, setAttributes] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [skus, setSkus] = useState([]);\r\n  const [isloading, setIsloading] = useState(false);\r\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\r\n  const [open, setOpen] = React.useState(false);\r\n  const [discountid, setDiscountid] = React.useState(\"\");\r\n  const [isloaded, setIsloaded] = useState(false);\r\n\r\n  const [snackMessage,setSnackMessage] = React.useState({\r\n    message:\"Created Successfully\",\r\n    severity:\"Success\"\r\n  });\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\r\n  function attributesadded(attributedata)\r\n  {\r\n    setAttributes(attributedata)\r\n    setIsloading(true)\r\n    //setAttributeobj(value)\r\n    filterapllied(attributedata)\r\n\r\n  }\r\n  async function creatediscount()\r\n  {\r\n    setIsloading(true)\r\n    var discounttype = 2;\r\n    if(voucherCtx.discounttype === 'Free Shipping')\r\n    {\r\n      discounttype = 3\r\n    }\r\n  else if(voucherCtx.discounttype === 'percentage')\r\n    {\r\n      discounttype =2\r\n    }\r\nelse    {\r\n      discounttype = 1\r\n    }\r\n    let bodydata = {}\r\n    bodydata['vouchername'] = voucherCtx.vouchername;\r\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\r\n    bodydata['description'] = voucherCtx.voucherdescription;\r\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\r\n    bodydata['discounttype'] = discounttype;\r\n    bodydata['discount'] = voucherCtx.voucherdiscount;\r\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\r\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\r\n    bodydata['isonce'] = voucherCtx.isonce;\r\n    bodydata['limittouse'] = voucherCtx.limittouse;\r\n    bodydata['minorder'] = voucherCtx.minorder;\r\n    bodydata['attributes'] = attributes;\r\n    bodydata['startdate'] = voucherCtx.startdate;\r\n    bodydata['enddate'] = voucherCtx.enddate;\r\n\r\n    console.log(JSON.stringify(bodydata))\r\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\r\n    setIsloading(false)\r\n    setOpen(true)\r\n\r\n    window.location='/voucherdiscountlist'\r\n\r\n  }\r\n\r\n  async function filterapllied(value)\r\n  {\r\n    var  bodydata = {}\r\n  \r\n    let product_ids = []\r\n\r\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\r\n   setProducts(response.products)\r\n   setSkus(response.skus)\r\n   setIsloading(false)\r\n\r\n    \r\n  }\r\n  async function getdiscountvalue(discount_id)\r\n  {\r\n    let bodydata = {\r\n      id : discount_id\r\n      }\r\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\r\n    let voucherobj = response.response\r\n    let discounttype = voucherobj.discounttype\r\n    var discounttypeval = \"percentage\"\r\n    if(discounttype === 1)\r\n    {\r\n      discounttypeval = 'Fixed'\r\n    }else if(discounttype === 3)\r\n    {\r\n      discounttypeval = 'Free Shipping'\r\n\r\n    }\r\n    let categories = voucherobj.product_attributes.category;\r\n    let selectedcategories = []\r\n    if(categories)\r\n    {\r\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\r\n      if(categories.indexOf(catobj.alias) > -1)\r\n      {\r\n        selectedcategories.push(catobj)\r\n      }\r\n    })\r\n  }\r\n    let materials = voucherobj.product_attributes.materials;\r\n    let selectedmaterials = []\r\n    if(materials)\r\n    {\r\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\r\n      if(materials.indexOf(matobj.alias) > -1 )\r\n      {\r\n        selectedmaterials.push(matobj)\r\n      }\r\n    })\r\n  }\r\n    \r\n    let producttypes = voucherobj.product_attributes.product_types;\r\n    let selectedproduct_types = []\r\n    if(producttypes)\r\n    {\r\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\r\n      if( producttypes.indexOf(protypeobj.alias) > -1)\r\n      {\r\n        selectedproduct_types.push(protypeobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let collections = voucherobj.product_attributes.collections;\r\n    let selectedcollections = []\r\n    if(collections)\r\n    {\r\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\r\n      if( collections.indexOf(collectionobj.alias) > -1)\r\n      {\r\n        selectedcollections.push(collectionobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let occassions = voucherobj.product_attributes.occations;\r\n    let selectedoccassions = []\r\n    if(occassions)\r\n    {\r\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\r\n      if( occassions.indexOf(occassionobj.alias) > -1)\r\n      {\r\n        selectedoccassions.push(occassionobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let themes = voucherobj.product_attributes.themes;\r\n  let selectedthemes = []\r\n  if(themes)\r\n  {\r\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\r\n    if( themes.indexOf(themeobj.alias) > -1)\r\n    {\r\n      selectedthemes.push(themeobj)\r\n    }\r\n  })\r\n}\r\n\r\n  let styles = voucherobj.product_attributes.styles;\r\n    let selectedstyles = []\r\n    if(styles)\r\n    {\r\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\r\n      if( styles.indexOf(styleobj.alias) > -1)\r\n      {\r\n        selectedstyles.push(styleobj)\r\n      }\r\n    })\r\n  }\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      vouchername: voucherobj.name,\r\n      vouchercode: voucherobj.voucher_codes,\r\n      voucherdescription : voucherobj.description,\r\n      isloggedin: voucherobj.isloginneeded,\r\n      discounttype: discounttypeval,\r\n      minimumqty:0,\r\n      maxvoucherdiscount:voucherobj.max_discount,\r\n      isonce: voucherobj.max_uses_user,\r\n      limittouse:voucherobj.max_uses,\r\n      voucherdiscount:voucherobj.discount_amount,\r\n      minorder: voucherobj.min_cart_value,\r\n      startdate: voucherobj.starts_at,\r\n      enddate: voucherobj.expires_at,\r\n      category: selectedcategories,\r\n      materials: selectedmaterials,\r\n      product_types : selectedproduct_types,\r\n      collections : selectedcollections,\r\n      styles: selectedstyles,\r\n      themes: selectedthemes\r\n    })\r\n    setIsloaded(true)\r\n    }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      \r\n    };\r\n    fetchOrders();\r\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\r\n    {\r\n       setDiscountid( props.location.pathname.split('/')[2]);\r\n      getdiscountvalue(props.location.pathname.split('/')[2])\r\n  \r\n    }else{\r\n      setIsloaded(true)\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n             <FullLoader title=\"\" isopen={isloading}/>\r\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n   {isloaded ? <>\r\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\r\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\r\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\r\n\r\n    <Typography variant=\"h5\" component=\"h2\">\r\n    {products.length} Products and {skus.length} skus\r\n  </Typography>\r\n          </Grid>\r\n          \r\n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\r\n          </Grid>:null} </>\r\n          : null }\r\n          </>:null}\r\n    \r\n   \r\n  </Page>\r\n  </MuiPickersUtilsProvider>\r\n  </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './VoucherdiscountContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Voucherdiscount = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </VoucherProvider>\r\n\r\n)});\r\nexport default Voucherdiscount;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\r\nimport ConformationAlert from '../../../../components/ConformationAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibleIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  FormControlLabel,\r\n  Switch,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //minWidth: 1150\r\n    overflowX: \"auto\"\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  let history = useHistory();\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation,setIsconformation] = React.useState(false)\r\n\r\n  \r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nfunction handleEdit(diamondData) {\r\n\r\nhistory.push(`voucherdiscount/${diamondData.id}`)\r\n}\r\nfunction handleDelete(diamondData) {\r\n\r\n  setDeleteid(diamondData.id)\r\n  setIsconformation(true);\r\n}\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleChange(event,voucherid, refetch)\r\n  {\r\n    handlestatusChange(voucherid,event.target.checked, refetch)\r\n  }\r\n\r\n  async function handlestatusChange(id,isactive,refetch){\r\n    let variables ={\r\n      voucherId:id,\r\n      isActive:isactive\r\n    }\r\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n  \r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {props.tablecolumns.map((row, index) => (\r\n                          <TableCell>{row}</TableCell>\r\n                    ))}   \r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={VOUCHERDISCOUNTS}\r\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n                                 <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                 <>\r\n                                  <TableRow key={row.name}>\r\n                                    <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.description}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.uses} / {row.maxUses}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\"> <FormControlLabel\r\n                                                    label={row.isActive ? \"\" : \"\"}\r\n\r\n                                                    control={\r\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \r\n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \r\n                                                      />\r\n                                                    }\r\n                                                  /></TableCell>\r\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\r\n                                      <Button ><VisibleIcon />\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={pageCount}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default withApollo(Results);\r\n","import React,{useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page/Page'\r\nimport { Header, Results } from './components';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nlet colimns = [\r\n  \"Name\",\r\n  \"code\",\r\n  \"description\",\r\n  \"uses/Max usage\",\r\n  \"Active\",\r\n  \"actions\"\r\n]\r\nexport const VoucherdiscountListing = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n    title={\"Voucher Discount\"}\r\n       className={classes.results}\r\n       tablecolumns={colimns}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    />\r\n   \r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default VoucherdiscountListing;","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst WarehouseModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Warehouse-Modal\"}\r\n    >\r\n      <DialogTitle\r\n        id=\"Warehouse-Modal\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h6\">{`${props.type} Warehouse`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Name\"}\r\n              name=\"name\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.name}\r\n              onChange={props.editItem}\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Shipping In Days\"}\r\n              name=\"shippingInDays\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.shippingInDays}\r\n              onChange={props.editItem}\r\n            />\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WarehouseModal;\r\n","import {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  Paper,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { AlertContext } from \"../../context\";\r\nimport {\r\n  CREATE_WAREHOUSE,\r\n  DELETE_WAREHOUSE,\r\n  UPDATE_WAREHOUSE,\r\n} from \"../../graphql/mutation\";\r\nimport { WAREHOUSELIST } from \"../../graphql/query\";\r\nimport WarehouseModal from \"./WarehouseModal\";\r\n\r\nexport const Warehouse = (props) => {\r\n  const { loading, data, error, refetch } = useQuery(WAREHOUSELIST);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({ name: \"\", shippingInDays: \"\" });\r\n\r\n  const editItem = (event) => {\r\n    var { name, value } = event.target;\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n    setItem({ name: \"\", shippingInDays: \"\" });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    item[\"shippingInDays\"] = parseInt(item.shippingInDays);\r\n    if (type === \"Edit\") {\r\n      var id = item.id;\r\n      delete item.id;\r\n      delete item.createdAt;\r\n      delete item.updatedAt;\r\n      delete item.__typename;\r\n      item[\"updatedAt\"] = new Date();\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_WAREHOUSE,\r\n          variables: {\r\n            id,\r\n            item,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_WAREHOUSE,\r\n          variables: {\r\n            item,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setOpen(false);\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Delete\") {\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_WAREHOUSE,\r\n          variables: {\r\n            id: item.id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSwitch = (id, isActive) => {\r\n    client\r\n      .mutate({\r\n        mutation: UPDATE_WAREHOUSE,\r\n        variables: {\r\n          id,\r\n          item: { isActive: !isActive, updatedAt: new Date() },\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully Updated!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Warehouse</Typography>\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Warehouse\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Name</TableCell>\r\n                <TableCell align={\"center\"}>Shipping In Days</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Status</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allWarehouses?.nodes.length === 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>No Warehouses found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allWarehouses?.nodes.length > 0 &&\r\n                data?.allWarehouses?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.name}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.shippingInDays}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <Switch\r\n                        checked={item.isActive}\r\n                        onChange={() => handleSwitch(item.id, item.isActive)}\r\n                        name=\"active\"\r\n                        color=\"primary\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <WarehouseModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Slide,\r\n  Typography,\r\n  TextField,\r\n  makeStyles,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Switch,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { CARTBYID } from \"../../graphql/query\";\r\nimport Image from \"material-ui-image\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport SmsIcon from \"@material-ui/icons/Sms\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport moment from \"moment\";\r\nimport { API_URL } from \"../../config\";\r\nimport { AlertContext } from \"../../context\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  fieldset: {\r\n    borderColor: theme.palette.primary.main,\r\n    borderRadius: \"5px\",\r\n    boxSizing: \"border-box\",\r\n    gridArea: \"1 / 1\",\r\n    width: \"inherit\",\r\n  },\r\n  legend: {\r\n    font: \"15pt/0\",\r\n    //margin: \"auto\" /* to center */,\r\n    padding: \"0 4px\",\r\n  },\r\n  textfield: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  inline: {\r\n    margin: theme.spacing(0.5),\r\n    display: \"inline\",\r\n  },\r\n  chip: {\r\n    color: green[700],\r\n  },\r\n}));\r\n\r\nexport default function CartDetails(props) {\r\n  const classes = useStyles();\r\n  let { open, handleClose } = props;\r\n  const [state, setState] = React.useState({});\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const sendEmail = (order_id, type) => {\r\n    const url = API_URL + \"/trigger_mail\";\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ order_id: order_id, type: type }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Mail Sent Successfully!\",\r\n        });\r\n        console.log(fatchvalue);\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.id) {\r\n      client\r\n        .query({\r\n          query: CARTBYID,\r\n          variables: {\r\n            id: props.id,\r\n          },\r\n          fetchPolicy: \"network-only\",\r\n        })\r\n        .then((res) => {\r\n          setState(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    return () => {\r\n      setState({});\r\n    };\r\n  }, [props.id]);\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n      maxWidth={\"lg\"}\r\n      fullWidth\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h4\">Cart Details</Typography>\r\n        {handleClose && (\r\n          <>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              className={classes.closeButton}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {(state?.loading == undefined || state?.loading) && (\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n              <CircularProgress />\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {state?.data && (\r\n          <Grid\r\n            container\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={6}>\r\n              {/* <Typography variant=\"h6\">User Details</Typography> */}\r\n              <fieldset className={classes.fieldset}>\r\n                <legend className={classes.legend}>User Details</legend>\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  defaultValue={state?.data?.cart?.user?.firstName}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  defaultValue={state?.data?.cart?.user?.lastName}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"User Name\"\r\n                  defaultValue={state?.data?.cart?.user?.username}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Email\"\r\n                  defaultValue={state?.data?.cart?.user?.email}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Mobile No.\"\r\n                  defaultValue={state?.data?.cart?.user?.mobile}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <FormGroup row>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={state?.data?.user?.isemailverified ?? false}\r\n                        disabled\r\n                      />\r\n                    }\r\n                    labelPlacement=\"start\"\r\n                    label=\"Email Verified\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={state?.data?.user?.ismobileverified ?? false}\r\n                        disabled\r\n                      />\r\n                    }\r\n                    labelPlacement=\"start\"\r\n                    label=\" Mobile Verified\"\r\n                  />\r\n                </FormGroup>\r\n                {state?.data?.cart?.address?.nodes.length > 0 ? (\r\n                  <div style={{ padding: 5 }}>\r\n                    {state?.data?.cart?.address?.nodes.map((item, index) => {\r\n                      return (\r\n                        <React.Fragment key={item?.id}>\r\n                          <Typography variant=\"h6\">\r\n                            Cart Address #{index + 1} :{\" \"}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {`${item?.salutation ?? ``}${item?.firstname} ${\r\n                              item?.lastname\r\n                            }`.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.addressline1.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.addressline2.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.city.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.state.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.country.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.pincode.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            Contact No.{\" \"}\r\n                            {`${item?.countryCode} - ${item?.contactNumber}`}\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                ) : (\r\n                  ``\r\n                )}\r\n              </fieldset>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              container\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\"\r\n              spacing={1}\r\n            >\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Status</legend>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Status :{\" \"}\r\n                        <Chip\r\n                          className={classes.chip}\r\n                          label={state?.data?.cart?.status.toUpperCase()}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Gross Price : &#8377;\r\n                        {`${state?.data?.cart?.grossAmount ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Discounted Price : &#8377;\r\n                        {`${state?.data?.cart?.discountedPrice ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Tax Amount : &#8377;\r\n                        {`${state?.data?.cart?.taxAmount ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </fieldset>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Items</legend>\r\n                  <List className={classes.root} dense={true}>\r\n                    {state?.data?.cart?.cart_items?.nodes.map((item) => {\r\n                      var skuDetails = item?.transSkuListByProductSku;\r\n                      var product =\r\n                        item?.transSkuListByProductSku?.productListByProductId;\r\n                      var image = product?.productImagesByProductId?.nodes[0];\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            alignItems=\"flex-start\"\r\n                            key={item.productSku}\r\n                            disableGutters\r\n                            divider\r\n                          >\r\n                            <ListItemAvatar\r\n                              style={{\r\n                                width: \"30%\",\r\n                                height: \"30%\",\r\n                              }}\r\n                            >\r\n                              <Image src={`${image?.imageUrl}`} />\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                              primary={\r\n                                <Typography variant=\"h5\">\r\n                                  {\r\n                                    item?.transSkuListByProductSku\r\n                                      ?.productListByProductId?.productName\r\n                                  }\r\n                                </Typography>\r\n                              }\r\n                              secondary={\r\n                                <Grid container>\r\n                                  <Grid item xs={12}>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      SKU : {item?.productSku}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      Quantity : {item?.qty}\r\n                                    </Typography>\r\n                                  </Grid>\r\n                                  <Grid item xs={12}>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      Price : &#8377;\r\n                                      {skuDetails?.markupPrice}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                      style={{}}\r\n                                    >\r\n                                      Tax : &#8377;\r\n                                      {skuDetails?.markupPriceTax}\r\n                                    </Typography>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              }\r\n                            />\r\n                          </ListItem>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </fieldset>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Follow ups</legend>\r\n                  <List className={classes.root} dense={true}>\r\n                    {state?.data?.cart?.follow_ups?.nodes.map((item) => {\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            alignItems=\"flex-start\"\r\n                            key={item.senderResponseId}\r\n                            disableGutters\r\n                            divider\r\n                          >\r\n                            <ListItemIcon>\r\n                              {item.type == \"email\" && <MailIcon />}\r\n                              {item.type == \"sms\" && <SmsIcon />}\r\n                              {item.type == \"phone\" && <CallIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={item?.senderResponseId}\r\n                              secondary={moment(item?.createdAt).format(\r\n                                \"DD/MMM/YYYY HH:mm A\"\r\n                              )}\r\n                            />\r\n                          </ListItem>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </fieldset>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            sendEmail(props?.id, \"abandoned_cart\");\r\n          }}\r\n        >\r\n          Send Follow up Email\r\n        </Button>\r\n        <Button variant=\"contained\" onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  TableContainer,\r\n  Typography,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  LinearProgress,\r\n  TableFooter,\r\n  TablePagination,\r\n  Chip,\r\n  makeStyles,\r\n  Tooltip,\r\n  IconButton,\r\n  Button,\r\n  TableSortLabel,\r\n} from \"@material-ui/core\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { ABANDONEDCART } from \"../../graphql/query\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport moment from \"moment\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudDownloadOutlinedIcon from \"@material-ui/icons/CloudDownloadOutlined\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport CartDetails from \"./cart_details\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport exportFromJSON from \"export-from-json\";\r\n\r\nlet Headers = {\r\n  \"Cart ID\": {},\r\n  \"User Details\": {\r\n    asc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__FIRST_NAME_ASC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__USERNAME_ASC\",\r\n    ],\r\n    desc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__FIRST_NAME_DESC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__USERNAME_DESC\",\r\n    ],\r\n  },\r\n  \"Total Products in cart\": {\r\n    asc: [\"SHOPPING_CART_ITEMS_BY_SHOPPING_CART_ID_COUNT_ASC\"],\r\n    desc: [\"SHOPPING_CART_ITEMS_BY_SHOPPING_CART_ID_COUNT_DESC\"],\r\n  },\r\n  Contact: {\r\n    asc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__EMAIL_ASC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__MOBILE_ASC\",\r\n    ],\r\n    desc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__EMAIL_DESC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__MOBILE_DESC\",\r\n    ],\r\n  },\r\n  Status: {},\r\n  \"Created On\": {\r\n    asc: [\"CREATED_AT_ASC\"],\r\n    desc: [\"CREATED_AT_DESC\"],\r\n  },\r\n  \"Last Updated On\": {\r\n    asc: [\"UPDATED_AT_ASC\"],\r\n    desc: [\"UPDATED_AT_DESC\"],\r\n  },\r\n  Actions: {},\r\n};\r\n\r\nlet filterVariables = {\r\n  default: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n    },\r\n  },\r\n  withoutContact: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      userprofileId: {\r\n        isNull: true,\r\n      },\r\n    },\r\n  },\r\n  withContact: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      userprofileId: {\r\n        isNull: false,\r\n      },\r\n    },\r\n  },\r\n  emptyCart: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      shoppingCartItemsByShoppingCartId: {\r\n        every: {\r\n          productSku: {\r\n            isNull: true,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  chip: {\r\n    color: green[700],\r\n  },\r\n}));\r\n\r\nexport const AbandonedCart = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [filter, setFilter] = React.useState(\"default\");\r\n  const [sort, setSort] = React.useState({\r\n    by: \"Created On\",\r\n    direction: \"desc\",\r\n  });\r\n  const client = useApolloClient();\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    ABANDONEDCART,\r\n    {\r\n      variables: {\r\n        first: rowsPerPage,\r\n        offset: page * rowsPerPage,\r\n        orderBy: Headers[sort.by][sort.direction] ?? Headers[\"Created On\"].desc,\r\n        condition: { status: \"pending\" },\r\n        filter: filterVariables[filter]?.filter ?? null,\r\n      },\r\n    }\r\n  );\r\n  const handleClickFilter = (value) => {\r\n    setFilter(value);\r\n    refetch({\r\n      first: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      orderBy: [\"CREATED_AT_ASC\"],\r\n      condition: { status: \"pending\" },\r\n      filter: filterVariables[value]?.filter ?? null,\r\n    });\r\n  };\r\n\r\n  const applySort = (column) => {\r\n    var { by, direction } = sort;\r\n    if (by == column) {\r\n      if (direction && direction == \"asc\") {\r\n        direction = \"desc\";\r\n      } else {\r\n        direction = \"asc\";\r\n      }\r\n    } else {\r\n      direction = \"asc\";\r\n    }\r\n    setSort({ by: column, direction });\r\n    refetch({\r\n      first: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      orderBy: Headers[by][direction] ?? Headers[\"Created On\"].desc,\r\n      condition: { status: \"pending\" },\r\n      filter: filterVariables[filter]?.filter ?? null,\r\n    });\r\n  };\r\n\r\n  const [open, setOpen] = React.useState();\r\n\r\n  const handleClickOpen = (id) => {\r\n    setOpen(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen();\r\n  };\r\n\r\n  const downloadAbandonedCart = () => {\r\n    client\r\n      .query({\r\n        query: ABANDONEDCART,\r\n        variables: {\r\n          orderBy: [\"CREATED_AT_ASC\"],\r\n          condition: { status: \"pending\" },\r\n          filter: { ...filterVariables[\"withContact\"]?.filter },\r\n        },\r\n        fetchPolicy: \"network-only\",\r\n      })\r\n      .then(\r\n        ({\r\n          data: {\r\n            allShoppingCarts: { nodes: cartDetails },\r\n          },\r\n        }) => {\r\n          exportFromJSON({\r\n            data: cartDetails.map((item) => {\r\n              return {\r\n                cart_id: item.id,\r\n                created_at: moment(item.createdAt).format(\"DD/MM/YYYY hh:mm a\"),\r\n                gross_amount: item.grossAmount,\r\n                discount_amount: item.discountAmount,\r\n                first_name: item.user?.firstName,\r\n                last_name: item.user?.lastName,\r\n                email: item.user?.email,\r\n                mobile_no: item.user?.mobile,\r\n                sku_ids: item?.cart_items?.nodes\r\n                  ?.map((i) => i?.transSkuListByProductSku?.skuId)\r\n                  ?.join(\",\"),\r\n                generated_skus: item?.cart_items?.nodes\r\n                  ?.map((i) => i?.transSkuListByProductSku?.generatedSku)\r\n                  ?.join(\",\"),\r\n                product_names: item?.cart_items?.nodes\r\n                  ?.map(\r\n                    (i) =>\r\n                      i?.transSkuListByProductSku?.productListByProductId\r\n                        ?.productName\r\n                  )\r\n                  ?.join(\",\"),\r\n              };\r\n            }),\r\n            fileName: `abandoned_cart_${moment().format(\"YYYY-MM-DD\")}`,\r\n            exportType: \"xls\",\r\n          });\r\n        }\r\n      )\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h4\">Abandoned Cart</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"withoutContact\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"withoutContact\")}\r\n          >\r\n            Without Contact\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"withContact\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"withContact\")}\r\n          >\r\n            With Contact\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"emptyCart\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"emptyCart\")}\r\n          >\r\n            Empty Cart\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"default\")}\r\n          >\r\n            ALL\r\n          </Button>\r\n          <IconButton\r\n            aria-label=\"download abandoned cart\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            disabled={filter != \"withContact\"}\r\n            onClick={() => downloadAbandonedCart()}\r\n          >\r\n            <CloudDownloadOutlinedIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {Object.keys(Headers).map((item) => {\r\n                  return (\r\n                    <TableCell\r\n                      align=\"center\"\r\n                      key={item}\r\n                      sortDirection={\r\n                        sort?.by === item ? sort?.direction : false\r\n                      }\r\n                    >\r\n                      {Headers[item]?.asc ? (\r\n                        <TableSortLabel\r\n                          active={sort?.by === item}\r\n                          direction={\r\n                            sort?.by === item ? sort?.direction : \"asc\"\r\n                          }\r\n                          onClick={() => applySort(item)}\r\n                        >\r\n                          {item}\r\n                          {sort?.by === item ? (\r\n                            <span className={classes.visuallyHidden}>\r\n                              {sort?.direction === \"desc\"\r\n                                ? \"sorted descending\"\r\n                                : \"sorted ascending\"}\r\n                            </span>\r\n                          ) : null}\r\n                        </TableSortLabel>\r\n                      ) : (\r\n                        item\r\n                      )}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || networkStatus === NetworkStatus.refetch) && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                    padding=\"none\"\r\n                  >\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                  >\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allShoppingCarts?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                  >\r\n                    <Typography>No Cart Data Found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allShoppingCarts?.nodes.length > 0 &&\r\n                data?.allShoppingCarts?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align=\"center\">{item.id}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {item?.user?.firstName\r\n                        ? `${item.user.firstName}${\r\n                            item.user?.lastName ? ` ${item.user.lastName}` : ``\r\n                          }`\r\n                        : item?.user?.userName}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" className={classes.root}>\r\n                      <Tooltip\r\n                        arrow\r\n                        title={item?.cart_items?.nodes\r\n                          .map((i) => i.productSku)\r\n                          .join(\",\")}\r\n                      >\r\n                        <Chip\r\n                          label={item?.cart_items?.nodes.length}\r\n                          color={\"primary\"}\r\n                          size=\"small\"\r\n                        />\r\n                      </Tooltip>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" padding=\"none\">\r\n                      {item?.user?.email && (\r\n                        <Button\r\n                          startIcon={<EmailIcon />}\r\n                          variant=\"outlined\"\r\n                          disableElevation\r\n                          disableFocusRipple\r\n                          disableRipple\r\n                          component=\"a\"\r\n                          href={`mailto:${item?.user?.email}`}\r\n                          className={classes.button}\r\n                        >\r\n                          {item?.user?.email}\r\n                        </Button>\r\n                      )}\r\n                      {item?.user?.mobile && (\r\n                        <Button\r\n                          startIcon={<CallIcon />}\r\n                          variant=\"outlined\"\r\n                          disableElevation\r\n                          disableFocusRipple\r\n                          disableRipple\r\n                          component=\"a\"\r\n                          className={classes.button}\r\n                        >\r\n                          {item?.user?.mobile}\r\n                        </Button>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Chip\r\n                        className={classes.chip}\r\n                        label={item.status.toUpperCase()}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {/* <IconButton size=\"small\">\r\n                        <DeleteForeverIcon />\r\n                      </IconButton> */}\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleClickOpen(item.id)}\r\n                      >\r\n                        <VisibilityIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={Object.keys(Headers).length}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allShoppingCarts?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <CartDetails open={Boolean(open)} handleClose={handleClose} id={open} />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n  Box,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BackupOutlinedIcon from \"@material-ui/icons/BackupOutlined\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport { AlertContext, AlertProps } from \"../../context\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"h5\" component=\"div\" color=\"textSecondary\">\r\n          {`${Math.round(props.value)}%`}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport const PriceUpload = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const socket = socketIOClient(API_URL);\r\n    socket.on(\"price_sync\", (data) => {\r\n      if (data.status !== \"completed\") {\r\n        setProgress(data?.completed * 100);\r\n      } else {\r\n        setProgress(100);\r\n        snack.setSnack({\r\n          severity: AlertProps.severity.info,\r\n          msg: `Process Completed ${data.timeElapsed}`,\r\n        });\r\n        socket.close();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleUpload = (event) => {\r\n    let files = event.target.files;\r\n    if (files) {\r\n      files = files[0];\r\n    } else {\r\n      return;\r\n    }\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", files);\r\n    axios\r\n      .post(API_URL + \"/file_upload_price_sync\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully started sync!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item xs={12}>\r\n          <input\r\n            className={classes.input}\r\n            id=\"icon-button-file\"\r\n            type=\"file\"\r\n            onChange={handleUpload}\r\n          />\r\n          <label htmlFor=\"icon-button-file\">\r\n            <IconButton\r\n              color=\"error\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <BackupOutlinedIcon style={{ fontSize: 200 }} />\r\n            </IconButton>\r\n          </label>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\">UPLOAD EXCEL FILE</Typography>\r\n        </Grid>\r\n        {progress !== 0 && (\r\n          <Grid item xs={12}>\r\n            <CircularProgressWithLabel size={100} value={progress} />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport tableData from \"./data.json\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { AlertContext } from \"../../context\";\r\n\r\nlet fetchMasterCountries = gql`\r\n  query ($name: String) {\r\n    allMasterCountries(filter: { name: { includesInsensitive: $name } }) {\r\n      nodes {\r\n        id\r\n        name\r\n        nicename\r\n        numcode\r\n        phonecode\r\n        currency\r\n        currencyAlias\r\n        currencySymbol\r\n        fxConversionRate\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet addMutationMasterCountry = gql`\r\n  mutation ($input: MasterCountryInput!) {\r\n    createMasterCountry(input: { masterCountry: $input }) {\r\n      masterCountry {\r\n        id\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet updateMutationMasterCountry = gql`\r\n  mutation ($id: Int!, $masterCountryPatch: MasterCountryPatch!) {\r\n    updateMasterCountryById(\r\n      input: { id: $id, masterCountryPatch: $masterCountryPatch }\r\n    ) {\r\n      masterCountry {\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const MasterCountry = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [search, setSearch] = React.useState(null);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const addMasterCountry = (data) => {\r\n    let { alias, isedit, __typename, ...rest } = data;\r\n    let currentTimeStamp = new Date();\r\n    let body = {};\r\n    if (!isedit) {\r\n      body = {\r\n        mutation: addMutationMasterCountry,\r\n        variables: {\r\n          input: {\r\n            ...rest,\r\n            fxConversionRate: Number(rest.fxConversionRate),\r\n            createdAt: currentTimeStamp,\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    } else {\r\n      body = {\r\n        mutation: updateMutationMasterCountry,\r\n        variables: {\r\n          id: rest.id,\r\n          masterCountryPatch: {\r\n            ...rest,\r\n            fxConversionRate: Number(rest.fxConversionRate),\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    client\r\n      .mutate({ ...body })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const syncFXAPI = () => {\r\n    sendNetworkRequest(\"/fxSynclatest\", null, {})\r\n      .then((res) => {\r\n        snack.setSnack({ open: true, msg: res.message });\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Some Error occured, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const { data, loading, error, refetch } = useQuery(fetchMasterCountries, {\r\n    variables: {\r\n      name: search,\r\n    },\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  return (\r\n    <Page title={\"Country List\"}>\r\n      <Breadcrumbs></Breadcrumbs>\r\n      {loading && <LinearProgress className={classes.root} />}\r\n      {!loading && (\r\n        <Mastercontent\r\n          title={\"Country & Fx Rate\"}\r\n          button_title=\"Add New\"\r\n          fxSyncAPI={syncFXAPI}\r\n          onCreate={addMasterCountry}\r\n          onSearch={setSearch}\r\n          columns={tableData.columns}\r\n          values={data?.allMasterCountries?.nodes}\r\n        />\r\n      )}\r\n      {error && <Typography>Some error occured!</Typography>}\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport tableData from \"./data.json\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\n\r\nlet fetchDailyMetalPrices = gql`\r\n  query {\r\n    allDailyMetalPrices {\r\n      nodes {\r\n        id\r\n        metalName\r\n        displayName\r\n        displayPrice\r\n        isActive\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet addMutationMasterCountry = gql`\r\n  mutation ($input: DailyMetalPriceInput!) {\r\n    createDailyMetalPrice(input: { dailyMetalPrice: $input }) {\r\n      dailyMetalPrice {\r\n        id\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet updateMutationMasterCountry = gql`\r\n  mutation ($id: Int!, $dailyMetalPricePatch: DailyMetalPricePatch!) {\r\n    updateDailyMetalPriceById(\r\n      input: { id: $id, dailyMetalPricePatch: $dailyMetalPricePatch }\r\n    ) {\r\n      dailyMetalPrice {\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const DailyMetalRate = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n\r\n  const addDailyMetalPrice = (data) => {\r\n    console.log(data);\r\n    let { alias, isedit, __typename, ...rest } = data;\r\n    let currentTimeStamp = new Date();\r\n    let body = {};\r\n    if (!isedit) {\r\n      body = {\r\n        mutation: addMutationMasterCountry,\r\n        variables: {\r\n          input: {\r\n            ...rest,\r\n            displayPrice: Number(rest.displayPrice),\r\n            createdAt: currentTimeStamp,\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    } else {\r\n      body = {\r\n        mutation: updateMutationMasterCountry,\r\n        variables: {\r\n          id: rest.id,\r\n          dailyMetalPricePatch: {\r\n            ...rest,\r\n            displayPrice: Number(rest.displayPrice),\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    client\r\n      .mutate({ ...body })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const { data, loading, error, refetch } = useQuery(fetchDailyMetalPrices);\r\n\r\n  return (\r\n    <Page title={\"Daily MetalRate\"}>\r\n      <Breadcrumbs></Breadcrumbs>\r\n      {loading && <LinearProgress className={classes.root} />}\r\n      {!loading && (\r\n        <Mastercontent\r\n          button_title=\"Add New\"\r\n          onCreate={addDailyMetalPrice}\r\n          columns={tableData.columns}\r\n          values={data?.allDailyMetalPrices?.nodes}\r\n        />\r\n      )}\r\n      {error && <Typography>Some error occured!</Typography>}\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useQuery } from \"react-apollo\";\r\n\r\nimport { PRICE_RUN_LOGS } from \"../../graphql/query\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { NetworkStatus } from \"apollo-client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport const PriceLogs = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    PRICE_RUN_LOGS,\r\n    {\r\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Price Run History Logs </Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Completed Product</TableCell>\r\n                <TableCell align={\"center\"}>Pricing Component</TableCell>\r\n                <TableCell align={\"center\"}>Requested </TableCell>\r\n                <TableCell align={\"center\"}>Succeed</TableCell>\r\n                <TableCell align={\"center\"}>Failed</TableCell>\r\n                <TableCell align={\"center\"}>Updated</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allPriceRunningHistories?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>No Price Run Logs found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allPriceRunningHistories?.nodes.length > 0 &&\r\n                data?.allPriceRunningHistories?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {item?.completedProductCount ?? \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {\" \"}\r\n                      {item?.pricingComponent ?? \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.requestedProducts &&\r\n                      item?.logs?.nodes[0]?.requestedProducts.length\r\n                        ? item?.logs?.nodes[0]?.requestedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.successfullyExecutedProducts &&\r\n                      item?.logs?.nodes[0]?.successfullyExecutedProducts.length\r\n                        ? item?.logs?.nodes[0]?.successfullyExecutedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.failedProducts &&\r\n                      item?.logs?.nodes[0]?.failedProducts.length\r\n                        ? item?.logs?.nodes[0]?.failedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={5}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allPriceRunningHistories?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { API_URL } from \"../config\";\r\nimport Axios from \"axios\";\r\n\r\nexport const UploadImage = (file) => {\r\n  var bodyFormData = new FormData();\r\n  bodyFormData.set(\"web_img\", file);\r\n\r\n  return Axios.post(API_URL + \"/banner_image_upload\", bodyFormData, {\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Accept-Language\": \"en-US,en;q=0.8\",\r\n      \"Content-Type\": `multipart/form-data; boundary=${bodyFormData._boundary}`,\r\n    },\r\n  });\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { UploadImage } from \"../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../context/AlertContext\";\r\nconst useStyles = makeStyles({\r\n  Card: {\r\n    height: \"500px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [imgLink, setImgLink] = useState(\"\");\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n        setDisableButton(true);\r\n        setImgLink(res?.data?.web ?? \"\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const ResetFunc = () => {\r\n    setImgLink(\"\");\r\n    setDisableButton(false);\r\n  };\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          Image upload\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={6}>\r\n        <Card fullwidth className={classes.Card}>\r\n          <CardContent>\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              style={{ display: \"none\" }}\r\n              id=\"button-files\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => handleChange(e.target.files[0])}\r\n            />\r\n            <label htmlFor=\"button-files\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                component=\"span\"\r\n                disabled={disableButton}\r\n                startIcon={<CloudUploadIcon />}\r\n              >\r\n                Upload Image\r\n              </Button>\r\n            </label>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} sm={4} lg={6}>\r\n        <Card fullwidth className={classes.Card}>\r\n          <CardContent>\r\n            <Typography\r\n              style={{ textAlign: \"center\", marginTop: 2 }}\r\n              component=\"h4\"\r\n              variant=\"h4\"\r\n            >\r\n              {imgLink\r\n                ? \"Click image to copy link :\"\r\n                : \"Upload image to get link here\"}\r\n            </Typography>\r\n\r\n            {imgLink && (\r\n              <div\r\n                onClick={() => {\r\n                  alert.setSnack({\r\n                    open: true,\r\n                    severity: \"success\",\r\n                    msg: \"Link Copied Successfully\",\r\n                  });\r\n                }}\r\n              >\r\n                {/* <Tooltip title=\"Click to Copy Link\"> */}\r\n                <img\r\n                  style={{ cursor: \"copy\", width: \"100%\", height: \"auto\" }}\r\n                  src={imgLink}\r\n                  alt=\"imag\"\r\n                  loading=\"lazy\"\r\n                  onClick={() => {\r\n                    navigator.clipboard.writeText(imgLink);\r\n                  }}\r\n                />\r\n                <Typography\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: 6,\r\n                    cursor: \"copy\",\r\n                  }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                  onClick={() => {\r\n                    navigator.clipboard.writeText(imgLink);\r\n                  }}\r\n                >\r\n                  {imgLink}\r\n                </Typography>\r\n                {/* </Tooltip> */}\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        style={{\r\n          margin: \"auto\",\r\n          paddingTop: \"8px\",\r\n        }}\r\n      >\r\n        <Button variant=\"outlined\" onClick={ResetFunc}>\r\n          Reset\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n    backgroundColor:\"#fff\"\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  dialogPaper: {\r\n    minWidth: \"1200px\",\r\n  },\r\n  dialogPaperMid: {\r\n    minWidth: \"800px\",\r\n  },\r\n  dialogHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction TableHeaderComp(props) {\r\n    const classes = useStyles();\r\n    const {name,handleAddNew = () => null,noAddNew = false} = props\r\n  return (\r\n    <div className={classes.dialogHeader} style={{ padding: \"8px\" }}>\r\n      <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\r\n        {name}\r\n      </Typography>\r\n      {!noAddNew && <Button variant=\"contained\" color=\"primary\" onClick={handleAddNew}>\r\n        Add New\r\n      </Button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableHeaderComp;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst header = [\r\n  \"Position\",\r\n  \"Link to Check\",\r\n  \"Mobile Image\",\r\n  \"Desktop Image\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"TEXT\", name: \"position\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"MBL_IMAGE\", name: \"mobile\" },\r\n  { type: \"WEB_IMAGE\", name: \"web\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst BannerCMS = (props) => {\r\n  console.log(\"hfjdskalSDJBSK\", props);\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    position: \"\",\r\n    urlParam: null,\r\n    mobile: \"\",\r\n    web: \"\",\r\n    url: \"\",  \r\n  };\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.position && state.url && state.mobile && state.web) {\r\n      if (editData.isEdit) {\r\n        const editBanner = props?.data?.props?.banners;\r\n        editBanner.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: editBanner,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"BannerComponent\", \"banners\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: [...props?.data?.props?.banners, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"BannerComponent\", \"banners\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const banners = props?.data?.props?.banners;\r\n    banners.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        banners: banners,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"BannerComponent\", \"banners\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Banner Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.banners}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />  \r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"position\"\r\n            label=\"Position\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.position}\r\n            name=\"position\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Banner's Redirect Link (Routes Only)\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.url}\r\n            name=\"url\"\r\n            required\r\n          />\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-around\"\r\n            style={{ padding: \"16px 0px\" }}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                id=\"button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n              />\r\n              <label htmlFor=\"button-file\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  startIcon={<CloudUploadIcon />}\r\n                  disabled={disableButton.mobile}\r\n                >\r\n                  Mobile Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.web}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Desktop Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n          </Grid>\r\n          {(state.mobile.length > 0 || state.web.length > 0) && (\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              {state.mobile.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.mobile}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              {state.web.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.web}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BannerCMS;\r\n","import {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst header = [\"S.No\", \"City\", \"Total Stores\", \"View Stores\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"TEXT\", name: \"city\" },\r\n  { type: \"TOTAL_STORES\", name: \"stores\" },\r\n  { type: \"VIEW_STORES\", name: \"stores\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst storeHeader = [\"S.No\", \"Title\", \"Address\", \"Location\", \"Image\", \"Button\"];\r\nconst tableStoreData = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"para\" },\r\n  { type: \"TEXT\", name: \"location\", width: \"200px\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\", width: \"200px\" },\r\n  { type: \"TEXT\", name: \"button\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst tableStoreView = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"para\" },\r\n  { type: \"TEXT\", name: \"location\", width: \"200px\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\", width: \"200px\" },\r\n  { type: \"TEXT\", name: \"button\" },\r\n];\r\n\r\nconst initialStoreDetails = {\r\n  title: \"\",\r\n  button: \"\",\r\n  para: \"\",\r\n  location: \"\",\r\n  img: \"\",\r\n  key: \"\",\r\n  href: \"\",\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nfunction StoreLocatorCMS(props) {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [openStores, setOpenStores] = useState(false);\r\n  const [stores, setStores] = useState([]);\r\n  const [addStoresOpens, setAddStores] = useState(false);\r\n  const [state, setState] = useState({\r\n    city: \"\",\r\n    stores: [],\r\n  });\r\n  const [showStoreFields, setShowStoreFields] = useState(false);\r\n  const [storeState, setStoreState] = useState(initialStoreDetails);\r\n  const [editData, setEditData] = useState(initialEdit);\r\n  const [storesEdit, setStoresEdit] = useState(initialEdit);\r\n\r\n  const handleViewStores = (e, data, index) => {\r\n    setOpenStores(true);\r\n    setStores(data);\r\n  };\r\n\r\n  const handleCloseStores = () => {\r\n    setOpenStores(false);\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setAddStores(true);\r\n  };\r\n\r\n  const handleAddNewStoresClose = () => {\r\n    setAddStores(false);\r\n    setState({\r\n      city: \"\",\r\n      stores: [],\r\n    });\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onChangeStoreData = (event) => {\r\n    setStoreState({\r\n      ...storeState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleShowStoreField = () => {\r\n    setShowStoreFields(true);\r\n  };\r\n\r\n  const validationHead = [\"title\", \"button\", \"para\", \"location\", \"img\", \"href\"];\r\n  const storeDetailsValidate = () => {\r\n    let err = [];\r\n    validationHead.map((val) => {\r\n      if (storeState[val].length === 0) err.push(val);\r\n    });\r\n    return err;\r\n  };\r\n\r\n  const addStoreDetails = () => {\r\n    const validate = storeDetailsValidate();\r\n    if (validate.length === 0) {\r\n      if (storesEdit.isEdit) {\r\n        const editStores = state.stores;\r\n        editStores.splice(storesEdit.editIndex, 1, storeState);\r\n        const newState = {\r\n          city: state.city,\r\n          stores: editStores,\r\n        };\r\n        setShowStoreFields(false);\r\n        setState(newState);\r\n      } else {\r\n        setShowStoreFields(false);\r\n        const newStore = [...state.stores, storeState];\r\n        setState({\r\n          ...state,\r\n          stores: newStore,\r\n        });\r\n        setStoreState(initialStoreDetails);\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill the mandatory details\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setStoreState({\r\n            ...storeState,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = () => {\r\n    if (state.city.length > 0 && state.stores.length > 0) {\r\n      if (editData.isEdit) {\r\n        const storeDataEdit = props?.data?.props?.storeData;\r\n        storeDataEdit.splice(editData.editIndex, 1, state);\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: storeDataEdit,\r\n          },\r\n        };\r\n        handleAddNewStoresClose();\r\n        props.handleSubmit(getData, \"Storelocator\", \"storeData\");\r\n      } else {\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: [...props?.data?.props?.storeData, state],\r\n          },\r\n        };\r\n        handleAddNewStoresClose();\r\n        props.handleSubmit(getData, \"Storelocator\", \"storeData\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please add both the State and the Store\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const storeData = props?.data?.props?.storeData;\r\n    storeData.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        storeData: storeData,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"Storelocator\", \"storeData\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleAddNew();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleStoresEdit = (e, rowData, rowIndex) => {\r\n    setShowStoreFields(true);\r\n    setStoresEdit({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setStoreState(rowData);\r\n  };\r\n\r\n  const handleDeleteStore = (e, rowData, rowIndex) => {\r\n    const deleteStores = state.stores;\r\n    deleteStores.splice(rowIndex, 1);\r\n    const newState = {\r\n      city: state.city,\r\n      stores: deleteStores,\r\n    };\r\n    setState(newState);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Store Locator Component\"}\r\n        handleAddNew={handleAddNew}\r\n      />\r\n\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.storeData}\r\n        handleViewStores={handleViewStores}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* View the Stores */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={openStores}\r\n        onClose={handleCloseStores}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <div className={classes.dialogHeader}>\r\n            <div>Stores in {stores?.city}</div>\r\n            <div style={{ cursor: \"pointer\" }} onClick={handleCloseStores}>\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TableComp\r\n            header={storeHeader}\r\n            tableData={tableStoreView}\r\n            data={stores?.stores}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Add the Data */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={addStoresOpens}\r\n        onClose={handleAddNewStoresClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" style={{ paddingBottom: \"0px\" }}>\r\n          <div className={classes.dialogHeader}>\r\n            <div>Add new data</div>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div\r\n            className={classes.dialogHeader}\r\n            style={{\r\n              borderBottom: \"1px solid #e0e0e0\",\r\n              marginBottom: \"6px\",\r\n              paddingBottom: \"6px\",\r\n            }}\r\n          >\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"url\"\r\n              label=\"Add New State\"\r\n              variant=\"outlined\"\r\n              onChange={onChangeData}\r\n              value={state.city.toUpperCase()}\r\n              name=\"city\"\r\n              required\r\n              style={{ width: \"80%\" }}\r\n            />\r\n            {!showStoreFields && (\r\n              <Button onClick={handleShowStoreField}>Add New Store</Button>\r\n            )}\r\n          </div>\r\n\r\n          {showStoreFields && (\r\n            <div>\r\n              <Typography variant=\"h6\">Add Store Details</Typography>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"title\"\r\n                    label=\"City\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={onChangeStoreData}\r\n                    value={storeState.title}\r\n                    name=\"title\"\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"button\"\r\n                    label=\"Button\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={onChangeStoreData}\r\n                    value={storeState.button}\r\n                    name=\"button\"\r\n                    required\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"link\"\r\n                label=\"Link\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeStoreData}\r\n                value={storeState.href}\r\n                name=\"href\"\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeStoreData}\r\n                value={storeState.location}\r\n                name=\"location\"\r\n                required\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"para\"\r\n                label=\"Address\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeStoreData}\r\n                value={storeState.para}\r\n                name=\"para\"\r\n                required\r\n              />\r\n              <Grid container style={{ paddingTop: \"8px\" }}>\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n                  />\r\n                  <label htmlFor=\"button-file\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Add Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n                {storeState.img.length > 0 && (\r\n                  <Grid item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={storeState.img}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n              <div\r\n                className={classes.dialogHeader}\r\n                style={{ justifyContent: \"center\" }}\r\n                onClick={addStoreDetails}\r\n              >\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Add Store Details\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\r\n            Stores Added\r\n          </Typography>\r\n          <TableComp\r\n            header={storeHeader}\r\n            tableData={tableStoreData}\r\n            data={state?.stores}\r\n            handleEdit={handleStoresEdit}\r\n            handleDelete={handleDeleteStore}\r\n          />\r\n\r\n          <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default StoreLocatorCMS;\r\n","import React, { Component } from \"react\";\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nclass EditorConvertToHTML extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const parentState = this.props.parentState;\r\n    console.log(\"parentState\", parentState);\r\n    const contentBlock = htmlToDraft(parentState);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(\r\n        contentBlock.contentBlocks\r\n      );\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.setState({\r\n        editorState,\r\n      });\r\n    }\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    // if (editorState) {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n    const data = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n    console.log(\"data\", data);\r\n    this.props.handleChangeState(data);\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          toolbarClassName=\"toolbar-class\"\r\n          onEditorStateChange={this.onEditorStateChange}\r\n          toolbar={{\r\n            fontFamily: {\r\n              options: ['Arial', 'Georgia', 'Impact', 'Tahoma', 'Times New Roman', 'Verdana','Noto Serif,serif', ],\r\n              className: undefined,\r\n              component: undefined,\r\n              dropdownClassName: undefined,\r\n            },\r\n          }}\r\n        />\r\n        {/* <textarea\r\n          disabled\r\n          value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditorConvertToHTML;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\"; \r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport draftToHtml from \"draftjs-to-html\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Descriptiom\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"HTMLTEXT\", name: \"richEditor\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst TitleDescriptionCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    richEditor: \"\",\r\n  });\r\n  const [titleDesc, setTitleDesc] = React.useState([]);\r\n  React.useEffect(() => {\r\n    setTitleDesc([props?.data?.props]);\r\n    setState(props?.data?.props);\r\n  }, []);\r\n\r\n  console.log(\"richEditorState\",state);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const validation = () => {\r\n    if (state.description.length < 1 || state.title.length < 1) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    if (validation()) {\r\n      let getData = [];\r\n      getData = {\r\n        component: props?.data?.component,\r\n        props: state,\r\n      };\r\n      setTitleDesc([getData.props]);\r\n      setOpen(false);\r\n      props.handleSubmit(getData, \"TitleAndData\", \"\");\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n  };\r\n\r\n  const handleChangeState = (data) => {\r\n    setState({\r\n      ...state,richEditor:data\r\n    })\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Title and Description Component\"}\r\n        noAddNew\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={titleDesc}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Title and Description Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.title}\r\n            name=\"title\"\r\n          />\r\n          <div style={{border:\"1px solid #c0c0c0\",padding:\"8px\", borderRadius:\"8px\"}}>\r\n            <EditorConvertToHTML handleChangeState={handleChangeState} parentState={state.richEditor} />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TitleDescriptionCMS;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"image\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst QueryFormCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    image: \"\",\r\n  });\r\n  const [image, setImage] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    setImage([props?.data?.props]);\r\n    setState(props?.data?.props);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let getData = [];\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: state\r\n    };\r\n    setImage([getData.props])\r\n    setOpen(false);\r\n    props.handleSubmit(getData, \"QueryForm\", \"\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Query Form Component\"}\r\n        noAddNew\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={image}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Edit Query Form</DialogTitle>\r\n        <DialogContent>\r\n          <Grid>\r\n            <input\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              id=\"button-file\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n            />\r\n            <label htmlFor=\"button-file\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                component=\"span\"\r\n                startIcon={<CloudUploadIcon />}\r\n                // disabled={disableButton.mobile}\r\n              >\r\n                Store Image\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default QueryFormCMS;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Image\",\r\n  \"SkuUrl\",\r\n  \"Price\",\r\n  \"Offer Price\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"skuUrl\", width: \"250px\" },\r\n  { type: \"TEXT\", name: \"price\" },\r\n  { type: \"TEXT\", name: \"offerPrice\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  price: null,\r\n  offerPrice: null,\r\n  title: null,\r\n  save: 0,\r\n  image: {\r\n    placeImage: {\r\n      img: null,\r\n    },\r\n    hoverImage: {\r\n      img: null,\r\n    },\r\n  },\r\n  productId: null,\r\n  diamondType: \"\",\r\n  purity: \"\",\r\n  productType: \"\",\r\n  skuId: null,\r\n  skuID: null,\r\n  skuUrl: null,\r\n  description: null,\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nconst SlidingImageCardCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [constructedData, setConstructedData] = React.useState([]);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n\r\n  React.useEffect(() => {\r\n    const dataConstruct = props?.data?.props?.listingProducts?.map((val, i) => {\r\n      return {\r\n        ...val,\r\n        img: val?.image?.placeImage?.img,\r\n      };\r\n    });\r\n    setConstructedData(dataConstruct);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    if (event.target.name === \"skuId\") {\r\n      setState({\r\n        ...state,\r\n        skuID: event.target.value,\r\n        skuId: event.target.value,\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    if (\r\n      state.title &&\r\n      state.description &&\r\n      state.skuUrl &&\r\n      state.image.hoverImage.img &&\r\n      state.image.placeImage.img &&\r\n      state.price &&\r\n      state.offerPrice &&\r\n      state.productId &&\r\n      state.skuID &&\r\n      state.skuId\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate()) {\r\n      if (editData.isEdit) {\r\n        const listingProducts = props?.data?.props?.listingProducts;\r\n        listingProducts.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            listingProducts: listingProducts,\r\n          },\r\n        };\r\n        const dataConstruct = getData.props?.listingProducts?.map((val, i) => {\r\n          return {\r\n            ...val,\r\n            img: val?.image?.placeImage?.img,\r\n          };\r\n        });\r\n        setConstructedData(dataConstruct);\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"SlideImgMediaCard\", \"listingProducts\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            listingProducts: [...props?.data?.props?.listingProducts, state],\r\n          },\r\n        };\r\n        const dataConstruct = getData.props?.listingProducts?.map((val, i) => {\r\n          return {\r\n            ...val,\r\n            img: val?.image?.placeImage?.img,\r\n          };\r\n        });\r\n        setConstructedData(dataConstruct);\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"SlideImgMediaCard\", \"listingProducts\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            image: {\r\n              placeImage: {\r\n                img: res?.data?.web,\r\n              },\r\n              hoverImage: {\r\n                img: res?.data?.web,\r\n              },\r\n            },\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const listingProducts = props?.data?.props?.listingProducts;\r\n    listingProducts.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        listingProducts: listingProducts,\r\n      },\r\n    };\r\n    const dataConstruct = getData.props?.listingProducts?.map((val, i) => {\r\n      return {\r\n        ...val,\r\n        img: val?.image?.placeImage?.img,\r\n      };\r\n    });\r\n    setConstructedData(dataConstruct);\r\n    props.handleSubmit(getData, \"SlideImgMediaCard\", \"listingProducts\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Sliding Image Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={constructedData}\r\n        handleEdit={handleEdit}\r\n        handleDelete={handleDelete}\r\n      />\r\n\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Edit Sliding Image Card Component\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.title}\r\n            name=\"title\"\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline\r\n            rows={3}\r\n            onChange={onChangeData}\r\n            value={state.description}\r\n            name=\"description\"\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"skuUrl\"\r\n            label=\"SKU Url\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.skuUrl}\r\n            name=\"skuUrl\"\r\n          />\r\n          <Grid\r\n            container\r\n            justifyContent=\"flex-start\"\r\n            style={{ padding: \"16px 0px\" }}\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                id=\"button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n              />\r\n              <label htmlFor=\"button-file\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  startIcon={<CloudUploadIcon />}\r\n                  // disabled={disableButton.mobile}\r\n                >\r\n                  Image Upload\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            {state.image.placeImage.img && <Grid item>\r\n              <img\r\n                alt=\"nacimages\"\r\n                src={state.image.placeImage.img}\r\n                style={{ width: \"100px\", height: \"auto\" }}\r\n              />\r\n            </Grid>}\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"skuId\"\r\n                label=\"SKU ID\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.skuId}\r\n                name=\"skuId\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"productId\"\r\n                label=\"Product ID\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.productId}\r\n                name=\"productId\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"price\"\r\n                label=\"Price\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.price}\r\n                name=\"price\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"offerPrice\"\r\n                label=\"Offer Price\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.offerPrice}\r\n                name=\"offerPrice\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SlidingImageCardCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useContext } from \"react\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\"Title\", \"Content\", \"Mobile Image\", \"Web Image\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"content\" },\r\n  { type: \"MBL_IMAGE\", name: \"mobile\" },\r\n  { type: \"WEB_IMAGE\", name: \"web\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst CustomCareerBannerCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    title: \"\",\r\n    content: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [disableButton, setDisable] = React.useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.title && state.content && state.mobile && state.web) {\r\n      if (editData.isEdit) {\r\n        const editBanner = props?.data?.props?.banners;\r\n        editBanner.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: editBanner,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomBanner\", \"banners\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: [...props?.data?.props?.banners, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomBanner\", \"banners\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const banners = props?.data?.props?.banners;\r\n    banners.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        banners: banners,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CustomBanner\", \"banners\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Career Banner Component\"}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.banners}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.title}\r\n              onChange={onChangeData}\r\n              name=\"title\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.content}\r\n              onChange={onChangeData}\r\n              name=\"content\"\r\n              required\r\n            />\r\n\r\n            {/* Image Upload */}\r\n\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Mobile Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.web}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n            {(state.mobile.length > 0 || state.web.length > 0) && (\r\n              <Grid\r\n                container\r\n                justifyContent=\"flex-start\"\r\n                style={{ padding: \"16px 0px\" }}\r\n              >\r\n                {state.mobile.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.mobile}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                {state.web.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.web}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCareerBannerCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\n\r\nconst header = [\"Job Role\", \"Location\", \"Description\", \"Button Text\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"TEXT\", name: \"job_Role\" },\r\n  { type: \"TEXT\", name: \"location\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"button_Text\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CustomCareerCardCMS = (props) => {\r\n  console.log(\"textt\", props);\r\n  const classes = useStyles();\r\n\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    job_Role: \"\",\r\n    location: \"\",\r\n    description: \"\",\r\n    button_Text: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.job_Role &&\r\n      state.location &&\r\n      state.description &&\r\n      state.button_Text\r\n    ) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CareerCard\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CareerCard\", \"cardContent\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const cardContent = props?.data?.props?.cardContent;\r\n    cardContent.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: cardContent,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CareerCard\", \"cardContent\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Career Card Component\"}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.cardContent}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"job_Role\"\r\n              label=\"Job_Role\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.job_Role}\r\n              onChange={onChangeData}\r\n              name=\"job_Role\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"location\"\r\n              label=\"Location\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.location}\r\n              onChange={onChangeData}\r\n              name=\"location\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.description}\r\n              onChange={onChangeData}\r\n              name=\"description\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"button_Text\"\r\n              label=\"Button Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.button_Text}\r\n              onChange={onChangeData}\r\n              name=\"button_Text\"\r\n              required\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCareerCardCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Description\", \"Button Text\", \"Url\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"button_text\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CustomNewsCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    img: \"\",\r\n    description: \"\",\r\n    button_text: \"\",\r\n    url: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [disableButton, setDisable] = React.useState({\r\n    img: false,\r\n  });\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.img && state.description && state.button_text && state.url) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomNews\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomNews\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CustomNews\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"News Room Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New News Room Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.description}\r\n            onChange={onChangeData}\r\n            name=\"description\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"button_text\"\r\n            label=\"Button_text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.button_text}\r\n            onChange={onChangeData}\r\n            name=\"button_text\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Url\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.url}\r\n            onChange={onChangeData}\r\n            name=\"url\"\r\n            required\r\n          />\r\n\r\n          {/* Image Upload */}\r\n\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-around\"\r\n            style={{ padding: \"16px 0px\" }}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.img}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Add Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n          </Grid>\r\n          {state.img.length > 0 && (\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              {state.img.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.img}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomNewsCMS;\r\n","import React from \"react\";\r\nimport { DialogContent, DialogTitle, Paper, TextField, Button, Dialog, DialogActions } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Description\",\r\n    \"Action\"\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"Title\" },\r\n    { type: \"TEXT\", name: \"Description\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n\r\n];\r\nconst initialState = {\r\n    Title: \"\",\r\n    Description: \"\"\r\n}\r\nconst SpclTitleDescr = (props) => {\r\n    const { data } = props\r\n    console.log(data?.props, \"propssssss\")\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [spclTitleDescr, setSpclTitleDescr] = React.useState([])\r\n    const [state, setState] = React.useState(initialState)\r\n\r\n\r\n    React.useEffect(() => {\r\n        setSpclTitleDescr([data?.props?.storeData]);\r\n        setState(data?.props?.storeData);\r\n    }, []);\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setState(state)\r\n        handleClickOpen();\r\n\r\n    };\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const validation = () => {\r\n        if (state.Description.length < 1 || state.Title.length < 1) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n    const onsubmitvalue = async () => {\r\n        if (validation()) {\r\n            let getData = [];\r\n            const storeData = data?.props?.storeData;\r\n            getData = {\r\n\r\n                component: data?.component,\r\n                props: {\r\n                    storeData: state,\r\n                },\r\n            };\r\n            setSpclTitleDescr([getData.props?.storeData]);\r\n\r\n            setOpen(false);\r\n            props.handleSubmit(getData, \"SpclTitleDescr\", \"\");\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    console.log(\"spclTitleDescr\", spclTitleDescr);\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Special Title and Description Component\"}\r\n                    noAddNew\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={spclTitleDescr}\r\n                    handleEdit={handleEdit}\r\n                />\r\n                <Dialog\r\n                    classes={{ paper: classes.dialogPaperMid }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Edit Special Title and Description Component\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"Title\"\r\n                            label=\"Title\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state?.Title}\r\n                            name=\"Title\"\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"Description\"\r\n                            label=\"Description\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state?.Description}\r\n                            name=\"Description\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default SpclTitleDescr","import React from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, TextField } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Image\",\r\n    \"Content\",\r\n    \"Action\"\r\n\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"WEB_IMAGE\", name: \"image\" },\r\n    { type: \"TEXT\", name: \"content\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n\r\n\r\n];\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n};\r\nconst initialState = {\r\n    title: \"\",\r\n    image: null,\r\n    content: \"\",\r\n}\r\n\r\nconst BookYourAppointmentCMS = (props) => {\r\n    const { data } = props\r\n    const classes = useStyles();\r\n\r\n    const alert = React.useContext(AlertContext);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [state, setState] = React.useState(initialState)\r\n\r\n\r\n    const handleChange = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({\r\n                        ...state,\r\n                        image: res?.data?.web\r\n                    });\r\n                    alert.setSnack({\r\n                        open: true,\r\n                        severity: \"success\",\r\n                        msg: \"Image Uploaded Successfully\",\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true);\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n        setState(rowData);\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.title &&\r\n            state.image &&\r\n            state.content\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n    const onsubmitvalue = async () => {\r\n        if (validate()) {\r\n            if (editData.isEdit) {\r\n                const values = data?.props;\r\n                values.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: values,\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"AboutBookAppointment\", \"props\");\r\n            } else {\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props:\r\n                        [...data?.props, state],\r\n\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"AboutBookAppointment\", \"props\");\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Book Your Appointment Component\"}\r\n                    noAddNew\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={data?.props}\r\n                    handleEdit={handleEdit}\r\n                />\r\n                <Dialog\r\n                    classes={{ paper: classes.dialogPaperMid }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Edit Book Your Appointment Component\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state.title}\r\n                            name=\"title\"\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            justifyContent=\"flex-start\"\r\n                            style={{ padding: \"16px 0px\" }}\r\n                            spacing={3}\r\n                        >\r\n                            <Grid item>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    style={{ display: \"none\" }}\r\n                                    id=\"button-file\"\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                    onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                                />\r\n                                <label htmlFor=\"button-file\">\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        component=\"span\"\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                    // disabled={disableButton.mobile}\r\n                                    >\r\n                                        Image Upload\r\n                                    </Button>\r\n                                </label>\r\n                            </Grid>\r\n                            {state.image && <Grid item>\r\n                                <img\r\n                                    alt=\"nacimages\"\r\n                                    src={state.image}\r\n                                    style={{ width: \"100px\", height: \"auto\" }}\r\n                                />\r\n                            </Grid>}\r\n                        </Grid>\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"content\"\r\n                            label=\"Details\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state.content}\r\n                            name=\"content\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default BookYourAppointmentCMS","import React from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, TextField } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Name\",\r\n    \"Image\",\r\n    \"Address\",\r\n    \"Feed\",\r\n    \"Action\"\r\n\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"name\" },\r\n    { type: \"WEB_IMAGE\", name: \"img\" },\r\n    { type: \"TEXT\", name: \"address\" },\r\n    { type: \"TEXT\", name: \"feed\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n\r\n\r\n];\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n};\r\nconst initialState = {\r\n    name: \"\",\r\n    img: null,\r\n    address: \"\",\r\n    feed: \"\",\r\n}\r\nconst TestimonialCMS = (props) => {\r\n    const { data } = props\r\n    const classes = useStyles();\r\n\r\n    const alert = React.useContext(AlertContext);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [state, setState] = React.useState(initialState)\r\n\r\n\r\n\r\n    const handleChange = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({\r\n                        ...state,\r\n                        img: res?.data?.web,\r\n                    });\r\n                    alert.setSnack({\r\n                        open: true,\r\n                        severity: \"success\",\r\n                        msg: \"Image Uploaded Successfully\",\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        handleClickOpen();\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n        setState(rowData);\r\n    };\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setState(initialState)\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n    }\r\n\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.name &&\r\n            state.img &&\r\n            state.address &&\r\n            state.feed\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validate()) {\r\n            if (editData.isEdit) {\r\n                const storeData = data?.props?.storeData;\r\n                storeData.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: {\r\n                        storeData: storeData,\r\n                    },\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"Testimonial\", \"storeData\");\r\n            } else {\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: {\r\n                        storeData: [...props?.data?.props?.storeData, state],\r\n                    },\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"Testimonial\", \"storeData\");\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n        let getData = [];\r\n        const storeData = data?.props?.storeData;\r\n        storeData.splice(rowIndex, 1);\r\n        getData = {\r\n            component: data?.component,\r\n            props: {\r\n                storeData: storeData,\r\n            },\r\n        };\r\n\r\n        props.handleSubmit(getData, \"Testimonial\", \"storeData\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Testimonial Component\"}\r\n                    handleAddNew={handleClickOpen}\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={data?.props?.storeData}\r\n                    handleDelete={handleDelete}\r\n                    handleEdit={handleEdit}\r\n                />\r\n                <Dialog\r\n                    classes={{ paper: classes.dialogPaperMid }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Testimonial Component\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state.name}\r\n                            name=\"name\"\r\n                        />\r\n                            <Grid\r\n                                container\r\n                                justifyContent=\"flex-start\"\r\n                                style={{ padding: \"16px 0px\" }}\r\n                                spacing={3}\r\n                            >\r\n                                <Grid item>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: \"none\" }}\r\n                                        id=\"button-file\"\r\n                                        multiple\r\n                                        type=\"file\"\r\n                                        onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                                    />\r\n                                    <label htmlFor=\"button-file\">\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon />}\r\n                                        >\r\n                                            Image Upload\r\n                                        </Button>\r\n                                    </label>\r\n                                </Grid>\r\n                                {state?.img && <Grid item>\r\n                                    <img\r\n                                        alt=\"nacimages\"\r\n                                        src={state?.img}\r\n                                        style={{ width: \"100px\", height: \"auto\" }}\r\n                                    />\r\n                                </Grid>}\r\n                            </Grid>\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"feed\"\r\n                            label=\"Feed\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state.feed}\r\n                            name=\"feed\"\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"description\"\r\n                            label=\"Address\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state.address}\r\n                            name=\"address\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default TestimonialCMS","import React, { useContext } from \"react\";\r\nimport {\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { TableComp } from \"../../../components\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Image\", \"Name\", \"Details\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"sub\" },\r\n  { type: \"TEXT\", name: \"sub2\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\nconst initialState = {\r\n  title: \"\",\r\n  img: null,\r\n  type: \"\",\r\n  sub: \"\",\r\n  sub2: \"\",\r\n};\r\n\r\nconst AboutCollection = (props) => {\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            img: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setState(state);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const validate = () => {\r\n    if (state.title && state.img && state.type && state.sub && state.sub2) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate()) {\r\n      if (editData.isEdit) {\r\n        const storeData = data?.props?.storeData;\r\n        storeData.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: storeData,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n        props.handleSubmit(getData, \"TestimonialTwo\", \"storeData\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: [...data?.props?.storeData, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n        props.handleSubmit(getData, \"TestimonialTwo\", \"storeData\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const storeData = data?.props?.storeData;\r\n    storeData.splice(rowIndex, 1);\r\n    getData = {\r\n      component: data?.component,\r\n      props: {\r\n        storeData: storeData,\r\n      },\r\n    };\r\n\r\n    props.handleSubmit(getData, \"TestimonialTwo\", \"storeData\");\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"About Collection Component\"}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={data?.props?.storeData}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n        <Dialog\r\n          classes={{ paper: classes.dialogPaperMid }}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Edit About Collection Component\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state.title}\r\n              name=\"title\"\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"type\"\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state.type}\r\n              name=\"type\"\r\n            />\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n              spacing={3}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    // disabled={disableButton.mobile}\r\n                  >\r\n                    Image Upload\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.img && (\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.img}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"sub\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state.sub}\r\n              name=\"sub\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"sub2\"\r\n              label=\"Details\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              multiline\r\n              rows={3}\r\n              onChange={onChangeData}\r\n              value={state.sub2}\r\n              name=\"sub2\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default AboutCollection;\r\n","import React from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, TextField } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Action\"\r\n\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n\r\n\r\n];\r\n\r\nconst TitleComp = (props) => {\r\n    const { data } = props\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [title, setTitle] = React.useState([])\r\n    const [state, setState] = React.useState({\r\n        title: \"\"\r\n    })\r\n\r\n\r\n    React.useEffect(() => {\r\n        setTitle([data?.props]);\r\n        setState(data?.props);\r\n    }, []);\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setState(state)\r\n        handleClickOpen();\r\n\r\n    };\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const validation = () => {\r\n        if (state.title.length < 1) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validation()) {\r\n            let getData = [];\r\n            getData = {\r\n                component: props?.data?.component,\r\n                props: state,\r\n            };\r\n            setTitle([getData.props]);\r\n            setOpen(false);\r\n            props.handleSubmit(getData, \"titleComp\", \"\");\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <TableHeaderComp\r\n                name={\" Title Component\"}\r\n                noAddNew\r\n            />\r\n            <TableComp\r\n                header={header}\r\n                tableData={tableData}\r\n                data={title}\r\n                handleEdit={handleEdit}\r\n            />\r\n            <Dialog\r\n                classes={{ paper: classes.dialogPaperMid }}\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Edit Title Component\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"title\"\r\n                        label=\"title\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={onChangeData}\r\n                        value={state?.title}\r\n                        name=\"title\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onsubmitvalue}>Add</Button>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    )\r\n}\r\nexport default TitleComp","import React from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport BannerCMS from \"./components/bannerCMS\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { API_URL } from \"../../config\";\r\nimport { CDNPAGES, CMS_UPDATE } from \"../../graphql/cmsQuery\";\r\nimport StoreLocatorCMS from \"./components/storeLocatorCMS\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { AlertContext } from \"../../context\";\r\nimport TitleDescriptionCMS from \"./components/titleDescriptionCMS\";\r\nimport QueryFormCMS from \"./components/queryFormCMS\";\r\nimport SlidingImageCardCMS from \"./components/slidingImageCardCMS\";\r\nimport CustomCareerBannerCMS from \"./components/customCareerBannerCMS\";\r\nimport CustomCareerCardCMS from \"./components/customCareerCardCMS\";\r\nimport CustomNewsCMS from \"./components/customNewsCMS\";\r\nimport SpclTitleDescr from \"./components/spclTitleDescrCMS\";\r\nimport BookYourAppointmentCMS from \"./components/bookYourAppointmentCMS\";\r\nimport TestimonialCMS from \"./components/testimonialCMS\";\r\nimport AboutCollection from \"./components/aboutCollectionCMS\";\r\nimport TitleComp from \"./components/titleCompCMS\";\r\n\r\n\r\nconst CmsComponent = (props) => {\r\n  const classes = useStyles();\r\n  const snack = React.useContext(AlertContext);\r\n  const location = useLocation();\r\n  const [state, setState] = useState([]);\r\n  console.log(\"state\", state);\r\n\r\n  useEffect(() => {\r\n    fetchCall();\r\n  }, []);\r\n\r\n  const fetchCall = () => {\r\n    const pageName = location.state.name;\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: CDNPAGES,\r\n        variables: { page: pageName },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const dataRecieved = JSON.parse(data.data.cdnByPage.data);\r\n        setState(dataRecieved);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async (data, component, propsKey) => {\r\n    const replaceIndex = state.findIndex((val) => val.component === component);\r\n    const newState = state;\r\n    newState.splice(replaceIndex, 1, data);\r\n    const stringifyState = JSON.stringify(newState);\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: CMS_UPDATE,\r\n        variables: {\r\n          stringifyState: stringifyState,\r\n          page: location.state.name,\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Successfully Updated!\",\r\n        });\r\n        const newStateSet = JSON.parse(JSON.stringify(newState));\r\n        setState(newStateSet);\r\n        fetchCall();\r\n      });\r\n  };\r\n\r\n  const getTheTable = (val) => {\r\n    switch (val?.component) {\r\n      case \"BannerComponent\": {\r\n        return <BannerCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"Storelocator\": {\r\n        return <StoreLocatorCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"TitleAndData\": {\r\n        return <TitleDescriptionCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"QueryForm\": {\r\n        return <QueryFormCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"SlideImgMediaCard\": {\r\n        return <SlidingImageCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CustomBanner\": {\r\n        return <CustomCareerBannerCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CareerCard\": {\r\n        return <CustomCareerCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CustomNews\": {\r\n        return <CustomNewsCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"SpclTitleDescr\": {\r\n        return <SpclTitleDescr data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"AboutBookAppointment\": {\r\n        return <BookYourAppointmentCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"titleComp\": {\r\n        return <TitleComp data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"Testimonial\": {\r\n        return <TestimonialCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"TestimonialTwo\": {\r\n        return <AboutCollection data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      default: {\r\n        return <h1></h1>;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {state.map((val, i) => {\r\n        return getTheTable(val);\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CmsComponent;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const CDNPAGES = `\r\n    query ($page: String!){\r\n        cdnByPage(page: $page) {\r\n          data\r\n          id\r\n          page\r\n        }\r\n      }\r\n    `;\r\n\r\nexport const ALLCDNPAGES = `query MyQuery {\r\n  allCdns {\r\n    nodes {\r\n      page\r\n      data\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const CMS_UPDATE = `\r\nmutation updateStore( $stringifyState: JSON!,$page: String!) {\r\n  updateCdnByPage(input: { cdnPatch: { data: $stringifyState }, page: $page }) {\r\n    cdn {\r\n      createdAt\r\n      data\r\n      id\r\n      isActive\r\n      nodeId\r\n      page\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n`;\r\n","import React from 'react';\r\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './style.css'\r\n\r\n\r\nconst IOSSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default function Editcategory(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n    });\r\n\r\n\r\n    const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\r\n            </Grid>\r\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\r\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\r\n                    <Grid lg={4} md={4} sm={6} xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid lg={4} md={4} sm={6} xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid lg={4} md={4} sm={12} xs={12}>\r\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\r\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\r\n                        <div className=\"z\">\r\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                \r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedA}\r\n                                        onChange={ handleChange('checkedA')}\r\n                                        value=\"checkedA\"\r\n                                        \r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                         </div>  \r\n\r\n                        \r\n                    </Grid>\r\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\r\n                        <div className=\"z\">\r\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedB}\r\n                                        onChange={ handleChange('checkedB')}\r\n                                        value=\"checkedB\"\r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\r\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\r\n                        <div className=\"z\">\r\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedC}\r\n                                        onChange={ handleChange('checkedC')}\r\n                                        value=\"checkedC\"\r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\r\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\r\n                            Cancel\r\n                            </Button>\r\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\r\n                            Save\r\n                            </Button>\r\n                    </Grid>\r\n                    <Grid>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport './table.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    conatainerRow:{\r\n        width:\"300px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 256px\",\r\n    fontSize:\"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        width:\"500px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 270px\",\r\n    fontSize:\"14px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"20px\",\r\n    gridTemplateColumns: \"repeat(3, 1fr)\"\r\n    }\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Columns(props) {\r\n    const classes = useStyles();\r\n\r\n    const checkboxrow = [\r\n        {\r\n            id:1,\r\n            name:\"Published\",\r\n            isActive: false,       \r\n        },\r\n        {\r\n            id:2,\r\n            name:\"AVB\",\r\n            isActive:false,      \r\n        },\r\n        {\r\n            id:3,\r\n            name:\"Price\",\r\n            isActive: false,       \r\n        },\r\n        {\r\n            id:4,\r\n            name:\"Type\",\r\n            isActive:  false,      \r\n        },\r\n        {\r\n            id:5,\r\n            name:\"Flavour\",\r\n            isActive: false ,     \r\n        },\r\n        {\r\n            id:6,\r\n            name:\"Flavour\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:7,\r\n            name: \"Material\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:8,\r\n            name:\"Medium\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:9,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:10,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:11,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:12,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:13,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:14,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:15,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n        \r\n    ]\r\n    const [columns,setColumns ] = React.useState({\r\n        listOfValue:checkboxrow\r\n    })\r\n    function stateChange(id){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n            if(id===data.id){\r\n                data.isActive = data.isActive?false:true;\r\n            }\r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    function resetButton(){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n                data.isActive = false;\r\n            \r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    // const lists = columns.listOfValue.map((head) =>\r\n    //     (\r\n    //         <Grid conatiner>\r\n    //             <Grid item xs={4}><Checkbox\r\n    //                 value=\"secondary\"\r\n    //                 color=\"primary\"\r\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n    //                 checked = {head.isActive}\r\n    //                 onChange = {()=>stateChange(head.id)}\r\n                \r\n    //             />\r\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n    //             </Grid>\r\n    //         </Grid>\r\n    //     )\r\n\r\n    // );\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n         <div style={{ maxHeight: \"420px\"}}>\r\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\r\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\r\n                <Grid conatiner>\r\n              <Grid item   className={classes.conatainerRow}>\r\n                   {columns.listOfValue.map((head) =><Grid container>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                               checked = {head.isActive}\r\n                    onChange = {()=>stateChange(head.id)}\r\n                            \r\n                        />\r\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\r\n                <Grid>\r\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\r\n                </Grid>\r\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\r\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\r\n                        SAVE\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        \r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Form, Grid,Select } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Columns from \"./columns\"\r\nimport './table.css'\r\n\r\n\r\n\r\n\r\nconst useStyless = makeStyles(theme => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    '&:hover': {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\"\r\n];\r\n\r\nexport default function FormPropsTextFields() {\r\n  const classess = useStyless();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClickListItem = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n\r\n  return (\r\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\r\n      <Grid lg={2} md={2} sm={3}>\r\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\r\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\r\n\r\n        </Button>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\r\n\r\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\r\n          \r\n              <Select\r\n              className={classes.notchedOutline}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                \r\n        >\r\n         \r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\r\n        </Select>\r\n         \r\n            <Menu\r\n              id=\"lock-menu\"\r\n              // anchorEl={anchorEl}\r\n\r\n              keepMounted\r\n              // open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              {options.map((option, index) => (\r\n                <MenuItem\r\n                  key={option}\r\n\r\n\r\n                  onClick={event => handleMenuItemClick(event, index)}\r\n                >\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </div>\r\n\r\n\r\n\r\n        </Popover>\r\n\r\n      </Grid>\r\n      <Grid lg={10} md={10} sm={9}>\r\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\r\n        </form>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Columns from \"./columns\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SortHeader() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(false);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      lg={12}\r\n      md={12}\r\n      sm={12}\r\n      xs={12}\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginBottom: \"17px\",\r\n        marginTop: \"25px\",\r\n      }}\r\n    >\r\n      <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\r\n        <h2\r\n          className=\"products\"\r\n          style={{ fontSize: \"24px\", fontWeight: \"400\" }}\r\n        >\r\n          Products\r\n        </h2>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        xl={4}\r\n        lg={3}\r\n        md={4}\r\n        sm={5}\r\n        xs={12}\r\n        lassName=\"column\"\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\r\n          <Button\r\n            className=\"product\"\r\n            id=\"one\"\r\n            color=\"primary\"\r\n            onClick={handleClick}\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\r\n          >\r\n            COLUMNS\r\n            <ArrowDownwardIcon fontSize=\"inherit\" />\r\n          </Button>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Columns columnclose={handleClose} />\r\n          </Popover>\r\n        </Grid>\r\n        <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n          <Button\r\n            id=\"create\"\r\n            className=\"product\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            backgroundColor=\"secondary\"\r\n          >\r\n            CREATE PRODUCT\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default SortHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport {TableBody,Grid} from '@material-ui/core';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton'; \r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Filterandsearch from './filterandsearch';\r\nimport SortHeader from './SortHeader';\r\nimport './table.css';\r\n\r\n\r\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\r\n  return { name, calories, fat, carbs, protein , protein1, protein2};\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\r\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\r\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\r\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\r\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\r\n];\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\r\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n\r\n   <React.Fragment >\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n    </React.Fragment> \r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n     \r\n    <Toolbar\r\n    \r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\r\n          Nutrition\r\n          \r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            {/* <FilterListIcon /> */}\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(0),\r\n  },\r\n  table: {\r\n    // minWidth: 750,\r\n    width:\"100%\", \r\n    overflowX:\"scroll\"\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n      \r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };    \r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \r\n                <FormControlLabel\r\n               \r\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                // label=\"Dense padding\"\r\n            />\r\n        </div>    */}\r\n\r\n\r\n        <SortHeader lg={12} md={12} sm={12}  />\r\n\r\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n        <Filterandsearch/>\r\n\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n            \r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row, index) => {\r\n                        const isItemSelected = isSelected(row.name);\r\n                        const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\r\n                    </TableRow>\r\n                    \r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n        \r\n              )}\r\n                   \r\n                     \r\n              \r\n              \r\n            </TableBody>\r\n          </Table>\r\n        \r\n        \r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      </Grid>  \r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n","import React from 'react';\r\nimport ProductTable from './ProductTable';\r\nimport './table.css'\r\nfunction newmaterial1() {\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <ProductTable />\r\n        </div>\r\n    )\r\n}\r\nexport default newmaterial1","import Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API_URL } from \"../../config\";\r\nimport { ALLCDNPAGES } from \"../../graphql/cmsQuery\";\r\n\r\nconst CmsHome = (props) => {\r\n  let history = useHistory();\r\n\r\n  const [state, setState] = useState([]);\r\n  console.log(\"fetchedPages\", state);\r\n\r\n  const handleClick = (name) => {\r\n    history.push({\r\n      pathname: \"/cmsComponent\",\r\n      state: {\r\n        name: name,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: ALLCDNPAGES,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // debugger;\r\n        const dataRecieved = data.data.allCdns.nodes;\r\n        setState(dataRecieved);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          CMS Complete List\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/silverbanner\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                NAC Banners\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/featuredproduct\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                Featured Product\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/comments\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                Customers Reviews\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/newarrival\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                New Arrival\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n\r\n      {/* cms page */}\r\n      {state.map((val) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          {/* <Link underline=\"none\" component={RouterLink} to=\"/cmsComponent\"> */}\r\n          <div\r\n            onClick={() => handleClick(val.page)}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography\r\n                  style={{ textAlign: \"center\", marginTop: 8 }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {val.page}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          {/* </Link> */}\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CmsHome;\r\n","import React, { useEffect, useState , useContext} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport {\r\n  ALLSTYLORISILVERLANDINGBANNERS,\r\n  CREATESILVERLANDINGBANNER,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport { AlertContext } from \"../../../../context\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverLandingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLANDINGBANNERS,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.position &&\r\n      createlandingbanner.link &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        position: +createlandingbanner.position,\r\n        url: createlandingbanner.link,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLANDINGBANNER,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            [name]: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Landing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            {\" \"}\r\n            - Landing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Banner's Redirect Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            />\r\n                        <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Mobile Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.web}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                <TableCell>Mobile Image</TableCell>\r\n                <TableCell>Desktop Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.mobile}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.mobile} */}\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.mobile}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.web} */}\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverLandingPage;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Link,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { APP_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nimport {\r\n  ALLSTYLORISILVERLISTINGPAGE,\r\n  CREATESILVERLISTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLISTINGPAGE,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    ClearState();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    ClearState();\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.position &&\r\n      createlandingbanner.link &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        position: +createlandingbanner.position,\r\n        url: createlandingbanner.link,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLISTINGPAGE,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            mobile: res?.data?.web,\r\n            web: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, mobile: true, web: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Listing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            NAC - Listing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Banner's Redirect Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            />\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                {/* <TableCell>Mobile Image</TableCell> */}\r\n                <TableCell>Banner Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                     \r\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.web} */}\r\n                      <img\r\n                        src={val.web}\r\n                        alt=\"nacimages\"\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingPage;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport {\r\n  CREATESPECIFICLISTINGPAGE,\r\n  ALLSPECIFICLISTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n\r\nfunction SpecificListPages(props) {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSPECIFICLISTINGPAGE,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.urlParam &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        urlParam: createlandingbanner.urlParam,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESPECIFICLISTINGPAGE,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            mobile: res?.data?.web,\r\n            web: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, mobile: true, web: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Specific Listing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            NAC - Specific Listing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {/* <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            /> */}\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"urlParam\"\r\n              label=\"Banner's Page Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.urlParam}\r\n              name=\"urlParam\"\r\n            />\r\n                   <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>S.No</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                {/* <TableCell>Mobile Image</TableCell> */}\r\n                <TableCell>Banner Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL + val.urlParam}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL + val.urlParam}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SpecificListPages;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n  CREATESILVERLISTINGBOTTOMBANNER,\r\n  DELETESILVERLISTINGBOTTOMBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingBottom = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    ClearState();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    ClearState();\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLISTINGBOTTOMBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (createlandingbanner.mobile && createlandingbanner.web) {\r\n      let create_banner_data = {\r\n        position: +\"1\",\r\n        url: \"#\",\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLISTINGBOTTOMBANNER,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          setOpen(false);\r\n          window.location.reload();\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            web: res?.data?.web,\r\n            mobile: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, web: true, mobile: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Listing Page - Bottom Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            NAC - Listing Page - Bottom Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {/* <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            /> */}\r\n            {/* <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Link\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            /> */}\r\n            <Grid container justifyContent=\"space-around\"  style={{ padding: \"16px 0px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>S.No</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                <TableCell>Banner Image</TableCell>\r\n                {/* <TableCell>Desktop Image</TableCell> */}\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}/silver-jewellery`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}/silver-jewellery`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                    <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingBottom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nimport { ALLSTYLORISILVERROUTINGPAGE, CREATESTYLORISILVERROUTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingRoutingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    urlParam : \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function styloribannerfetch() {\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: ALLSTYLORISILVERROUTINGPAGE,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          let data = fatchvalue.data.allBanners.nodes;\r\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n          setalllandingbanner(data);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let create_banner_data = {\r\n      position: +createlandingbanner.position,\r\n      urlParam: createlandingbanner.urlParam,\r\n      mobile: createlandingbanner.mobile,\r\n      web: createlandingbanner.web,\r\n      now: new Date().toISOString(),\r\n    };\r\n\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CREATESTYLORISILVERROUTINGPAGE,\r\n        variables: create_banner_data,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\r\n              NAC Listing Routing Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"urlParam\"\r\n              label=\"Router Link\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.urlParam}\r\n              name=\"urlParam\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"mobile\"\r\n              label=\"Mobile Image\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.mobile}\r\n              name=\"mobile\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"web\"\r\n              label=\"Web Image\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.web}\r\n              name=\"web\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Router Link</TableCell>\r\n                <TableCell>Mobile URL</TableCell>\r\n                <TableCell>Web URL</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link href={val.urlParam} target=\"_blank\" className={classes.link_style}>\r\n                      {val.urlParam}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                      {val.mobile}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\r\n                      {val.web}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingRoutingPage;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Breadcrumbs } from \"../../../components\";\r\nimport SilverLandingPage from \"./components/silverlandingpage\";\r\nimport SilverListingPage from \"./components/silverlistingpage\";\r\nimport SpecificListPages from \"./components/specificListPages\";\r\nimport SilverListingRoutingPage from \"./components/silverlistingroutingpage\";\r\nimport SilverListingBottom from \"./components/silverbottmpage\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst Silverbanner = (props) => {\r\n  const classes = useStyles2();\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <SilverLandingPage />\r\n      <SilverListingPage />\r\n      <SpecificListPages />\r\n      <SilverListingBottom />\r\n      {/* <SilverListingRoutingPage /> */}\r\n    </>\r\n  );\r\n};\r\nexport default Silverbanner;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SilverListingPage from \"../components/silverlistingpage\";\r\nimport { Breadcrumbs } from \"../../../../components\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingbanner = (props) => {\r\n  const classes = useStyles2();\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <SilverListingPage />\r\n      {/* <SilverListingRoutingPage /> */}\r\n      {/* <SilverLandingPage /> */}\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingbanner;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ProductContext, ProductProvider } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { API_URL } from \"../../config\";\r\nimport { isString } from \"util\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\r\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { Chip } from \"@material-ui/core\";\r\n\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginImageValidateSize,\r\n  FilePondPluginFileRename\r\n);\r\nconst useStyle = makeStyles((theme) => ({\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n  variantFontSize: {\r\n    fontSize: \".9rem\",\r\n  },\r\n  variantMarginTop: {\r\n    marginTop: \"20px\",\r\n  },\r\n}));\r\nexport function CreateVariant(props) {\r\n  const classes = useStyle();\r\n  let prod_id = props.productId;\r\n  let colors = [];\r\n  let purities = [];\r\n  let diamondtypes = [];\r\n  let oldpurity = [];\r\n\r\n  const TOKEN = \"token\";\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor);\r\n  productCtx.oldproductMetalColor.forEach((colorobj) => {\r\n    colors.push(colorobj.productColor);\r\n  });\r\n  productCtx.oldproductMetalPurity.forEach((colorobj) => {\r\n    purities.push(colorobj.purity);\r\n    oldpurity.push(colorobj);\r\n  });\r\n\r\n  productCtx.oldproductDiamondTypesArray.forEach((diamondobj) => {\r\n    diamondtypes.push(diamondobj.diamondType);\r\n  });\r\n\r\n  const [variant, setVariant] = useState({\r\n    metal_color: [],\r\n    metal_purity: [],\r\n    diamond_color: [],\r\n    diamond_clarity: [],\r\n    variant_diamond_type: [],\r\n    product_images: {},\r\n    size: [],\r\n  });\r\n\r\n  function handleMetalColor(status_data) {\r\n    let color = variant.metal_color;\r\n    color.some((color_data) => color_data.id === status_data.id)\r\n      ? (color = color.filter((color_fil) => color_fil.id !== status_data.id))\r\n      : color.push(status_data);\r\n    setVariant({\r\n      ...variant,\r\n      metal_color: color,\r\n    });\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    let color_arr = [];\r\n    value.map((color, index) => {\r\n      if (\r\n        productCtx.productMetalColor.some(\r\n          (item) => item.productColor === color.productColor\r\n        )\r\n      ) {\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          metal_color: color.productColor,\r\n        };\r\n        color_arr.push(color_obj);\r\n      }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      metal_color: color_arr,\r\n    });\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n    });\r\n  };\r\n  const sendNetworkRequest = async (url, params, data, auth = false) => {\r\n    alert(url);\r\n    url = API_URL + url;\r\n    console.info(\"URL\", url, data);\r\n    const method = data ? \"POST\" : \"GET\",\r\n      headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n    let resdata = null;\r\n    if (auth) {\r\n      const token = localStorage.getItem(TOKEN);\r\n      if (token) headers[\"auth\"] = token;\r\n      else window.location = \"/\";\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body: isString(data) ? data : JSON.stringify(data),\r\n      headers,\r\n    });\r\n\r\n    if (response.status < 400) {\r\n      resdata = await response.json();\r\n    } else {\r\n      alert(\r\n        `${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`\r\n      );\r\n    }\r\n    return resdata;\r\n  };\r\n\r\n  const handleMetalPurity = (type) => (event, value) => {\r\n    let purity_arr = [];\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n    });\r\n    value.map((color, index) => {\r\n      let color_obj = {\r\n        ...color,\r\n        purity: color.purity,\r\n      };\r\n      purity_arr.push(color_obj);\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      metal_purity: purity_arr,\r\n    });\r\n  };\r\n  // function handleMetalPurity(status_data) {\r\n  //     status_data.metal_weight = \"\";\r\n  //     status_data.error_message = false;\r\n  //     // alert(JSON.stringify(status_data));\r\n  //     let purity = variant.metal_purity;\r\n  //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         metal_purity: purity\r\n  //     })\r\n  // }\r\n  const diamondTypeChange = (type) => (event, value) => {\r\n    let diamondtype_arr = [];\r\n    value.map((color, index) => {\r\n      if (color.label) {\r\n        let color_obj = {\r\n          ...color,\r\n          diamondType: color.label,\r\n        };\r\n        diamondtype_arr.push(color_obj);\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          diamondType: color.diamondType,\r\n        };\r\n        diamondtype_arr.push(color_obj);\r\n      }\r\n\r\n      //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\r\n      //    }else{ let color_obj = {\r\n      //         ...color,\r\n      //         diamondType: color.label\r\n      //     }\r\n      //     diamondtype_arr.push(color_obj)\r\n      //   }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      variant_diamond_type: diamondtype_arr,\r\n    });\r\n    alert(JSON.stringify(value));\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: diamondtype_arr,\r\n    });\r\n  };\r\n\r\n  // function diamondTypeChange(status_data){\r\n  //     let diamond__type = variant.variant_diamond_type;\r\n  //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         variant_diamond_type: diamond__type\r\n  //     })\r\n  // }\r\n\r\n  const sizeChange = (type) => (event, value) => {\r\n    let size_arr = [];\r\n    value.map((color, index) => {\r\n      if (productCtx.productDiamondTypes.some((item) => item === color)) {\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          label: color,\r\n        };\r\n        size_arr.push(color_obj);\r\n      }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      size: size_arr,\r\n    });\r\n  };\r\n  // function sizeChange(status_data) {\r\n  //     let variantSize = variant.size;\r\n  //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         size: variantSize\r\n  //     })\r\n\r\n  // }\r\n\r\n  function setMetalWeightInput(e, metalPurityId) {\r\n    // alert(e.target.value)\r\n    let metalWeight = variant.metal_purity;\r\n    metalWeight =\r\n      metalWeight &&\r\n      metalWeight.map((metal_weight, index) => {\r\n        if (metalPurityId === metal_weight.id) {\r\n          metal_weight.metal_weight = e.target.value;\r\n        }\r\n        return metal_weight;\r\n      });\r\n    setVariant({\r\n      ...variant,\r\n      metal_purity: metalWeight,\r\n    });\r\n  }\r\n  function saveCreateVariant() {\r\n    let createVariant = {\r\n      productId: prod_id,\r\n      productMetalcoloursByProductId: variant.metal_color,\r\n      productPuritiesByProductId: variant.metal_purity,\r\n      productDiamondTypes: variant.variant_diamond_type,\r\n      productSize: variant.size,\r\n      product_images: variant.product_images,\r\n      // productImage:variant.product_images\r\n    };\r\n\r\n    let metal_color_image_length = Object.entries(variant.product_images);\r\n    let metal_purity_weight = false;\r\n    let metal_purity =\r\n      variant.metal_purity &&\r\n      variant.metal_purity.map((metal_weight_check) => {\r\n        if (metal_weight_check.metal_weight === \"\") {\r\n          metal_weight_check.error_message = true;\r\n          metal_purity_weight = true;\r\n        }\r\n        return metal_weight_check;\r\n      });\r\n    variant[\"metal_purity\"] = metal_purity;\r\n    setVariant({\r\n      ...variant,\r\n      variant,\r\n    });\r\n    if (metal_color_image_length.length !== variant.metal_color.length) {\r\n      alert(\"Select Metal Color Images\");\r\n    }\r\n    if (\r\n      (variant.metal_color.length > 0 &&\r\n        variant.metal_color.length === metal_color_image_length.length) ||\r\n      (variant.metal_purity.length > 0 && metal_purity_weight === false) ||\r\n      variant.size.length > 0 ||\r\n      variant.variant_diamond_type.length > 0\r\n    ) {\r\n      let createVariants = productCtx.createVariantList;\r\n      let editVariants = productCtx.editVariants;\r\n      let variants = productCtx.variants;\r\n      let productImages = productCtx.productImages;\r\n      productImages = [...productImages, variant.product_images];\r\n      createVariants.push(createVariant);\r\n      let params = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(createVariant),\r\n      };\r\n    } else {\r\n      alert(\"please fill the Create variant\");\r\n    }\r\n  }\r\n  function backToProductAttribute() {\r\n    props.changeVariant();\r\n  }\r\n  async function uploadimagetoserver(\r\n    bodaydata,\r\n    imageposition,\r\n    imagecolor,\r\n    uploadtype\r\n  ) {\r\n    let prodimages = variant.product_images;\r\n    // if(true)\r\n    // {\r\n    var prodid = prod_id;\r\n    let imagecolourobj = variant.product_images[imagecolor];\r\n    var imagecount = 1;\r\n    if (imagecolourobj) {\r\n      imagecount = imagecolourobj.length + 1;\r\n    }\r\n\r\n    let imagename = prodid + \"_\" + imagecount + imagecolor.charAt(0);\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        product_id: prodid,\r\n      },\r\n      false\r\n    );\r\n    var returnData =\r\n      responsedata && responsedata.data && responsedata.data.returnData;\r\n    var signedRequest = returnData && returnData.signedRequest;\r\n    var url = returnData && returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData && returnData.filepath;\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    if (imagecolourobj) {\r\n      const imageobj = {\r\n        name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\r\n        position: imageposition,\r\n        color: imagecolor,\r\n        image_url: filepathname,\r\n        url:\r\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\r\n          filepathname,\r\n      };\r\n      if (uploadtype === \"edit\") {\r\n        imagecolourobj[imageposition] = imageobj;\r\n      } else {\r\n        imagecolourobj.push(imageobj);\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n    } else {\r\n      const imageobj = {\r\n        name: prodid + \"_1\" + imagecolor.charAt(0),\r\n        position: imageposition,\r\n        color: imagecolor,\r\n        image_url: filepathname,\r\n        url:\r\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\r\n          filepathname,\r\n      };\r\n      imagecolourobj = [];\r\n      imagecolourobj.push(imageobj);\r\n    }\r\n    prodimages[imagecolor] = imagecolourobj;\r\n    setVariant({ ...variant, product_images: prodimages });\r\n    // setFiles([])\r\n    // }\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          fullWidth\r\n          margin=\"dense\"\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.productColor}\r\n          getOptionDisabled={(option) =>\r\n            colors.indexOf(option.productColor) > -1\r\n          }\r\n          defaultValue={productCtx.oldproductMetalColor}\r\n          options={productCtx.masterData.metalcolour}\r\n          value={productCtx.productMetalColor}\r\n          onChange={handleoptionChange(\"productMetalColor\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.productColor}\r\n                {...getTagProps({ index })}\r\n                disabled={colors.indexOf(option.productColor) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Metal Colours\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        {/* <Grid item>\r\n                            <FormGroup row>\r\n                                {\r\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\r\n\r\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\r\n                                            <FormControlLabel\r\n                                                disabled\r\n                                                control={\r\n                                                    <Checkbox checked={true} value=\"checkedA\" />\r\n                                                }\r\n                                                label={data.name}\r\n                                            /> :\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\r\n                                                }\r\n                                                label={data.name}\r\n                                            />\r\n\r\n                                    ))\r\n                                }\r\n                            </FormGroup>\r\n                            {\r\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\r\n                                    <TextField\r\n                                        className={classes.helperinput}\r\n                                        style={{ width: \"124px\" }}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        fullWidth\r\n                                        type=\"number\"\r\n                                        value={metal_purity.metal_weight}\r\n                                        id=\"metal_weight\"\r\n                                        error={metal_purity && metal_purity.error_message }\r\n                                        name=\"metal_weight\"\r\n                                        label={`Metal Weight${metal_purity.name}`}\r\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </Grid>\r\n                     */}\r\n\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          className={classes.fixedTag}\r\n          margin=\"dense\"\r\n          getOptionLabel={(option) => option.name}\r\n          getOptionDisabled={(option) => purities.indexOf(option.name) > -1}\r\n          defaultValue={productCtx.oldproductMetalPurity}\r\n          options={productCtx.masterData.metalpurity}\r\n          value={productCtx.productMetalPurity}\r\n          onChange={handleMetalPurity(\"productMetalPurity\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.purity}\r\n                {...getTagProps({ index })}\r\n                disabled={purities.indexOf(option.purity) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Metal Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n\r\n        {productCtx.productMetalPurity &&\r\n          productCtx.productMetalPurity.map((metal_purity) => (\r\n            <TextField\r\n              key={metal_purity.id}\r\n              className={classes.helperinput}\r\n              style={{ width: \"100px\", marginLeft: \"8px\" }}\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              type=\"number\"\r\n              value={metal_purity.metal_weight}\r\n              id=\"metal_weight\"\r\n              error={metal_purity && metal_purity.error_message}\r\n              name=\"metal_weight\"\r\n              label={`Weight ${metal_purity.purity}`}\r\n              onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\r\n            />\r\n          ))}\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.label}\r\n          getOptionDisabled={(option) =>\r\n            diamondtypes.indexOf(option.label) > -1\r\n          }\r\n          defaultValue={productCtx.oldproductDiamondTypesArray}\r\n          options={productCtx.masterData.diamondtypes}\r\n          value={\r\n            productCtx.productDiamondTypesArray\r\n              ? productCtx.productDiamondTypesArray\r\n              : []\r\n          }\r\n          onChange={diamondTypeChange(\"productDiamondTypesArray\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.diamondType}\r\n                {...getTagProps({ index })}\r\n                disabled={diamondtypes.indexOf(option.diamondType) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Diamond Types\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        {productCtx.variant_size && productCtx.variant_size.length > 0 ? (\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            fullWidth\r\n            getOptionLabel={(option) => option}\r\n            options={productCtx.productVariantSize}\r\n            value={productCtx.variant_size}\r\n            onChange={sizeChange(\"productSizes\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Sizes\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        ) : null}\r\n      </Grid>\r\n\r\n      {/* {\r\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\r\n                    <Grid item>\r\n                       \r\n                        <Grid item>\r\n                            <FormGroup row>\r\n                            <Autocomplete\r\n                    multiple\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    options={productCtx.masterData.diamondtypes}\r\n                    defaultValue={productCtx.productDiamondTypes}\r\n                    onChange={handleoptionChange('productMetalColor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Types\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n                              \r\n                            </FormGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid> : ''\r\n                } */}\r\n\r\n      <Grid container>\r\n        {variant.metal_color === undefined\r\n          ? null\r\n          : variant.metal_color.map((value, index) => (\r\n              <Grid xs={12} container spacing={1} item>\r\n                <Grid xs={12} item>\r\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n                    {value.productColor}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sm={12} md={12} item>\r\n                  <FilePond\r\n                    allowImageValidateSize\r\n                    imageValidateSizeMinWidth=\"2400\"\r\n                    imageValidateSizeMinHeight=\"2400\"\r\n                    imageValidateSizeMeasure={(file) =>\r\n                      new Promise((resolve, reject) => {})\r\n                    }\r\n                    labelIdle=\"Upload Image\"\r\n                    allowMultiple={true}\r\n                    //files = {files}\r\n                    onupdatefiles={(fileItem) => {\r\n                      // Set currently active file objectsfiles to this.state\r\n                    }}\r\n                    onaddfile={(error, fileItem) => {\r\n                      uploadimagetoserver(fileItem, index, value.name, \"add\");\r\n                    }}\r\n                    onremovefile={(error, fileItem) => {}}\r\n                    fileRenameFunction={(file) =>\r\n                      new Promise((resolve) => {\r\n                        var prodid = prod_id;\r\n                        let imagecolourobj = variant.product_images[value.name];\r\n                        var imagecount = 1;\r\n                        if (imagecolourobj) {\r\n                          imagecount = imagecolourobj.length + 1;\r\n                        }\r\n                        let imagename =\r\n                          prodid +\r\n                          \"_\" +\r\n                          imagecount +\r\n                          value.name.charAt(0) +\r\n                          file.extension;\r\n                        resolve(imagename);\r\n                      })\r\n                    }\r\n                  ></FilePond>\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n      </Grid>\r\n      {\r\n        <Grid\r\n          container\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"16px\",\r\n          }}\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={(e) => saveCreateVariant()}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\r\n                Back\r\n                </Button> */}\r\n          </Grid>\r\n        </Grid>\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\nexport default CreateVariant;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  conatainerRow: {\r\n    width: \"300px\",\r\n    color: \"#6f6f6f\",\r\n    display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight: \" 256px\",\r\n    fontSize: \"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"500px\",\r\n      color: \"#6f6f6f\",\r\n      display: \"grid\",\r\n      padding: \"16px 24px\",\r\n      maxHeight: \" 270px\",\r\n      fontSize: \"14px\",\r\n      overflowX: \"visible\",\r\n      overflowY: \"scroll\",\r\n      gridColumnGap: \"20px\",\r\n      gridTemplateColumns: \"repeat(2, 1fr)\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Columns(props) {\r\n  const classes = useStyles();\r\n\r\n  const checkboxrow = props.columns;\r\n  const [columns, setColumns] = React.useState({\r\n    listOfValue: checkboxrow,\r\n  });\r\n  const [showcolumns, setshowColumns] = React.useState();\r\n\r\n  function stateChange(id) {\r\n    let listOfValue = columns.listOfValue.map((data, index) => {\r\n      if (id === data.id) {\r\n        data.isActive = data.isActive ? false : true;\r\n      }\r\n      return data;\r\n    });\r\n    setColumns({\r\n      listOfValue,\r\n    });\r\n  }\r\n  function resetButton() {\r\n    let listOfValue = columns.listOfValue.map((data, index) => {\r\n      if (!data.disabled) {\r\n        data.isActive = false;\r\n      }\r\n\r\n      return data;\r\n    });\r\n    setColumns({\r\n      listOfValue,\r\n    });\r\n  }\r\n  function saveaction() {\r\n    // let listOfValue = columns.listOfValue.map((data,index)=>{\r\n    //     if(data.isActive){\r\n    //               }\r\n    //               return data;\r\n\r\n    // })\r\n    let columnnames = [];\r\n    columns.listOfValue.forEach((element) => {\r\n      if (element.isActive) {\r\n        columnnames.push(element);\r\n      }\r\n    });\r\n    props.selectcolumnfilter(columnnames, props.displytype);\r\n    props.columnclose();\r\n  }\r\n  // const lists = columns.listOfValue.map((head) =>\r\n  //     (\r\n  //         <Grid conatiner>\r\n  //             <Grid item xs={4}><Checkbox\r\n  //                 value=\"secondary\"\r\n  //                 color=\"primary\"\r\n  //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n  //                 checked = {head.isActive}\r\n  //                 onChange = {()=>stateChange(head.id)}\r\n\r\n  //             />\r\n  //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n  //             </Grid>\r\n  //         </Grid>\r\n  //     )\r\n\r\n  // );\r\n\r\n  return (\r\n    <div style={{ maxHeight: \"420px\" }}>\r\n      {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\r\n      <Grid\r\n        style={{\r\n          height: \"270px\",\r\n          borderBottom: \"1px solid #ddd\",\r\n          width: \"100%\",\r\n          margin: \"auto\",\r\n          paddingTop: \"5px\",\r\n          paddingBottom: \"10px\",\r\n        }}\r\n      >\r\n        <Grid conatiner>\r\n          <Grid item className={classes.conatainerRow}>\r\n            {columns.listOfValue.map((head) => (\r\n              <Grid container>\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  checked={head.isActive}\r\n                  disabled={head.disabled}\r\n                  onChange={() => stateChange(head.id)}\r\n                />\r\n                <h3 style={{ fontWeight: \"500\" }}>{head.name}</h3>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          margin: \"10px auto\",\r\n          width: \"90%\",\r\n        }}\r\n      >\r\n        <Grid>\r\n          <Button size=\"large\" onClick={() => resetButton()}>\r\n            RESET\r\n          </Button>\r\n        </Grid>\r\n        <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Button size=\"small\" onClick={() => props.columnclose()}>\r\n            cancel\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => saveaction()}\r\n            backgroundColor=\"secondary\"\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            className={classes.margin}\r\n          >\r\n            SAVE\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Columns from \"./columns\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SortHeader(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [options, setOptions] = React.useState(props.columnnames);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(false);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      lg={12}\r\n      md={12}\r\n      sm={12}\r\n      xs={12}\r\n      style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n    >\r\n      <Grid item xl={8} lg={9} md={8} sm={7} xs={12}>\r\n        <h4 className=\"products\">\r\n          {props.title ? props.title : \"Variants Table\"}{\" \"}\r\n        </h4>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        xl={4}\r\n        lg={3}\r\n        md={4}\r\n        sm={5}\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          className=\"column-btn\"\r\n          lg={5}\r\n          md={5}\r\n          sm={5}\r\n          xs={5}\r\n          style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <Button\r\n            className=\"product\"\r\n            size=\"small\"\r\n            id=\"one\"\r\n            color=\"primary\"\r\n            backgroundColor=\"secondary\"\r\n            onClick={handleClick}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\r\n          >\r\n            COLUMNS\r\n            <ArrowDownwardIcon fontSize=\"inherit\" />\r\n          </Button>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Columns\r\n              columns={options}\r\n              selectcolumnfilter={props.getColumnnames}\r\n              displytype={props.displytype}\r\n              columnclose={handleClose}\r\n            />\r\n          </Popover>\r\n        </Grid>\r\n        {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\r\n                        CREATE PRODUCT\r\n                        </Button>\r\n                    </Grid> */}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default SortHeader;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Avatar, Button, Dialog, Chip, TextField, Typography, colors, Input } from \"@material-ui/core\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    \"&:hover\": {\r\n      backgroundColor: colors.green[900],\r\n    },\r\n  },\r\n}));\r\n\r\nconst EditDiamond = (props) => {\r\n\r\n\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id: diamond.id,\r\n    diamondweight: diamond.diamondweight ? diamond.diamondweight : \"\",\r\n    diamondcount: diamond.diamondcount ? diamond.diamondcount : \"\",\r\n    diamondsettings: diamond.diamondsettings ? diamond.diamondsettings : null,\r\n    diamondshape: diamond.diamondshape ? diamond.diamondshape : null,\r\n    diamonditemname: diamond.diamonditemname ?? \"\",\r\n    diamondsubitemname: diamond.diamondsubitemname ?? \"\",\r\n    diamonddescription: diamond.diamonddescription ?? \"\",\r\n    diamondclarity: diamond.diamondClarity ?? \"\",\r\n    diamondtype: diamond.diamondType ?? \"\",\r\n    diamondcolor: diamond.diamondColour ?? \"\",\r\n  };\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n \r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {}, [editcontent]);\r\n\r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            Diamond Details\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamonditemname}\r\n            placeholder={\"Item Name\"}\r\n            name=\"size\"\r\n            label=\"Item Name\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamonditemname\")}\r\n          />{\" \"}\r\n          {/* <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamondsubitemname}\r\n            label=\"SubItem Name\"\r\n            placeholder={\"Diamond SubItem Name\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamondsubitemname\")}\r\n          />{\" \"} */}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamonddescription}\r\n            placeholder={\"Diamond Description\"}\r\n            name=\"size\"\r\n            label=\"Description\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamonddescription\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamondweight}\r\n            placeholder={\"Weight\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            label=\"Weight\"\r\n            onChange={handleInputChange(\"diamondweight\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            placeholder=\"#of Stones\"\r\n            name=\"size\"\r\n            type=\"number\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamondcount\")}\r\n            value={editcontent.diamondcount}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            options={productCtx.masterData.diamondsettings}\r\n            value={editcontent.diamondsettings}\r\n            onChange={handleoptionChange(\"diamondsettings\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Setting\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondshape}\r\n            options={productCtx.masterData.diamondshapes}\r\n            onChange={handleoptionChange(\"diamondshape\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Shape\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Shape\"\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondcolor}\r\n            options={productCtx.masterData.diamondcolors}\r\n            onChange={handleoptionChange(\"diamondcolor\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Color\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />{\" \"}\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondclarity}\r\n            options={productCtx.masterData.diamondclarities}\r\n            onChange={handleoptionChange(\"diamondclarity\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Clarity\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondtype}\r\n            options={productCtx.masterData.diamondtypes}\r\n            onChange={handleoptionChange(\"diamondtype\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Type\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditDiamond.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditDiamond;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { ProductContext } from \"../../context\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport EditDiamond from \"./Components/EditDiamond/EditDiamond\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"Diamond Type\", label: \"Diamond Type\" },\r\n  { id: \"Diamond Name\", label: \"Diamond Name\" },\r\n  { id: \" SubItemName\", label: \"  Sub Item Name\" },\r\n  { id: \"Description\", label: \"Description\" },\r\n  { id: \"Colour\", label: \"Colour\" },\r\n  { id: \"Clarity\", label: \"Clarity\" },\r\n  { id: \"Weight\", label: \"Weight\" },\r\n  { id: \"Number\", label: \"Number\" },\r\n  { id: \"Amount\", label: \"Amount\" },\r\n  { id: \"Carat\", label: \"Per Carat\" },\r\n  { id: \"Setting\", label: \"Setting\" },\r\n  { id: \"Shape\", label: \"Shape\" },\r\n\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    minWidth: 80,\r\n    maxWidth: 80,\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    display: \"flex\",\r\n\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    //marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function DiamondDetails(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  let [diamondEditObject, setDiamondEditObject] = React.useState({\r\n    edit: \"\",\r\n  });\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond && props.diamond.length - page * rowsPerPage);\r\n  function DiamondEdit(diamondData) {\r\n    setDiamondEditObject({\r\n      ...diamondEditObject,\r\n      edit: JSON.parse(JSON.stringify(diamondData)),\r\n    });\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\r\n        (settingData, index) => settingData.name === diamondData.diamondSettings\r\n      )[0],\r\n      diamondshape: productCtx.masterData.diamondshapes.filter(\r\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\r\n      )[0],\r\n      diamondcount: diamondData.stoneCount,\r\n      diamondweight: diamondData.stoneWeight,\r\n      diamonditemname: diamondData.itemName,\r\n      diamondsubitemname: diamondData.subItemName,\r\n      diamonddescription: diamondData.description,\r\n    });\r\n    setEditcontent({\r\n      id: diamondData.id,\r\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\r\n        (settingData, index) => settingData.name === diamondData.diamondSettings\r\n      )[0],\r\n      diamondshape: productCtx.masterData.diamondshapes.filter(\r\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\r\n      )[0],\r\n      diamondcount: diamondData.stoneCount,\r\n      diamondweight: diamondData.stoneWeight,\r\n      diamonditemname: diamondData.itemName,\r\n      diamondsubitemname: diamondData.subItemName,\r\n      diamonddescription: diamondData.description,\r\n    });\r\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n    setOpenedit(true);\r\n  }\r\n  async function DiamondSave(diamondobj) {\r\n    // alert(JSON.stringify(productCtx.diamondsettings))\r\n    // alert(JSON.stringify(productCtx.diamondshape))\r\n    // alert(JSON.stringify(productCtx.diamondcount))\r\n    // alert(JSON.stringify(id))\r\n    var bodydata = {};\r\n    if (diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight) {\r\n      let list_data = props.diamond;\r\n      let DiamondChangeData = list_data.map((diamondListData, index) => {\r\n        if (diamondobj.id === diamondListData.id) {\r\n          diamondListData.diamondSettings = diamondobj.diamondsettings.name;\r\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\r\n          diamondListData.stoneCount = diamondobj.diamondcount;\r\n          diamondListData.stoneWeight = diamondobj.diamondweight;\r\n          bodydata[\"diamondSettings\"] = diamondobj.diamondsettings.name;\r\n          bodydata[\"diamondShape\"] = diamondobj.diamondshape.name;\r\n          bodydata[\"stoneCount\"] = diamondobj.diamondcount;\r\n          bodydata[\"stoneWeight\"] = diamondobj.diamondweight;\r\n          bodydata[\"diamondid\"] = diamondobj.id;\r\n          bodydata[\"itemname\"] = diamondobj.diamonditemname;\r\n          bodydata[\"subitemname\"] = diamondobj.diamondsubitemname;\r\n          bodydata[\"description\"] = diamondobj.diamonddescription;\r\n          bodydata[\"color\"] = diamondobj.diamondcolor?.label;\r\n          bodydata[\"clarity\"] = diamondobj?.diamondclarity?.label;\r\n          bodydata[\"diamondtype\"] = diamondobj.diamondtype?.label;\r\n          return diamondListData;\r\n        }\r\n        return diamondListData;\r\n      });\r\n      let response = await sendNetworkRequest(\"/editproductdiamond\", {}, bodydata);\r\n\r\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\r\n      // let editDiamondLists = productCtx.editDiamondLists;\r\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\r\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ?\r\n      //   editDiamondLists = editDiamondLists && editDiamondLists\r\n      //   .map((diamond_list,index)=>{\r\n      //     if(diamond_list.id === editDiamondList.id){\r\n      //       return editDiamondList;\r\n      //     }\r\n      //     return diamond_list;\r\n      //   })\r\n      //   : editDiamondLists.push(editDiamondList);\r\n      // }\r\n      // // console.log(editDiamondLists,'editDiamondList')\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      // handleClick();\r\n      // setProductCtx({\r\n      //   ...productCtx,\r\n      //   diamondlist:DiamondChangeData,\r\n      //   editDiamondLists,\r\n      //   diamondsettings:\"\",\r\n      //   diamondshape: \"\",\r\n      //   diamondcount:\"\",\r\n      //   diamondweight:\"\",\r\n      // })\r\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n      setEditcontent(null);\r\n      setOpenedit(false);\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not fill all item\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n    window.location.reload();\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        {/* <CircularProgress color=\"secondary\"/> */}\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.diamond &&\r\n              props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondType}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.itemName}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.subItemName}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.description}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondColour}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondClarity}\r\n                  </TableCell>\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align={\"center\"} component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        style={{ width: 40 }}\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Weight\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"diamondweight\")}\r\n                        value={productCtx.diamondweight}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.stoneWeight}\r\n                    </TableCell>\r\n                  )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        style={{ width: 40 }}\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"#of Stones\"\r\n                        name=\"size\"\r\n                        type=\"number\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"diamondcount\")}\r\n                        value={productCtx.diamondcount}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.stoneCount}\r\n                    </TableCell>\r\n                  )}\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneWeight}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneAmount}\r\n                  </TableCell>\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.diamondsettings}\r\n                        options={productCtx.masterData.diamondsettings}\r\n                        onChange={handleoptionChange(\"diamondsettings\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Diamond Setting\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.diamondSettings}\r\n                    </TableCell>\r\n                  )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.diamondshape}\r\n                        options={productCtx.masterData.diamondshapes}\r\n                        onChange={handleoptionChange(\"diamondshape\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Diamond Shape\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.diamondShape}\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align=\"center\" style={{ width: 80 }}>\r\n                      <Button onClick={(e) => DiamondSave(row.id)}>\r\n                        <SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}>\r\n                        <CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell align=\"center\" style={{ width: 80 }}>\r\n                      <Button onClick={(e) => DiamondEdit(row)}>\r\n                        <EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            {emptyRows == 0 ? (\r\n              <>\r\n                <TableRow style={{ height: 1 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              </>\r\n            ) : null}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.diamond && props.diamond.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditDiamond diamond={editcontent} onApply={DiamondSave} onClose={handleApplicationClose} open={openedit} />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Avatar, Button, Dialog, Chip, TextField, Typography, colors, Input } from \"@material-ui/core\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    \"&:hover\": {\r\n      backgroundColor: colors.green[900],\r\n    },\r\n  },\r\n}));\r\n\r\nconst EditGemstone = (props) => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id: diamond.id,\r\n    gemstonesettings: diamond?.gemstonesettings ?? null,\r\n    gemstonecount: diamond?.gemstonecount ?? \"\",\r\n    gemstoneweight: diamond?.gemstoneweight ?? \"\",\r\n    gemstonesize: diamond?.gemstonesize ?? \"\",\r\n    gemstoneitemname: diamond?.gemstoneitemname ?? \"\",\r\n    gemstonesubitemname: diamond?.gemstonesubitemname ?? \"\",\r\n    gemstonedescription: diamond?.gemstonedescription ?? \"\",\r\n    gemstoneshape: diamond?.gemstoneshape ?? null,\r\n    gemstonetype: diamond?.gemstonetype ?? null,\r\n  };\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n    // alert(JSON.stringify(editcontent.gemstonecount))\r\n  }, [editcontent]);\r\n\r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            Gemstone Details\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstoneitemname}\r\n            placeholder={\"Item Name\"}\r\n            name=\"size\"\r\n            label=\"Item Name\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstoneitemname\")}\r\n          />{\" \"}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonesubitemname}\r\n            label=\"SubItem Name\"\r\n            placeholder={\"Diamond SubItem Name\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonesubitemname\")}\r\n          />{\" \"}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonedescription}\r\n            placeholder={\" Description\"}\r\n            name=\"size\"\r\n            label=\"Description\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonedescription\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonesize}\r\n            label=\"Size\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonesize\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            label=\"Weight\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstoneweight}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstoneweight\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            placeholder=\"#of Stones\"\r\n            name=\"size\"\r\n            type=\"number\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonecount\")}\r\n            value={editcontent.gemstonecount}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            options={productCtx.masterData.gemstonesettings}\r\n            value={editcontent.gemstonesettings}\r\n            onChange={handleoptionChange(\"gemstonesettings\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\" Setting\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.name}\r\n            value={editcontent.gemstoneshape}\r\n            options={productCtx.masterData.gemstonshapes}\r\n            onChange={handleoptionChange(\"gemstoneshape\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Shape\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.gemstonetype}\r\n            options={productCtx.masterData.gemstontypes}\r\n            onChange={handleoptionChange(\"gemstonetype\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Type\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditGemstone.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditGemstone;\r\n","import { Button, Chip, Input, TextField } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport EditGemstone from \"./Components/EditGemstone/EditGemstone\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"Gemstone Type\", label: \"Gemstone Type\" },\r\n  { id: \"Gemstone Name\", label: \"Gemstone Name\" },\r\n  { id: \"SubItemName\", label: \"SubItem Name\" },\r\n  { id: \"Description\", label: \"Description\" },\r\n\r\n  { id: \"Size\", label: \"Size\" },\r\n  { id: \"Weight\", label: \"Weight\" },\r\n  { id: \"Number\", label: \"Number\" },\r\n  { id: \"Amount\", label: \"Amount\" },\r\n  { id: \"Carat\", label: \"Per Carat\" },\r\n  { id: \"Setting\", label: \"Setting\" },\r\n  { id: \"Shape\", label: \"Shape\" },\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    minWidth: 120,\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function GemstoneDetails(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  let [gemstoneEditObject, setGemstoneEditObject] = React.useState({\r\n    edit: \"\",\r\n  });\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\r\n  function GemstoneEdit(gemstoneData) {\r\n\r\n    setGemstoneEditObject({\r\n      ...gemstoneEditObject,\r\n      edit: JSON.parse(JSON.stringify(gemstoneData)),\r\n    });\r\n    setProductCtx({\r\n      ...productCtx,\r\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\r\n        (settingData, index) => settingData.name === gemstoneData.gemstoneSetting\r\n      )[0],\r\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\r\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\r\n      )[0],\r\n      gemstonecount: gemstoneData.stoneCount,\r\n      gemstoneweight: gemstoneData.stoneWeight,\r\n      gemstonesize: gemstoneData.gemstoneSize,\r\n      gemstoneitemname: gemstoneData.itemName,\r\n      gemstonesubitemname: gemstoneData.subItemName,\r\n      gemstonedescription: gemstoneData.description,\r\n      gemstonetype: gemstoneData.gemstoneType,\r\n    });\r\n    setEditcontent({\r\n      id: gemstoneData.id,\r\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\r\n        (settingData, index) => settingData.name === gemstoneData.gemstoneSetting\r\n      )[0],\r\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\r\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\r\n      )[0],\r\n      gemstonecount: gemstoneData.stoneCount,\r\n      gemstoneweight: gemstoneData.stoneWeight,\r\n      gemstonesize: gemstoneData.gemstoneSize,\r\n      gemstoneitemname: gemstoneData.itemName,\r\n      gemstonesubitemname: gemstoneData.subItemName,\r\n      gemstonedescription: gemstoneData.description,\r\n      gemstonetype: gemstoneData.gemstoneType,\r\n    });\r\n    // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\r\n    setOpenedit(true);\r\n  }\r\n\r\n  async function GemstoneSave(gemdata) {\r\n\r\n    if (\r\n      gemdata.gemstonesettings &&\r\n      gemdata.gemstoneshape &&\r\n      gemdata.gemstonecount &&\r\n      gemdata.gemstoneweight &&\r\n      gemdata.gemstonesize\r\n    ) {\r\n\r\n      let list_data = props.gemstone;\r\n      var bodydata = {};\r\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\r\n        if (gemdata.id === gemstoneListData.id) {\r\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\r\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\r\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\r\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\r\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\r\n          bodydata[\"gemstoneSetting\"] = gemdata.gemstonesettings.name;\r\n          bodydata[\"gemstoneShape\"] = gemdata.gemstoneshape.name;\r\n          bodydata[\"stoneCount\"] = gemdata.gemstonecount;\r\n          bodydata[\"gemstoneSize\"] = gemdata.gemstonesize;\r\n          bodydata[\"stoneWeight\"] = gemdata.gemstoneweight;\r\n          bodydata[\"id\"] = gemdata.id;\r\n          bodydata[\"itemname\"] = gemdata.gemstoneitemname;\r\n          bodydata[\"subitemname\"] = gemdata.gemstonesubitemname;\r\n          bodydata[\"description\"] = gemdata.gemstonedescription;\r\n          bodydata[\"gemstonetype\"] = gemdata.gemstonetype.label;\r\n\r\n          return gemstoneListData;\r\n        }\r\n\r\n        return gemstoneListData;\r\n      });\r\n\r\n      let response = await sendNetworkRequest(\"/editproductgemstone\", {}, bodydata);\r\n      let editGemstoneList =\r\n        gemstoneChangeData && gemstoneChangeData.filter((edit_data, index) => edit_data.id === gemdata.id)[0];\r\n      let editGemstoneLists = productCtx.editGemstoneLists;\r\n      if (JSON.stringify(editGemstoneList) !== JSON.stringify(gemstoneEditObject.edit)) {\r\n        let status =\r\n          editGemstoneLists && editGemstoneLists.some((check_edit, index) => check_edit.id === editGemstoneList.id)\r\n            ? (editGemstoneLists =\r\n              editGemstoneLists &&\r\n              editGemstoneLists.map((gemstone_list, index) => {\r\n                if (gemstone_list.id === editGemstoneList.id) {\r\n                  return editGemstoneList;\r\n                }\r\n                return gemstone_list;\r\n              }))\r\n            : editGemstoneLists.push(editGemstoneList);\r\n      }\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      handleClick();\r\n      setProductCtx({\r\n        ...productCtx,\r\n        gemstonelist: gemstoneChangeData,\r\n        editGemstoneLists,\r\n        gemstonesettings: \"\",\r\n        gemstoneshape: \"\",\r\n        gemstonecount: \"\",\r\n        gemstoneweight: \"\",\r\n        gemstonesize: \"\",\r\n      });\r\n      setEditcontent(null);\r\n      setOpenedit(false);\r\n      //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not fill all item\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n      window.location.reload();\r\n    }\r\n\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n   \r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n  \r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.gemstone &&\r\n              props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.gemstoneType}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.itemName}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.subItemName}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.description}\r\n                  </TableCell>\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Gemstone Size\"\r\n                        name=\"size\"\r\n                        onChange={handleInputChange(\"gemstonesize\")}\r\n                        autoComplete=\"size\"\r\n                        value={productCtx.gemstonesize}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.gemstoneSize}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Weight\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"gemstoneweight\")}\r\n                        value={productCtx.gemstoneweight}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.stoneWeight}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"#of Stones\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"gemstonecount\")}\r\n                        value={productCtx.gemstonecount}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.stoneCount}\r\n                      </TableCell>\r\n                    )}\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneWeight}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneAmount}\r\n                  </TableCell>\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.gemstonesettings}\r\n                        options={productCtx.masterData.gemstonesettings}\r\n                        onChange={handleoptionChange(\"gemstonesettings\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Gemstone Setting\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{\r\n                              ...params.InputProps,\r\n                              type: \"search\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.gemstoneSetting}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.gemstoneshape}\r\n                        options={productCtx.masterData.gemstonshapes}\r\n                        onChange={handleoptionChange(\"gemstoneshape\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Gemstone Shape\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{\r\n                              ...params.InputProps,\r\n                              type: \"search\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.gemstoneShape}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align=\"center\">\r\n                      <Button onClick={(e) => GemstoneSave(row.id)}>\r\n                        <SaveIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell align=\"center\">\r\n                        <Button onClick={(e) => GemstoneEdit(row)}>\r\n                          <EditIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                </TableRow>\r\n              ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.gemstone && props.gemstone.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditGemstone diamond={editcontent} onApply={GemstoneSave} onClose={handleApplicationClose} open={openedit} />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n      \r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                 {columnname.type == 8 ?\r\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                View\r\n               </Button> \r\n                : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                {/* {columnname.type === 8 ?\r\n                  <Button\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  size=\"small\"\r\n                  to={'/management/invoices/1'}\r\n                  variant=\"outlined\"\r\n                >\r\n                  View\r\n                </Button>\r\n                : null} */}\r\n\r\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                 View\r\n                                                </Button> : null}  \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n         \r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\r\nimport columnnames from './columnnames.json';\r\n\r\nexport default function ResponsiveDialog(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const theme = useTheme();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('lg');\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.onClose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Dialog\r\n      fullWidth={fullWidth}\r\n      maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\r\n        <DialogContent>\r\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n       \r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { Paper, Card, CardHeader, CardContent, Grid, Snackbar, Button } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport \"./upload.css\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { IMAGEDELETE } from \"../../graphql/query\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { useLocation } from \"react-router-dom\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: 100,\r\n    marginTop: theme.spacing(3),\r\n  },\r\n\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  styleFile: {\r\n    paddingTop: \"10px\",\r\n  },\r\n  card: {\r\n    minHeight: \"150px\",\r\n    textAlign: \"left\",\r\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\",\r\n  },\r\n  formContainer: {\r\n    paddingLeft: 40,\r\n    paddingRight: 40,\r\n    paddingTop: 20,\r\n    paddingBottom: 30,\r\n  },\r\n}));\r\n\r\nexport default function Productimages(props) {\r\n  const classes = useStyles2();\r\n  let image_count = 0;\r\n  let product_id = \"\";\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [productimages, setProductimages] = React.useState(props.prodimages);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  product_id = useLocation().pathname.split('/').pop()\r\n\r\n  React.useEffect(() => {\r\n    setProductimages(props.prodimages);\r\n  }, [props.prodimages]);\r\n\r\n  productimages.forEach((imgobj) => {\r\n    console.log();\r\n    image_count = image_count + 1;\r\n    if (imgobj.productId) {\r\n      product_id = imgobj.productId;\r\n    }\r\n  });\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSuccess(false);\r\n  };\r\n  const deleteImage = async (imageData) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: IMAGEDELETE,\r\n        variables: { productimageid: imageData.id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        fatchvalue.statuscode = 200 && window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handlenewAssetChange = (e) => {\r\n    const files = e.target.files;\r\n    Object.keys(files).map((file, index) => {\r\n      var imagecount = 1;\r\n      if (productimages) {\r\n        imagecount = image_count + 1;\r\n      }\r\n      let imagename = product_id + \"-\" + imagecount;\r\n      const fileParts = files[index].type.split(\"/\");\r\n      const fileType = fileParts[1];\r\n\r\n      uploadimagetoserver(files[index], fileType, imagename, product_id, {}, false);\r\n    });\r\n  };\r\n\r\n  async function uploadimagetoserver(fileobj, filetype, imagename, prodid, imagecontent, isedit) {\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      { image: filetype, filename: imagename, product_id: prodid },\r\n      false\r\n    );\r\n\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    var filepathname = returnData.filepath;\r\n    filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": filetype,\r\n        // \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    if (!isedit) {\r\n      const imageobj = {\r\n        name: product_id + \"_\" + (image_count + 1),\r\n        imagePosition: image_count + 1,\r\n        productColor: props.color,\r\n        productId: product_id,\r\n        imageUrl: url,\r\n        url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\r\n      };\r\n      imagecontent = imageobj;\r\n    }\r\n\r\n    if (!isedit) {\r\n      var productimgs = [];\r\n      productimages.forEach((img) => {\r\n        productimgs.push(img);\r\n      });\r\n      productimgs.push(imagecontent);\r\n    }\r\n\r\n    await axios.put(signedRequest, fileobj, options);\r\n    let responsecontent = await sendNetworkRequest(\"/updateproductimage\", {}, { imageobj: imagecontent, isedit: isedit }, false);\r\n    responsecontent.statuscode === 200 && setSuccess(true);\r\n    setTimeout(function () {\r\n      responsecontent.statuscode === 200 && window.location.reload();\r\n    }, 2500);\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardHeader title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color} />\r\n        <CardContent>\r\n          <Grid container spacing={2} className={classes.styleFile}>\r\n            {productimages.map((url, index) => (\r\n              <React.Fragment key={url.id}>\r\n                <div style={{ position: \"relative\" }}>\r\n                  <i\r\n                    className=\"fa fa-window-edit\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 10,\r\n                      top: 11,\r\n                      color: \"red\",\r\n                      zIndex: \"12\",\r\n                    }}\r\n                  />\r\n\r\n                  <Grid\r\n                    item\r\n                    style={{\r\n                      width: \"150px\",\r\n                      wordBreak: \"break-all\",\r\n                      height: \"150px\",\r\n                      padding: \"8px\",\r\n                      margin: \"0\",\r\n                      // cursor: \"pointer\",\r\n                      position: \"relative\",\r\n                    }}\r\n                    className=\"container\"\r\n                  >\r\n                    <img\r\n                      src={url.imageUrl}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        borderRadius: \"4px\",\r\n                      }}\r\n                      alt=\"product images\"\r\n                    />\r\n                  </Grid>\r\n                  <Button variant=\"outlined\" style={{ margin: \"auto\", display: \"flex\" }} onClick={() => deleteImage(url)}>\r\n                    <DeleteIcon style={{ color: \"grey\" }} />\r\n                  </Button>\r\n                  <br />\r\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\r\n                    {\" \"}\r\n                    {index + 1}{\" \"}\r\n                  </Typography>\r\n\r\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\r\n                    {\" \"}\r\n                    {url.ishover ? \"hover\" : \"\"}{\" \"}\r\n                  </Typography>\r\n                </div>\r\n                {/* ) : null} */}\r\n              </React.Fragment>\r\n            ))}\r\n            <Grid\r\n              item\r\n              style={{\r\n                width: \"150px\",\r\n                wordBreak: \"break-all\",\r\n                height: \"150px\",\r\n                padding: \"8px\",\r\n                margin: \"0\",\r\n                cursor: \"pointer\",\r\n                textAlign: \"center\",\r\n                position: \"relative\",\r\n              }}\r\n              className=\"container\"\r\n            >\r\n              {\r\n                <label className=\"custom-file-upload\" style={{ display: \"flex\" }}>\r\n                  <i\r\n                    className=\"fa fa-plus\"\r\n                    aria-hidden=\"true\"\r\n                    style={{\r\n                      color: \"rgba(60,64,67,.15)\",\r\n                      fontSize: \"45px\",\r\n                      margin: \"auto\",\r\n                    }}\r\n                  ></i>\r\n                  <input type=\"file\" className=\"custom-file-input\" onChange={(e) => handlenewAssetChange(e)}></input>\r\n                </label>\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose}>Image Upload Successfully...</Alert>\r\n      </Snackbar>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  Chip,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  Input\r\n} from '@material-ui/core';\r\nimport { ProductContext } from '../../../../context';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 960\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  content: {\r\n    padding: theme.spacing(2, 2),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  helperText: {\r\n    textAlign: 'right',\r\n    marginRight: 0\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.green[900]\r\n    }\r\n  }\r\n}));\r\n\r\nconst EditPrice = props => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id : diamond.id,\r\n    editcostprice:diamond.editcostprice,\r\n    editcostpricetax: diamond.editcostpricetax,\r\n    editsellingprice:diamond.editsellingprice,\r\n    editsellingpricetax:diamond.editsellingpricetax,\r\n    editmarkupprice: diamond.editmarkupprice,\r\n    editmarkuppricetax : diamond.editmarkuppricetax,\r\n    editdiscountprice: diamond.editdiscountprice,\r\n    editdiscountpricetax: diamond.editdiscountpricetax\r\n  }\r\n  const [value, setValue] = useState('');\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n  }\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n  },[editcontent])\r\n \r\n  return (\r\n    <Dialog\r\n      maxWidth=\"lg\"\r\n      onClose={onClose}\r\n      open={open}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <div className={classes.header}>\r\n          <Typography\r\n            align=\"center\"\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n           Price Details\r\n          </Typography>\r\n          \r\n        </div>\r\n        <div className={classes.content}>\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editcostprice}\r\n              placeholder={\"costPrice\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editcostprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"costPriceTax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editcostpricetax')}\r\n              value={editcontent.editcostpricetax}\r\n              />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editsellingprice}\r\n              placeholder={\"Selling Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editsellingprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Selling Pricetax\"\r\n              placeholder=\"Selling Pricetax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editsellingpricetax')}\r\n              value={editcontent.editsellingpricetax}\r\n              />\r\n\r\n               <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editmarkupprice}\r\n              placeholder={\"Markup Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editmarkupprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"Markup Price Tax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editmarkuppricetax')}\r\n              value={editcontent.editmarkuppricetax}\r\n              />\r\n\r\n               <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editdiscountprice}\r\n              placeholder={\"Discount Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editdiscountprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"Discount Price tax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editdiscountpricetax')}\r\n              value={editcontent.editdiscountpricetax}\r\n              />\r\n                 \r\n          \r\n          \r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            className={classes.applyButton}\r\n            onClick={() => onApply(editcontent)}\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditPrice.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default EditPrice;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Chip,\r\n  Input,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport EditPrice from \"./Components/EditPrice/EditPrice\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { ProductContext } from \"../../context\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\n\r\nconst columns = [\r\n  { id: \"SKU\", label: \"SKU\" },\r\n  { id: \"Cost Price\", label: \"Cost Price\" },\r\n  { id: \"Cost Price Tax\", label: \"Cost Price Tax\" },\r\n  { id: \"Selling Price\", label: \"Selling Price\" },\r\n  { id: \"Selling Price Tax\", label: \"Selling Price Tax\" },\r\n  { id: \"Markup Price\", label: \"Markup Price\" },\r\n  { id: \"Markup Price Tax\", label: \"Markup Price Tax\" },\r\n  { id: \"Discount Price\", label: \"Discount Price\" },\r\n  { id: \"Discount Price Tax\", label: \"Discount Price Tax\" },\r\n  { id: \"Margin On Sale\", label: \"Margin On Sale\" },\r\n  { id: \"Discount\", label: \"Discount\" },\r\n\r\n  {\r\n    id: \"Disable\",\r\n    label: \"Price Update\",\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function Variants(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    pricerun: false,\r\n    id: \"\",\r\n  });\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  function handleChange(variantId) {\r\n    let variantslist = productCtx.variants;\r\n    variantslist =\r\n      productCtx.variants &&\r\n      productCtx.variants.map((variant, index) => {\r\n        if (variant.id === variantId) {\r\n          let status = variant.isActive\r\n            ? (variant.isActive = false)\r\n            : (variant.isActive = true);\r\n        }\r\n        return variant;\r\n      });\r\n    let filterVariant =\r\n      variantslist &&\r\n      variantslist.filter(\r\n        (filter_data, index) => filter_data.id === variantId\r\n      )[0];\r\n    let editVaraint = {\r\n      id: filterVariant.id,\r\n      isActive: filterVariant.isActive,\r\n    };\r\n    let editVariants = productCtx.editVariants;\r\n    let editStatus =\r\n      editVariants &&\r\n      editVariants.some(\r\n        (check_variant, index) => check_variant.id === variantId\r\n      )\r\n        ? (editVariants =\r\n            editVariants &&\r\n            editVariants.filter(\r\n              (edit_variant_filter, index) =>\r\n                edit_variant_filter.id !== variantId\r\n            ))\r\n        : editVariants.push(editVaraint);\r\n    setProductCtx({\r\n      ...productCtx,\r\n      variants: variantslist,\r\n      editVariants,\r\n    });\r\n  }\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(\r\n      rowsPerPage,\r\n      props.variants && props.variants.length - page * rowsPerPage\r\n    );\r\n  // function VariantEdit(id) {\r\n  //   alert(id)\r\n  //   setBtnEdit({ ...btnEdit, id, action: true })\r\n  // }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const handleinputChange = (type) => (e) => {\r\n    // const re = /^[a-zA-Z \\b]+$/;\r\n    // if (e.target.value === '' || re.test(e.target.value)) {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n    // }\r\n  };\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  async function Skupricesync(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, pricerun: true });\r\n\r\n    let bodydata = {\r\n      req_product_id: diamondData.productId,\r\n      generatedSku: diamondData.generatedSku,\r\n    };\r\n    console.log(JSON.stringify(bodydata));\r\n    await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\r\n    setBtnEdit({ ...btnEdit, id: \"\", pricerun: false });\r\n  }\r\n  function DiamondEdit(diamondData) {\r\n    setProductCtx({\r\n      ...productCtx,\r\n      editcostprice: diamondData.costPrice,\r\n      editcostpricetax: diamondData.costPriceTax,\r\n      editsellingprice: diamondData.sellingPrice,\r\n      editsellingpricetax: diamondData.sellingPriceTax,\r\n      editmarkupprice: diamondData.markupPrice,\r\n      editmarkuppricetax: diamondData.markupPriceTax,\r\n      editdiscountprice: diamondData.discountPrice,\r\n      editdiscountpricetax: diamondData.discountPriceTax,\r\n    });\r\n    setEditcontent({\r\n      id: diamondData.generatedSku,\r\n      editcostprice: diamondData.costPrice,\r\n      editcostpricetax: diamondData.costPriceTax,\r\n      editsellingprice: diamondData.sellingPrice,\r\n      editsellingpricetax: diamondData.sellingPriceTax,\r\n      editmarkupprice: diamondData.markupPrice,\r\n      editmarkuppricetax: diamondData.markupPriceTax,\r\n      editdiscountprice: diamondData.discountPrice,\r\n      editdiscountpricetax: diamondData.discountPriceTax,\r\n    });\r\n    //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n    // setOpenedit(true)\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\r\n  }\r\n  function DiamondSave(priceobj) {\r\n    var bodydata = {};\r\n    let list_data = props.variants;\r\n    let Skuchangedata = list_data.map((skulistdata, index) => {\r\n      if (priceobj.id === skulistdata.generatedSku) {\r\n        skulistdata.costPrice = priceobj.editcostprice;\r\n        skulistdata.costPriceTax = priceobj.editcostpricetax;\r\n        skulistdata.sellingPrice = priceobj.editsellingprice;\r\n        skulistdata.sellingPriceTax = priceobj.editsellingpricetax;\r\n        skulistdata.markupPrice = priceobj.editmarkupprice;\r\n        skulistdata.markupPriceTax = priceobj.editmarkuppricetax;\r\n        skulistdata.discountPrice = priceobj.editdiscountprice;\r\n        skulistdata.discountPriceTax = priceobj.editdiscountpricetax;\r\n\r\n        bodydata[\"costPrice\"] = parseFloat(priceobj.editcostprice);\r\n        bodydata[\"costPriceTax\"] = parseFloat(priceobj.editcostpricetax);\r\n        bodydata[\"sellingPrice\"] = parseFloat(priceobj.editsellingprice);\r\n        bodydata[\"sellingPriceTax\"] = parseFloat(priceobj.editsellingpricetax);\r\n        bodydata[\"markupPrice\"] = parseFloat(priceobj.editmarkupprice);\r\n        bodydata[\"markupPriceTax\"] = parseFloat(priceobj.editmarkuppricetax);\r\n        bodydata[\"discountPrice\"] = parseFloat(priceobj.editdiscountprice);\r\n        bodydata[\"discountPriceTax\"] = parseFloat(\r\n          priceobj.editdiscountpricetax\r\n        );\r\n        bodydata[\"marginOnSalePercentage\"] = parseFloat(\r\n          priceobj.marginOnSalePercentage\r\n        );\r\n\r\n        bodydata[\"generatedSku\"] = priceobj.id;\r\n        return skulistdata;\r\n      }\r\n      return skulistdata;\r\n    });\r\n    alert(JSON.stringify(bodydata));\r\n    // sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    // setEditcontent(null)\r\n    // setOpenedit(false)\r\n  }\r\n  //   const handleoptionChange = type => (event, value) => {\r\n\r\n  //     setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  // }\r\n  // const handleInputChange = type => e => {\r\n  //   setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.variants &&\r\n              props.variants\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.generatedSku}\r\n                    </TableCell>\r\n                    {props.displycolumns.indexOf(\"Cost Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{ width: 40 }}\r\n                            value={productCtx.editcostprice}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Cost Price\"\r\n                            onChange={handleinputChange(\"editcostprice\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {\" \"}\r\n                            {row.costPrice}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Cost Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editcostpricetax}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Cost Price Tax\"\r\n                            onChange={handleinputChange(\"editcostpricetax\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {\" \"}\r\n                            {row.costPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Selling Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editsellingprice}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Selling Price\"\r\n                            onChange={handleinputChange(\"editsellingprice\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.sellingPrice}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Selling Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editsellingpricetax}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Selling Price Tax\"\r\n                            onChange={handleinputChange(\"editsellingpricetax\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            //onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.sellingPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Markup Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editmarkupprice}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Markup Price\"\r\n                            onChange={handleinputChange(\"editmarkupprice\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.markupPrice}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Markup Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editmarkuppricetax}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Markup Price Tax\"\r\n                            onChange={handleinputChange(\"editmarkuppricetax\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.markupPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Discount Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editdiscountprice}\r\n                            id=\"productname\"\r\n                            onChange={handleinputChange(\"editdiscountprice\")}\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Discount Price\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.discountPrice}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Discount Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editdiscountpricetax}\r\n                            onChange={handleinputChange(\"editdiscountpricetax\")}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Discount Price Tax\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.discountPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Margin on Sale\") > -1 ? (\r\n                      <TableCell\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.marginOnSalePercentage}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\r\n                      <TableCell\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.discount}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"View\") > -1 ? (\r\n                      <TableCell\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={(e) => props.onShow(row.generatedSku)}\r\n                        >\r\n                          Summary\r\n                        </Button>{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        <Button\r\n                          onClick={(e) => Skupricesync(row)}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                        >\r\n                          ₹ Run\r\n                        </Button>\r\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\r\n                          <SaveIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => CancelEdit(row)}>\r\n                          <CancelIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        {btnEdit.pricerun && btnEdit.id == row.generatedSku ? (\r\n                          <CircularProgress size={15} />\r\n                        ) : (\r\n                          <Button\r\n                            onClick={(e) => Skupricesync(row)}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                          >\r\n                            ₹ Run\r\n                          </Button>\r\n                        )}\r\n                        <Button onClick={(e) => DiamondEdit(row)}>\r\n                          <EditIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.variants && props.variants.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditPrice\r\n            diamond={editcontent}\r\n            onApply={DiamondSave}\r\n            onClose={handleApplicationClose}\r\n            open={openedit}\r\n          />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Button, Input, Typography } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\n\r\nconst columns = [\r\n  { id: \"SKU\", label: \"SKU\" },\r\n  { id: \"Metal Colour\", label: \"Metal Colour\" },\r\n  { id: \"Metal Purity\", label: \"Metal Purity\" },\r\n  { id: \"Gold Weight\", label: \"Gold Weight\" },\r\n  { id: \"Size\", label: \"Size\" },\r\n  { id: \"Vendor lead Time\", label: \"Vendor lead Time\" },\r\n  { id: \"Ready to Ship\", label: \"Ready to Ship\" },\r\n\r\n  { id: \"Default\", label: \"Default\" },\r\n  { id: \"Show PriceBreakup\", label: \"Show PriceBreakup\" },\r\n  {\r\n    id: \"Active\",\r\n    label: \"Active\",\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function Variants(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n  function handleChangeisdefault(variantId) {}\r\n\r\n  const handleChangeswitch = (name) => (event) => {\r\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\r\n\r\n    //  setState({ ...state, [name]: event.target.checked });\r\n  };\r\n  function handleChange(variantId) {\r\n    let variantslist = productCtx.variants;\r\n    variantslist =\r\n      productCtx.variants &&\r\n      productCtx.variants.map((variant, index) => {\r\n        if (variant.id === variantId) {\r\n          let status = variant.isActive\r\n            ? (variant.isActive = false)\r\n            : (variant.isActive = true);\r\n        }\r\n        return variant;\r\n      });\r\n    let filterVariant =\r\n      variantslist &&\r\n      variantslist.filter(\r\n        (filter_data, index) => filter_data.id === variantId\r\n      )[0];\r\n    let editVaraint = {\r\n      id: filterVariant.id,\r\n      isActive: filterVariant.isActive,\r\n    };\r\n    let editVariants = productCtx.editVariants;\r\n    let editStatus =\r\n      editVariants &&\r\n      editVariants.some(\r\n        (check_variant, index) => check_variant.id === variantId\r\n      )\r\n        ? (editVariants =\r\n            editVariants &&\r\n            editVariants.filter(\r\n              (edit_variant_filter, index) =>\r\n                edit_variant_filter.id !== variantId\r\n            ))\r\n        : editVariants.push(editVaraint);\r\n    setProductCtx({\r\n      ...productCtx,\r\n      variants: variantslist,\r\n      editVariants,\r\n    });\r\n  }\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(\r\n      rowsPerPage,\r\n      props.variants && props.variants.length - page * rowsPerPage\r\n    );\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const handleinputChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function DiamondEdit(diamondData) {\r\n    console.log(diamondData);\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      editleadtime: diamondData.vendorDeliveryTime,\r\n      discount: diamondData.discountDesc,\r\n      editreadytoship: diamondData.isReadyToShip,\r\n      editisdefault: diamondData.isdefault,\r\n      editisactive: diamondData.isActive,\r\n    });\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\r\n  }\r\n  function DiamondSave(id) {\r\n    var bodydata = {};\r\n\r\n    let list_data = props.variants;\r\n    let Skuchangedata = list_data.map((skulistdata, index) => {\r\n      if (id === skulistdata.generatedSku) {\r\n        skulistdata.vendorDeliveryTime = productCtx.editleadtime;\r\n        skulistdata.isdefault = productCtx.editisdefault;\r\n        skulistdata.isActive = productCtx.editisactive;\r\n        skulistdata.isReadyToShip = productCtx.editreadytoship;\r\n        skulistdata.discountDesc = productCtx.discount;\r\n        bodydata[\"vendorDeliveryTime\"] = productCtx.editleadtime;\r\n        bodydata[\"isdefault\"] = productCtx.editisdefault;\r\n        bodydata[\"isActive\"] = productCtx.editisactive;\r\n        bodydata[\"discount\"] = productCtx.discount;\r\n        bodydata[\"isReadyToShip\"] = productCtx.editreadytoship;\r\n        bodydata[\"generatedSku\"] = id;\r\n        bodydata[\"showPriceBreakup\"] = productCtx.showPriceBreakup;\r\n\r\n        return skulistdata;\r\n      }\r\n      return skulistdata;\r\n    });\r\n    sendNetworkRequest(\"/updateskuinfo\", {}, bodydata);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.variants &&\r\n              props.variants\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    {props.displycolumns.indexOf(\"SKU\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.generatedSku}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Metal Colour\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.metalColor}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Metal Purity\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.purity}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Gold Weight\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.skuWeight}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\r\n                    {row.diamondType}\r\n                  </TableCell> */}\r\n                    {props.displycolumns.indexOf(\"Size\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.skuSize}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Vendor lead Time\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{ width: 40 }}\r\n                            value={productCtx.editleadtime}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Vendor Lead Time\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            onChange={handleinputChange(\"editleadtime\")}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.vendorDeliveryTime}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{ width: 40 }}\r\n                            value={productCtx.discount}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Discount\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            onChange={handleinputChange(\"discount\")}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.discountDesc}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Ready To Ship\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        <Switch\r\n                          checked={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? productCtx.editreadytoship\r\n                              : row.isReadyToShip\r\n                          }\r\n                          // onChange={()=>handleChange(row.id)}\r\n                          value=\"checkedA\"\r\n                          // onChange={handleChangeswitch('editreadytoship')}\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"editreadytoship\")\r\n                              : null\r\n                          }\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Default\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        <Switch\r\n                          checked={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? productCtx.editisdefault\r\n                              : row.isdefault\r\n                          }\r\n                          value=\"checkedA\"\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"editisdefault\")\r\n                              : null\r\n                          }\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Active\") > -1 ? (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        <Switch\r\n                          // checked={row.showPriceBreakup}\r\n                          checked={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? productCtx.editisactive\r\n                              : row.isActive\r\n                          }\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"editisactive\")\r\n                              : null\r\n                          }\r\n                          value=\"checkedA\"\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Show PriceBreakup\") > -1 ? (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        <Switch\r\n                          checked={productCtx.showPriceBreakup}\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"showPriceBreakup\")\r\n                              : null\r\n                          }\r\n                          value=\"checkedA\"\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                      <TableCell style={{ width: 20 }} align=\"center\">\r\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\r\n                          <SaveIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => CancelEdit(row)}>\r\n                          <CancelIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell align=\"center\" style={{ width: 20 }}>\r\n                        <Button onClick={(e) => DiamondEdit(row)}>\r\n                          <EditIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.variants && props.variants.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Chip,\r\n  FormControlLabel,\r\n  Grid,\r\n  Switch,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FullLoader from \"../../components/Loader\";\r\nimport { ProductContext, ProductProvider } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { PRODUCTDIAMONDTYPES, PRODUCTEDIT } from \"../../graphql/query\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport \"../Productupload/Productupload.css\";\r\nimport columnnames from \"./columnnames.json\";\r\nimport SortHeader from \"./Components/SortHeader\";\r\nimport CreateVariant from \"./CreateVariant\";\r\nimport DiamondDetails from \"./DiamondDetails\";\r\nimport GemstoneDetails from \"./GemstoneDetails\";\r\nimport Pricedetails from \"./Pricedetails\";\r\nimport Productimages from \"./Productimages\";\r\nimport Skupricing from \"./Skupricing\";\r\nimport Variants from \"./Variants\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function Component(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [expand, setExpand] = React.useState(false);\r\n  const [varientcolumns, setVarientcolumns] = React.useState(\r\n    columnnames.defaultvarients\r\n  );\r\n  const [displycolumns, setDisplycolumns] = React.useState(\r\n    columnnames.defaultvarientnames\r\n  );\r\n  const [pricingcolumns, setPricingcolumns] = React.useState(\r\n    columnnames.pricing\r\n  );\r\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(\r\n    columnnames.defaultpricing\r\n  );\r\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(\r\n    columnnames.defaultpricingnames\r\n  );\r\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\r\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\r\n\r\n  const [loadopen, setLoadopen] = React.useState(true);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    createVariant();\r\n    setExpand(isExpanded ? true : false);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const { productCtx, setProductCtx } = useContext(ProductContext);\r\n\r\n  console.log(productCtx);\r\n  const [state, setstate] = useState({\r\n    create_variant: false,\r\n    duplicate_productName: \"\",\r\n  });\r\n\r\n  let prod_id = props.location.pathname.split(\"/\")[2];\r\n  let product_sku = \"\";\r\n  const classes = useStyle();\r\n  function keyPress(evt) {\r\n    const productname = evt.target.validity.valid\r\n      ? evt.target.value\r\n      : productCtx.productname;\r\n    setProductCtx({ ...productCtx, productname });\r\n  }\r\n  function changeVariant() {\r\n    setstate({ ...state, create_variant: false });\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n\r\n  const handleinputChange = (type) => (e) => {\r\n    const re = /^[a-zA-Z \\b]+$/;\r\n\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  function dismisspricesummary() {\r\n    setIsshowpricesummary(false);\r\n  }\r\n  function getColumnnames(columnnames, displytype) {\r\n    let displycolumns = [];\r\n    let displycolumnnames = [];\r\n\r\n    columnnames.forEach((element) => {\r\n      displycolumnnames.push(element.name);\r\n      displycolumns.push(element);\r\n    });\r\n    if (displytype === 1) {\r\n      setDisplycolumns(displycolumnnames);\r\n      setVarientcolumns(columnnames);\r\n    } else {\r\n      setPricingcolumns(columnnames);\r\n      setDisplypricingcolumns(displycolumns);\r\n      setDisplycolumnnames(displycolumnnames);\r\n    }\r\n  }\r\n\r\n  let client = useApolloClient();\r\n\r\n  function createVariant() {\r\n    let diamondTypesArray = [];\r\n    productCtx.diamondlist &&\r\n      productCtx.diamondlist.map((diamond_type) => {\r\n        let diamond_data = {\r\n          id: diamond_type.id,\r\n          diamondType: diamond_type.diamondType,\r\n        };\r\n        let status = diamondTypesArray.some(\r\n          (store_dia) => store_dia.diamondType == diamond_type.diamondType\r\n        )\r\n          ? \"\"\r\n          : diamondTypesArray.push(diamond_data);\r\n        return diamond_type;\r\n      });\r\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\r\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      productCtx,\r\n    });\r\n\r\n    client\r\n      .query({ query: PRODUCTDIAMONDTYPES })\r\n      .then((res) => {\r\n        setProductCtx({\r\n          ...productCtx,\r\n          productDiamondTypes: res.data.allMasterDiamondTypes.nodes,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  async function saveProductEditItem() {\r\n    console.log(productCtx.product_type);\r\n    let productEditItem = {\r\n      productId: prod_id,\r\n      productCategory: productCtx.product_categoy,\r\n      productName: productCtx.productname,\r\n      themes: productCtx.themes,\r\n      styles: productCtx.prod_styles,\r\n      occassions: productCtx.occassions,\r\n      collections: productCtx.collections,\r\n      stonecount: productCtx.stonecount,\r\n      stonecolour: productCtx.stonecolour,\r\n      gender: productCtx.product_gender,\r\n      hashtags: productCtx.hashtags,\r\n      description: productCtx.description,\r\n      minOrderQty: productCtx.minOrderQty,\r\n      maxOrderQty: productCtx.maxOrderQty,\r\n      length: productCtx.length,\r\n      height: productCtx.height,\r\n\r\n      productType: productCtx?.product_type?.label ?? null,\r\n      productMetalColor: productCtx?.productMetalColor ?? null,\r\n      vendorCode: productCtx?.vendorcode?.name ?? null,\r\n      earingBacking: productCtx?.earringbacking?.label ?? null,\r\n      // productSize: \"12,13,14,15\",\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/editproduct\",\r\n      {},\r\n      productEditItem\r\n    );\r\n    window.location.reload();\r\n    console.log(\"************\");\r\n    console.log(JSON.stringify(productEditItem));\r\n    if (response) {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n\r\n      handleClick();\r\n      console.log(JSON.stringify(productEditItem));\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not edit product\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n  }\r\n\r\n  const handledisableproduct = (name) => async (event) => {\r\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\r\n    let bodycontent = {\r\n      productid: prod_id,\r\n      isactive: event.target.checked,\r\n    };\r\n    let esbody = {\r\n      product_id: prod_id,\r\n    };\r\n    var endpoint = \"/reindex\";\r\n    if (event.target.checked) {\r\n      endpoint = \"/esearch_forceindex\";\r\n    }\r\n\r\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\r\n\r\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\r\n    let updateproductattr = await sendNetworkRequest(\r\n      \"/updateproductattribute\",\r\n      {},\r\n      esbody\r\n    );\r\n\r\n    console.log(\"************\");\r\n    console.log(JSON.stringify(bodycontent));\r\n    if (response) {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      handleClick();\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not edit product\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n  };\r\n  async function showpricesummary(sku) {\r\n    let response = await sendNetworkRequest(\r\n      \"/viewskupricesummary/\" + sku,\r\n      {},\r\n      null\r\n    );\r\n    let price_summary = [];\r\n    let skuprice = response.price_summary.skuprice;\r\n\r\n    let metalprice = response.price_summary.metals;\r\n    metalprice.forEach((element) => {\r\n      let obj = {\r\n        component: element.material_name,\r\n        cost_price: element.cost_price,\r\n        selling_price: element.selling_price,\r\n        markup_price: element.markup,\r\n        discount_price: element.discount_price,\r\n      };\r\n      price_summary.push(obj);\r\n    });\r\n\r\n    let mateialprice = response.price_summary.materials;\r\n    mateialprice.forEach((element) => {\r\n      let obj = {\r\n        component: element.material_name,\r\n        cost_price: element.cost_price,\r\n        selling_price: element.selling_price,\r\n        markup_price: element.markup,\r\n        discount_price: element.discount_price,\r\n      };\r\n      price_summary.push(obj);\r\n    });\r\n    let obj = {\r\n      component: \"SKU Price\",\r\n      cost_price: skuprice.cost_price,\r\n      selling_price: skuprice.selling_price,\r\n      markup_price: skuprice.markup_price,\r\n      discount_price: skuprice.discount_price,\r\n    };\r\n    price_summary.push(obj);\r\n\r\n    setPricesummaryvalue(price_summary);\r\n    setIsshowpricesummary(true);\r\n  }\r\n  function Skupricesync(product_id) {\r\n    let bodydata = {\r\n      product_sku: [product_id],\r\n    };\r\n    sendNetworkRequest(\"/price_run_latest\", {}, bodydata);\r\n  }\r\n  function Skumarkupsync(diamondData) {\r\n    let bodydata = {\r\n      req_product_id: diamondData,\r\n      pricingcomponent: \"updateskuprice\",\r\n    };\r\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\r\n  }\r\n  function backProductList() {\r\n    window.location = \"/productlist\";\r\n  }\r\n  useEffect(() => {\r\n    client\r\n      .query({ query: PRODUCTEDIT, variables: { productId: prod_id } })\r\n      .then((res) => {\r\n        setLoadopen(false);\r\n\r\n        var { productListByProductId } = res.data;\r\n        var genders = productListByProductId.gender;\r\n        var productTypes = productListByProductId.productType;\r\n        var earringBackings = productListByProductId.earringBacking;\r\n        var size_obj = productListByProductId.sizeVarient;\r\n        var vendorCodes = productListByProductId.vendorCode;\r\n\r\n        // var productSizes = productListByProductId?.transSkuListsByProductId?.nodes[0]?.skuSize;\r\n        // let productSize_arr = [];\r\n        // if (productSizes != null && productSizes != undefined) {\r\n        //\r\n        //   let productSizeArray = productSizes.split(\",\");\r\n        //   for (let i = 0; i < productSizeArray.length; i++) {\r\n        //\r\n        //     let obj_size = {\r\n        //       sizeValue: productSizeArray[i],\r\n        //     };\r\n        //     productSize_arr.push(obj_size);\r\n        //   }\r\n        // }\r\n\r\n        let sizes_arr = [];\r\n        if (size_obj) {\r\n          let sizes = size_obj.split(\",\");\r\n          sizes.forEach((element) => {\r\n            sizes_arr.push(element);\r\n          });\r\n        }\r\n        let gender_arr = [];\r\n        if (genders) {\r\n          genders = genders.split(\",\");\r\n          genders.forEach((element) => {\r\n            let gender_obj = {\r\n              label: element,\r\n            };\r\n            gender_arr.push(gender_obj);\r\n          });\r\n        }\r\n        let product_type = null;\r\n        if (productTypes !== null && productTypes !== undefined) {\r\n          productTypes = productTypes.split(\",\");\r\n          productTypes.forEach((element) => {\r\n            product_type = {\r\n              label: element,\r\n            };\r\n          });\r\n        }\r\n\r\n        let earring_backing = null;\r\n        if (earringBackings !== null && earringBackings !== undefined) {\r\n          earring_backing = {\r\n            label: earringBackings,\r\n          };\r\n        }\r\n\r\n        let vendor_code = null;\r\n        if (vendorCodes !== null && vendorCodes !== undefined) {\r\n          vendorCodes = vendorCodes.split(\",\");\r\n          vendorCodes.forEach((element) => {\r\n            vendor_code = {\r\n              name: element,\r\n            };\r\n          });\r\n        }\r\n        let defaultcolour = \"\";\r\n        var images_arr = productListByProductId.productImagesByProductId.nodes;\r\n        images_arr.forEach((element) => {\r\n          if (element.isdefault) {\r\n            defaultcolour = element.productColor;\r\n          }\r\n        });\r\n        var metalcolors = [];\r\n        Array.prototype.insert = function (index, item) {\r\n          this.splice(index, 0, item);\r\n        };\r\n\r\n        var unfilterMetalColor =\r\n          productListByProductId?.productMetalcoloursByProductId?.nodes ?? null;\r\n        var metalColor = unfilterMetalColor;\r\n        var metalColor = unfilterMetalColor.filter(function (el) {\r\n          return el.productColor != null;\r\n        });\r\n\r\n        if (\r\n          typeof metalColor !== undefined &&\r\n          metalColor !== null &&\r\n          metalColor !== undefined\r\n        ) {\r\n        } else {\r\n          metalColor = {};\r\n        }\r\n\r\n        let metalcolor =\r\n          productListByProductId.productMetalcoloursByProductId.nodes;\r\n        metalcolor.forEach((colorobj) => {\r\n          if (colorobj.productColor === defaultcolour) {\r\n            colorobj[\"isdefault\"] = true;\r\n            metalcolors.insert(0, colorobj);\r\n          } else {\r\n            colorobj[\"isdefault\"] = false;\r\n            metalcolors.push(colorobj);\r\n          }\r\n        });\r\n\r\n        setProductCtx({\r\n          ...productCtx,\r\n          productname: productListByProductId.productName,\r\n          isactive: productListByProductId.isactive,\r\n          product_type: product_type,\r\n          product_categoy: productListByProductId.productCategory,\r\n          gemstonelist:\r\n            productListByProductId.productGemstonesByProductSku.nodes,\r\n          diamondlist: productListByProductId.productDiamondsByProductSku.nodes,\r\n          variants: productListByProductId.transSkuListsByProductId.nodes,\r\n          productImages: productListByProductId.productImagesByProductId.nodes,\r\n          productMetalColor: metalColor,\r\n          // oldproductMetalColor: metalColor,\r\n          productMetalPurity:\r\n            productListByProductId.productPuritiesByProductId.nodes,\r\n          oldproductMetalPurity:\r\n            productListByProductId.productPuritiesByProductId.nodes,\r\n          variant_size: sizes_arr,\r\n          productmaterials:\r\n            productListByProductId.productMaterialsByProductSku.nodes,\r\n          vendorcode: vendor_code,\r\n          product_gender: gender_arr,\r\n          themes: productListByProductId.productThemesByProductId.nodes,\r\n          prod_styles: productListByProductId.productStylesByProductId.nodes, // productDiamondColor:diamondTypesArray,\r\n          occassions: productListByProductId.productOccassionsByProductId.nodes,\r\n          collections:\r\n            productListByProductId.productCollectionsByProductId.nodes,\r\n          stonecount:\r\n            productListByProductId.productStonecountsByProductId.nodes,\r\n          stonecolour:\r\n            productListByProductId.productStonecolorsByProductId.nodes,\r\n          description:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.transSkuDescriptionsBySkuId?.nodes[0]?.skuDescription,\r\n          minOrderQty:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.minOrderQty,\r\n          maxOrderQty:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.maxOrderQty,\r\n          height: productListByProductId?.height,\r\n          length: productListByProductId?.length,\r\n          earringbacking: earring_backing,\r\n          hashtags: productListByProductId?.productHashTagsByProductId?.nodes,\r\n          showPriceBreakup:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.showPriceBreakup,\r\n          // productSize: productSize_arr ?? [{}],\r\n          // productDiamondClarity:diamondClaritySku,\r\n        });\r\n\r\n        setstate({\r\n          ...state,\r\n          duplicate_productName: JSON.parse(\r\n            JSON.stringify(productListByProductId.productName)\r\n          ),\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   client\r\n  //     .query({ query: ALLMASTERPRODUCTSIZE, variables: { productType: productCtx?.product_type?.label } })\r\n  //     .then((res) => {\r\n  //\r\n  //       let ProductSizeFullData = res?.data?.allMasterRingsSizes?.nodes;\r\n\r\n  //       //\r\n  //       // let FilteredProductSize = null;\r\n  //       // if (productCtx?.product_type?.label !== undefined && productCtx.product_type?.label !== null) {\r\n  //       //   FilteredProductSize = ProductSizeFullData.filter((val) => {\r\n  //       //     return val.productType === productCtx?.product_type?.label;\r\n  //       //   });\r\n  //       // }\r\n  //\r\n  //       setProductCtx({ ...productCtx, masterProductSize: ProductSizeFullData ?? null });\r\n  //       console.log(ProductSizeFullData);\r\n  //     })\r\n  //     .catch(console.error);\r\n  // }, [productCtx?.product_type?.label]);\r\n  return state.create_variant ? (\r\n    <CreateVariant\r\n      productMetalColor={productCtx.productMetalColor}\r\n      productMetalPurity={productCtx.productMetalPurity}\r\n      changeVariant={changeVariant}\r\n      productId={prod_id}\r\n    />\r\n  ) : (\r\n    <Grid container>\r\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <Grid item container spacing={1}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={3}\r\n          lg={3}\r\n          spacing={2}\r\n          style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}\r\n        >\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.productname}\r\n            id=\"productname\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.productname\r\n            }\r\n            name=\"productname\"\r\n            label=\"Product Name\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"productname\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          {/* <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            value={productCtx.product_categoy}\r\n            id=\"product_category\"\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.product_categoy\r\n            }\r\n            name=\"product_category\"\r\n            label=\"Product Category\"\r\n          /> */}\r\n          <Autocomplete\r\n            id=\"product_category\"\r\n            className={classes.helperinput}\r\n            value={productCtx.product_categoy}\r\n            // getOptionLabel={(option) => option.name}\r\n            onChange={handleoptionChange(\"product_categoy\")}\r\n            options={productCtx.masterData.category.map((i) => i.name)}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.label}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Category\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.description}\r\n            id=\"description\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.description\r\n            }\r\n            name=\"description\"\r\n            label=\"Description\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"description\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.product_type}\r\n            getOptionLabel={(option) => option.label}\r\n            onChange={handleoptionChange(\"product_type\")}\r\n            options={productCtx.masterData.product_type}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.label}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Type\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            disabled\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.vendorcode}\r\n            getOptionLabel={(option) => option.name}\r\n            getOptionSelected={(option, value) => option.name === value.name}\r\n            onChange={handleoptionChange(\"vendorcode\")}\r\n            options={productCtx?.masterData?.vendorcode}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.name}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Ventor Name\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          {productCtx?.product_type?.label === \"Earrings\" ||\r\n          productCtx?.product_type?.label === \"earrings\" ? (\r\n            <Autocomplete\r\n              id=\"free-solo-2-demos\"\r\n              className={classes.fixedTag}\r\n              value={productCtx.earringbacking}\r\n              getOptionLabel={(option) => option.label}\r\n              onChange={handleoptionChange(\"earringbacking\")}\r\n              options={productCtx.masterData.earringbacking}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.label}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Earring Backing\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {/* {productCtx?.product_type?.label === \"Rings\" ? (\r\n            <Autocomplete\r\n              mutiple\r\n              id=\"free-solo-2-demo\"\r\n              className={classes.fixedTag}\r\n              value={productCtx.productSize}\r\n              defaultValue={productCtx.productSize}\r\n              getOptionLabel={(option) => (option.sizeValue ? option.sizeValue : \"\")}\r\n              onChange={handleoptionChange(\"productSize\")}\r\n              options={productCtx?.masterProductSize}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip variant=\"outlined\" size=\"small\" label={option.sizeValue} {...getTagProps({ index })} />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Size\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )} */}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.height}\r\n            id=\"height\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.height\r\n            }\r\n            name=\"height\"\r\n            label=\"Height \"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"height\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.length}\r\n            id=\"length\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.length\r\n            }\r\n            name=\"length\"\r\n            label=\"Width\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"length\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />{\" \"}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.minOrderQty}\r\n            id=\"minOrderQty\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.minOrderQty\r\n            }\r\n            name=\"minOrderQty\"\r\n            label=\"Minimum Order Quantity\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"minOrderQty\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />{\" \"}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.maxOrderQty}\r\n            id=\"maxOrderQty\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.maxOrderQty\r\n            }\r\n            name=\"maxOrderQty\"\r\n            label=\"Maximum Order Quantity\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"maxOrderQty\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            disabled\r\n            options={[]}\r\n            className={classes.fixedTag}\r\n            value={productCtx.productmaterials}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.materialName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Materials\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  readOnly: true,\r\n                  type: \"search\",\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            getOptionLabel={(option) => option.productColor}\r\n            getOptionSelected={(option, value) =>\r\n              option.productColor === value.productColor\r\n            }\r\n            onChange={handleoptionChange(\"productMetalColor\")}\r\n            options={productCtx.masterData.metalcolour}\r\n            className={classes.fixedTag}\r\n            value={productCtx.productMetalColor}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.productColor}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Metal Color\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            disabled\r\n            options={[]}\r\n            className={classes.fixedTag}\r\n            value={productCtx.productMetalPurity}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.purity}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Metal Purity\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.product_gender}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) => option.label === value.label}\r\n            onChange={handleoptionChange(\"product_gender\")}\r\n            options={productCtx.masterData.gender}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.label}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Gender\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.themeName\r\n            }\r\n            defaultValue={productCtx.themes}\r\n            options={productCtx.masterData.themes}\r\n            value={productCtx.themes}\r\n            onChange={handleoptionChange(\"themes\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.themeName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            style={{ display: \"none\" }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Themes\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.styleName\r\n            }\r\n            defaultValue={productCtx.prod_styles}\r\n            options={productCtx.masterData.styles}\r\n            onChange={handleoptionChange(\"prod_styles\")}\r\n            value={productCtx.prod_styles}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.styleName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Styles\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.occassions}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.occassionName\r\n            }\r\n            defaultValue={productCtx.occassions}\r\n            options={productCtx.masterData.occasions}\r\n            onChange={handleoptionChange(\"occassions\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.occassionName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Occasions\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.collections}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.collectionName\r\n            }\r\n            defaultValue={productCtx.collections}\r\n            options={productCtx.masterData.collections}\r\n            onChange={handleoptionChange(\"collections\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.collectionName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Collections\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"hashtags\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.hashtags}\r\n            getOptionLabel={(option) => option.name}\r\n            getOptionSelected={(option, value) => option.name === value.name}\r\n            options={productCtx.masterData.hashtags}\r\n            onChange={handleoptionChange(\"hashtags\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.name}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Hash Tags\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.stonecount}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.stonecount}\r\n            options={productCtx.masterData.stones}\r\n            onChange={handleoptionChange(\"stonecount\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.stonecount}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"No of Stones\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.stonecolour}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.stonecolour}\r\n            options={productCtx.masterData.gemstonecolor}\r\n            onChange={handleoptionChange(\"stonecolour\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.stonecolor}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Stone Colour\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <FormControlLabel\r\n            label={\r\n              productCtx.isactive\r\n                ? \"Disable this product\"\r\n                : \"Enable this product\"\r\n            }\r\n            control={\r\n              <Switch\r\n                checked={productCtx.isactive}\r\n                onChange={handledisableproduct(\"isactive\")}\r\n                value=\"checkedA\"\r\n              />\r\n            }\r\n          />\r\n          <Grid\r\n            item\r\n            container\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"16px\",\r\n            }}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={(e) => saveProductEditItem()}\r\n              >\r\n                Update\r\n              </Button>\r\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\r\n                  Back\r\n              </Button> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={9}\r\n          lg={9}\r\n          spacing={2}\r\n          style={{ padding: \"15px\" }}\r\n        >\r\n          <Grid container item md={6}></Grid>\r\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\r\n            Diamond Table\r\n          </Grid>\r\n          <DiamondDetails diamond={productCtx.diamondlist} />\r\n          {productCtx.gemstonelist.length > 0 ? (\r\n            <>\r\n              {\" \"}\r\n              <Grid\r\n                style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}\r\n              >\r\n                Gemstone Table\r\n              </Grid>\r\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\r\n            </>\r\n          ) : null}\r\n\r\n          <Grid style={{}}></Grid>\r\n          <Grid\r\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\r\n          >\r\n            <SortHeader\r\n              columnnames={columnnames.varients}\r\n              getColumnnames={getColumnnames}\r\n              displytype={1}\r\n            />{\" \"}\r\n          </Grid>\r\n\r\n          <Variants\r\n            variants={productCtx.variants}\r\n            columns={varientcolumns}\r\n            displycolumns={displycolumns}\r\n          />\r\n\r\n          <Grid\r\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\r\n          >\r\n            <SortHeader\r\n              title={\"Pricing Table\"}\r\n              columnnames={pricingcolumns}\r\n              displycolumns={displypricingcolumns}\r\n              getColumnnames={getColumnnames}\r\n              displytype={2}\r\n            />\r\n            <Button\r\n              onClick={(e) => Skupricesync(prod_id)}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Price Run For This Product\r\n            </Button>\r\n            <span>&nbsp;&nbsp;&nbsp;</span>\r\n            <Button\r\n              onClick={(e) => Skumarkupsync(prod_id)}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              disabled={true}\r\n            >\r\n              Run Markup For This Product\r\n            </Button>\r\n          </Grid>\r\n          {isshowpricesummary ? (\r\n            <Pricedetails\r\n              onClose={dismisspricesummary}\r\n              values={pricesummaryvalues}\r\n            />\r\n          ) : null}\r\n          <Skupricing\r\n            variants={productCtx.variants}\r\n            onShow={showpricesummary}\r\n            columns={displypricingcolumns}\r\n            displycolumns={displycolumnnames}\r\n          />\r\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\r\n            Product Images\r\n          </Grid>\r\n          {/* {productCtx.productMetalColor.map((colors) => ( */}\r\n          <Productimages\r\n            //color={colors.productColor}\r\n            //isdefault={colors.isdefault}\r\n            prodimages={productCtx.productImages}\r\n          />\r\n          {/* ))} */}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport const ProductAttributes = withRouter((props) => {\r\n  const classes = useStyles2();\r\n\r\n  const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"loaderdiv\">\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n\r\n  const _content = (\r\n    <ProductProvider\r\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\r\n    >\r\n      <Component {...props} />\r\n    </ProductProvider>\r\n  );\r\n  return _content;\r\n});\r\nexport default withRouter(ProductAttributes);\r\n","const route = {\r\n  login: \"/login\",\r\n  dashboard: \"/dashboard\",\r\n  profile: \"/profile\",\r\n  productupload: \"/productupload\",\r\n  configuration: \"/Configuration\",\r\n  vendor: \"/vendorlist\",\r\n  productlist: \"/productlist\",\r\n  orderlist: \"/orderlist\",\r\n  orderdetails: \"/orderdetails/:id\",\r\n  appointmentdetails: \"/appointmentdetails/:id\",\r\n  userorders: \"/orderlist/:userid\",\r\n  userwishlist: \"/userwishlist/:userid\",\r\n  address: \"/address/:userid\",\r\n  cmshome: \"/cmshome\",\r\n\r\n  materiallist: \"/material\",\r\n  mastermaterial: \"/materialmaster\",\r\n  mastercolors: \"/mastercolors\",\r\n  masterpurities: \"/masterpurities\",\r\n  salediscountlist: \"/salediscountlist\",\r\n  voucherdiscountlist: \"/voucherdiscountlist\",\r\n\r\n  producttypes: \"/producttypes\",\r\n  voucherdiscount: \"/voucherdiscount\",\r\n  salediscount: \"/salediscount\",\r\n  priceupdate: \"/priceupdate\",\r\n  priceupload: \"/price_upload\",\r\n  productAttributes: \"/product_attributes\",\r\n  diamondDetails: \"/diamond_details\",\r\n  gemstoneDetails: \"/gemstone-details\",\r\n  variants: \"/variants\",\r\n  images: \"/images\",\r\n  createVariant: \"/create_variant\",\r\n  materiallistpage: \"/newmaterial\",\r\n  editCategory: \"/editcategory\",\r\n  vendorPrice: \"/vendorpricesetup\",\r\n  markupPrice: \"/markuppricesetup\",\r\n  taxsetup: \"/taxsetup\",\r\n  editdiscount: \"/salediscount/:id\",\r\n  editvoucher: \"/voucherdiscount/:id\",\r\n  masterstyles: \"/masterstyles\",\r\n  masterthemes: \"/masterthemes\",\r\n  masteroccassions: \"/masteroccassions\",\r\n  masterpaymentstatus: \"/paymentstatus\",\r\n  mastercollections: \"/collections\",\r\n  masterdesigns: \"/designs\",\r\n  masterorderstatus: \"/orderstatus\",\r\n  shippingzones: \"/zones\",\r\n  shipmentsettings: \"/shipmensettings\",\r\n  shippingattributes: \"/shippingattributes\",\r\n  masterdiamonds: \"/diamonds\",\r\n  diamondsettings: \"/diamondsettings\",\r\n  diamondshapes: \"/diamondshapes\",\r\n  earringbacking: \"/earringbacking\",\r\n  addshippingattributes: \"/addshippingattributes\",\r\n  addtaxattributes: \"/addtaxattributes\",\r\n  userconfiguration: \"/userconfiguration\",\r\n  masterroles: \"/masterroles\",\r\n  manageadminusers: \"/manageadminusers\",\r\n  goldpriceupdate: \"/goldpriceupdate\",\r\n\r\n  manageusers: \"/manageusers\",\r\n\r\n  masterpages: \"/masterpages\",\r\n\r\n  gemsettings: \"/gemstonesettings\",\r\n  gemshapes: \"/gemstoneshapes\",\r\n  gemtypes: \"/gemstonetypes\",\r\n  gender: \"/genders\",\r\n  seo: \"/seopriority\",\r\n  taxsettings: \"/taxsettings\",\r\n  masterattributes: \"/masterattributes\",\r\n  mastercountries: \"/countries\",\r\n  dailyMetalRate: \"/daily_metal_rate\",\r\n\r\n  masterstones: \"/masterstones\",\r\n  masterstonecolors: \"/masterstonecolors\",\r\n  masterstoneshapes: \"/masterstoneshapes\",\r\n  weights: \"/weights\",\r\n  customerdetails: \"/customerdetails/:id\",\r\n\r\n  category: \"/categories\",\r\n\r\n  warehouse: \"/warehouse\",\r\n  holiday_manager: \"/holiday-manager\",\r\n  inventory: \"/inventory\",\r\n\r\n  silverbanner: \"/silverbanner\",\r\n  silverlistingbanner: \"/listingPage\",\r\n  FeaturedProduct: \"/featuredproduct\",\r\n\r\n  Comments: \"/comments\",\r\n  Newarrival: \"/newarrival\",\r\n  Manageappoinment: \"/manageappoinment\",\r\n  Manageshedule: \"/manageshedule\",\r\n  abandoned_cart: \"/cart-details\",\r\n  pricelogs: \"/price-logs\",\r\n  imageUpload:\"/imageUpload\",\r\n\r\n  cmsComponents:\"/cmsComponent\"\r\n};\r\n\r\nexport default route;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n     \r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      [theme.breakpoints.down('md')]: {\r\n        flex: \"1 0 auto\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        outline: 0,\r\n        zIndex: 1200,\r\n        position: \"fixed\",\r\n        overflowY: \"auto\",\r\n        flexDirection: \"column\",\r\n       \r\n      },\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    profile: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      minHeight: 'fit-content'\r\n    },\r\n    avatar: {\r\n      width: 60,\r\n      height: 60\r\n    },\r\n    name: {\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n  }));","import Collapse from \"@material-ui/core/Collapse\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { Link as RouterLink, withRouter } from \"react-router-dom\";\r\nimport { GlobalContext, ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport data from \"../menupages.json\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction SideBar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const { isreload, setIsreload } = React.useState(false);\r\n  let accesspages = localStorage.getItem(\"accesspages\");\r\n\r\n  const handleDrawer = () => {\r\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\r\n  };\r\n  const handleClick = (type) => (e) => {\r\n    if (\r\n      type === \"Pricing\" ||\r\n      type == \"Inventory & Shipping Setup\" ||\r\n      type == \"Appoinment Management\" ||\r\n      type === \"Orders\"\r\n    ) {\r\n      setGlobalCtx({\r\n        ...globalCtx,\r\n        optionname: type,\r\n        selectedIndex: 5,\r\n        isExpand: !globalCtx.isExpand,\r\n      });\r\n    } else {\r\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\r\n    }\r\n  };\r\n  async function getmasterpages() {\r\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\r\n    let pages = [];\r\n    let pagepermissions = [];\r\n\r\n    pageaccess.pages.forEach((element) => {\r\n      pages.push(element.pageurl);\r\n      if (element.is_write) {\r\n        pagepermissions.push(element.pageurl);\r\n      }\r\n    });\r\n    // setPages(pageaccess)\r\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\r\n    //setIsreload(true)\r\n\r\n    localStorage.setItem(\"accesspages\", pages);\r\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\r\n\r\n    window.location.reload();\r\n  }\r\n  React.useEffect(() => {\r\n    //alert(globalCtx.accesspages)\r\n    if (!accesspages) {\r\n      // getmasterpages()\r\n    } else {\r\n      //  setIsreload(true)\r\n    }\r\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\r\n\r\n    console.log(\"pagess\", globalCtx);\r\n  }, []);\r\n  function handleListItemClick(event, index) {\r\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\r\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\r\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\r\n          }),\r\n        }}\r\n        open={globalCtx.sideBarOpen}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawer}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <List>\r\n          {data.menus.map((menuobj, index) => (\r\n            <React.Fragment key={index}>\r\n              {menuobj.submenu ? (\r\n                <>\r\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\r\n                    <>\r\n                      <ListItem button onClick={handleClick(menuobj.name)}>\r\n                        <ListItemIcon>\r\n                          {/* <InboxIcon /> */}\r\n                          <img\r\n                            style={{ width: \"18px\" }}\r\n                            src={menuobj.icon}\r\n                            alt=\"NAC Console\"\r\n                          ></img>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={menuobj.name} />\r\n\r\n                        {globalCtx.isExpand &&\r\n                        globalCtx.optionname === menuobj.name ? (\r\n                          <ExpandLess />\r\n                        ) : (\r\n                          <ExpandMore />\r\n                        )}\r\n                      </ListItem>\r\n                      <Collapse\r\n                        in={\r\n                          globalCtx.isExpand &&\r\n                          globalCtx.optionname === menuobj.name\r\n                        }\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                      >\r\n                        <List component=\"div\" disablePadding>\r\n                          {menuobj.submenu.map((submenuobj, subindex) => (\r\n                            <React.Fragment key={subindex}>\r\n                              {accesspages &&\r\n                              accesspages.indexOf(submenuobj.url) > -1 ? (\r\n                                <Link\r\n                                  underline=\"none\"\r\n                                  component={RouterLink}\r\n                                  to={submenuobj.url}\r\n                                >\r\n                                  <ListItem\r\n                                    button\r\n                                    className={classes.nested}\r\n                                    selected={\r\n                                      globalCtx.selectedIndex === subindex\r\n                                    }\r\n                                    onClick={(event) =>\r\n                                      handleListItemClick(event, subindex)\r\n                                    }\r\n                                  >\r\n                                    <ListItemIcon>\r\n                                      <img\r\n                                        style={{ width: \"18px\" }}\r\n                                        src={submenuobj.icons}\r\n                                        alt=\"NAC Console\"\r\n                                      ></img>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={submenuobj.name} />\r\n                                  </ListItem>\r\n                                </Link>\r\n                              ) : null}\r\n                            </React.Fragment>\r\n                          ))}\r\n                        </List>\r\n                      </Collapse>{\" \"}\r\n                    </>\r\n                  ) : null}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {\" \"}\r\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\r\n                    <Link\r\n                      underline=\"none\"\r\n                      component={RouterLink}\r\n                      to={menuobj.url}\r\n                    >\r\n                      <ListItem\r\n                        button\r\n                        key={\"Product List\"}\r\n                        selected={globalCtx.optionname === menuobj.name}\r\n                        onClick={handleClick(menuobj.name)}\r\n                      >\r\n                        <ListItemIcon>\r\n                          <img\r\n                            style={{ width: \"18px\" }}\r\n                            src={menuobj.icon}\r\n                            alt=\"NAC Icon\"\r\n                          ></img>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={menuobj.name} />\r\n                      </ListItem>\r\n                    </Link>\r\n                  ) : null}{\" \"}\r\n                </>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\r\n\r\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Product List\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <ListItem button  onClick={handleClick('Pricing')}>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Pricing\" />\r\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\r\n\r\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\r\n  <ListItemIcon>\r\n    <StarBorder />\r\n  </ListItemIcon>\r\n  <ListItemText primary=\"Gold Price Setup\" />\r\n</ListItem>\r\n</Link>\r\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Vendor Price Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Selling Price Markup Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Discount Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Price Run\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\r\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"User List\" />\r\n      </ListItem> \r\n      </Link>\r\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\r\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Vendorlist\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\r\n\r\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Order List\"} />\r\n            </ListItem>\r\n            </Link>\r\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\r\n\r\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Configuration\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\r\n\r\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\r\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n                  <ListItemText primary={\"Vouchers\"} />\r\n                </ListItem>\r\n                </Link>\r\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\r\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"User and Roles Management\" />\r\n      </ListItem> \r\n      </Link> */}\r\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sales Discount\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Voucher Discount\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(SideBar);\r\n","import { makeStyles, fade } from '@material-ui/core/styles';\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      color: 'red',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      [theme.breakpoints.down('md')]: {\r\n        marginLeft: \"0px\",\r\n        width:\"100%\"\r\n      },\r\n    },\r\n \r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      width:\"100%\",\r\n      overflow:\"auto\",\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));","import { CssBaseline } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../context\";\r\nimport SideBar from \"../SideBar\";\r\nimport \"./style.css\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction PAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  function handleProfileMenuOpen(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleMobileMenuClose() {\r\n    setMobileMoreAnchorEl(null);\r\n  }\r\n\r\n  function handleMenuClose() {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  }\r\n  function handlelogout() {\r\n    localStorage.removeItem(\"accesstoken\");\r\n    window.location = \"/\";\r\n  }\r\n\r\n  function handleDrawer() {\r\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\r\n  }\r\n\r\n  function handleMobileMenuOpen(event) {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem> */}\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem> */}\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: globalCtx.sideBarOpen,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            className=\"hide\"\r\n            edge=\"start\"\r\n            className={classes.hide}\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: globalCtx.sideBarOpen,\r\n            })}\r\n            onClick={handleDrawer}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography style={{ color: \"#fff\" }} variant=\"h4\" noWrap>\r\n            NAC jewellery\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </>\r\n  );\r\n}\r\n\r\nconst PrimaryAppBar = withRouter(PAppBar);\r\n\r\nconst MainWrapper = (props) => {\r\n  const classes = useStyles();\r\n  let { component: Component, ...rest } = props;\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      <Component {...rest} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport const withAppBar = (component, props) => {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <PrimaryAppBar {...props} />\r\n      <SideBar {...props} />\r\n      <MainWrapper component={component} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrimaryAppBar;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport route from \"./route\";\r\nimport { withAppBar } from \"../components/PrimaryAppBar\";\r\n\r\nconst PrivateRoute = (props) => {\r\n  const { component, ...rest } = props;\r\n\r\n  const checkAuth = () => {\r\n    let accesstoken = localStorage.getItem(\"accesstoken\");\r\n    if (accesstoken) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const Component = (props) => withAppBar(component, props);\r\n  return checkAuth() ? (\r\n    rest.path === \"/\" || rest.path === \"/login\" ? (\r\n      <Redirect to={route.productlist} />\r\n    ) : (\r\n      <Component {...rest} />\r\n    )\r\n  ) : (\r\n    <Redirect to={route.login} />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import ApolloClient from \"apollo-boost\";\r\nimport React from \"react\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport FeaturedProduct from \"../components/FeaturedProduct/FeaturedProduct.js\";\r\nimport Newarrival from \"../components/Newarrival/NewArrival\";\r\nimport Review from \"../components/Review/Review\";\r\nimport { GlobalContext } from \"../context\";\r\nimport { NetworkProvider } from \"../context/NetworkContext\";\r\nimport { ProductContext } from \"../context/ProductuploadContext\";\r\nimport {\r\n  Addshippingattributes,\r\n  Addtaxattributes,\r\n  CategoryList,\r\n  Configuration,\r\n  Customerdetails,\r\n  Dashboard,\r\n  DiscountList,\r\n  Earringbacking,\r\n  Goldpriceupdate,\r\n  HolidayManager,\r\n  Inventory,\r\n  Login,\r\n  Manageadminusers,\r\n  Manageappoinment,\r\n  ManageShedule,\r\n  Manageusers,\r\n  Markupprice,\r\n  Masterattribute,\r\n  Mastercategories,\r\n  Mastercollections,\r\n  Masterdesigns,\r\n  Masterdiamonds,\r\n  Masterdiamondsettings,\r\n  Masterdiamondshapes,\r\n  Mastergemsettings,\r\n  Mastergemshapes,\r\n  Mastergemtypes,\r\n  Mastergenders,\r\n  Mastermetalcolors,\r\n  Masteroccassions,\r\n  Masterorderstatus,\r\n  Masterpaymentstatus,\r\n  Masterproducttypes,\r\n  Masterpurities,\r\n  Masterroles,\r\n  Masterscreens,\r\n  Masterstonecolors,\r\n  Masterstones,\r\n  Masterstoneshapes,\r\n  Masterstyles,\r\n  Masterthemes,\r\n  Masterweights,\r\n  Materialmaster,\r\n  OrderList,\r\n  OrderManagementDetails,\r\n  Priceupdate,\r\n  Productlist,\r\n  Productupload,\r\n  Salediscount,\r\n  Seopriority,\r\n  Shipmentsettings,\r\n  Shippingattributes,\r\n  Shippingzones,\r\n  Taxsettings,\r\n  Taxsetup,\r\n  Useraddresses,\r\n  Userconfiguration,\r\n  Userwishlist,\r\n  Vendorlist,\r\n  Vendorprice,\r\n  Voucherdiscount,\r\n  VoucherdiscountListing,\r\n  Warehouse,\r\n  AbandonedCart,\r\n  PriceUpload,\r\n  MasterCountry,\r\n  DailyMetalRate,\r\n  PriceLogs,\r\n  ImageUpload,\r\n  AppointmentManagementDetails,\r\n  CmsComponent\r\n} from \"../screens\";\r\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\r\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\r\nimport cmshome from \"../screens/cms/cmshome\";\r\nimport Silverbanner from \"../screens/cms/silverbanner/silverbanner\";\r\nimport SilverListingbanner from \"../screens/cms/silverbanner/silverListingBanner/silverListingBanner\";\r\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\r\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport route from \"./route\";\r\n\r\nconst MainApp = () => {\r\n  const { globalCtx } = React.useContext(GlobalContext);\r\n  const { productCtx } = React.useContext(ProductContext);\r\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      {/* <ProductProvider > */}\r\n      <NetworkProvider>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Login} />\r\n          <Route path={route.login} component={Login} />\r\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\r\n          <PrivateRoute path={route.productupload} component={Productupload} />\r\n          <PrivateRoute path={route.configuration} component={Configuration} />\r\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\r\n          <PrivateRoute path={route.productlist} component={Productlist} />\r\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\r\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\r\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\r\n          <PrivateRoute path={route.cmshome} component={cmshome} />\r\n          <PrivateRoute\r\n            path={route.producttypes}\r\n            component={Masterproducttypes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.Manageappoinment}\r\n            component={Manageappoinment}\r\n          />\r\n          <PrivateRoute\r\n            path={route.voucherdiscount}\r\n            component={Voucherdiscount}\r\n          />\r\n          <PrivateRoute path={route.pricelogs} component={PriceLogs} />\r\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\r\n          <PrivateRoute path={route.orderlist} component={OrderList} />\r\n          <PrivateRoute path={route.userorders} component={OrderList} />\r\n          <PrivateRoute path={route.address} component={Useraddresses} />\r\n          <PrivateRoute path={route.imageUpload} component={ImageUpload} />\r\n\r\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\r\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\r\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\r\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\r\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\r\n          <PrivateRoute path={route.category} component={Mastercategories} />\r\n          <PrivateRoute\r\n            path={route.masterattributes}\r\n            component={Masterattribute}\r\n          />\r\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\r\n          <PrivateRoute\r\n            path={route.masterstonecolors}\r\n            component={Masterstonecolors}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterstoneshapes}\r\n            component={Masterstoneshapes}\r\n          />\r\n          <PrivateRoute path={route.weights} component={Masterweights} />\r\n          <PrivateRoute\r\n            path={route.masteroccassions}\r\n            component={Masteroccassions}\r\n          />\r\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\r\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\r\n          <PrivateRoute\r\n            path={route.manageadminusers}\r\n            component={Manageadminusers}\r\n          />\r\n          <PrivateRoute\r\n            path={route.goldpriceupdate}\r\n            component={Goldpriceupdate}\r\n          />\r\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\r\n          <PrivateRoute\r\n            path={route.customerdetails}\r\n            component={Customerdetails}\r\n          />\r\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\r\n          <PrivateRoute\r\n            path={route.orderdetails}\r\n            component={OrderManagementDetails}\r\n          />\r\n\r\n         <PrivateRoute\r\n            path={route.appointmentdetails}\r\n            component={AppointmentManagementDetails}\r\n          />\r\n\r\n          <PrivateRoute\r\n            path={route.userconfiguration}\r\n            component={Userconfiguration}\r\n          />\r\n\r\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\r\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\r\n\r\n          <PrivateRoute\r\n            path={route.mastermaterial}\r\n            component={Materialmaster}\r\n          />\r\n          <PrivateRoute\r\n            path={route.mastercolors}\r\n            component={Mastermetalcolors}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterpurities}\r\n            component={Masterpurities}\r\n          />\r\n          <PrivateRoute\r\n            path={route.salediscountlist}\r\n            component={DiscountList}\r\n          />\r\n          <PrivateRoute\r\n            path={route.voucherdiscountlist}\r\n            component={VoucherdiscountListing}\r\n          />\r\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\r\n          <PrivateRoute\r\n            path={route.mastercollections}\r\n            component={Mastercollections}\r\n          />\r\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\r\n          <PrivateRoute\r\n            path={route.masterdiamonds}\r\n            component={Masterdiamonds}\r\n          />\r\n          <PrivateRoute\r\n            path={route.diamondsettings}\r\n            component={Masterdiamondsettings}\r\n          />\r\n          <PrivateRoute\r\n            path={route.diamondshapes}\r\n            component={Masterdiamondshapes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.earringbacking}\r\n            component={Earringbacking}\r\n          />\r\n          <PrivateRoute\r\n            path={route.gemsettings}\r\n            component={Mastergemsettings}\r\n          />\r\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\r\n          <PrivateRoute\r\n            path={route.masterpaymentstatus}\r\n            component={Masterpaymentstatus}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterorderstatus}\r\n            component={Masterorderstatus}\r\n          />\r\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\r\n          <PrivateRoute\r\n            path={route.shippingattributes}\r\n            component={Shippingattributes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.addshippingattributes}\r\n            component={Addshippingattributes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.addtaxattributes}\r\n            component={Addtaxattributes}\r\n          />\r\n\r\n          <PrivateRoute path={route.gender} component={Mastergenders} />\r\n          <PrivateRoute path={route.seo} component={Seopriority} />\r\n\r\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path={route.editdiscount}\r\n            component={Salediscount}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path={`${route.productAttributes}/:id`}\r\n            component={ProductAttributes}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path={`${route.createVariant}`}\r\n            component={CreateVariant}\r\n          />\r\n          <PrivateRoute\r\n            path={route.shipmentsettings}\r\n            component={Shipmentsettings}\r\n          />\r\n          <PrivateRoute\r\n            path={route.holiday_manager}\r\n            component={HolidayManager}\r\n          />\r\n          <PrivateRoute path={route.warehouse} component={Warehouse} />\r\n          <PrivateRoute path={route.inventory} component={Inventory} />\r\n          <PrivateRoute path={route.silverbanner} component={Silverbanner} />\r\n          <PrivateRoute path={route.Manageshedule} component={ManageShedule} />\r\n          <PrivateRoute\r\n            path={route.silverlistingbanner}\r\n            component={SilverListingbanner}\r\n          />\r\n          <PrivateRoute\r\n            path={route.FeaturedProduct}\r\n            component={FeaturedProduct}\r\n          />\r\n          <PrivateRoute path={route.Comments} component={Review} />\r\n          <PrivateRoute path={route.Newarrival} component={Newarrival} />\r\n          <PrivateRoute path={route.abandoned_cart} component={AbandonedCart} />\r\n          <PrivateRoute path={route.priceupload} component={PriceUpload} />\r\n          <PrivateRoute\r\n            path={route.mastercountries}\r\n            component={MasterCountry}\r\n          />\r\n          <PrivateRoute\r\n            path={route.dailyMetalRate}\r\n            component={DailyMetalRate}\r\n          />\r\n          <PrivateRoute\r\n            path={route.cmsComponents}\r\n            component={CmsComponent}\r\n          />\r\n        </Switch>\r\n      </NetworkProvider>\r\n      {/* </ProductProvider> */}\r\n    </ApolloProvider>\r\n  );\r\n};\r\n\r\nexport default MainApp;\r\n","import React from \"react\";\r\nimport { Alerts as Alert } from \"./components\";\r\nimport { AlertProps, AlertContext } from \"./context\";\r\n\r\nclass AppAlert extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      severity: AlertProps.severity.success,\r\n      msg: \"\",\r\n      vertical: AlertProps.vertical.top,\r\n      horizontal: AlertProps.horizontal.center,\r\n    };\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({\r\n      open: false,\r\n      severity: AlertProps.severity.success,\r\n      msg: \"\",\r\n      vertical: AlertProps.vertical.top,\r\n      horizontal: AlertProps.horizontal.center,\r\n    });\r\n  };\r\n\r\n  set = (props) => {\r\n    this.setState({ ...props });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AlertContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          onclose: this.close,\r\n          setSnack: this.set,\r\n        }}\r\n      >\r\n        {this.state.open ? <Alert {...this.state} onclose={this.close} /> : \"\"}\r\n        {this.props.children}\r\n      </AlertContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppAlert;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport MainApp from \"./routes\";\r\nimport { GlobalProvider } from \"./context\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport AppAlert from \"./App.Alert\";\r\n\r\nimport {\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// const theme = createMuiTheme({\r\n//   typography: {\r\n//     fontFamily: [\r\n\r\n//       'Roboto'\r\n\r\n//     ].join(','),\r\n//   },\r\n// });\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <CssBaseline />\r\n          <Router >\r\n            <AppAlert>\r\n              <MainApp />\r\n            </AppAlert>\r\n          </Router>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}