{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","config.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","components/Vendors/Vendors.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/ProducttypeList/components/Header/Header.js","screens/ProducttypeList/components/Results/Results.js","screens/ProducttypeList/Producttypecontent.js","screens/ProducttypeList/ProducttypeList.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/Header/Header.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","materiallist","producttypes","voucherdiscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","theme","root","card","breakpoints","values","md","maxWidth","display","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","LoginForm","className","classes","_useState","useState","isValid","touched","errors","_useState2","slicedToArray","formState","setFormState","useEffect","handleChange","event","persist","objectSpread2","target","name","type","checked","value","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","arguments","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","onSubmit","error","fullWidth","email","label","onChange","password","Button","size","CardMedia","src","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","React","Component","withRouter","Dashboard_","Container","component","Input_Input","Dashboard","API_URL","GRAPHQL_DEV_CLIENT","globalCtxInitial","globalCtx","auth","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","createContext","GlobalProvider","Consumer","_React$useState","_React$useState2","Provider","productuploadCtxInitial","productCtx","product_categoy","steps","product_type","productname","material","product_type_shortcode","category","metalColour","metalpurities","selectedgender","selected_metal_colour","gender","product_gender","vendorcode","productseries","sizes","selected_sizes","metal","materials","gemstontypes","gemstonshapes","product_code","gemstonelist","diamondlist","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesettings","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondsettings","diamondshape","diamondcount","diamondweight","metalindex","themes","prod_styles","occassions","collections","stonecount","stonecolour","product_images","metalcolour","metal_purity","metalpurity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","metals","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mapper","mappertype","keys","length","ProductProvider","console","info","data","materialCtxInitial","materialCtx","materialMaster","setMaterialCtx","MaterialContext","log","JSON","stringify","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","alert","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","& > * + *","marginLeft","dateField","& + &","AddressForm","_React$useContext","useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","id","test","Autocomplete","defaultValue","options","map","option","renderTags","getTagProps","index","Chip","renderInput","params","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","shortCode","push","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","alias","earringbacking","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingLeft","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","autoComplete","styles","occasions","stones","gemstonecolor","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","diamondclarities","diamondcolors","diamondshapes","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","PRODUCTCATEGORY","gql","_templateObject","PRODUCTLIST","_templateObject2","PRODUCTLISTSTATUSEDIT","_templateObject3","PRODUCTDIAMONDTYPES","PRODUCTEDIT","queries_templateObject","MATERIALMASTER","queries_templateObject2","productCategory","query","response","allMasterProductCategories","nodes","_","allMasterProductTypes","allMasterMaterials","allMasterGenders","allMasterVendors","allMasterDiamondsSettings","allMasterDiamondsShapes","allMasterThemes","themeName","allMasterStyles","styleName","allMasterOccasions","occassionName","allMasterCollections","collectionName","allMasterStonesColors","stonecolor","allMasterStones","allMasterMetalsColors","productColor","allMasterMetalsPurities","purity","allMasterDiamondsColors","allMasterDiamondClarities","allProductLists","productSeries","allMasterGemstonesTypes","allMasterGemstonesShapes","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","apidata","vendors","product_categories","product_types","initialNetworkCtx","networkCtx","status","called","loading","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","url","method","headers","resdata","token","_args","undefined","Content-Type","localStorage","getItem","window","location","fetch","body","isString","sent","json","statusText","abrupt","_x2","_x3","NetworkContext","NetworkProvider","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_React$useState3","_React$useState4","_React$useState5","_React$useState6","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","Access-Control-Allow-Origin","image_url","axios","put","file","forEach","element","unshift","direction","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","error_content","keyvalue","formdata","progress","_useQuery","useQuery","CircularProgress","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","columns","format","toFixed","useStyles1","flexShrink","secondary","TablePaginationActions","page","rowsPerPage","onChangePage","IconButton","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","useStyles2","tableWrapper","overflowX","AddContact","setPage","setRowsPerPage","emptyRows","min","contactlist","stickyHeader","column","slice","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Vendorlist","Vendors_AddContact","withApollo","history","useHistory","pageCount","setPageCount","_React$useState7","_React$useState8","offsetValue","setOffsetValue","_productItemStatusChange","isactive","refetch","variables","productId","isActive","client","mutate","mutation","then","res","catch","react_components_esm","onCompleted","totalCount","Veiw","Offset","productName","productType","Switch","productItemStatusChange","Productlist","text-align","Product","Header","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","success","contrastText","main","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","border","defaultProps","filterButton","inner","actions","Results","orders","_useState3","_useState4","_useState5","_useState6","order","Create_default","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","action","Producttypecontent","ProducttypeList_components_Header_Header","ProducttypeList_components_Results_Results","ProducttypeList","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","floor","random","toUpperCase","cursor","metaloption","primary","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchername","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","discounttype","setDiscounttype","_useState11","_useState12","minreq","setMinreq","_useState13","_useState14","_useState15","_useState16","isonce","setIsonce","_useState17","_useState18","_useState19","Date","_useState20","selectedDate","handleDateChange","handleonceperorder","multiline","rows","categories","CardActionArea","DateTimePicker","inputVariant","minDate","strictCompareDates","handleminreq","tabs","VoucherComponent","selectedtab","setSelectedtab","Tabs","scrollButtons","tab","Tab","selected","components_CategoryComponents_CategoryComponents","tabname","CategoryComponents","setSelected","aboutvoucher","Voucherdiscountcontent","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherContext_VoucherProvider","updatestatus","setUpdatestatus","formData","setFormData","hangeoptionchange","handleuploadstatus","_callee2","_context2","message","sku_size","PriceupdateContent","masters","setMasters","setSizes","_getsizes","getsizes","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate","grow","menuButton","search","fade","&:hover","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","outline","overflowY","minHeight","_clsx2","_React$useContext2","handleListItemClick","Drawer","open","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","disablePadding","StarBorder_default","PrimaryAppBar","_React$createElement","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","Alert","elevation","DiamondDetails","setOpen","severity","snackMessage","setSnackMessage","handleClose","reason","_React$useState9","_React$useState10","btnEdit","setBtnEdit","_React$useState11","edit","_React$useState12","diamondEditObject","setDiamondEditObject","diamond","Snackbar","autoHideDuration","DiamondDetails_Alert","diamondType","diamondColour","diamondSettings","diamondShape","esm_Input_Input","stoneWeight","stoneCount","bodydata","diamondListData","DiamondSave","Save_default","diamondData","parse","filter","settingData","shapeData","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","_GemstoneSave","list_data","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneType","GemstoneSave","gemstoneData","Variants","checkedA","checkedB","handleChangeswitch","generatedSku","metalColor","skuWeight","skuSize","vendorDeliveryTime","isReadyToShip","isdefault","skulistdata","handleinputChange","Skupricesync","req_product_id","costPrice","costPriceTax","sellingPrice","sellingPriceTax","markupPrice","markupPriceTax","discountPrice","discountPriceTax","parseFloat","CancelOutlined_default","useStyle","variantFontSize","variantMarginTop","CreateVariant","prod_id","colorobj","diamond_color","variant_diamond_type","setVariant","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","productSizes","size_arr","_x5","_x6","_x7","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","changeVariant","heading","typography","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","link","textDecoration","setExpand","_useContext","create_variant","duplicate_productName","state","setstate","pathname","split","_saveProductEditItem","productEditItem","opts","fatchvalue","genders","productListByProductId","gender_arr","gender_obj","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productImagesByProductId","sizeVarient","vendorCode","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","readOnly","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","useStyless","FormPropsTextFields","borderTop","ArrowDownward_default","Popover","paddingBottom","FontWeight","Select","notchedOutline","labelId","noValidate","conatainerRow","maxHeight","gridColumnGap","gridTemplateColumns","Columns","listOfValue","setColumns","fontWeight","conatiner","head","Checkbox","stateChange","resetButton","columnclose","SortHeader","xl","lassName","protein1","protein2","descendingComparator","b","orderBy","headCells","numeric","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","indeterminate","headCell","sortDirection","TableSortLabel","active","property","visuallyHidden","useToolbarStyles","highlight","lighten","light","dark","EnhancedTableToolbar","Tooltip","clip","EnhancedTable","setOrder","setOrderBy","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","aria-labelledby","newSelecteds","n","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","withStyles","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","react_router","exact","path","routes_PrivateRoute","newmaterial","black","warning","blueGrey","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c998cb1d.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    materiallist: '/material',\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory'\n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    width: theme.breakpoints.values.md,\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\n\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  \n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    // const errors = validate(formState.values, schema);\n\n    // setFormState(formState => ({\n    //   ...formState,\n    //   isValid: errors ? false : true,\n    //   errors: errors || {}\n    // }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // dispatch(login());\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Sign in\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        Sign in on the internal platform\n        </Typography>\n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Sign in\n          </Button>\n        </form>\n       \n      </CardContent>\n      <CardMedia\n        className={classes.media}\n        title=\"Cover\"\n\n      >\n             <div className={classes.person}>\n                <img src=\"/images/shape1.png\"\n                 />\n              </div> \n        {/* <Typography\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n            Hella narvwhal Cosby sweater McSweeney's, salvia kitsch before they\n            sold out High Life.\n        </Typography>\n        <div className={classes.person}>\n        \n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src=\"/images/avatar_2.png\"\n            backgroundImage=\"/images/blob-shape.svg\"\n          />\n          <div>\n            <Typography\n              color=\"inherit\"\n              variant=\"body1\"\n            >\n                Ekaterina Tankova\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"body2\"\n            >\n                Manager at inVision\n            </Typography>\n          </div>\n        </div> */}\n      </CardMedia>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\nexport const API_URL = \"https://api-staging.stylori.com\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\"\n// export const GRAPHQL_DEV_CLIENT = \"http://192.168.1.105:8000/graphql\"\n// export const API_URL = \"http://192.168.1.105:8000\"","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        product_gender:\"\",\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n         editleadtime: \"\",\n         editreadytoship:false,\n         editisdefault: false,\n         editisactive: false,\n\n\n         editcostprice: 0,\n         editsellingprice:0,\n         editmarkupprice: 0,\n         editdiscountprice: 0,\n         editcostpricetax: 0,\n         editsellingpricetax:0,\n         editmarkuppricetax: 0,\n         editdiscountpricetax: 0,\n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\"\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const handleChange = event => {\n    \n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={handleChange} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['Rings','Bangles'].includes(productCtx.product_type) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTLIST = gql`\nquery MyQuery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName\n      productType\n      productId\n      isactive\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\nconst PRODUCTDIAMONDTYPES = `\nquery MyQuery {\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    vendorCode\n    gender\n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId {\n      nodes {\n        id\n        imagePosition\n        imageUrl\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        markupPriceTax\n        sellingPrice\n        sellingPriceTax\n        isReadyToShip\n        isActive\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n\n\nexport const MATERIALMASTER = gql`query {\n        allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\n\nexport const materialMaster = {\n    query: MATERIALMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        \n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials\n        }\n    }\n\n\n}","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'token'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n        else window.location = '/'\n    }\n    const response = await fetch(url, {\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    })\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    }\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour.name)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"_\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleNext = () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n     console.log(\"><><><><><\")\n     alert(JSON.stringify(formdata))\n      sendNetworkRequest('/productupload', {}, formdata)\n     }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    \n    <Grid item xs={12} sm={12}  >\n\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities']\n  const master_options_url = ['material','producttypes', 'Materials','Metal Colours','Metal Purities']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Vendor Name', minWidth: 200 },\n  { id: 'SKU', label: 'Vendor Code', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendors from '../../components/Vendors'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport const Vendorlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Vendor\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Vendors contactlist={[\n        {\n            \"name\":\"NAC1\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Vendorlist;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 200 },\n  { id: 'SKU', label: 'SKU', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'Action',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n          <Query\n              query={PRODUCTLIST}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allProductLists.nodes.map((row, index) => (\n                                  <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.productName}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.productType}</TableCell>\n                                  <TableCell align=\"center\">\n                                  <Button onClick={(e) => ProductEdit(row.productId)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                  <Switch\n                                    checked={row.isactive}\n                                    onChange={()=>{\n                                      productItemStatusChange(row.productId,row.isactive,refetch );\n                                    }}\n                                    value=\"checkedA\"\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                  />\n                                  </TableCell>\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>data:{data}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Category\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Producttypecontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const ProducttypeList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default ProducttypeList;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleInputChange('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={vouchercode}\n                       value={vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                      //  onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        {props.categories.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: discounttype === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography className={discounttype === option ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>  \n              </div> \n                         \n            \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}\n        </Grid>\n         {discounttype === 'Free Shipping' || discounttype === \"\" ? null :  \n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          />\n        </Grid>\n}\n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Active Date\n            </Typography>\n          </Grid>\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <DateTimePicker\n        label=\"Start Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        minDate={new Date()}    \n        onChange={handleDateChange}\n      />\n      </Grid>\n              <Grid  item xs={6} sm={6} spacing={1}>\n              <DateTimePicker\n        label=\"End Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        minDate={selectedDate}\n        strictCompareDates={true}\n        onChange={handleDateChange}\n      />\n      </Grid>\n          </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: isonce\n            })}\n            onClick={event => handleonceperorder(event, isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea>\n          </Grid>\n         \n          <Grid item xs={12} sm={12} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        \n        </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n        {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n          \n          <Grid  item xs={3} sm={3} spacing={1}>\n          \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: minreq === option\n            })}\n            onClick={event => handleminreq(event, option)}\n\n            key={option}\n          >\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                className={minreq === option ? classes.selectedtext : null}\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          </Grid>\n        ))}\n        </Grid>\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {minreq === 'None' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label={minreq === 'Minimum Order Value' ? 'Minimun Order' : 'Minimum Quantity'}\n          />\n        }\n        </Grid>\n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n         \n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Purity', label: 'Purity' },\n  { value: 'Availability', label: 'Availability' },\n  { value: 'Styles', label: 'Styles' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleTabsChange = (event, value) => {\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Tabs\n        className={classes.tabs}\n        scrollButtons=\"auto\"\n        value={selectedtab}\n        onChange={handleTabsChange}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            selected\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <div className={classes.content}>\n    \n     <CategoryComponents  tabname={selectedtab}  materials={['Gold', 'Diamond']} />\n     {/* <CategoryComponents  tabname={selectedtab}  materials={['Rings', 'Bracelets']} /> */}\n    \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Voucherdiscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <VoucherComponent className={classes.aboutvoucher} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const hangeoptionchange = type => (event, option) => {\n      setFormData({...formData,[type]: option})\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={3}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.vendorcode}\n              getOptionLabel={option => option.name}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.category}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.product_type}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('product_type')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.metalpurity}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('metalpurity')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Purity\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n\n       \n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.diamondtypes}\n              getOptionLabel={option => option.label}\n              onChange={hangeoptionchange('diamondtypes')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Diamond Colour\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n       \n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.sizes}\n              getOptionLabel={option => option.sku_size}\n              onChange={hangeoptionchange('sizes')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Sizes\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.gemstontypes}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('gemstontypes')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Gemstone Type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={['Diamond','Gemstone','Gold','Making Charge','price update']}\n              onChange={hangeoptionchange('pricingcomponent')}\n\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Price Component\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid>\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    \n    getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} sizes={sizes} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  function handleClick() {\n      \n      setGlobalCtx({ ...globalCtx, isExpand: !globalCtx.isExpand })\n\n  }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n       <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Discounts\" />\n        {globalCtx.isExpand ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography  variant=\"h6\" noWrap>\n            NAC Jewellers\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        return true;\n    }\n\n    const Component = props => withAppBar(component, props);\n\n    return checkAuth() ? <Component {...rest} /> : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond', minWidth: 50 },\n  { id: 'Colour', label: 'Colour', minWidth: 50 },\n  { id: 'Clarity', label: 'Clarity', minWidth: 50 },\n  { id: 'Setting', label: 'Setting', minWidth: 200 },\n  { id: 'Shape', label: 'Shape', minWidth: 200 },\n  { id: 'Weight', label: 'Weight', minWidth: 50 },\n  { id: 'Number', label: 'Number', minWidth: 50 },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n  }\n  function DiamondSave(id){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(productCtx.diamondsettings && productCtx.diamondshape && productCtx.diamondcount && productCtx.diamondweight){\n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(id===diamondListData.id){\n          diamondListData.diamondSettings=productCtx.diamondsettings.name;\n          diamondListData.diamondShape = productCtx.diamondshape.name;\n          diamondListData.stoneCount = productCtx.diamondcount;\n          diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata['diamondSettings'] = productCtx.diamondsettings.name\n          bodydata['diamondShape'] = productCtx.diamondshape.name\n          bodydata['stoneCount'] = productCtx.diamondcount;\n          bodydata['stoneWeight'] = productCtx.diamondweight;\n          bodydata['diamondid'] = id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n      console.log(\"------******\")\n      console.log(JSON.stringify(bodydata))\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      // setSnackMessage({\n      //   ...snackMessage,\n      //   message:\"This is successfully saved\",\n      //   severity:\"success\"\n      // })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n              </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type', minWidth: 100 },\n  { id: 'Shape', label: 'Shape', minWidth: 200 },\n  { id: 'Setting', label: 'Setting', minWidth: 200 },\n  { id: 'Size', label: 'Size', minWidth: 100 },\n  { id: 'Weight', label: 'Weight', minWidth: 100 },\n  { id: 'Number', label: 'Number', minWidth: 100 },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n  }\n async function GemstoneSave(id) {\n    if (productCtx.gemstonesettings && productCtx.gemstoneshape && productCtx.gemstonecount && productCtx.gemstoneweight && productCtx.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = productCtx.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = productCtx.gemstoneshape.name;\n          gemstoneListData.stoneCount = productCtx.gemstonecount;\n          gemstoneListData.stoneWeight = productCtx.gemstoneweight;\n          gemstoneListData.gemstoneSize = productCtx.gemstonesize;\n          bodydata['gemstoneSetting'] = productCtx.gemstonesettings.name\n          bodydata['gemstoneShape'] = productCtx.gemstoneshape.name\n          bodydata['stoneCount'] = productCtx.gemstonecount;\n          bodydata['gemstoneSize'] = productCtx.gemstonesize;\n          bodydata['stoneWeight'] = productCtx.gemstoneweight;\n          bodydata['id'] = id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Diamond Type', label: 'Diamond Type' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.metalColor}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell>\n                \n                  {btnEdit.action && btnEdit.id == row.generatedSku ? <TableCell component=\"th\" scope=\"row\"> <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.vendorDeliveryTime}\n            </TableCell> } \n                  <TableCell component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={(btnEdit.action && btnEdit.id == row.generatedSku) ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        onChange={handleChangeswitch('editreadytoship')}\n                        disabled={!(btnEdit.action && btnEdit.id == row.generatedSku)}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={(btnEdit.action && btnEdit.id == row.generatedSku) ? productCtx.editisdefault : row.isdefault}\n                        disabled={!(btnEdit.action && btnEdit.id == row.generatedSku)}\n                        onChange={handleChangeswitch('editisdefault')}\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell>\n                {\n                  // btnEdit.action && btnEdit.id == row.id ?\n                  //   <TableCell align=\"center\">\n                  //     <Button onClick={(e) => DiamondEdit(row.id)}><SaveIcon />\n                  //     </Button>\n                  //   </TableCell> :\n                    <TableCell align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                        disabled={!(btnEdit.action && btnEdit.id == row.generatedSku)}\n                     checked={(btnEdit.action && btnEdit.id == row.generatedSku) ? productCtx.editisactive : row.isActive}\n                        disabled={!(btnEdit.action && btnEdit.id == row.generatedSku)}\n                        onChange={handleChangeswitch('editisactive')}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell>\n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU', minWidth: 100 },\n  { id: 'Cost Price', label: 'Cost Price', minWidth: 100 },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax', minWidth: 100 },\n\n  { id: 'Selling Price', label: 'Selling Price', minWidth: 200 },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax', minWidth: 200 },\n  { id: 'Markup Price', label: 'Markup Price', minWidth: 100 },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax', minWidth: 100 },\n  { id: 'Discount Price', label: 'Discount Price', minWidth: 100 },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax', minWidth: 100 },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function Skupricesync(diamondData) {\n  \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n\n    var bodydata = {}\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.costPrice = productCtx.editcostprice;\n          skulistdata.costPriceTax = productCtx.editcostpricetax;\n          skulistdata.sellingPrice =  productCtx.editsellingprice;\n          skulistdata.sellingPriceTax = productCtx.editsellingpricetax\n          skulistdata.markupPrice = productCtx.editmarkupprice\n          skulistdata.markupPriceTax = productCtx.editmarkuppricetax\n          skulistdata.discountPrice = productCtx.editdiscountprice\n          skulistdata.discountPriceTax = productCtx.editdiscountpricetax\n\n           bodydata['costPrice'] = parseFloat(productCtx.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(productCtx.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(productCtx.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(productCtx.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(productCtx.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(productCtx.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(productCtx.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(productCtx.editdiscountpricetax)\n           bodydata['generatedSku'] = id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n\n      sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  \n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.generatedSku ? <TableCell component=\"th\" scope=\"row\">\n                <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                </TableCell> :\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.costPrice}\n                </TableCell>}\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <TableCell component=\"th\" scope=\"row\">\n                <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n              </TableCell> :\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.costPriceTax}\n                </TableCell>}\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <TableCell component=\"th\" scope=\"row\">\n                <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n              </TableCell> : <TableCell component=\"th\" scope=\"row\">\n                {row.sellingPrice}\n                </TableCell>}\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <TableCell component=\"th\" scope=\"row\">\n                <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n              </TableCell> : <TableCell component=\"th\" scope=\"row\">\n                {row.sellingPriceTax}\n                </TableCell>}\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <TableCell component=\"th\" scope=\"row\">\n                <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n              </TableCell> : <TableCell component=\"th\" scope=\"row\">\n                {row.markupPrice}\n                </TableCell>}\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <TableCell component=\"th\" scope=\"row\">\n                <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n              </TableCell> : <TableCell component=\"th\" scope=\"row\">\n                {row.markupPriceTax}\n                </TableCell>}\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <TableCell component=\"th\" scope=\"row\">\n                <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n              </TableCell> : <TableCell component=\"th\" scope=\"row\">\n                {row.discountPrice}\n                </TableCell> }\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <TableCell component=\"th\" scope=\"row\">\n                <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n              </TableCell> : <TableCell component=\"th\" scope=\"row\">\n                {row.discountPriceTax}\n                </TableCell>}\n                \n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run\n                      </Button>\n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    \n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.productMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.label\n            }\n            diamondtype_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n        console.log(JSON.stringify(createVariant))\n        alert(JSON.stringify(createVariant))\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n            alert(JSON.stringify(createVariant))\n            // fetch(`${API_URL}/getproductvarient`, params)\n            // .then(res=>res.json())\n            //   .then(function (response) {\n            //     console.log(response,'saveCreateVariant');\n            //     // createVariants = [...createVariants,...response];\n            //     editVariants = [...editVariants,...response.newskus];\n            //     variants = [...variants,...response.newskus];\n            //     setProductCtx({\n            //         ...productCtx,\n            //         editVariants,\n            //         variants,\n            //         productImages,\n            //         createVariantList:createVariants\n            //     })\n            //     setVariant({\n            //         ...variant,\n            //         metal_color: [],\n            //         metal_purity: [],\n            //         variant_diamond_type:[],\n            //         product_images: {},\n            //         size: []\n            //     })\n            //     props.changeVariant();\n            //   })\n            //   .catch(function (error) {\n            //     console.log(error);\n            //   });\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor} disabled={colors.indexOf(option.productColor) > -1} {...getTagProps({ index })}   />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.name}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.productSizes}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button>\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport Skupricing from './Skupricing';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n  \n  const handleChange = panel => (event, isExpanded) => {\n    createVariant()\n    setExpand(isExpanded ? true : false);\n    \n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  const handleoptionChange = type => (event, value) => {\n      setProductCtx({ ...productCtx, [type]: value})\n}\n\nconst handleinputChange =type => e => {\n  const re = /^[a-zA-Z \\b]+$/;\n  if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value})\n  }\n}\n// const handleinputChange = type => (event, value) => {\n//   alert(event.target.value)\n//       setProductCtx({ ...productCtx, [type]: value})\n// }\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    //setstate({ ...state, create_variant: true })\n  }\nasync function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions : productCtx.occassions,\n      collections : productCtx.collections,\n      stonecount : productCtx.stonecount,\n      stonecolour : productCtx.stonecolour,\n      gender : productCtx.product_gender\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    }\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(productEditItem))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData\n    }\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        var genders = fatchvalue.data.productListByProductId.gender\n        genders = genders.split(',')\n        let gender_arr = []\n        genders.forEach(element => {\n          let gender_obj = {\n            label: element\n          }\n          gender_arr.push(gender_obj)\n        });\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: fatchvalue.data.productListByProductId.sizeVarient,\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\n          product_gender:gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\n          // productDiamondClarity:diamondClaritySku,\n        })\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n      <Grid container>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n          <Grid item container spacing={1} >\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\n              \n              \n              <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    pattern=\"[a-zA-Z]*\"\n                    value={productCtx.productname}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Product Name\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_categoy}\n                  id=\"product_category\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                  name=\"product_category\"\n                  label=\"Product Category\"\n  \n                />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_type}\n                  id=\"product_type\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  name=\"product_type\"\n                  label=\"Product Type\"\n  \n                />\n                  <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Vendor Name\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.vendorcode}\n                        id=\"productvendorcode\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        name=\"Vendor Name\"\n                        />\n  \n                 <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"seo_text\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"seo_text\"\n                  label=\"Minimum Order Quantity\"\n  \n                /> \n               <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"url\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"url\"\n                  label=\"Maximum Order Quantity\"\n                /> \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={[{label: \"Silver\",name:\"Silver\"},{label: \"Gold\",name:\"Gold\"}]}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n                 <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalColor}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalPurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Purity\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.product_gender}\n                      getOptionLabel={option => option.label}\n                      onChange={handleoptionChange('product_gender')}\n                      options={productCtx.masterData.gender}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Gender\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.themes}\n                      options={productCtx.masterData.themes}\n                      value={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Themes\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.prod_styles}\n                      options={productCtx.masterData.styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      value={productCtx.prod_styles}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Styles\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.occassions}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.occassions}\n                      options={productCtx.masterData.occasions}\n                      onChange={handleoptionChange('occassions')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Occasions\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.collections}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.collections}\n                      options={productCtx.masterData.collections}\n                      onChange={handleoptionChange('collections')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Collections\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecount}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecount}\n                      options={productCtx.masterData.stones}\n                      onChange={handleoptionChange('stonecount')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"No of Stones\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecolour}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecolour}\n                      options={productCtx.masterData.gemstonecolor}\n                      onChange={handleoptionChange('stonecolour')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Stone Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              \n              \n              \n              \n              <Grid item container style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\"\n            }}>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Save\n             </Button>\n                <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button>\n              </Grid>\n            </Grid>\n              \n              </Grid>\n             \n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n                \n              </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n              <DiamondDetails diamond={productCtx.diamondlist} />\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\n\n              <Grid style={{\n                \n              }}>\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n               \n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\n                    <ExpansionPanelSummary\n                      expandIcon={<AddIcon />}\n                      aria-controls=\"panel1c-content\"\n                      id=\"panel1c-header\"\n                    >\n                      <div className={classes.column}>\n                        <Typography className={classes.heading}>Add New variant</Typography>\n                      </div>\n                    \n                    </ExpansionPanelSummary>\n                    <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \n                    </ExpansionPanelDetails>\n                    <Divider />\n                    {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n                    </ExpansionPanel>\n                    \n                \n                </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Table  </Grid>\n\n              <Variants variants={productCtx.variants} />\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Pricing Table  \n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run For This Product\n                      </Button></Grid>\n\n              <Skupricing variants={productCtx.variants} />\n\n            </Grid>\n            \n          </Grid>\n        </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport {BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration,Priceupdate, Vendorlist, Productlist, Materiallist, CategoryList, ProducttypeList, Voucherdiscount } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext,ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute  path={route.materiallistpage} component={newmaterial}/>\n                    <PrivateRoute  path={route.producttypes} component={ProducttypeList} />\n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute  path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />  \n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />            \n          </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}