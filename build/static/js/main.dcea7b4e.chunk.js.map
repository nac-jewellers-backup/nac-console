{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","context/GlobalContext.js","config.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","components/Vendors/Vendors.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/ProducttypeList/components/Header/Header.js","screens/ProducttypeList/components/Results/Results.js","screens/ProducttypeList/Producttypecontent.js","screens/ProducttypeList/ProducttypeList.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","utils/commonmethod.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/Voucherdiscount.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","routes/index.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","materiallist","producttypes","voucherdiscount","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","theme","root","card","breakpoints","values","md","maxWidth","display","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","LoginForm","className","classes","_useState","useState","isValid","touched","errors","_useState2","slicedToArray","formState","setFormState","useEffect","handleChange","event","persist","objectSpread","target","name","type","checked","value","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","arguments","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","onSubmit","error","fullWidth","email","label","onChange","password","Button","size","CardMedia","src","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","React","Component","withRouter","Dashboard_","Container","component","Input_Input","Dashboard","globalCtxInitial","globalCtx","auth","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","createContext","GlobalProvider","Consumer","_React$useState","_React$useState2","Provider","productuploadCtxInitial","productCtx","product_categoy","steps","product_type","productname","material","product_type_shortcode","category","metalColour","metalpurities","selectedgender","selected_metal_colour","gender","vendorcode","productseries","sizes","selected_sizes","metal","materials","gemstontypes","gemstonshapes","product_code","gemstonelist","diamondlist","gemstonetype","gemstoneshape","gemstonesetings","gemstonesize","gemstonecount","gemstoneweight","stonetype","diamondclarity","diamondcolor","diamondsettings","diamondshape","diamondcount","diamondweight","metalindex","themes","prod_styles","occassions","collections","stonecount","stonecolour","product_images","metalcolour","metal_purity","metalpurity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","metals","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mapper","mappertype","keys","length","ProductProvider","console","info","data","materialCtxInitial","materialCtx","materialMaster","setMaterialCtx","MaterialContext","log","JSON","stringify","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","alert","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","& > * + *","marginLeft","dateField","& + &","AddressForm","_React$useContext","useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","id","Autocomplete","defaultValue","options","map","option","renderTags","getTagProps","index","Chip","renderInput","params","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","_objectSpread8","minvalue","maxvalue","default_size","shortCode","i","push","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","earringbacking","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingLeft","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","autoComplete","styles","occasions","stones","gemstonecolor","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","gemstonesettings","handleClick","metalsarr","stonedetails","isvalid","diamondclarities","diamondcolors","diamondshapes","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","PRODUCTCATEGORY","gql","_templateObject","queries_templateObject","MATERIALMASTER","_templateObject2","productCategory","query","response","allMasterProductCategories","nodes","_","allMasterProductTypes","allMasterMaterials","allMasterGenders","allMasterVendors","allMasterDiamondsSettings","allMasterDiamondsShapes","allMasterThemes","allMasterStyles","allMasterOccasions","allMasterCollections","allMasterStonesColors","allMasterStones","allMasterMetalsColors","allMasterMetalsPurities","allMasterDiamondsColors","allMasterDiamondClarities","allProductLists","productSeries","allMasterGemstonesTypes","allMasterGemstonesShapes","alias","allMasterGemstonesSettings","allMasterEarringBackings","apidata","initialNetworkCtx","networkCtx","status","called","loading","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","url","method","headers","resdata","token","_args","undefined","Content-Type","localStorage","getItem","window","location","fetch","body","isString","sent","json","statusText","abrupt","_x2","_x3","NetworkContext","NetworkProvider","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","img","objectFit","setMetalcolour","_React$useState3","_React$useState4","files","setFiles","uploadimagetoserver","_x4","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","filepath","Access-Control-Allow-Origin","axios","put","file","image_url","forEach","element","unshift","direction","imageindex","react_filepond","labelIdle","allowMultiple","maxFiles","onupdatefiles","fileItem","onaddfile","onremovefile","source","server","load","then","res","blob","fileItems","removedfile","removefiles","Plot","createPlotlyComponent","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","error_content","keyvalue","formdata","progress","_useQuery","useQuery","CircularProgress","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","columns","format","toFixed","useStyles1","flexShrink","secondary","TablePaginationActions","page","rowsPerPage","onChangePage","IconButton","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","useStyles2","tableWrapper","overflowX","AddContact","setPage","setRowsPerPage","emptyRows","min","contactlist","stickyHeader","column","slice","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Vendorlist","Productlist","text-align","Product_AddContact","Header","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","success","contrastText","main","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","border","defaultProps","filterButton","inner","actions","Results","orders","_useState3","_useState4","_useState5","_useState6","order","Create_default","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","action","Producttypecontent","ProducttypeList_components_Header_Header","ProducttypeList_components_Results_Results","ProducttypeList","cursor","metaloption","primary","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","discounttype","setDiscounttype","minreq","setMinreq","_useState7","_useState8","usagelimit","setUsagelimit","_useState9","_useState10","isonce","setIsonce","_useState11","_useState12","selected","_useState13","Date","_useState14","selectedDate","handleDateChange","handleusagelimit","handleminreq","handleonceperorder","generateCoupon","result","characters","charactersLength","floor","random","toUpperCase","makeid","categories","CardActionArea","DateTimePicker","inputVariant","tabs","VoucherComponent","selectedtab","setSelectedtab","Tabs","scrollButtons","tab","Tab","components_CategoryComponents_CategoryComponents","tabname","CategoryComponents","setSelected","aboutvoucher","Voucherdiscountcontent","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherContext_VoucherProvider","grow","menuButton","search","fade","&:hover","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","minHeight","_clsx2","_React$useContext2","handleListItemClick","Drawer","open","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","disablePadding","StarBorder_default","PrimaryAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","MainApp","client","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","react_router","exact","path","routes_PrivateRoute","black","dark","light","warning","blueGrey","link","default","typography","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dcea7b4e.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    materiallist: '/material',\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount'\n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    width: theme.breakpoints.values.md,\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\n\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  \n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    // const errors = validate(formState.values, schema);\n\n    // setFormState(formState => ({\n    //   ...formState,\n    //   isValid: errors ? false : true,\n    //   errors: errors || {}\n    // }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // dispatch(login());\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Sign in\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        Sign in on the internal platform\n        </Typography>\n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Sign in\n          </Button>\n        </form>\n       \n      </CardContent>\n      <CardMedia\n        className={classes.media}\n        title=\"Cover\"\n\n      >\n             <div className={classes.person}>\n                <img src=\"/images/shape1.png\"\n                 />\n              </div> \n        {/* <Typography\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n            Hella narvwhal Cosby sweater McSweeney's, salvia kitsch before they\n            sold out High Life.\n        </Typography>\n        <div className={classes.person}>\n        \n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src=\"/images/avatar_2.png\"\n            backgroundImage=\"/images/blob-shape.svg\"\n          />\n          <div>\n            <Typography\n              color=\"inherit\"\n              variant=\"body1\"\n            >\n                Ekaterina Tankova\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"body2\"\n            >\n                Manager at inVision\n            </Typography>\n          </div>\n        </div> */}\n      </CardMedia>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\nexport const API_URL = \"https://api.stylori.net\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api.stylori.net/graphql\"\n\n// export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8000\"","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {\n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        gemstonelist:[],\n        diamondlist:[],\n\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesetings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\"\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const handleChange = event => {\n    \n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 25\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 23\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    \n    \n  return (\n    <>\n    <div>\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={handleTextChange('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={handleChange} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    \n                  \n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && productCtx.product_type.shortCode  === 'R' && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['Rings','Bangles'].includes(productCtx.product_type) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr })\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    setProductCtx({ ...productCtx, \n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:null,\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n          \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export {\n    PRODUCTCATEGORY\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n\n\nexport const MATERIALMASTER = gql`query {\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\n\nexport const materialMaster = {\n    query: MATERIALMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        return {\n            materials\n        }\n    }\n\n\n}","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'token'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = true) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n        else window.location = '/'\n    }\n    const response = await fetch(url, {\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    })\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    }\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour.name)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n\n    })\n    setMetalcolour(metalcolour)\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n  let prodimages = productCtx.product_images;\n   \n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n    let imagename = (prodid+\"_\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename })\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    // Put the fileType in the headers for the upload\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    await axios.put(signedRequest, bodaydata.file, options)\n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/staging-assets.stylori.com/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/staging-assets.stylori.com/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n    setFiles([])\n  }\n\n  \n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {/* {row.url} */}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={1}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))}\n            <Grid xs={3} item>\n              <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={1}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleNext = () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = element+'_metal_weight'\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    if((!productCtx.collections || productCtx.collections.length === 0 ))\n    {\n      isvalid = false\n      error_content['collections'] = \"Error messsage\" \n    }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n     console.log(\"><><><><><\")\n     console.log(JSON.stringify(formdata))\n      sendNetworkRequest('/productupload', {}, formdata)\n     }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    \n    <Grid item xs={12} sm={12}  >\n\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\nProduct Added Successfully                </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Place order' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities']\n  const master_options_url = ['material','producttypes', 'Materials','Metal Colours','Metal Purities']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Vendor Name', minWidth: 200 },\n  { id: 'SKU', label: 'Vendor Code', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendors from '../../components/Vendors'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport const Vendorlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Vendor\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Vendors contactlist={[\n        {\n            \"name\":\"NAC1\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Vendorlist;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 200 },\n  { id: 'SKU', label: 'SKU', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product contactlist={[\n        {\n            \"name\":\"NAC\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Category\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Producttypecontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const ProducttypeList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default ProducttypeList;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n\n      <Grid   item xs={10} sm={10} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />\n      </Grid>\n\n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n\n          \n\n        </Grid>\n        \n       \n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n       Voucher Applicable For\n        </Typography>\n      </Grid>\n      <Grid container  item xs={12} sm={12} spacing={1}>\n\n        {['All','Material','Diamond','Gemstone','Making Charge'].map(option => (\n          \n          \n          <div\n            className={clsx(classes.metaloption, {\n              [classes.selectedOption]: minreq === option\n            })}\n            onClick={event => handleminreq(event, option)}\n\n            key={option}\n          >\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            <div className={classes.optionmaterialDetails}>\n              <Typography\n                gutterBottom\n                className={minreq === option ? classes.selectedtext : null}\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          \n        ))}\n        </Grid>\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        {props.categories.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: discounttype === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography className={discounttype === option ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>  \n              </div> \n                         \n            \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}\n        </Grid>\n       \n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          />\n        </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: isonce\n            })}\n            onClick={event => handleonceperorder(event, isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea>\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n        {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n          \n          <Grid  item xs={3} sm={3} spacing={1}>\n          \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: minreq === option\n            })}\n            onClick={event => handleminreq(event, option)}\n\n            key={option}\n          >\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                className={minreq === option ? classes.selectedtext : null}\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          </Grid>\n        ))}\n        </Grid>\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {minreq === 'None' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label={minreq === 'Minimum Order Value' ? 'Minimun Order' : 'Minimum Quantity'}\n          />\n        }\n        </Grid>\n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid>\n\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid>\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Active Date\n            </Typography>\n          </Grid>\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <DateTimePicker\n        label=\"Start Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n      \n        onChange={handleDateChange}\n      />\n      </Grid>\n              <Grid  item xs={6} sm={6} spacing={1}>\n              <DateTimePicker\n        label=\"End Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        onChange={handleDateChange}\n      />\n      </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","export const makeid = (length => {\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result.toUpperCase();\n});","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Purity', label: 'Purity' },\n  { value: 'Availability', label: 'Availability' },\n  { value: 'Styles', label: 'Styles' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleTabsChange = (event, value) => {\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Tabs\n        className={classes.tabs}\n        scrollButtons=\"auto\"\n        value={selectedtab}\n        onChange={handleTabsChange}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            selected\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <div className={classes.content}>\n    \n     <CategoryComponents  tabname={selectedtab}  materials={['Gold', 'Diamond']} />\n        \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Voucherdiscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <VoucherComponent className={classes.aboutvoucher} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  function handleClick() {\n      \n      setGlobalCtx({ ...globalCtx, isExpand: !globalCtx.isExpand })\n\n  }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n       <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Discounts\" />\n        {globalCtx.isExpand ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            // className={classes.menuButton}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography  variant=\"h6\" noWrap>\n            NAC Jewellers\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        return true;\n    }\n\n    const Component = props => withAppBar(component, props);\n\n    return checkAuth() ? <Component {...rest} /> : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\n\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration, Vendorlist, Productlist, Materiallist, CategoryList, ProducttypeList, Voucherdiscount } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\n\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            <NetworkProvider>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.producttypes} component={ProducttypeList} />\n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n\n          </Switch>\n            </NetworkProvider>\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}