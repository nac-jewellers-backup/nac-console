{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","context/AlertContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","components/ProductFilter/ProductFilter.js","components/Alert/index.js","screens/Productlist/ProductSync.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/Customerdetails.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","graphql/mutation.js","screens/HolidayManager/HolidayModal.js","screens/HolidayManager/index.js","screens/Warehouse/WarehouseModal.js","screens/Warehouse/index.js","screens/Inventory/InventoryModal.js","screens/Inventory/index.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.Alert.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","orderdetails","userorders","userwishlist","address","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","diamondsettings","diamondshapes","earringbacking","addshippingattributes","addtaxattributes","userconfiguration","masterroles","manageadminusers","goldpriceupdate","manageusers","masterpages","gemsettings","gemshapes","gemtypes","gender","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","category","warehouse","holiday_manager","inventory","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","taggedTemplateLiteral","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","_templateObject30","ALLMASTERRINGSIZE","HOLIDAYLIST","_templateObject31","WAREHOUSELIST","_templateObject32","INVENTORYLIST","_templateObject33","VALIDATEGENERATEDSKU","_templateObject34","STOCKSTATUS","_templateObject35","ORDERS","queries_templateObject","queries_templateObject2","orderid","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","URL","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","size","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","useEffect","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","AlertProps","vertical","top","bottom","horizontal","left","right","center","severity","success","warning","AlertContext","open","msg","onclose","setSnack","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","Alert_Alert","elevation","withRouter","className","classes","useContext","_React$useContext2","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","handleChange","persist","target","type","checked","handleSubmit","signinobj","pageaccess","pages","pagepermissions","statuscode","setItem","accessToken","forEach","element","push","pageurl","is_write","history","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","Snackbar","autoHideDuration","anchorOrigin","onClose","LoginForm_Alert","Login","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","initailRingSize","updateRingSize","then","res","allMasterRingsSizes","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","image_url","axios","put","file","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","border","&:hover","typography","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","placeItems","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","showproductdetails","_showproductdetails","prod_id","bodycontent","productid","filterparams","categoryname","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","Visibility_default","product_name","vendor_code","product_category","Switch","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","CustomizedBreadcrumbs","Breadcrumbs","href","ArrowBackIos_default","drawer","header","buttonIcon","contentSection","contentSectionHeader","cursor","contentSectionContent","addButton","minAmount","maxAmount","radioGroup","actions","Filter","masters","onFilter","initialValues","company","mobile","version","commodity","_useState3","_useState4","_useState5","_useState6","setValues","handleoptionchange","Drawer","anchor","Close_default","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","searchcontent","setSearchcontent","Search_default","esm_Input_Input","disableUnderline","filterButton","filterIcon","ProductFilter","dataCSV","openFilter","setOpenFilter","components_Search_Search","pathname","react_csv","keyCSV","valueCSV","textDecoration","FilterList_default","components_Filter_Filter","Alerts","components_Alert_Alert","textarea","resize","backdrop","Transition","forwardRef","ref","Slide","LinearProgressWithLabel","Box","mr","LinearProgress","Math","round","ProductSync","snack","action_type","Product_lists","new_tagno","setData","setProgress","_event$target","socketIOClient","on","completed","timeElapsed","fullScreen","TransitionComponent","close","AppBar","Toolbar","IconButton","edge","autoFocus","parse","err","startIcon","Sync_default","required","multiline","ChipInput_default","onAdd","onDelete","newChipKeyCodes","Productlist","setMasters","setFilterparams","components_ProductFilter_ProductFilter","filterobj","filtercontent","Product","Productlist_ProductSync","Header","inner","Results","CardActions","results","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","slice","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","i","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","val","enddate","strictCompareDates","VoucherComponent","_React$createElement","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","description","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","_callee4","_context4","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","anchorEl","setAnchorEl","Boolean","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","borderTop","Header_SortHeader","containergrid","columnobjs","orderdate","onupdate","_showorderdetails","orderurl","components_EnhancedTableHead_EnhancedTableHead","col","iswrite","showorderdetails","paymentmode","paymentstatus","orderstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","orderStatus","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","paymentResponse","ipgTransactionId","fail_reason","shoppingCartByCartId","cartcontent","cartAddressesByCartId","addressobj","addressline1","contactNumber","firstname","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","join","userProfileByUserprofileId","usercontent","firstName","useraddressess","userAddressesByUserProfileId","useraddressobj","giftwrapsByCartId","gift","getmaster","_getmaster","opts","fatchvalue","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","data_filter","filter","match","username","OrderList_components_Results_Results","showcolumns","OrderList","user_id","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","positivebtn","closeButton","other","disableTypography","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","handleinputChange","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","readOnly","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","handleDelete","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","black","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","Viewsku_DialogActions","Products","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","author","applyButton","EditContent","diamond","onApply","showpreview","setShowpreview","previewurl","toggleChecked","imageurl","previmagenames","previmages","moment","foldername","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","alt","src","small","oninit","imagecontainer","masterlist","setMasterlist","openedit","setOpenedit","aliasName","setaliasName","onCreate","Array","prototype","insert","setpreviewurl","_React$useState33","_React$useState34","_React$useState35","_React$useState36","toLowerCase","button_title","sort_id","filterOrder","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","toolbar","deleteButton","deleteIcon","OrderInfo","setOption","setPaymentstatus","setOrderstatus","user_profile","first_name","last_name","shopping_cart","cart_addresses","addressline2","state","country","contact_number","discounted_price","awb_number","giftwraps","payment_mode","select","OrderItems","react_perfect_scrollbar_lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","text_heading","text_content","final_total_text","OrderDetails","trans_sku_list","sku_weight","diamond_type","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","_fetchorderdetails","order_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","Materialmaster","Mastermetalcolors","Masterpurities","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings","Mastergemshapes","Mastergemtypes","Mastergenders","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Taxsettings","Attributescontent","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent_Attributescontent","AttributeComponent","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","selectedcategory","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","setFiltercontent","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","master_options","_match$params","tab","find","t","General","isemailverified","components_Label_Label","ismobileverified","borderRight","Customerdetails","setCustomer","userinfo","userprofile","components_General_General","Invoices","setInvoices","invoice","date","Userwishlist","wishlists","Userwishlist_components_Results_Results","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Addtaxattributes","AttributesComponent_AttributesComponent","CREATE_HOLIDAY","mutation_templateObject","UPDATE_HOLIDAY","mutation_templateObject2","DELETE_HOLIDAY","mutation_templateObject3","CREATE_WAREHOUSE","mutation_templateObject4","UPDATE_WAREHOUSE","mutation_templateObject5","DELETE_WAREHOUSE","mutation_templateObject6","CREATE_INVENTORY","mutation_templateObject7","UPDATE_INVENTORY","mutation_templateObject8","DELETE_INVENTORY","mutation_templateObject9","inputField","HolidayModal","holiday","editItem","DatePicker","HolidayManager","_data$allHolidayManag","_data$allHolidayManag2","_data$allHolidayManag3","_data$allHolidayManag4","first","networkStatus","setType","useApolloClient","accept","files","bodyFormData","FormData","set","post","handleUpload","htmlFor","Tooltip","CloudUpload_default","document","setAttribute","click","GetApp_default","AddCircle_default","TableContainer","NetworkStatus","colSpan","allHolidayManagers","DeleteForever_default","HolidayManager_HolidayModal","__typename","WarehouseModal","shippingInDays","Warehouse","_data$allWarehouses","_data$allWarehouses2","_data$allWarehouses3","allWarehouses","Warehouse_WarehouseModal","InventoryModal","setError","onBlur","_res$data","_res$data$allTransSku","_res$data$allTransSku2","allTransSkuLists","numberOfItems","getOptionSelected","endAdornment","iconButton","StockStatus","_item$inventoriesByWa","_item$inventoriesByWa2","_item$inventoriesByWa3","inventoriesByWarehouseId","aggregates","sum","disableRipple","setWarehouse","Store_default","Inventory","_filter","_data$allInventories","_data$allInventories2","_data$allInventories3","_data$allInventories4","setSearch","_useQuery2","includesInsensitive","startAdornment","InputAdornment","Inventory_StockStatus","allInventories","Inventory_InventoryModal","newValue","warehouseId","grow","menuButton","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","mixins","outline","minHeight","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","selected","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","EditDiamond","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","DiamondSave","_DiamondSave","diamondobj","list_data","diamondListData","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","diamondType","settingData","shapeData","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discountDesc","isReadyToShip","isdefault","skulistdata","EditPrice","pricerun","Skupricesync","_Skupricesync","productId","priceobj","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","Components_EditPrice_EditPrice","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","styleFile","wordBreak","endPoint","productimageobj","prodcolor","randomnum","fileType","handleAssetChange","ishover","aria-hidden","handlenewAssetChange","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","_productCtx$vendorcod","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","changeVariant","_saveProductEditItem","productEditItem","productName","_showpricesummary","sku","price_summary","skuprice","obj","material_name","productListByProductId","genders","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","esbody","endpoint","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_data","store_dia","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","useStyless","FormPropsTextFields","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","AppAlert","_this","call","Alert_Alerts","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","App_Alert","routes","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb090ced.chunk.js","sourcesContent":["const route = {\n  login: \"/login\",\n  dashboard: \"/dashboard\",\n  profile: \"/profile\",\n  productupload: \"/productupload\",\n  configuration: \"/Configuration\",\n  vendor: \"/vendorlist\",\n  productlist: \"/productlist\",\n  orderlist: \"/orderlist\",\n  orderdetails: \"/orderdetails/:id\",\n  userorders: \"/orderlist/:userid\",\n  userwishlist: \"/userwishlist/:userid\",\n  address: \"/address/:userid\",\n\n  materiallist: \"/material\",\n  mastermaterial: \"/materialmaster\",\n  mastercolors: \"/mastercolors\",\n  masterpurities: \"/masterpurities\",\n  salediscountlist: \"/salediscountlist\",\n  voucherdiscountlist: \"/voucherdiscountlist\",\n\n  producttypes: \"/producttypes\",\n  voucherdiscount: \"/voucherdiscount\",\n  salediscount: \"/salediscount\",\n  priceupdate: \"/priceupdate\",\n  productAttributes: \"/product_attributes\",\n  diamondDetails: \"/diamond_details\",\n  gemstoneDetails: \"/gemstone-details\",\n  variants: \"/variants\",\n  images: \"/images\",\n  createVariant: \"/create_variant\",\n  materiallistpage: \"/newmaterial\",\n  editCategory: \"/editcategory\",\n  vendorPrice: \"/vendorpricesetup\",\n  markupPrice: \"/markuppricesetup\",\n  taxsetup: \"/taxsetup\",\n  editdiscount: \"/salediscount/:id\",\n  editvoucher: \"/voucherdiscount/:id\",\n  masterstyles: \"/masterstyles\",\n  masterthemes: \"/masterthemes\",\n  masteroccassions: \"/masteroccassions\",\n  masterpaymentstatus: \"/paymentstatus\",\n  mastercollections: \"/collections\",\n  masterdesigns: \"/designs\",\n  masterorderstatus: \"/orderstatus\",\n  shippingzones: \"/zones\",\n  shipmentsettings: \"/shipmensettings\",\n  shippingattributes: \"/shippingattributes\",\n  masterdiamonds: \"/diamonds\",\n  diamondsettings: \"/diamondsettings\",\n  diamondshapes: \"/diamondshapes\",\n  earringbacking: \"/earringbacking\",\n  addshippingattributes: \"/addshippingattributes\",\n  addtaxattributes: \"/addtaxattributes\",\n  userconfiguration: \"/userconfiguration\",\n  masterroles: \"/masterroles\",\n  manageadminusers: \"/manageadminusers\",\n  goldpriceupdate: \"/goldpriceupdate\",\n\n  manageusers: \"/manageusers\",\n\n  masterpages: \"/masterpages\",\n\n  gemsettings: \"/gemstonesettings\",\n  gemshapes: \"/gemstoneshapes\",\n  gemtypes: \"/gemstonetypes\",\n  gender: \"/genders\",\n  seo: \"/seopriority\",\n  taxsettings: \"/taxsettings\",\n  masterattributes: \"/masterattributes\",\n\n  masterstones: \"/masterstones\",\n  masterstonecolors: \"/masterstonecolors\",\n  masterstoneshapes: \"/masterstoneshapes\",\n  weights: \"/weights\",\n  customerdetails: \"/customerdetails/:id\",\n\n  category: \"/categories\",\n\n  warehouse: \"/warehouse\",\n  holiday_manager: \"/holiday-manager\",\n  inventory: \"/inventory\",\n};\n\nexport default route;\n","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import { Helmet } from 'react-helmet';\nimport PropTypes from \"prop-types\";\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n\n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}\n","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from \"graphql-tag\";\n\nconst PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterGenders {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        diamondClarity\n        diamondColor\n        id\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondsShapes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterThemes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        id\n        alias\n        name\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondClarities {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterVendors {\n      nodes {\n        id\n        name\n        shortCode\n        vendorDelivaryDays\n      }\n    }\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n      nodes {\n        productSeries\n        id\n      }\n    }\n    allMasterGemstonesTypes {\n      nodes {\n        alias\n        colorCode\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterGemstonesShapes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterEarringBackings {\n      nodes {\n        name\n        createdAt\n        alias\n        id\n        nodeId\n        updatedAt\n      }\n    }\n    allMasterGemstonesSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\nconst PRODUCTFILTERMASTER = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n        displayOrder\n      }\n    }\n  }\n`;\n\nconst ALLPRODUCTLIST = gql`\n  query {\n    allProductLists(first: 500) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLIST = (category) => gql`\n  query ($Veiw: Int!, $Offset: Int!) {\n    allProductLists(first: $Veiw, offset: $Offset) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLISTS = gql`\n  query {\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\n      nodes {\n        vendorDelivaryDays\n        updatedAt\n        state\n        shortCode\n        partnerCategory\n        name\n        organization\n        gstNo\n        currency\n        createdAt\n        city\n        address\n      }\n      totalCount\n    }\n  }\n`;\n\nconst TaxList_1 = gql`\n  query {\n    allMasterTaxSettings {\n      nodes {\n        hsnNumber\n        taxName\n        taxValue\n        updatedAt\n        id\n      }\n      totalCount\n    }\n  }\n`; /*********** configuration query */\n\nconst TaxList = `\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      sgst\n      productAttributes\n      displayAttributes\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList = `\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL = `\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS = `\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      shortCode\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES = `\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER = `\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    alias\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER = `\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER = `\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER = `\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER = `\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER = `\nquery  {\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    diamondClarity\n    diamondColor\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\n\nconst PAYMENTSTATUSMASTER = `\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS = `\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES = `\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES = `\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name\n    id\n    alias\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES = `\nquery{\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPAGES = `\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst GOLDPRICESETUPMASTER = `\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING = `\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONES = `\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES = `\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES = `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`;\nconst ACTIVESHIPPINGZONES = `\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES = `\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS = `\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS = `\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES = `\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERATTRIBUTES = `\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    isTopMenu\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS = `\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES = `\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES = `\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER = `\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES = `\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      imageUrl\n        mobileImageUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        purity\n        vendorCode\n        updatedAt\n        sellingPriceType\n        sellingPrice\n        material\n        id\n        createdAt\n        costPrice\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDMARKUP = gql`\n  query MyQuery($vendorCode: String!) {\n    allPricingMarkups(\n      condition: { material: $vendorCode }\n      orderBy: UPDATED_AT_DESC\n    ) {\n      nodes {\n        updatedAt\n        sellingPriceMin\n        sellingPriceMax\n        material\n        category\n        productType\n        markupValue\n        markupType\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        costPrice\n        createdAt\n        diamondClarity\n        diamondColour\n        id\n        sellingPrice\n        sellingPriceType\n        updatedAt\n        vendorCode\n      }\n      totalCount\n    }\n  }\n`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\nconst CATGORYLIST = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        shortCode\n        id\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTTYPEMASTER = gql`\n  query {\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MATERIALMASTER = gql`\n  query {\n    allMasterMaterials {\n      nodes {\n        alias\n        name\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MASTERCOLORS = gql`\n  query {\n    allMasterMetalsColors {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst SALEDISCOUNTS = gql`\n  query {\n    allSaleDiscounts {\n      nodes {\n        id\n        discountName\n        discountType\n        discountValue\n        components\n        attributes\n        isActive\n        productAttributes\n        productAttributesText\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst VOUCHERDISCOUNTS = gql`\n  query {\n    allVouchers {\n      nodes {\n        id\n        name\n        code\n        uses\n        maxUses\n        isActive\n        voucherCodes\n        description\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst MASTERPURITIES = gql`\n  query {\n    allMasterMetalsPurities {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLIST = `\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER = `\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst MASTERCATEGORY = `\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst GEMSTONEMASTER = `\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\nconst MAKINGCHARGEPRICELIST = gql`\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\n    allMakingChargeSettings(\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\n    ) {\n      nodes {\n        weightStart\n        weightEnd\n        vendorCode\n        updatedAt\n        sellingPriceType\n        rateType\n        purity\n        priceType\n        price\n        material\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\nconst GEMPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGemstonePriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        price\n        rateType\n        priceType\n        sellingPriceType\n        vendorCode\n        weightEnd\n        weightStart\n        updatedAt\n        id\n        createdAt\n        gemstoneType\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLISTSTATUSEDIT = gql`\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\n    __typename\n    updateProductListByProductId(\n      input: {\n        productId: $productId\n        productListPatch: { isactive: $isActive }\n      }\n    ) {\n      clientMutationId\n      productList {\n        isactive\n      }\n    }\n  }\n`;\n\nconst CREATETAXSETUP = gql`\n  mutation MyMutation(\n    $id: UUID!\n    $updatedAt: Date!\n    $createdAt: Date!\n    $taxValue: Double!\n    $taxName: String!\n    $hsnNumber: String!\n  ) {\n    __typename\n    createMasterTaxSetting(\n      input: {\n        masterTaxSetting: {\n          id: $id\n          updatedAt: $updatedAt\n          createdAt: $createdAt\n          taxValue: $taxValue\n          taxName: $taxName\n          hsnNumber: $hsnNumber\n        }\n      }\n    ) {\n      clientMutationId\n    }\n  }\n`;\n\nconst VOUCHERSTATUSEDIT = gql`\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateVoucherById(\n      input: { id: $voucherId, voucherPatch: { isActive: $isActive } }\n    ) {\n      clientMutationId\n      voucher {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateSaleDiscountById(\n      input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }\n    ) {\n      clientMutationId\n      saleDiscount {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DELETEMARKUPPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deletePricingMarkupById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGOLDPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETESALEDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteSaleDiscountById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteVoucherById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEMAKINGCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGEMCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETEDIAMONDCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = gql`\n  query MyQuery($productId: String!) {\n    productListByProductId(productId: $productId) {\n      productMetalcoloursByProductId {\n        nodes {\n          productColor\n          id\n        }\n      }\n      productName\n      productType\n      vendorCode\n      gender\n      isactive\n      productMaterialsByProductSku {\n        nodes {\n          materialName\n        }\n      }\n      productDiamondsByProductSku {\n        nodes {\n          diamondClarity\n          diamondColour\n          diamondSettings\n          diamondShape\n          diamondType\n          id\n          stoneCount\n          stoneWeight\n        }\n      }\n      productGemstonesByProductSku {\n        nodes {\n          gemstoneSetting\n          gemstoneShape\n          gemstoneSize\n          gemstoneType\n          gemstonsSize\n          id\n          stoneCount\n          stoneWeight\n        }\n      }\n      productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n        nodes {\n          id\n          imagePosition\n          productId\n          imageUrl\n          ishover\n          isdefault\n          productColor\n        }\n      }\n      productPuritiesByProductId {\n        nodes {\n          purity\n          id\n        }\n      }\n      productThemesByProductId(condition: { isActive: true }) {\n        nodes {\n          themeName\n          id\n        }\n      }\n      productStonecolorsByProductId {\n        nodes {\n          id\n          stonecolor\n        }\n      }\n      productStylesByProductId(condition: { isActive: true }) {\n        nodes {\n          styleName\n          id\n        }\n      }\n      productCollectionsByProductId {\n        nodes {\n          collectionName\n          id\n        }\n      }\n      productOccassionsByProductId(condition: { isActive: true }) {\n        nodes {\n          occassionName\n          id\n        }\n      }\n      productStonecountsByProductId {\n        nodes {\n          id\n          stonecount\n        }\n      }\n      transSkuListsByProductId {\n        nodes {\n          skuSize\n          diamondType\n          metalColor\n          purity\n          productId\n          skuWeight\n          generatedSku\n          costPrice\n          costPriceTax\n          discountPrice\n          discountPriceTax\n          markupPrice\n          marginOnSalePercentage\n          markupPriceTax\n          marginOnSalePercentage\n          sellingPrice\n          discountDesc\n          sellingPriceTax\n          isReadyToShip\n          discount\n          isActive\n          isdefault\n          vendorDeliveryTime\n          id\n          isActive\n          transSkuDescriptionsBySkuId {\n            nodes {\n              skuDescription\n              certificate\n              ringsizeImage\n            }\n          }\n        }\n      }\n      productCategory\n      sizeVarient\n    }\n  }\n`;\n\nconst ALLMASTERRINGSIZE = `\n  query {\n    allMasterRingsSizes {\n      nodes {\n        gender\n        productType\n        name\n        size\n        sizeValue\n      }\n    }\n  }\n`;\n\nconst HOLIDAYLIST = gql`\n  query ($first: Int, $offset: Int, $filter: HolidayManagerFilter) {\n    allHolidayManagers(\n      first: $first\n      offset: $offset\n      filter: $filter\n      orderBy: DATE_ASC\n    ) {\n      nodes {\n        id\n        holiday\n        date\n        createdAt\n        updatedAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst WAREHOUSELIST = gql`\n  query {\n    allWarehouses(orderBy: ID_ASC) {\n      nodes {\n        id\n        name\n        shippingInDays\n        isActive\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\n\nconst INVENTORYLIST = gql`\n  query ($first: Int, $offset: Int, $filter: InventoryFilter) {\n    allInventories(first: $first, offset: $offset, filter: $filter) {\n      nodes {\n        id\n        generatedSku\n        numberOfItems\n        createdAt\n        updatedAt\n        warehouse: warehouseByWarehouseId {\n          id\n          name\n        }\n      }\n      totalCount\n    }\n  }\n`;\n\nconst VALIDATEGENERATEDSKU = gql`\n  query ($generatedSku: String!) {\n    allTransSkuLists(condition: { generatedSku: $generatedSku }) {\n      nodes {\n        id\n      }\n    }\n  }\n`;\n\nconst STOCKSTATUS = gql`\n  query {\n    allWarehouses {\n      nodes {\n        name\n        isActive\n        inventoriesByWarehouseId {\n          aggregates {\n            sum {\n              numberOfItems\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport {\n  PRODUCTCATEGORY,\n  PRODUCTLIST,\n  PRODUCTEDIT,\n  PRODUCTLISTSTATUSEDIT,\n  PRODUCTDIAMONDTYPES,\n  GOLDPRICELIST,\n  DIAMONDPRICELIST,\n  GEMPRICELIST,\n  MAKINGCHARGEPRICELIST,\n  VENDORLIST,\n  ALLPRODUCTLIST,\n  DIAMONDMARKUP,\n  PRODUCTFILTERMASTER,\n  METALMASTER,\n  GEMSTONEMASTER,\n  MASTERCATEGORY,\n  DELETEMARKUPPRICE,\n  DELETEMAKINGCHARGE,\n  DELETEGEMCHARGE,\n  DELETEGOLDPRICE,\n  DELETESALEDISCOUNT,\n  CATGORYLIST,\n  DELETEDIAMONDCHARGE,\n  VENDORLISTS,\n  TaxList,\n  PRODUCTTYPEMASTER,\n  MATERIALMASTER,\n  MASTERCOLORS,\n  MASTERPURITIES,\n  SALEDISCOUNTS,\n  VOUCHERDISCOUNTS,\n  DELETEVOUCHERDISCOUNT,\n  VOUCHERSTATUSEDIT,\n  DISCOUNTSTATUSEDIT,\n  MASTERMATERIAL,\n  MASTERMATERIALCOLORS,\n  MASTERPRODUCTPURITIES,\n  COLLECTIONMASTER,\n  DESIGNMASTER,\n  DIAMONDMASTER,\n  DIAMONDSETTINGS,\n  DIAMONDSHAPES,\n  MASTERPRODUCTTYPES,\n  MASTERGEMSETTINGS,\n  MASTERGEMSHAPES,\n  MASTERGEMTYPES,\n  MASTERGENDER,\n  SEOPRIORITIES,\n  CREATETAXSETUP,\n  TaxSettingList,\n  MASTERCATEGORIES,\n  EARRINGBACKING,\n  MASTERATTRIBUTES,\n  MASTERSTONESHAPES,\n  MASTERSTONECOLORS,\n  MASTERSTONES,\n  MASTERWEIGHTS,\n  THEMEMASTER,\n  STYLEMASTER,\n  OCCASSIONSMASTER,\n  PAYMENTSTATUSMASTER,\n  SHIPPINGZONES,\n  MASTERCOUNTRIES,\n  SHIPPINGCHARGES,\n  ACTIVESHIPPINGZONES,\n  MASTERPAGES,\n  GOLDPRICESETUPMASTER,\n  ALLMASTERRINGSIZE,\n  HOLIDAYLIST,\n  WAREHOUSELIST,\n  INVENTORYLIST,\n  VALIDATEGENERATEDSKU,\n  STOCKSTATUS,\n};\n","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export const USERORDERS = gql`query($userid: UUID!) {\n    allOrders(filter: {userProfileByUserProfileId: {id: {equalTo: $userid}}}) {\n      nodes {\n        paymentMode\n        paymentStatus\n        updatedAt\n        createdAt\n        awbNumber\n        cartId\n        orderStatus\n        comments\n        id\n        shoppingCartByCartId {\n          shoppingCartItemsByShoppingCartId {\n            nodes {\n              transSkuListByProductSku {\n                generatedSku\n                productListByProductId {\n                  productCategory\n                  productType\n                  productCollectionsByProductId {\n                    nodes {\n                      collectionName\n                    }\n                  }\n                }\n              }\n            }\n          }\n          giftwrapsByCartId {\n            nodes {\n              message\n              giftFrom\n              giftTo\n            }\n          }\n          \n          cartAddressesByCartId {\n            nodes {\n              firstname\n              contactNumber\n              addressline1\n              addressline2\n              city\n              pincode\n              state\n            }\n          }\n          userProfileByUserprofileId {\n            firstName\n            mobile\n            email\n          }\n        }\n        paymentDetailsByOrderId {\n          nodes {\n            paymentResponse\n          }\n        }\n      }\n    }\n  \n  }`\nexport const ORDERS = orderid  => gql`query {\n  allOrders(filter:  ${orderid ? `{userProfileId: {equalTo: \"${orderid}\"}}` : `{id: {isNull: false}}`},orderBy: CREATED_AT_DESC) {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n          userAddressesByUserProfileId {\n            nodes {\n              contactNumber\n            }\n          }\n          \n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`\n\nexport const VOUCHERMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      \n      \n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\n\nexport const TAXMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,USERORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._,\n        //     name: _.name,\n        //     size:_.size,\n        //     productType : _.productType ,\n        // }))\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking,\n            // metalSizeMinToMax\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const userOders = {\n    query: USERORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._\n        // }))\n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes,\n            // metalSizeMinToMax\n        }\n    }\n\n\n}","//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\nexport const BASE_URL = \"https://api-staging.nacjewellers.net\";\nexport const API_URL = \"https://api-staging.nacjewellers.net\";\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.nacjewellers.net/graphql\";\nexport const URL = \"https://api-staging.nacjewellers.net/\";\n\n// export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8080\"\n// export const BASE_URL = \"http://localhost:8000\"\n// export const URL = \"https://localhost:3000\"\n","import React from \"react\";\nimport { productCategory } from \"../services/mapper\";\nimport { API_URL } from \"../config\";\nimport { isString } from \"util\";\n\nconst TOKEN = \"accesstoken\";\n\nconst initialNetworkCtx = {\n  networkCtx: {\n    mapper: productCategory,\n    status: {\n      called: false,\n      data: [],\n      loading: true,\n      error: false,\n      parsedData: [],\n    },\n    notRequested: true,\n  },\n  setNetworkCtx: () => null,\n  sendNetworkRequest: () => null,\n};\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n  url = API_URL + url;\n  console.info(\"URL\", url, data);\n  const method = data ? \"POST\" : \"GET\",\n    headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n  let resdata = null;\n  if (auth) {\n    const token = localStorage.getItem(TOKEN);\n    if (token) headers[\"x-access-token\"] = token;\n    // else window.location = '/'\n  }\n  const response = await fetch(\n    url,\n    method === \"GET\"\n      ? { method }\n      : {\n          method,\n          body: isString(data) ? data : JSON.stringify(data),\n          headers,\n        }\n  );\n\n  if (response.status < 400) {\n    resdata = await response.json();\n  } else {\n    resdata = await response.json();\n    // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n    // {\n    //    if(!resdata.auth)\n    //    {\n    //     //alert(resdata.message)\n    //    }\n    // }else{\n    //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    // }\n  }\n  resdata[\"statuscode\"] = response.status;\n\n  return resdata;\n};\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n  const [networkCtx, setNetworkCtx] = React.useState(\n    initialNetworkCtx.networkCtx\n  );\n\n  return (\n    <NetworkContext.Provider\n      value={{ networkCtx, setNetworkCtx, sendNetworkRequest }}\n    >\n      {props.children}\n    </NetworkContext.Provider>\n  );\n};\n","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from \"react\";\n\nconst productuploadCtxInitial = {\n  productCtx: {\n    product_categoy: \"\",\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\n    product_type: \"\",\n    productname: \"\",\n    material: \"\",\n    product_type_shortcode: \"\",\n    category: [],\n    metalColour: \"\",\n    metalpurities: \"\",\n    isExpand: false,\n    selectedgender: \"\",\n    selected_metal_colour: {},\n    gender: {},\n    product_gender: [],\n    vendorcode: \"\",\n    productseries: [],\n    size: 0,\n    sizes: [],\n    selected_sizes: [],\n    metal: {\n      value: 1,\n      label: \"Diamond\",\n    },\n    materials: [\n      \"Diamond\",\n      \"Gold\",\n      \"Gemstone\",\n      \"Solitaire\",\n      \"Silver\",\n      \"Platinum\",\n    ],\n    gemstontypes: \"\",\n    gemstonshapes: \"\",\n    product_code: \"\",\n    isactive: false,\n    gemstonelist: [],\n    diamondlist: [],\n    variants: [],\n    oldproductMetalColor: [],\n    oldproductMetalPurity: [],\n    productMetalColor: [],\n    productMetalPurity: [],\n    productDiamondColor: [],\n    productDiamondClarity: [],\n    productDiamondTypes: [],\n    productImages: [],\n    productDiamondTypesArray: [],\n    oldproductDiamondTypesArray: [],\n    productmaterials: [],\n    createVariantList: [],\n    editVariants: [],\n    editDiamondLists: [],\n    editGemstoneLists: [],\n    productVariantSize: [\n      8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n    ],\n    variant_size: [],\n    gemstonetype: \"\",\n    gemstoneshape: \"\",\n    gemstonesettings: \"\",\n    gemstonesize: \"\",\n    gemstonecount: \"\",\n    gemstoneweight: \"\",\n    stonetype: \"\",\n\n    editleadtime: \"\",\n    editreadytoship: false,\n    editisdefault: false,\n    editisactive: false,\n\n    editcostprice: 0,\n    editsellingprice: 0,\n    editmarkupprice: 0,\n    editdiscountprice: 0,\n    editcostpricetax: 0,\n    editsellingpricetax: 0,\n    editmarkuppricetax: 0,\n    editdiscountpricetax: 0,\n\n    diamondclarity: \"\",\n    diamondcolor: \"\",\n    diamondsettings: \"\",\n    diamondshape: \"\",\n    diamondcount: \"\",\n    diamondweight: \"\",\n    metalindex: -1,\n    themes: [],\n    prod_styles: [],\n    occassions: [],\n    collections: [],\n    stonecount: [],\n    stonecolour: [],\n    product_images: {},\n    metalcolour: [],\n    metal_purity: [],\n    metalpurity: [],\n    metal_color: 0,\n    metal_weight: 0,\n    diamond_colour: 0,\n    diamond_clarity: 0,\n    metal_height: 0,\n    metal_width: 0,\n    metal_length: 0,\n    metal_object: 0,\n    diamondtype: 0,\n    metals: [],\n    error_message: {},\n  },\n  masterData: {},\n  setProductCtx: () => null,\n};\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n  return productuploadCtxInitial.productCtx;\n};\n\nexport const ProductProvider = (props) => {\n  console.info(\"PROPS\", props, props.value.mappertype);\n  const [productCtx, setProductCtx] = React.useState(\n    mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)\n  );\n  // on Mount get Data from storage\n  // on Unmount store data to storage\n\n  React.useEffect(() => {\n    console.info(\"productCtx s\", productCtx);\n  }, [productCtx.material]);\n\n  return (\n    <ProductContext.Provider\n      value={{\n        productCtx,\n        setProductCtx,\n        masterData: mapDataToCtx(\n          props.value.data,\n          props.value.mapper,\n          props.value.mappertype\n        ),\n      }}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n};\n","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \n    if(Object.keys(apiData).length === 0) return {};\n \n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","import React from \"react\";\nexport let AlertProps = {\n  vertical: {\n    top: \"top\",\n    bottom: \"bottom\",\n  },\n  horizontal: {\n    left: \"left\",\n    right: \"right\",\n    center: \"center\",\n  },\n  severity: {\n    success: \"success\",\n    error: \"error\",\n    warning: \"warning\",\n    info: \"info\",\n  },\n};\n\n/**\n * AlertContext store the props which are neccessary to show the Alert component,\n * which is provided at the /src/App.js using the /src/App.alert.js.\n */\nexport let AlertContext = React.createContext({\n  open: false,\n  severity: AlertProps.severity.success,\n  msg: \"\",\n  vertical: AlertProps.vertical.top,\n  horizontal: AlertProps.horizontal.center,\n  onclose: () => null,\n  setSnack: () => null,\n});\n","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { GlobalContext } from '../../../../context';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\n    let pages = [];\n    let pagepermissions = [];\n    pageaccess.pages.forEach(element => {\n      pages.push(element.pageurl)\n      // pagepermissions[element.pageurl] = {\n      //   isread : element.is_view,\n      //   iswrite : element.is_write\n      // }\n      if(element.is_write)\n      {\n        pagepermissions.push(element.pageurl)\n      }\n    });\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\n\n    localStorage.setItem('accesspages', pages);\n    localStorage.setItem('pagepermissions', pagepermissions);\n\n    \n    props.history.push('/productlist')\n\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Log in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport clsx from \"clsx\";\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext } from \"../../context\";\nimport FullLoader from \"../../components/Loader\";\nimport \"./Productupload.css\";\nimport Select from \"react-select\";\nimport \"./floating_dropdown.css\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useQuery } from \"react-apollo\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\nimport { arrayIncludes } from \"@material-ui/pickers/_helpers/utils\";\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n];\nconst useStyles = makeStyles((theme) => ({\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  dropdownlayout: {\n    \"& .menu\": {\n      position: \"Relative !important\",\n    },\n  },\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3),\n  },\n  fieldGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0),\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    \"& > * + *\": {\n      marginLeft: theme.spacing(1),\n    },\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n  dateField: {\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AddressForm(props) {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [initailRingSize, updateRingSize] = useState([]);\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  React.useEffect(async () => {\n    fetch(GRAPHQL_DEV_CLIENT, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\n    })\n      .then((res) => res.json())\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\n  }, []);\n\n  React.useEffect(() => {}, [productCtx]);\n  // const handleChange = selectedOption => {\n\n  // };\n  const handlesizeChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\n  };\n  const handlevendorChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\n  };\n\n  const changeproducttype = (type) => (event, newvalue) => {\n    setProductCtx({ ...productCtx, product_type: newvalue });\n  };\n  const handlechange = (type) => (selectedOption) => {\n    if (type === \"product_type\") {\n      if (selectedOption) {\n        var size = \"\";\n        var minvalue = 0;\n        var maxvalue = 0;\n        var selected_sizes = [];\n        var default_size = 0;\n        if (selectedOption.shortCode === \"K\") {\n          selected_sizes.push({\n            value: \"XS\",\n            label: \"XS\",\n          });\n          selected_sizes.push({\n            value: \"S\",\n            label: \"S\",\n          });\n          selected_sizes.push({\n            value: \"M\",\n            label: \"M\",\n          });\n          selected_sizes.push({\n            value: \"L\",\n            label: \"L\",\n          });\n        } else {\n          // if (\n          //   selectedOption.shortCode === \"R\" &&\n          //   productCtx.selectedgender.name === \"Male\"\n          // ) {\n          //   minvalue = 13;\n          //   maxvalue = 25;\n          //   default_size = 15;\n          // }\n          // if (\n          //   selectedOption.shortCode === \"R\" &&\n          //   productCtx.selectedgender.name === \"Female\"\n          // ) {\n          //   minvalue = 8;\n          //   maxvalue = 23;\n          //   default_size = 12;\n          // }\n          // for (var i = minvalue; i < maxvalue; i++) {\n          //   selected_sizes.push({\n          //     value: i,\n          //     label: \"\" + i,\n          //   });\n          // }\n        }\n\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: selectedOption.shortCode,\n          product_type: selectedOption,\n          size,\n          default_size,\n          selected_sizes,\n        });\n      } else {\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: \"\",\n          product_type: \"\",\n          size,\n          selected_sizes: \"\",\n        });\n      }\n    } else {\n      setProductCtx({ ...productCtx, [type]: selectedOption });\n    }\n  };\n  const handleTextChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"vendorcode\") {\n      setProductCtx({\n        ...productCtx,\n        [type]: value,\n        vendorleadtime: value.vendorDelivaryDays,\n      });\n    } else {\n      setProductCtx({ ...productCtx, [type]: value });\n    }\n  };\n\n  const switchisorderable = (event) => {\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\n  };\n\n  const purityChange = (type) => (selectedOption) => {\n    setProductCtx({ ...productCtx, [type]: selectedOption });\n  };\n\n  const handleGenderChange = (type) => (event, value) => {\n    var minvalue = 0;\n    var maxvalue = 0;\n    var selected_sizes = [];\n    var sizes = [];\n    var default_size = 0;\n    // if (productCtx.product_type.shortCode === \"K\") {\n    //   default_size = \"XS\";\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    // } else {\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\n    //   minvalue = 13;\n    //   maxvalue = 26;\n    //   default_size = \"\" + 15;\n    // }\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\n    //   minvalue = 8;\n    //   maxvalue = 24;\n    //   default_size = \"\" + 12;\n    // }\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Male\") {\n    //   minvalue = 13;\n    //   maxvalue = 26;\n    //   default_size = \"\" + 15;\n    // }\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Female\") {\n    //   minvalue = 8;\n    //   maxvalue = 24;\n    //   default_size = \"\" + 12;\n    // }\n\n    // for (var i = minvalue; i < maxvalue; i++) {\n    // selected_sizes.push(\"\" + i);\n    // sizes.push(\"\" + i);\n    // }\n\n    // if (productCtx.product_type.shortCode !== \"K\" ) {\n     \n      // updateRingSize(\n      //   initailRingSize.sort(\n      //     (a, b) => parseFloat(a.sizeValue) - parseFloat(b.sizeValue)\n      //   )\n      // );\n    \n\n    initailRingSize.forEach((e) => {\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\n        selected_sizes.push(\"\" + e.sizeValue);\n        sizes.push(\"\" + e.sizeValue);\n      }\n    });\n    // }\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n      sizes,\n      selected_sizes,\n      default_size,\n    });\n  };\n\n  const handleMaterialChange = (type) => (event, value) => {\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\n    if (value) {\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\n        if (steps.indexOf(\"Step3\") === -1) {\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n        }\n      }\n    }\n    setProductCtx({ ...productCtx, [type]: value, steps });\n  };\n\n  const handleInputChange = (type) => (e) => {\n    var size = productCtx.size;\n    var materials = productCtx.materials;\n    var selected_sizes = productCtx.selected_sizes;\n\n    if (type === \"selectedgender\") {\n      var minvalue = 0;\n      var maxvalue = 0;\n      selected_sizes = [];\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\n      //   size = \"13-25\";\n      //   minvalue = 13;\n      //   maxvalue = 26;\n      // }\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\n      //   size = \"8-18\";\n      //   minvalue = 8;\n      //   maxvalue = 19;\n      // }\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Male\") {\n      //   size = \"13-25\";\n      //   minvalue = 13;\n      //   maxvalue = 26;\n      // }\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Female\") {\n      //   size = \"8-18\";\n      //   minvalue = 8;\n      //   maxvalue = 19;\n      // }\n\n      // for (var i = minvalue; i < maxvalue; i++) {\n      //   selected_sizes.push({\n      //     value: i,\n      //     label: \"\" + i,\n      //   });\n      // }\n    }\n\n    if (type === \"product_categoy\") {\n      if (e.target.value === \"Platinum Jewellery\") {\n        materials.push(\"Platinum Jewellery\");\n        var index = materials.indexOf(\"Silver Jewellery\");\n\n        if (index >= 0) {\n          materials.splice(index, 1);\n        }\n      } else if (e.target.value === \"Silver Jewellery\") {\n        materials.push(\"Silver Jewellery\");\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\n        if (index1 >= 0) {\n          materials.splice(index1, 1);\n        }\n      } else {\n        var indexval = materials.indexOf(\"Silver Jewellery\");\n\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n        indexval = materials.indexOf(\"Platinum Jewellery\");\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n      }\n    }\n\n    setProductCtx({\n      ...productCtx,\n      size,\n      [type]: e,\n      materials,\n      selected_sizes,\n    });\n  };\n\n  const materialChange = (type) => (selectedOption) => {\n    //   let material = { ...productCtx.material, [type]: selectedOption }\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\n    //   if(material.material)\n    //   {\n    //   material.material.forEach(element => {\n    let material_names = [];\n    if (selectedOption) {\n      selectedOption.forEach((element) => {\n        material_names.push(element.name);\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\n          if (steps.indexOf(\"Step3\") === -1) {\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n          }\n        }\n      });\n    }\n    //   });\n    // }\n\n    setProductCtx({\n      ...productCtx,\n      [type]: selectedOption,\n      steps,\n      material_names,\n    });\n  };\n  const keyPress = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {/* <FullLoader /> */}\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} spacing={1}>\n            <Card {...rest} className={clsx(classes.root, className)}>\n              <CardHeader title=\"Product Information 1\" />\n              <Divider />\n              <CardContent className={classes.cardcontent}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} sm={12} spacing={1}>\n                    <Input\n                      className={classes.helperinput}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={productCtx.productname}\n                      id=\"productname\"\n                      error={productCtx.error_message.productname}\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                      name=\"productname\"\n                      label=\"Product Name\"\n                      onChange={keyPress(\"productname\")}\n                    />\n                  </Grid>\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\n                    <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange(\"product_categoy\")}\n                      options={productCtx.masterData.category.map(\n                        (option) => option.label\n                      )}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip\n                            variant=\"outlined\"\n                            label={option.label}\n                            {...getTagProps({ index })}\n                          />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Category\"\n                          margin=\"dense\"\n                          error={productCtx.error_message.product_categoy}\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} spacing={1}>\n                    <Autocomplete\n                      id=\"product_type\"\n                      className={classes.fixedTag}\n                      getOptionLabel={(option) => option.label}\n                      defaultValue={productCtx.product_type}\n                      options={productCtx.masterData.product_type}\n                      onChange={handleoptionChange(\"product_type\")}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip\n                            variant=\"outlined\"\n                            label={option.label}\n                            {...getTagProps({ index })}\n                          />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Type\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          error={productCtx.error_message.product_type}\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Product Information 2\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      {productCtx.product_type ? (\n                        <>\n                          <Grid item xs={12} sm={6}>\n                            <Autocomplete\n                              id=\"free-solo-2-demo\"\n                              multiple\n                              className={classes.fixedTag}\n                              defaultValue={productCtx.material_names}\n                              options={productCtx.masterData.material.map(\n                                (option) => option.label\n                              )}\n                              onChange={handleMaterialChange(\"material_names\")}\n                              renderTags={(value, getTagProps) =>\n                                value.map((option, index) => (\n                                  <Chip\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label={option}\n                                    {...getTagProps({ index })}\n                                  />\n                                ))\n                              }\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Select Product Materials\"\n                                  margin=\"dense\"\n                                  variant=\"outlined\"\n                                  error={\n                                    productCtx.error_message.material_names\n                                  }\n                                  fullWidth\n                                  InputProps={{\n                                    ...params.InputProps,\n                                    type: \"search\",\n                                  }}\n                                />\n                              )}\n                            />\n                          </Grid>\n                        </>\n                      ) : null}\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.selectedgender}\n                          options={productCtx.masterData.gender.map(\n                            (option) => option.label\n                          )}\n                          onChange={handleGenderChange(\"selectedgender\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Gender\"\n                              margin=\"dense\"\n                              error={productCtx.error_message.selectedgender}\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalpurity}\n                          options={productCtx.masterData.metalpurity}\n                          onChange={handleoptionChange(\"metalpurity\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Purity\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              error={productCtx.error_message.metalpurity}\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalcolour}\n                          options={productCtx.masterData.metalcolour}\n                          onChange={handleoptionChange(\"metalcolour\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Colour\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.metalcolour}\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </>\n            ) : null}\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Vendor Information\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.vendorcode}\n                          getOptionLabel={(option) => option.label}\n                          options={productCtx.masterData.vendorcode}\n                          onChange={handleoptionChange(\"vendorcode\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Vendor Code\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.vendorcode}\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Product Code\"\n                          fullWidth\n                          className={classes.helperinput}\n                          value={productCtx.productvendorcode}\n                          error={productCtx.error_message.productvendorcode}\n                          id=\"productvendorcode\"\n                          name=\"productvendorcode\"\n                          onChange={handleTextChange(\"productvendorcode\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Lead Time\"\n                          fullWidth\n                          className={classes.helperinput}\n                          error={productCtx.error_message.vendorleadtime}\n                          value={productCtx.vendorleadtime}\n                          InputLabelProps={{\n                            shrink: productCtx.vendorleadtime,\n                          }}\n                          id=\"vendorleadtime\"\n                          name=\"vendorleadtime\"\n                          onChange={handleTextChange(\"vendorleadtime\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\">\n                            IsReorderable\n                          </FormLabel>\n                          <RadioGroup\n                            aria-label=\"position\"\n                            name=\"position\"\n                            value={productCtx.isreorderable}\n                            onChange={switchisorderable}\n                            row\n                          >\n                            <FormControlLabel\n                              value=\"Yes\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"Yes\"\n                              labelPlacement=\"right\"\n                            />\n                            <FormControlLabel\n                              value=\"No\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"No\"\n                              labelPlacement=\"right\"\n                            />\n                          </RadioGroup>\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>{\" \"}\n              </>\n            ) : null}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12}>\n                {productCtx.product_type ? (\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader\n                      title=\"Default SKU For Display\n  \"\n                    />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_colour}\n                            onChange={handleoptionChange(\n                              \"default_metal_colour\"\n                            )}\n                            options={productCtx.metalcolour.map(\n                              (option) => option.label\n                            )}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Colour\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={\n                                  productCtx.error_message.default_metal_colour\n                                }\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_purity}\n                            onChange={handleoptionChange(\n                              \"default_metal_purity\"\n                            )}\n                            options={productCtx.metalpurity.map(\n                              (option) => option.label\n                            )}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Purity\"\n                                margin=\"dense\"\n                                error={\n                                  productCtx.error_message.default_metal_purity\n                                }\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>\n                ) : null}\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              (productCtx.product_type.shortCode === \"K\" ||\n                productCtx.product_type.shortCode === \"R\" ||\n                productCtx.product_type.shortCode === \"BA\") &&\n              productCtx.sizes.length > 0 ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Size Information\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            multiple\n                            freeSolo\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.selected_sizes}\n                            options={productCtx.sizes}\n                            onChange={handleoptionChange(\"selected_sizes\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Ring Sizes\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.selected_sizes}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_type\"\n                            className={classes.fixedTag}\n                            freeSolo\n                            defaultValue={productCtx.default_size}\n                            options={productCtx.selected_sizes}\n                            onChange={handleoptionChange(\"default_size\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Select Default Size\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_size}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              productCtx.product_type.alias === \"Earrings\" ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Type of Fit\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.earringbacking}\n                            options={productCtx.masterData.earringbacking.map(\n                              (option) => option.label\n                            )}\n                            onChange={handleoptionChange(\"earringbacking\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Earring Backing\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.earringbacking}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}></Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { Grid } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nimport Step4 from \"./Step4\";\nimport Step5 from \"./Step5\";\nimport Step6 from \"./Step6\";\nimport Step7 from \"./Step7\";\nimport Step8 from \"./Step8\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { ProductContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { element } from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\",\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\",\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;\n    case \"Step6\":\n      return <Step6 />;\n\n    case \"Step7\":\n      return <Step7 />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var error_content = {};\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if (activeStep === 0) {\n      if (!productCtx.product_type) {\n        isvalid = false;\n        error_content[\"product_type\"] = \"Error messsage\";\n      }\n      if (!productCtx.productname) {\n        isvalid = false;\n        error_content[\"productname\"] = \"Error messsage\";\n      }\n      if (!productCtx.product_categoy) {\n        isvalid = false;\n        error_content[\"product_categoy\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.metalcolour) {\n        isvalid = false;\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n      if (!productCtx.material_names) {\n        isvalid = false;\n        error_content[\"material_names\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalpurity\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.vendorcode) {\n        isvalid = false;\n        error_content[\"vendorcode\"] = \"Error messsage\";\n      }\n      if (!productCtx.vendorleadtime) {\n        isvalid = false;\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.default_metal_colour) {\n        isvalid = false;\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\n      }\n      if (!productCtx.default_metal_purity) {\n        isvalid = false;\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\n      }\n      if (!productCtx.productvendorcode) {\n        isvalid = false;\n        error_content[\"productvendorcode\"] = \"Error messsage\";\n      }\n      if (\n        !productCtx.earringbacking &&\n        productCtx.product_type.alias === \"Earrings\"\n      ) {\n        isvalid = false;\n        error_content[\"earringbacking\"] = \"Error messsage\";\n      }\n      if (!productCtx.selectedgender) {\n        isvalid = false;\n        error_content[\"selectedgender\"] = \"Error messsage\";\n      }\n      if (\n        (!productCtx.selected_sizes ||\n          productCtx.selected_sizes.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"selected_sizes\"] = \"Error messsage\";\n      }\n\n      if (\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"default_size\"] = \"Error messsage\";\n      }\n      // isvalid = true;\n    }\n\n    if (activeStep === 1) {\n      productCtx.metalpurity.forEach((element) => {\n        const keyvalue = element.name + \"_metal_weight\";\n\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\n          isvalid = false;\n\n          error_content[keyvalue] = \"Error messsage\";\n        }\n      });\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (productCtx.product_type_shortcode === \"R\") {\n        if (!productCtx.metal_height) {\n          isvalid = false;\n          error_content[\"metal_height\"] = \"Error messsage\";\n        }\n        if (!productCtx.metal_width) {\n          isvalid = false;\n          error_content[\"metal_width\"] = \"Error messsage\";\n        }\n      }\n\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\n        isvalid = false;\n        error_content[\"prod_styles\"] = \"Error messsage\";\n      }\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\n        isvalid = false;\n        error_content[\"occassions\"] = \"Error messsage\";\n      }\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\n      // {\n      //   isvalid = false\n      //   error_content['collections'] = \"Error messsage\"\n      // }\n\n      //  isvalid = true;\n    }\n\n    setProductCtx({ ...productCtx, error_message: error_content });\n    if (activeStep === productCtx.steps.length - 1) {\n      console.info(\"HANDLE\", sendNetworkRequest);\n      const productseries =\n        productCtx.masterData.productseries[0].productSeries;\n\n      delete productCtx[\"masterData\"];\n\n      var formdata = productCtx;\n      formdata[\"productseries\"] = productseries;\n\n      setLoading(true);\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\n      setLoading(false);\n      setSuccess(true);\n      await sleep(500);\n      window.location.replace(\"/productlist\");\n    } else {\n      if (isvalid) {\n        setActiveStep(activeStep + 1);\n      }\n    }\n\n    //else\n    //  {\n    //  }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async function sleep(millis) {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n  }\n  console.log(productCtx, \"Component Samir\");\n  return (\n    <Grid item xs={12} sm={12}>\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\n      </Snackbar>\n\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {productCtx.steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel></StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </Paper>\n\n      <React.Fragment>\n        {activeStep === productCtx.steps.length ? (\n          <React.Fragment>\n            <Typography variant=\"h5\" gutterBottom>\n              Product Added Successfully\n            </Typography>\n            <Typography variant=\"subtitle1\"></Typography>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            {getStepContent(productCtx.steps[activeStep])}\n            <div className={classes.buttons}>\n              {activeStep !== 0 && (\n                <Button onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n              )}\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === productCtx.steps.length - 1\n                  ? \"Product Upload\"\n                  : \"Next\"}\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Component from \"./Component\";\nimport { ProductProvider } from \"../../context\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./Productupload.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const Productupload = withRouter((props) => {\n  const classes = useStyles();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n});\nexport default Productupload;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from \"react\";\nimport { Form, Grid, Select } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip } from \"@material-ui/core\";\n\nconst useStyless = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\",\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange = (type) => (e) => {\n    setSearchtext(e.target.value);\n  };\n  const handlecategoryChange = (type) => (event, value) => {\n    setCategory(value.name);\n    props.applyfilter(searchtext, value.name, producttype);\n  };\n  const handletypeChange = (type) => (event, value) => {\n    setProducttype(value.name);\n    props.applyfilter(searchtext, category, value.name);\n  };\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  function applyfilter() {\n    props.applyfilter(searchtext, category, producttype);\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div\n      className=\"search\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        background: \"white\",\n        borderTop: \"1px solid #e4e4e4\",\n        borderBottom: \"1px solid #e4e4e4\",\n      }}\n    >\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          fullWidth\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.mastercategory}\n          onChange={handlecategoryChange(\"product_category\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.masterproducttype}\n          onChange={handletypeChange(\"product_type\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <TextField\n          fullWidth\n          margin=\"dense\"\n          onChange={handleinputChange(\"productname\")}\n          placeholder={\"Search by product name or product id\"}\n          onChange={handleinputChange(\"productname\")}\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Button\n          onClick={(e) => applyfilter()}\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          Search\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport VisibityIcon from \"@material-ui/icons/Visibility\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  PRODUCTLIST,\n  PRODUCTCATEGORY,\n  PRODUCTFILTERMASTER,\n  PRODUCTLISTSTATUSEDIT,\n} from \"../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nconst columns = [\n  { id: \"product_id\", label: \"product id\" },\n  { id: \"product_name\", label: \"product name\" },\n  { id: \"product_type\", label: \"product type\" },\n  { id: \"vendor_code\", label: \"vendor code\" },\n  { id: \"product_category\", label: \"product category\" },\n  { id: \"isactive\", label: \"active\" },\n  { id: \"createdAt\", label: \"Created on\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"\" : \"\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(\"updatedAt\");\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n    getproductlist(\"\", \"\", \"\", \"\", newPage);\n  }\n  useEffect(() => {\n    getproductlist(\"\", \"\", \"\", \"\", \"\", order, orderBy);\n  }, []);\n  useEffect(() => {\n    getproductlist(\n      props.filterparams.searchtext,\n      props.filterparams.categoryname,\n      props.filterparams.product_type,\n      \"\",\n      \"\",\n      order,\n      orderBy\n    );\n  }, [props.filterparams]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\", \"\", \"\", event.target.value, \"\");\n  }\n  async function showproductdetails(prod_id) {\n    let bodycontent = {\n      productid: prod_id,\n    };\n\n    let response = await sendNetworkRequest(\"/getproducturl\", {}, bodycontent);\n    console.log(response);\n    //setProductlists(response.products.rows)\n    window.open(response.url, \"_blank\");\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n    getproductlist(\"\", \"\", \"\", \"\", \"\", isAsc ? \"desc\" : \"asc\", property);\n  };\n  function searchproduct(searchtext, productcategory, producttype) {\n    let products = allproductlists.filter((l) => {\n      return (\n        l.productId.toLowerCase().match(searchtext.toLowerCase()) ||\n        l.productName.toLowerCase().match(searchtext.toLowerCase())\n      );\n    });\n    setProductlists(products);\n  }\n  async function getproductlist(\n    searchtext,\n    productcategory,\n    producttype,\n    pagesize,\n    offsetvalue,\n    sort,\n    orderby\n  ) {\n    let bodydata = {\n      size: pagesize ? pagesize : rowsPerPage,\n      offset: offsetValue,\n      searchtext: searchtext,\n      productcategory: productcategory,\n      producttype: producttype,\n      order: sort ? sort : order,\n      orderby: orderby ? orderby : orderBy,\n    };\n    let response = await sendNetworkRequest(\"/getproductlist\", {}, bodydata);\n    setProductlists(response.products.rows);\n    setPageCount(response.products.count);\n  }\n  function applyfilter(searchtext, categoryname, typename) {\n    getproductlist(searchtext, categoryname, typename);\n  }\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n  async function productItemStatusChange(id, isactive, refetch) {\n    let variables = {\n      productId: id,\n      isActive: isactive ? false : true,\n    };\n    await props.client\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n        }\n      })\n      .catch(console.error);\n  }\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n          <EnhancedTableHead\n            classes={classes}\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n          />\n          <TableBody>\n            {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n            {stableSort(productlists, getComparator(order, orderBy)).map(\n              (row, index) => (\n                <TableRow key={row.product_id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.product_id}\n                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                      <EditIcon />\n                    </Button>\n                    <Button onClick={(e) => showproductdetails(row.product_id)}>\n                      <VisibityIcon />\n                    </Button>\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    onClick={() => showproductdetails(row)}\n                  >\n                    {/* <Link variant=\"body2\">  */}\n                    {row.product_name}\n\n                    {/* </Link>   */}\n                  </TableCell>\n                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\n                  <TableCell align=\"left\">{row.product_category}</TableCell>\n\n                  <TableCell align=\"left\">\n                    {\" \"}\n                    <FormControlLabel\n                      label={row.isactive ? \"\" : \"\"}\n                      control={\n                        <Switch checked={row.isactive} value=\"checkedA\" />\n                      }\n                    />\n                  </TableCell>\n\n                  <TableCell align=\"left\">\n                    <Moment format=\"DD MMM YYYY hh:mm a\">\n                      {row.createdAt}\n                    </Moment>\n                  </TableCell>\n                </TableRow>\n              )\n            )}\n            {/* </> */}\n            {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10, 50, 100, 200, 500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n};\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React from \"react\";\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { URL } from \"../../config\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.grey[300],\n    },\n    \"&:active\": {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info(\"You clicked a breadcrumb.\");\n}\n\nexport default function CustomizedBreadcrumbs(props) {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        href={props.url ? URL + props.url : URL + \"configuration\"}\n        label={props.name ? props.name : \"Configuration\"}\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n    </Breadcrumbs>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Chip,\n  Collapse,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Slider,\n  TextField,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: 420,\n    maxWidth: '100%'\n  },\n  header: {\n    padding: theme.spacing(2, 1),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 3),\n    flexGrow: 1\n  },\n  contentSection: {\n    padding: theme.spacing(2, 0)\n  },\n  contentSectionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    cursor: 'pointer'\n  },\n  contentSectionContent: {},\n  formGroup: {\n   \n    padding: theme.spacing(2, 0)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  addButton: {\n    marginLeft: theme.spacing(1)\n  },\n  tags: {\n    marginTop: theme.spacing(1)\n  },\n  minAmount: {\n    marginRight: theme.spacing(3)\n  },\n  maxAmount: {\n    marginLeft: theme.spacing(3)\n  },\n  radioGroup: {},\n  actions: {\n    padding: theme.spacing(3),\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst Filter = props => {\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n      name: '',\n      company: '',\n      mobile: '',\n      city: '',\n      version: null,\n      commodity: []\n  };\n\n  const [expandProject, setExpandProject] = useState(true);\n  const [expandCustomer, setExpandCustomer] = useState(false);\n  const [values, setValues] = useState({ ...initialValues });\n\n  const handleClear = () => {\n    setValues({ \n      ...initialValues });\n  };\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n  const handleoptionchange = type => (event, value) => {\n    setValues(values => ({\n      ...values,\n      [type]: value\n    }));\n  }\n  const handleinputchange = type => (e) => {\n    setValues({\n      ...values,\n      [type]: e.target.value\n    })\n  }\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n  const handleDateChange = type => (date) => {\n    setValues({\n      ...values,\n      [type]: date\n    })\n  };\n  const handleToggleProject = () => {\n    setExpandProject(expandProject => !expandProject);\n  };\n\n  const handleToggleCustomer = () => {\n    setExpandCustomer(expandCustomer => !expandCustomer);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    onFilter && onFilter(values);\n    onClose && onClose()\n  };\n\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\"\n    >\n      <form\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}\n      >\n        <div className={classes.header}>\n          <Button\n            onClick={onClose}\n            size=\"small\"\n          >\n            <CloseIcon className={classes.buttonIcon} />\n            Close\n          </Button>\n        </div>\n        <div className={classes.content}>\n          <Grid container xs={12} spacing={1}>\n            {/* <Grid item xs={12}>\n                      <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={values.name}\n                            onChange={handleinputchange('name')}\n                           label=\"Name\"\n                          />\n            </Grid> */}\n             <Grid xs={12}>\n            <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masters.product_categories}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_category}\n                  getOptionLabel={(option) => option.name}\n                  onChange={handleoptionchange('product_category')}\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n                      \n           \n            <Grid item xs={12}>\n            <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={masters.product_types}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_type}\n                  onChange={handleoptionchange('product_type')}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n           </Grid>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            fullWidth\n            onClick={handleClear}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.buttonIcon} />\n            Clear\n          </Button>\n          <Button\n            color=\"primary\"\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Apply filters\n          </Button>\n        </div>\n      </form>\n    </Drawer>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  onFilter: PropTypes.func,\n  masters : PropTypes.object,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Button, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  search: {\n    flexGrow: 1,\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  },\n  searchButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Search = props => {\n  const { onSearch, className, ...rest } = props;\n  const [searchcontent, setSearchcontent] = React.useState('');\n\n  const classes = useStyles();\n  const handleinputchange = type => e => {\n    setSearchcontent(e.target.value)\n  }\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search by order id, Name and Mobile\"\n          onChange={handleinputchange('searchcontent')}\n        />\n      </Paper>\n      <Button\n        className={classes.searchButton}\n        onClick={() => onSearch(searchcontent)}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onSearch: PropTypes.func\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nimport { Search, Filter } from \"./components\";\n\nimport { CSVLink } from \"react-csv\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n  },\n  search: {\n    flexGrow: 1,\n    maxWidth: 480,\n    flexBasis: 480,\n  },\n  filterButton: {\n    marginLeft: \"auto\",\n  },\n  filterIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst ProductFilter = (props) => {\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const handleFilterOpen = () => {\n    setOpenFilter(true);\n  };\n\n  const handleFilterClose = () => {\n    setOpenFilter(false);\n  };\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid item>\n        <Search className={classes.search} onSearch={onSearch} />\n      </Grid>\n\n      <Grid item>\n        {window.location.pathname === \"/productlist\" ? (\n          <>\n            {\" \"}\n            <CSVLink\n              header={dataCSV.keyCSV}\n              data={dataCSV.valueCSV}\n              filename={\"ProductDetails.csv\"}\n              style={{ textDecoration: \"none \" }}\n            >\n              <Button\n                color=\"primary\"\n                style={{ marginRight: \"8px\" }}\n                size=\"small\"\n                variant=\"outlined\"\n              >\n                Download CSV\n              </Button>\n            </CSVLink>\n          </>\n        ) : (\n          \"\"\n        )}\n\n        <Button\n          className={classes.filterButton}\n          color=\"primary\"\n          onClick={handleFilterOpen}\n          size=\"small\"\n          variant=\"outlined\"\n        >\n          <FilterListIcon className={classes.filterIcon} /> Filter\n        </Button>\n      </Grid>\n\n      <Filter\n        onClose={handleFilterClose}\n        onFilter={onFilter}\n        open={openFilter}\n        masters={masters}\n      />\n    </Grid>\n  );\n};\n\nProductFilter.propTypes = {\n  className: PropTypes.string,\n  onFilter: PropTypes.func,\n  onSearch: PropTypes.func,\n  masters: PropTypes.object,\n};\n\nexport default ProductFilter;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\n//MuiAlert component which is shown inside the Snackbar component\nlet Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nexport const Alerts = (props) => {\n  const [open, setOpen] = React.useState(props.open);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.onclose();\n    setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      id=\"main_alert_snackbar\"\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal,\n      }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <Alert id=\"main_alert\" severity={props.severity} onClose={handleClose}>\n        {props.msg}\n      </Alert>\n    </Snackbar>\n  );\n};\n","import React from \"react\";\nimport {\n  AppBar,\n  Dialog,\n  IconButton,\n  Slide,\n  Toolbar,\n  Typography,\n  makeStyles,\n  Button,\n  Grid,\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  TextField,\n  LinearProgress,\n  Box,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ChipInput from \"material-ui-chip-input\";\nimport { AlertContext, AlertProps } from \"../../context\";\nimport socketIOClient from \"socket.io-client\";\nimport { API_URL } from \"../../config\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  content: {\n    width: \"90%\",\n    margin: theme.spacing(5),\n  },\n  textarea: {\n    resize: \"both\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nconst ProductSync = (props) => {\n  const classes = useStyles();\n  const snack = React.useContext(AlertContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  var [data, setData] = React.useState({\n    action_type: \"price_sync\",\n    Product_lists: \"\",\n    new_tagno: [],\n  });\n  const [progress, setProgress] = React.useState(0);\n  var handleChange = (event) => {\n    var { name, value } = event.target;\n    setData({ ...data, [name]: value });\n  };\n\n  var handleAddChip = (chip) => {\n    var _ = data;\n    _.new_tagno.push(chip);\n    setData({ ..._ });\n  };\n\n  var handleDeleteChip = (chip, index) => {\n    var _ = data;\n    _.new_tagno.splice(index, 1);\n    setData({ ..._ });\n  };\n\n  var { open, handleClose } = props;\n\n  React.useEffect(() => {\n    const socket = socketIOClient(API_URL);\n    socket.on(\"sync_data\", (data) => {\n      if (data.status !== \"completed\") {\n        setProgress(data?.completed * 100);\n      } else {\n        setData({\n          action_type: \"price_sync\",\n          Product_lists: \"\",\n          new_tagno: [],\n        });\n        snack.setSnack({\n          severity: AlertProps.severity.info,\n          msg: `Process Completed ${data.timeElapsed}`,\n        });\n      }\n    });\n  }, []);\n\n  const handleRun = () => {\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"TAG Number cannot be empty!\",\n      });\n      return;\n    }\n    if (data.Product_lists === \"\") {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"Sync Data cannot be empty!\",\n      });\n      return;\n    } else {\n      try {\n        JSON.parse(data.Product_lists);\n      } catch (error) {\n        if (error) {\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured while parsing data\",\n          });\n          return;\n        }\n      }\n    }\n    setProgress(0);\n    var Product_lists = data.Product_lists;\n    delete data.Product_lists;\n    sendNetworkRequest(\n      \"/product_sync\",\n      {},\n      { ...data, Product_lists: JSON.parse(Product_lists) }\n    )\n      .then((res) => {\n        snack.setSnack({\n          open: true,\n          severity: \"success\",\n          msg: res.message,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured while processing!\",\n        });\n      });\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      TransitionComponent={Transition}\n      close={handleClose}\n    >\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n            Product Sync\n          </Typography>\n          <Button\n            autoFocus\n            color=\"inherit\"\n            variant=\"outlined\"\n            onClick={handleRun}\n            startIcon={<SyncIcon />}\n          >\n            {data.action_type === \"price_sync\"\n              ? \"Run Price Sync\"\n              : \"Run Product Sync\"}\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Grid\n        className={classes.content}\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={2}\n      >\n        <Grid item xs={12}>\n          <FormControl component=\"fieldset\" fullWidth required>\n            <Typography variant=\"h4\">Choose action type</Typography>\n            <RadioGroup\n              aria-label=\"action-type\"\n              name=\"action_type\"\n              value={data.action_type}\n              onChange={handleChange}\n            >\n              <FormControlLabel\n                value={\"price_sync\"}\n                control={<Radio />}\n                label={\"Price Sync\"}\n              />\n              <FormControlLabel\n                value={\"new_uploads\"}\n                control={<Radio />}\n                label={\"Product Sync\"}\n              />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} style={{ padding: \"9px\" }}>\n          <TextField\n            value={data.Product_lists}\n            onChange={handleChange}\n            multiline\n            rows={15}\n            fullWidth\n            label={\"Sync Data\"}\n            name=\"Product_lists\"\n            variant=\"outlined\"\n            required\n            inputProps={{ className: classes.textarea }}\n          />\n        </Grid>\n        {data.action_type === \"new_uploads\" && (\n          <Grid item xs={12}>\n            <ChipInput\n              value={data.new_tagno}\n              onAdd={handleAddChip}\n              onDelete={handleDeleteChip}\n              fullWidth\n              newChipKeyCodes={[13, 32]}\n              variant=\"outlined\"\n              label={\"TAG Number\"}\n            />\n          </Grid>\n        )}\n        {progress > 0 && (\n          <Grid item xs={12}>\n            <LinearProgressWithLabel value={progress} />\n          </Grid>\n        )}\n      </Grid>\n    </Dialog>\n  );\n};\n\nexport default ProductSync;\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  PRODUCTLIST,\n  PRODUCTCATEGORY,\n  PRODUCTFILTERMASTER,\n  PRODUCTLISTSTATUSEDIT,\n} from \"../../graphql/query\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"../../components/Products\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport FullLoader from \"../../components/Loader\";\nimport { ProductFilter } from \"../../components\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport ProductSync from \"./ProductSync\";\n\nexport const Productlist = withRouter(\n  withApollo((props) => {\n    const [masters, setMasters] = useState({});\n    const [filterparams, setFilterparams] = useState({});\n    const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\n    const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    let responseCSV;\n    function onFilter(filterobj) {\n      let filtercontent = {};\n\n      if (filterobj.product_category) {\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      if (filterobj.product_type) {\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      setFilterparams({\n        ...filterparams,\n        ...filtercontent,\n      });\n      // fetchadminusers()\n    }\n    function onSearch(searchtext) {\n      //  alert(searchtext)\n      setFilterparams({\n        ...filterparams,\n        searchtext,\n      });\n      // fetchadminusers()\n    }\n    useEffect(() => {\n      const query = props.client.query;\n      query({\n        query: PRODUCTFILTERMASTER,\n        fetchPolicy: \"network-only\",\n      })\n        .then((data) => {\n          if (data) {\n            let product_categories = data.data.allMasterProductCategories.nodes;\n            let product_types = data.data.allMasterProductTypes.nodes;\n            setMasters({\n              product_categories,\n              product_types,\n            });\n          } else {\n          }\n        })\n        .catch((error) => {\n          console.log(\"smbcj\");\n        });\n\n      async function fetchCSVdata() {\n        responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\n        let responseData = responseCSV.res_json;\n\n        if (responseCSV.statuscode === 200) {\n          let keyData = [];\n\n          for (const [key] of Object.entries(responseData[0])) {\n            keyData.push({ label: key, key: key });\n          }\n\n          console.log(keyData);\n          setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\n        }\n      }\n      // fetchCSVdata();\n    }, []);\n\n    return (\n      <Grid container spacing={2}>\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={6} sm={6}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Products\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\n            <Link underline=\"none\" component={RouterLink} to={\"/productupload\"}>\n              <Button variant=\"contained\" color=\"primary\">\n                Add New Product\n              </Button>\n            </Link>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleClickOpen}\n              style={{ marginLeft: 2 }}\n            >\n              Product Sync\n            </Button>\n          </Grid>\n        </Grid>\n        <ProductFilter\n          masters={masters}\n          onSearch={onSearch}\n          onFilter={onFilter}\n          dataCSV={dataCSV}\n        />\n        <Product filterparams={filterparams} />\n        <ProductSync open={open} handleClose={handleClose} />\n      </Grid>\n    );\n  })\n);\n\nexport default Productlist;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import moment from 'moment';\nimport { Query, withApollo } from \"react-apollo\";\nimport { CATGORYLIST } from \"../../../../graphql/query\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Results = (props) => {\n  const { className, orders, ...rest } = props;\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  const [editcontent, setEditcontent] = React.useState({});\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias: vendordata.alias,\n      name: vendordata.name,\n      isedit: true,\n    });\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\n  }\n  async function Savevendor(refetch) {}\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    props.onCancel();\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Card>\n        <CardHeader title=\"Category\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n\n                  <TableCell align=\"left\">Alias</TableCell>\n\n                  <TableCell align=\"left\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  <Query\n                    query={CATGORYLIST}\n                    onCompleted={(data) =>\n                      setPageCount(data.allMasterProductCategories.totalCount)\n                    }\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\n                  >\n                    {({ data, loading, error, refetch }) => {\n                      if (loading) {\n                        // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>;\n                        // return false\n                      }\n                      if (data) {\n                        return (\n                          <>\n                            {data.allMasterProductCategories.nodes.map(\n                              (row, index) => (\n                                <>\n                                  {index == 0 && props.isadd ? (\n                                    <TableRow key={row.name}>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => Cancelcreate()}>\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    </TableRow>\n                                  ) : null}\n                                  <TableRow key={row.name}>\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"categoryname\"\n                                          name=\"categoryname\"\n                                          value={editcontent.name}\n                                          onChange={handleInputChange(\"name\")}\n                                          label=\"Name\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.name}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"alias\"\n                                          name=\"alias\"\n                                          value={editcontent.alias}\n                                          onChange={handleInputChange(\"alias\")}\n                                          label=\"alias\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.shortCode}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button\n                                          onClick={(e) => CancelEdit(row)}\n                                        >\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell\n                                        align=\"center\"\n                                        onClick={(e) => Editvendor(row)}\n                                        style={{ width: 20 }}\n                                      >\n                                        <Button>\n                                          <EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                    )}\n                                  </TableRow>\n                                </>\n                              )\n                            )}\n                          </>\n                        );\n                      } else {\n                        return <div>{\"Fetch Products\"}</div>;\n                      }\n                    }}\n                  </Query>\n                }\n              </TableBody>\n            </Table>\n          </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nResults.defaultProps = {\n  orders: [],\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\nasync function rerun(component)\n{\n  var  bodydata = {}\n  bodydata = {\n    component: component.label,\n    // req_product_id : products\n  }\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\n  let history_id = response.id;\n  let update_products = response.products\n  if(response.products && response.products.length > 0)\n  {\n    setOpen(true)\n\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id : update_products,\n      history_id : history_id\n    }\n    setStartrun(true)\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n    setOpen(false)\n  }else\n  {\n    alert(\" Doesn't have any incomplete products\")\n  }\n  \n}\n\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    // button: {\n    //     color:\"#06847B\",\n    //     border: \"1px solid #7bbcb7\",\n    //     '&:hover':{\n    //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n    //         border: \"1px solid #06847B\",\n    //     }\n    //   },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n               \n                <Grid container xl={12} lg={12} md={12} sm={12} xs={12} style={{display: 'flex',margin: '8px', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}} >\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" size=\"medium\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        \n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems:\"center\",\n  },\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  function handlesearch(){\n    props.onSearch(searchtext)\n  }\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n   //props.onSearch(e.target.value)\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n\n      <Grid\n        className={classes.contantview}\n        container\n        spacing={3}\n      >\n        <Grid item xs={3} >\n           <Typography\n           variant=\"h4\"\n           style={{margin: \"8px\"}}\n          >\n            Orders\n          </Typography>\n           {/* <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography>  */}\n        </Grid>\n        <Grid container xs={6} item  >\n        <Grid xs={9} item >\n               <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={searchtext}\n                    id=\"productname\"\n                    name=\"productname\"\n                    label=\"Search by name/email/mobile\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('searchtext')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n\n          </Grid>\n        <Grid xs={3} item >\n        <Button variant= \"contained\" color=\"primary\" onClick={() => handlesearch()} style={{ marginLeft: \"0px\", marginTop: \"8px\", marginBottom: \"10px\" }}>Search</Button> \n\n          </Grid>\n\n\n        </Grid>\n        <Grid xs={3}  item  alignItems={\"flex-end\"}  spacing={3} >\n\n          <SortHeader  columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n \n  console.log(props);\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n        {props.columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            width={headCell.type == 9 ? 300 : null}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label ? headCell.label : headCell.name}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"\" : \"\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n   // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n    overflowY: 'auto',\n    maxHeight: '100vh'\n  },\n  containergrid: {\n    overflowX: 'scroll',\n    width: 1000,\n    height: 20,\n    overflowY: 'hidden'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  debugger\n  console.log(props)\n  const { className, orders, ...rest } = props;\n  const [editcontent,setEditcontent] = React.useState({})\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].orderdate : 'Order Date');\n  const handleRequestSort = (event, property) => {\n\n    const isAsc = orderBy === property && order === 'asc';\n\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    \n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent)\n   // setIsadd(false)\n  // alert(JSON.stringify(editcontent))\n//  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n  setBtnEdit({ ...btnEdit, id:'', action: false })\n // refetch()\n}\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  async function showorderdetails(orderurl){\n    \n  window.open(orderurl, '_blank');\n   }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n      let paymentstatusobj = {}\n      props.orderstatus.forEach(element => {\n        if(vendordata.orderstatus === element.name)\n        {\n          paymentstatusobj = element;\n        }\n      });\n      \n     delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus : paymentstatusobj,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.orderid, action: true })\n\n  }\n  function CancelEdit(diamondData) {\n  //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n \n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n \n    // }\n    //    setIsadd(false)\n     setEditcontent({})\n     setBtnEdit({ ...btnEdit, id:'', action: false })\n   }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    \n      <Card>\n       \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          \n         \n            <div className={classes.tableWrapper}>\n              \n              <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n                {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n              <EnhancedTableHead\n              columns={props.columnobjs}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  {/* </TableRow>\n                </TableHead> */}\n                <TableBody style={{overflow : \"scroll\"}}>\n                {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      {props.columnobjs.map(col => (\n                        <>\n                        {col.key === 'action' && props.iswrite?   \n                        <TableCell align=\"center\" style = {{width: 20}}>\n                        {\n                         btnEdit.action && btnEdit.id == order.orderid  ?  <>\n                         <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                          </Button>\n                          <Button onClick={(e) => CancelEdit(order)}><CancelIcon />\n                          </Button></> : <Button \n                           >\n                             <VisibilityIcon onClick={(e) => showorderdetails(`/orderdetails/${order.orderid}`)}/>\n                     </Button>\n                         } \n                   </TableCell> : \n                   <>\n                   {\n                    btnEdit.action && btnEdit.id == order.orderid  ?\n                        <TableCell>\n                          {!col.type ||  col.type == 1 ? <Typography> {order[col.key]}</Typography>:null } \n                        { col.type == 2 ? <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        \n                        id={col.key}\n                        name={col.key}\n                        value={editcontent[col.key]}\n                        onChange={handleInputChange(col.key)}\n    \n                        label={col.label}\n                       />:null } \n                       {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                                       </Moment>:null } \n\n                   {col.type == 5 && order.paymentmode == 'COD' ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.paymentstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                /> : null }  \n                {col.type == 5 && order.paymentmode != 'COD' ? <Typography> {order[col.key]}</Typography>:null } \n       \n                  {col.type == 3 ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.orderstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                /> : null }\n                            \n                        </TableCell>  :  <TableCell align=\"center\" style = {{width: 20}}>\n                          {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                             </Moment>: <Typography> {order[col.key]}</Typography> } \n\n                          \n                           \n                           </TableCell> }\n                        </>\n                        }\n                       \n                      </>\n                      ))}                      \n\n                      {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10,50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n   \n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n  const [iswrite, setIswrite] = useState(false);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n\n  async function updateorder(ordercontent)\n  {\n  let response =  await sendNetworkRequest('/updateorderstatus', {}, ordercontent)\n    window.location.reload();\n\n   // getorders()\n  }\n  function searchorder(searchtext)\n  {\n    if(searchtext.length > 0)\n    {\n    var data_filter = orders.filter( element => \n      element.email &&  element.email.match(searchtext+'.*')  || \n      element.mobile && element.mobile.match(searchtext+'.*') ||\n      element.orderid && element.orderid.match(searchtext+'.*') || \n      element.username && element.username.match(searchtext+'.*')\n      )\n      setFilteredorder(data_filter)\n    }else{\n      setFilteredorder(orders)\n    }\n  }\n  async function getorders()\n  {\n    var orders_arr = []\n    orderCtx.orderMaster.orders.forEach(element => {\n\n        let orderobj = {}\n        orderobj['orderid'] = element.id\n        orderobj['orderdate'] = element.createdAt\n        orderobj['paymentmode'] = element.paymentMode\n        orderobj['cartid'] = element.cartId\n       // orderobj['paymentstatusmaster'] = element.paymentStatus\n       orderobj['awbNumber'] = element.awbNumber ? element.awbNumber : \"\"\n       orderobj['comments'] = element.comments ? element.comments : \"\"\n       orderobj['orderstatus'] = element.orderStatus\n       if(element.paymentMode === 'COD')\n       {\n        orderobj['paymentstatus'] = element.paymentStatus\n\n       }\n        if(element.paymentDetailsByOrderId)\n        {\n            let pgresponseobj = element.paymentDetailsByOrderId.nodes\n            pgresponseobj.forEach(pgres => {\n           let response_pg =   JSON.parse(pgres.paymentResponse)\n                    if(element.paymentMode === 'Prepaid')\n                    {\n                      orderobj['paymentstatus'] = response_pg.ipgTransactionId + ' \\n'+response_pg.fail_reason+ ' \\n'+response_pg.status\n\n                    }\n\n            } )\n        }\n        if(element.shoppingCartByCartId)\n        {\n            let cartcontent = element.shoppingCartByCartId\n\n                if(cartcontent.cartAddressesByCartId)\n                {\n                    let addresscontent = cartcontent.cartAddressesByCartId.nodes;\n                    addresscontent.forEach(addressobj => {\n                        orderobj['address'] = addressobj.addressline1\n                        if(!orderobj[\"mobile\"])\n                        {\n                          orderobj['mobile'] = addressobj.contactNumber\n\n                        }\n                        if(!orderobj[\"username\"])\n                        {\n                          orderobj['username'] = addressobj.firstname ? addressobj.firstname : \"\"\n\n                        }\n\n                    })\n\n                }\n            if(cartcontent.shoppingCartItemsByShoppingCartId)\n            {\n              \n\n                let cartitemscontent = cartcontent.shoppingCartItemsByShoppingCartId.nodes\n                let skus = []\n                \n                cartitemscontent.forEach(element => {\n                    if(element.transSkuListByProductSku)\n                    {\n                        skus.push(element.transSkuListByProductSku.generatedSku)\n                    }\n\n                    \n                })\n                orderobj['skus'] = skus.join(' , ')\n            }\n            if(cartcontent.userProfileByUserprofileId)\n            {\n             // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n              let usercontent = cartcontent.userProfileByUserprofileId\n              if(usercontent.firstName)\n              {\n                orderobj['username'] = usercontent.firstName ? usercontent.firstName : \"\"\n\n              }\n                orderobj['email'] = usercontent.email ? usercontent.email : \"\"\n                if(!orderobj[\"username\"])\n                            {\n                              orderobj['username'] = usercontent.firstname ? usercontent.firstname : \"\"\n\n\n                            }\n\n              let useraddressess = usercontent.userAddressesByUserProfileId\n              if(useraddressess)\n              {\n                let address_arr = useraddressess.nodes\n                address_arr.forEach(useraddressobj => {\n\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                });\n              }\n            }\n\n            if(cartcontent.giftwrapsByCartId)\n            {\n                let giftobj = cartcontent.giftwrapsByCartId.nodes;\n                giftobj.forEach(gift => {\n                    orderobj['giftmessage'] = gift.message\n                })\n            }\n        }\n        orders_arr.push(orderobj)\n    });\n    \n    setOrders(orders_arr)\n    setFilteredorder(orders_arr)\n  }\n  async function getmaster(getmaster)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes)\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes)\n\n        \n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let pagepermission = localStorage.getItem('pagepermissions')\n    if(pagepermission.indexOf('/orderlist') > -1)\n    {\n      setIswrite(true)\n\n    }else\n    {\n      setIswrite(false)\n    }\n    getmaster()\n  }, [])\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n        \n     \n    };\n\n    getmaster()\n    getorders()\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  debugger\nconsole.log(displaycolumnnames)\nconsole.log(displaycolumns)\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {/* <Grid container spacing={2} item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Orders\n          </Typography>\n          </Grid>\n          \n    </Grid> */}\n    <Header getColumnnames={columnchanged} onSearch={searchorder}  columns={columnnames}/>\n    {filteredorder ? <Results\n      className={classes.results}\n      orderstatus={paymentstatus}\n      paymentstatus={orderstatus}\n      iswrite={iswrite}\n     orders={filteredorder}\n     onupdate={updateorder}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    /> : null }\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport { ORDERS } from '../../services/queries';\n\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n    let user_id = props.location.pathname.split('/')[2];\n      \n    const { data, loading, error } = useQuery(ORDERS(user_id));\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\n      let selectedsellingPriceType = {}\n      pricetypes.forEach(element => {\n    \n        if(element.label == diamondData.sellingPriceType)\n        {\n          selectedsellingPriceType = element\n        }\n      })\n        setEditdiamond({  \n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          selectedsellingPriceType : selectedsellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      value={editdiamond.selectedsellingPriceType}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n     \n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState([]);\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    if(deleteid.length > 0)\n    {\n      let variables ={\n        elementId:deleteid[0]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    if(deleteid.length > 1)\n    {\n      let variables ={\n        elementId:deleteid[1]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n    //   if(res!==null){\n    //    // refetch();\n    //     // refetchval()\n    //     getgemlist()\n    //   }\n    // }).catch(err => {\n\n    // })\n    setgemlist([])\n\n    setDeleteid([])\n    getgemlist()\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n\n    let deleteids = [];\n    deleteids.push(diamondData.costprice.id)\n    deleteids.push(diamondData.sellprice.id)\n\n     setDeleteid(deleteids)\n     setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata ={}\n    bodydata['material'] = makingcontent.metal.name;\n    bodydata['weight_start'] = makingcontent.weightstart;\n    bodydata['weight_end'] = makingcontent.weightend;\n    bodydata['price_type'] = makingcontent.pricetype.label;\n    bodydata['vendor_code'] = props.vendor;\n    bodydata['purity'] = makingcontent.purity.shortCode;\n    bodydata['cost_price'] = makingcontent.costPrice;\n    bodydata['selling_price'] = makingcontent.sellingprice;\n    bodydata['isadd'] = true\n\n     await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\n\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     setOpen(false)\n     getmclist()\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster}  isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds vendor={vendorcode}/>\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Component', label: 'Components' },\n  { id: 'Product Category', label: 'product Category' },\n  { id: 'Product Type', label: 'Product Type' },\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid,setDeleteid] = React.useState(\"\")\n  const [refetch,setRefetch] = React.useState(null)\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n   \n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch)\n  {\n    setIsdelete(true)\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n    \n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id)\n    \n    setIsconformation(true);\n  }\n\n\n async function updatemarkup(markupcontent,refetch)\n  {\n    var bodydata = {}\n    bodydata['category'] = markupcontent.category.name;\n    bodydata['producttype'] = markupcontent.producttype.name;\n    bodydata['sellingPriceMin'] = markupcontent.sellpricemin\n    bodydata['sellingPriceMax'] = markupcontent.sellpricemax\n    bodydata['markuptype'] = markupcontent.markuptype.label\n    bodydata['markupValue'] = markupcontent.markup\n    bodydata['material'] = pricecomponent\n    console.log(\"XXXXXXXX\")\n    await sendNetworkRequest('/addmarkup', {}, bodydata)\n    setOpen(false)\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     refetch()\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\nconst handlecomponentChange = type => (event, value) => {\n  \n  setPriceomponent(value)\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  \n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    \n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      \n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={3}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n     <Grid item xs={3}> \n          \n     <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                     defaultValue={pricecomponent}\n                    options={[\"Diamond\",\"Gem Stone\",\"Gold\",\"Making Charge\"]}\n                    onChange={handlecomponentChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Pricing Components\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    // error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n       </Grid> \n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"   size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": pricecomponent}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                title={\"Are you sure to delete?\"} \n                                positivebtn={\"Yes\"} \n                                negativebtn={\"No\"} \n                                message={\"\"} \n                                refetch={refetch}\n                                onSuccess={handledelete}\n                                onCancel={hidedeleteconformation}\n                                isshow={isconformation} />\n                                {open ? <Addmarkup isadd={open} material={pricecomponent} refetch={refetch} actionSave={updatemarkup} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \n\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                <>\n                                  <TableRow key={row.category}>\n                                      <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.category}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.productType ? row.productType : 'All' }\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  \n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                                </>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query> \n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n       \n      </div>\n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '12px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '12px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n      if(type === 'materials')\n      {\n        let elements_arr = []\n        value.forEach(element => {\n          elements_arr.push(element.name)\n          \n        });\n        if(elements_arr.indexOf(\"Gold\") > -1)\n        {\n          setIsgold(true)\n        }else\n        {\n          setIsgold(false)\n        }\n\n        if(elements_arr.indexOf(\"Diamond\") > -1)\n        {\n          setIsdiamond(true)\n        }else\n        {\n          setIsdiamond(false)\n        }\n      }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n           options={voucherCtx.voucherMaster.diamondtypes}\n           onChange={handleoptionChange('diamondtype')}\n           value={attrobj.diamondtype}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n    </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Viewsku from '../Viewsku'\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Products = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel(){\n    setOpen(false)\n  }\n  function handleOpen(prodskus)\n  {\n    setOpen(true)\n    setSelectskus(prodskus)\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title =  {props.title} \n\n         \n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Product ID</TableCell>\n                    \n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nProducts.defaultProps = {\n  orders: []\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {Chip,IconButton} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {palette} from '../../theme'\nimport Page from '../../components/Page'\nimport { Header, Results, Products,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n \n  \n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  \n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      discountid : discount_id\n      }\n    let response = await sendNetworkRequest('/getdiscount', {}, bodydata, false)\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach(comp => {\n      comparr.push({\n        name: comp\n      })\n    })\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids)\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname:response.discunt.discount_name,\n      discountvalue:response.discunt.discount_value,\n      discounttype:response.discunt.discount_type,\n      discounttitle:response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes)\n    })\n    setIsloaded(true)\n  }\n  async function creatediscount(ispricerun)\n  {\n   let skuarray  = []\n    while(skus.length > 0)\n    {\n        let sku_content = skus.splice(0,25000)\n        skuarray.push(sku_content)\n    }\n    if(errorskus.length > 0 )\n    {\n      alert(\"Some skus are overlapping\")\n    }else{\n     \n    let discount_count = 0\n   setIsloading(true)\n      updatediscount(discount_count)\n     async function updatediscount()\n      {\n    let bodydata = {\n      discountvalue: parseFloat(attributeobj.discountvalue),\n      discounttype : attributeobj.discounttype,\n      componenets : attributeobj.componenets,\n      discountname : attributeobj.discountname,\n      discounttitle : attributeobj.discounttitle,\n      product_attributes: productattr,\n      product_attributes_text : productattrtext,\n      skus : skuarray[discount_count]\n    }\n    console.log(JSON.stringify(productattr))\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\n   \n    discount_count = discount_count + 1\n    if(skuarray.length > discount_count)\n    {\n      setLoadingtitle(skus.length+\" Left\")\n      updatediscount(discount_count)\n    }else{\n      setIsloading(false)\n      setOpen(true)\n      setIsshowpriceupdate(false)\n\n     window.location='/salediscountlist'\n\n    }\n  }\n  }\n}\nconst handleDelete = chipToDelete => () => {\n  //setProducts([]) \n  let errorindex =  errorskus.indexOf(chipToDelete)\n  if(errorindex > -1)\n  {\n    errorskus.splice(errorindex,1)\n    var erroritems = []\n    errorskus.forEach(itemname =>{\n      erroritems.push(itemname)\n    })\n   setErrorskus(erroritems) \n  }\n  let index = products.indexOf(chipToDelete)\n  products.splice(index,1)\n  var items = []\n  products.forEach(itemname =>{\n    items.push(itemname)\n  })\n setProducts(items) \n\n  //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n};\n\nasync function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setErrorskus(response.eror_skus)\n   setIsloading(false)\n   setTitlecontent(response.title)\n    \n  }\n  async function updateprices()\n  {\n    alert('i am here')\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id : products\n    }\n    setIsshowpriceupdate(true)\n\n    let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n     \"component\":\"updateskuprice\"\n    }\n   let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n \n   setStatusmessage(response.message)\n   }\n  function attributeadded( value)\n  {\n  let componentsstring = {}\n  let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      componentsstring[key] = {\n        values : values,\n        alias : alias_arr\n      }\n      let displaytext = key + ' : ' + attrs.join(' , ')\n      display_arr.push(displaytext)\n    })\n    setProductattr(componentsstring)\n    setProductattrtext(display_arr.join(' | '))\n   //alert(JSON.stringify(componentsstring))\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(value)\n    \n\n  }\n  function valuechange(type, value)\n  {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value\n    })\n    \n\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n  {\n    let discount_id = props.location.pathname.split('/')[2];\n    setDiscount_id(discount_id)\n    getdiscountvalue(discount_id)\n\n  }else\n  {\n    setIsloaded(true)\n  }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n\n    <>\n     <FullLoader title={loadingtitle} isopen={isloading}/>\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {!discount_id ?\n    <>\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n    {products.length > 0 ? <Products  title={titlecontent} products={errorskus} /> : null }\n  {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n    {isloaded || !discount_id ? <AboutVoucher discountcontent= {attributeobj} className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} /> : null}\n    \n    \n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\n   \n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} spacing={2} >\n    {!isshowpriceupdate ? <>\n      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{margin:16}} variant=\"contained\">Submit</Button>\n         \n      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n      </>:null} \n    </Grid>\n    </Grid>\n    </> : \n        <Grid container xs={12} spacing={2} >\n            <Grid item xs={6} style={{marginTop:16}} >\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Name\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discountname}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Title\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttitle}\n\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Value\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttype == 2 ? attributeobj.discountvalue+ \"%\" : attributeobj.discountvalue}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Pricing Compponent\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.displaycomp}\n\n            </Typography>\n            </Grid>\n            </Grid>\n            \n            {attributeobj.allkeys ? <Grid item xs={6} style={{marginTop:16}} >\n                   {attributeobj.allkeys.map((row, index) => (\n                     <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          {row}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.attributes[row].values}\n                        </Typography>\n                       </Grid>\n                  ))}  \n                  <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          Total Sku\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.skucount}\n                        </Typography>\n                       </Grid>\n            </Grid> : null}\n                      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n                      {!isshowpriceupdate ? <>\n         \n      {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n      </>:<> {statusmessage}<IconButton aria-label=\"delete\"  onClick={(e) => handlestatus()} color=\"primary\">\n                            <RefreshIcon />\n                          </IconButton></>} \n                        \n                        \n      </Grid>\n      </Grid>\n} \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport \"../../tmp.css\";\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  Switch,\n  FormControlLabel,\n  Grid,\n  TextField,\n  Typography,\n  colors,\n  Input,\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    paddingBottom: theme.spacing(2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    marginRight: theme.spacing(2),\n    // backgroundColor: colors.green[600],\n    // '&:hover': {\n    //   backgroundColor: colors.green[900]\n    // }\n  },\n}));\n\nconst EditContent = (props) => {\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    ...diamond,\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  function previewimage(url) {\n    // setpreviewurl(url)\n    // setShowpreview(true)\n  }\n  const handleInputChange = (type) => (e) => {\n    debugger;\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const toggleChecked = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\n  };\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {}, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            {props.title}\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          {attributes.map((columnname, index) => (\n            <>\n              {showpreview && (\n                <Lightbox\n                  class=\"fade\"\n                  mainSrc={previewurl}\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                  onCloseRequest={() => setShowpreview(false)}\n                  onMovePrevRequest={() => alert(\"prev\")}\n                  onMoveNextRequest={() => alert(\"next\")}\n                />\n              )}\n              <Grid container xs={12} spacing={2}>\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n                      label={columnname.label}\n                      disabled={columnname.type === 10}\n                    />\n                  </Grid>\n                ) : null}\n                {columnname.type === 2 && (\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      label={columnname.key}\n                      labelPlacement=\"start\"\n                      control={\n                        <Switch\n                          checked={editcontent[columnname.key]}\n                          name=\"checkedB\"\n                          color=\"primary\"\n                          onChange={toggleChecked(columnname.key)}\n                        />\n                      }\n                    />\n                  </Grid>\n                )}\n                {columnname.type === 3 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      multiple\n                      id=\"combo-box-demo\"\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      margin=\"dense\"\n                      fullWidth\n                      value={editcontent[columnname.defaultkey]}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />\n                  </Grid>\n                )}\n\n                {columnname.type == 4 && (\n                  <Grid item xs={12}>\n                    <Typography> {diamond[columnname.key]}</Typography>\n                  </Grid>\n                )}\n\n                {columnname.type == 5 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id=\"combo-box-demo\"\n                      // options={props.masters[columnname.mastervaluekey]}\n                      margin=\"dense\"\n                      fullWidth\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      value={editcontent[columnname.defaultkey]}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 6 && (\n                  <Grid item xs={12}>\n                    <Button variant=\"outlined\" color=\"primary\">\n                      {columnname.controllabel}\n                    </Button>{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 9 && (\n                  <Grid container item xs={12}>\n                    <Grid item xs={12}>\n                      <AvatarGroup max={2}>\n                        {diamond[columnname.key]\n                          ? diamond[columnname.key]\n                              .split(\",\")\n                              .map((diamond, index) => (\n                                <Avatar\n                                  alt=\"Remy Sharp\"\n                                  src={diamond}\n                                  onClick={() => previewimage(diamond)}\n                                  className={classes.small}\n                                />\n                              ))\n                          : null}\n                      </AvatarGroup>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <FilePond\n                        style={{ height: \"100\", width: \"100\" }}\n                        oninit={() => handleInit()}\n                        labelIdle=\"Add Banner Image\"\n                        onaddfile={(error, fileItem) => {\n                          if (!error) {\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\n                          } else {\n                            // alert(row[columnname.key])\n                          }\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </>\n          ))}\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\n            Save\n          </Button>\n          <Button onClick={() => onClose()} variant=\"contained\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditContent.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  attributes: PropTypes.array,\n\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditContent;\n","import React, { useEffect, useContext, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  TaxList,\n  VENDORLISTS,\n  PRODUCTFILTERMASTER,\n  PRODUCTLISTSTATUSEDIT,\n} from \"../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport EditContent from \"./components/EditContent\";\nimport { Button, Switch, Grid, FormControlLabel } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport GrainIcon from \"@material-ui/icons/Grain\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"./tmp.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport moment from \"moment\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst Vendor = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [masterlist, setMasterlist] = React.useState(props.values);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [openedit, setOpenedit] = React.useState(false);\n\n  const [isadd, setIsadd] = React.useState(false);\n  const [isedit, setIsedit] = React.useState(false);\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const [aliasName, setaliasName] = React.useState(\"\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function addnewvendor() {\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\n    setaliasName(props.prefix + sort_id);\n\n    setEditcontent({\n      alias: aliasName,\n      ...editcontent,\n      isedit: false,\n    });\n    debugger;\n    console.log(editcontent);\n    // let masters = masterlist;\n    // masters.insert(0, []);\n\n    //setMasterlist(masters)\n    setIsadd(true);\n    setOpenedit(true);\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\n  }\n  Array.prototype.insert = function (index, item) {\n    this.splice(index, 0, item);\n  };\n  function Editvendor(vendordata) {\n    delete vendordata[\"action\"];\n\n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit: true,\n    });\n    setOpenedit(true);\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n  }\n  async function Savevendor(content) {\n    props.onCreate(content);\n    setIsadd(false);\n    setEditcontent(null);\n    setOpenedit(false);\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\n    // refetch()\n  }\n  function Cancelcreate() {\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function searrchcontent() {\n    props.onSearch(\n      editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\"\n    );\n  }\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n  function removeimage(imagename, keyvalue) {\n    let previmagenames = editcontent[keyvalue];\n    let newimages = [];\n    let previmages = previmagenames.split(\",\");\n    previmages.forEach((element) => {\n      if (element == imagename) {\n      } else {\n        newimages.push(element);\n      }\n    });\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\n  }\n  function CancelEdit(diamondData) {\n    if (isadd) {\n      let masters = masterlist;\n\n      masters.splice(0, 1);\n      setMasterlist(masterlist);\n    }\n    setIsadd(false);\n    setEditcontent({});\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleSearchChange = (type) => (e) => {\n    props.onSearch(e.target.value);\n  };\n  const handleChange = (type) => (event) => {\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl =\n      \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  useEffect(() => {\n    setMasterlist(props.values);\n  }, [props.values]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb.\");\n  }\n  function previewimage(url) {\n    setpreviewurl(url);\n    setShowpreview(true);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <>\n      {showpreview && (\n        <Lightbox\n          class=\"fade\"\n          mainSrc={previewurl}\n          // nextSrc={images[(photoIndex + 1) % images.length]}\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={() => setShowpreview(false)}\n          onMovePrevRequest={() => alert(\"prev\")}\n          onMoveNextRequest={() => alert(\"next\")}\n        />\n      )}\n      <Paper className={classes.root}>\n        <Grid\n          container\n          item\n          xs={12}\n          style={{ padding: \"16px\" }}\n          sm={12}\n          alignItems={\"flex-end\"}\n        >\n          <Grid fullwidth item xs={3} sm={3}>\n            <Typography component=\"h6\" variant=\"h6\">\n              {props.title}\n            </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\n            <Grid fullwidth item xs={9} sm={9}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                autoComplete=\"off\"\n                id=\"vendordeliverydays\"\n                name=\"vendordeliverydays\"\n                //  /  value={editcontent.searchcontent}\n                onChange={handleInputChange(\"searchcontent\")}\n                label=\"Search text\"\n              />\n            </Grid>\n            <Grid fullwidth item xs={3} sm={3}>\n              <Button\n                variant=\"contained\"\n                onClick={() => searrchcontent()}\n                color=\"primary\"\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            {props.button_title ? (\n              <Button\n                variant=\"contained\"\n                onClick={() => addnewvendor()}\n                color=\"primary\"\n              >\n                {props.button_title}\n              </Button>\n            ) : null}\n          </Grid>\n        </Grid>\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            border={1}\n            borderColor={\"#ddd\"}\n            size=\"small\"\n            stickyHeader\n          >\n            {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n            <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            <TableBody>\n              {masterlist.map((row, index) => (\n                <>\n                  <TableRow>\n                    {props.columns.map((columnname, index) => (\n                      <>\n                        {columnname.key === \"action\" ? (\n                          <TableCell align=\"center\" style={{ width: 20 }}>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <>\n                                <Button onClick={(e) => Savevendor()}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </>\n                            ) : (\n                              <Button onClick={(e) => Editvendor(row)}>\n                                <EditIcon />\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell align=\"left\">\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    onChange={handleChange(columnname.key)}\n                                    checked={editcontent[columnname.key]}\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button variant=\"outlined\" color=\"primary\">\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n                                {columnname.type == 3 ? (\n                                  <Autocomplete\n                                    multiple\n                                    id=\"combo-box-demo\"\n                                    options={\n                                      columnname.mastervaluekey\n                                        ? props.masters[\n                                            columnname.mastervaluekey\n                                          ]\n                                        : props.masters\n                                    }\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[columnname.defaultkey]}\n                                    onChange={handleoptionChange(\n                                      columnname.defaultkey\n                                    )}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label={columnname.label}\n                                        variant=\"outlined\"\n                                      />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 9 ? (\n                                  <>\n                                    <FilePond\n                                      oninit={() => handleInit()}\n                                      labelIdle=\"Add Banner Image\"\n                                      onaddfile={(error, fileItem) => {\n                                        if (!error) {\n                                          uploadimagetoserver(\n                                            fileItem,\n                                            columnname.key,\n                                            \"add\"\n                                          );\n                                        } else {\n                                          // alert(row[columnname.key])\n                                        }\n                                      }}\n                                    />\n                                    <div className={classes.imagecontainer}>\n                                      {editcontent[columnname.key]\n                                        ? editcontent[columnname.key]\n                                            .split(\",\")\n                                            .map((row, index) => (\n                                              <Badge\n                                                overlap=\"circle\"\n                                                anchorOrigin={{\n                                                  vertical: \"top\",\n                                                  horizontal: \"right\",\n                                                }}\n                                                badgeContent={\n                                                  <HighlightOffIcon\n                                                    fontSize=\"small\"\n                                                    onClick={() =>\n                                                      removeimage(\n                                                        row,\n                                                        columnname.key\n                                                      )\n                                                    }\n                                                  />\n                                                }\n                                              >\n                                                <Avatar\n                                                  alt=\"Remy Sharp\"\n                                                  src={row}\n                                                  className={classes.small}\n                                                />\n                                              </Badge>\n                                            ))\n                                        : null}\n                                    </div>\n                                  </>\n                                ) : null}\n                                {columnname.type == 5 ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={\n                                      props.masters[columnname.mastervaluekey]\n                                    }\n                                    margin=\"dense\"\n                                    fullWidth\n                                    options={\n                                      columnname.mastervaluekey\n                                        ? props.masters[\n                                            columnname.mastervaluekey\n                                          ]\n                                        : props.masters\n                                    }\n                                    onChange={handleoptionChange(\n                                      columnname.defaultkey\n                                    )}\n                                    value={editcontent[columnname.defaultkey]}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label={columnname.label}\n                                        variant=\"outlined\"\n                                      />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 4 ? (\n                                  <Typography>\n                                    {\" \"}\n                                    {row[columnname.key]}\n                                  </Typography>\n                                ) : null}\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {!columnname.type || columnname.type == 1 ? (\n                                  <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    id={columnname.key}\n                                    name={columnname.key}\n                                    value={editcontent[columnname.key]}\n                                    onChange={handleInputChange(columnname.key)}\n                                    label={columnname.label}\n                                  />\n                                ) : null}{\" \"}\n                              </TableCell>\n                            ) : (\n                              <TableCell>\n                                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n\n                                {columnname.type === 9 ? (\n                                  <AvatarGroup max={2}>\n                                    {row[columnname.key]\n                                      ? row[columnname.key]\n                                          .split(\",\")\n                                          .map((row, index) => (\n                                            <Avatar\n                                              alt=\"Remy Sharp\"\n                                              src={row}\n                                              onClick={() => previewimage(row)}\n                                              className={classes.small}\n                                            />\n                                          ))\n                                      : null}{\" \"}\n                                    {/* className={classes.small} />)) : null } */}\n                                  </AvatarGroup>\n                                ) : null}\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    onChange={handleInputChange(columnname.key)}\n                                    checked={row[columnname.key]}\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type != 2 &&\n                                columnname.type != 6 &&\n                                columnname.type != 8 &&\n                                columnname.type != 9 ? (\n                                  <Typography>\n                                    {\" \"}\n                                    {row[columnname.key]}\n                                  </Typography>\n                                ) : null}\n                              </TableCell>\n                            )}\n                          </>\n                        )}\n                      </>\n                    ))}\n                  </TableRow>\n                </>\n              ))}\n\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[50, 100, 200, 500]}\n                  count={[props.values.length]}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { \"aria-label\": \"rows per page\" },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  // ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n          {editcontent && (\n            <EditContent\n              diamond={editcontent}\n              attributes={props.columns}\n              title={props.title}\n              masters={props.masters}\n              onApply={Savevendor}\n              onClose={handleApplicationClose}\n              open={openedit}\n              prefix={aliasName}\n            />\n          )}\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolbar: {\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  deleteIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Header = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Orders\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Order #{order.id}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {/* <Button\n            className={classes.deleteButton}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.deleteIcon} />\n            Delete\n          </Button> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nimport {\n  PAYMENTSTATUSMASTER,\n  PRODUCTDIAMONDTYPES,\n} from \"../../../../graphql/query\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TextField,\n  Link,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ReceiptIcon from \"@material-ui/icons/ReceiptOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0,\n  },\n  actions: {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    \"& > * + *\": {\n      marginLeft: 0,\n    },\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst OrderInfo = (props) => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const options = [\"Canceled\", \"Completed\", \"Rejected\"];\n\n  const [option, setOption] = useState(options[0]);\n  const [paymentstatus, setPaymentstatus] = useState([]);\n  const [orderstatus, setOrderstatus] = useState([]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setOption(event.target.value);\n  };\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\n      })\n      .catch(console.error);\n  }\n  React.useEffect(() => {\n    getmaster();\n  }, []);\n  debugger;\n  console.log(props);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Customer</TableCell>\n              <TableCell>\n                <Link\n                  target=\"_blank\"\n                  component={RouterLink}\n                  to={`/customerdetails/${order.user_profile.id}`}\n                >\n                  {order.user_profile.first_name} {order.user_profile.last_name}\n                </Link>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline1\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline2\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].city\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].state\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].country\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email ID</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.cart_addresses\n                    ? order.shopping_cart.cart_addresses.length > 0\n                      ? order.shopping_cart.cart_addresses[0].contact_number\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Mobile Number</TableCell>\n              <TableCell>{order.user_profile.email}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Amount</TableCell>\n              <TableCell>\n                {order.currency}\n                {order.shopping_cart.discounted_price}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Waybil Number</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Waybill Number\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Gift Message</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.giftwraps\n                    ? order.shopping_cart.giftwraps.length > 0\n                      ? order.shopping_cart.giftwraps[0].message\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Mode</TableCell>\n              <TableCell>{order.payment_mode}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {paymentstatus.map((option) => (\n                    <option key={option.name} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Order Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {orderstatus.map((option) => (\n                    <option key={option.id} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Comments</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Comments\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant=\"contained\" color=\"primary\">\n          {/* <EditIcon className={classes.buttonIcon} /> */}\n          Save\n        </Button>\n        {/* <Button>\n          <ReceiptIcon className={classes.buttonIcon} />\n          Resend invoice\n        </Button> */}\n      </CardActions>\n    </Card>\n  );\n};\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired,\n};\n\nexport default OrderInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  }\n}));\n\nconst OrderItems = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Sku</TableCell>\n                  <TableCell>Product Image</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Amount</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {order.shopping_cart.shopping_cart_items.map(item => (\n                  <TableRow key={item.id}>\n                     <TableCell>\n                      {item.product_sku}\n                    </TableCell>\n                    <TableCell>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </TableCell>\n                    <TableCell>\n                      {item.qty}\n                    </TableCell>\n                    <TableCell>{item.price}</TableCell>\n                    \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderItems;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  CardContent,\n  Grid,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  inner_card: {\n    padding: \"10px\",\n    marginBottom: \"16px\",\n  },\n  image_container: {\n    padding: \"16px\",\n  },\n  product_image: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n  },\n  text_heading: {\n    // fontWeight: \"400\",\n    margin: \"8px 0px\",\n  },\n  text_content: {\n    margin: \"8px 0px\",\n  },\n  final_total_text: {\n    textAlign: \"right\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n  },\n}));\nconst OrderDetails = (props) => {\n  const { order, className, ...rest } = props;\n  console.log(order, \"samir\");\n  const classes = useStyles();\n  return (\n    <div style={{ marginTop: 30 }}>\n      <Card>\n        <CardHeader title=\"Order Details\" />\n        <Divider />\n\n        <CardContent>\n          {order.shopping_cart.shopping_cart_items.map((item) => (\n            <Card key={item.id} className={classes.inner_card}>\n              <Grid container xs={12}>\n                {/*-------------------------------- Image part-------------------------------- */}\n                <Grid\n                  container\n                  xs={12}\n                  md={3}\n                  className={classes.image_container}\n                >\n                  <img\n                    src=\"\"\n                    alt=\"Product Image\"\n                    className={classes.product_image}\n                  />\n                </Grid>\n                <Grid container xs={12} md={9}>\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Product Code</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.product_sku}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Metal</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}\n                      </p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.trans_sku_list.sku_weight}\n                      </p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Diamond Quality</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.trans_sku_list.diamond_type}{\" \"}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>\n                        Diamond Weight (Ct)\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> ? </p>\n                    </Grid>\n                  </Grid>\n                  {/* ----------------------------------------------------------------- */}\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Quantity</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.qty} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.discount_price)}`}{\" \"}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Saved</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(\n                          item.trans_sku_list.discount_price -\n                            item.trans_sku_list.markup_price\n                        )} (${\n                          item.trans_sku_list.discount === null\n                            ? \"0\"\n                            : item.trans_sku_list.discount\n                        }%off)`}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Shipping</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> Free </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Grand Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.markup_price)}`}\n                      </p>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Card>\n          ))}\n          <Grid>\n            <p className={classes.final_total_text}>\n              Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;\n            </p>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\nexport default OrderDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport uuid from \"uuid/v1\";\nimport moment from \"moment\";\nimport Page from \"../../components/Page\";\nimport { Header, OrderInfo, OrderItems } from \"./components\";\nimport { withRouter } from \"react-router-dom\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  container: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const OrderManagementDetails = withRouter((props) => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(null);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  async function fetchorderdetails(order_id) {\n    let response = await sendNetworkRequest(\n      \"/getorderdetails\",\n      {},\n      { order_id }\n    );\n    console.log(response);\n    setOrder(response.orders);\n  }\n  useEffect(() => {\n    let mounted = true;\n    var com_id = props.location.pathname.split(\"/\")[2];\n    const fetchOrder = () => {\n      setOrder({\n        id: uuid(),\n        ref: \"FAD107\",\n        promoCode: null,\n        value: \"55.25\",\n        currency: \"$\",\n        status: \"canceled\",\n        customer: {\n          name: \"Ekaterina Tankova\",\n          address: \"Street King William, 42456\",\n          city: \"Montgomery\",\n          country: \"United States\",\n        },\n        items: [\n          {\n            id: uuid(),\n            name: \"Project Points\",\n            cuantity: 25,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"50.25\",\n            currency: \"$\",\n          },\n          {\n            id: uuid(),\n            name: \"Freelancer Subscription\",\n            cuantity: 1,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"5.00\",\n            currency: \"$\",\n          },\n        ],\n        created_at: moment(),\n      });\n    };\n\n    // fetchOrder();\n    fetchorderdetails(com_id);\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Order Management Details\">\n      <Header order={order} />\n      <Grid className={classes.container} container spacing={3}>\n        <Grid item md={4} xl={3} xs={12}>\n          <OrderInfo order={order} />\n        </Grid>\n        <Grid item md={8} xl={9} xs={12}>\n          <OrderItems order={order} />\n          <OrderDetails order={order} style={{ marginTop: 30 }} />\n        </Grid>\n      </Grid>\n    </Page>\n  );\n});\n\nexport default OrderManagementDetails;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n      alert(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.priority && x.priority == taxcontent ||\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\n\n\n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  // element.email &&  element.email.match(searchtext+'.*')  || \n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \n  //     element.username && element.username.match(searchtext+'.*')\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addtaxattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\nimport Attributescontent from './Attributescontent/Attributescontent';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n     <Attributescontent title= {\"Shipment Settings II\"} \n        masters={[]}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Mastercategories = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    alert(JSON.stringify(taxcontent));\n    // let response = await sendNetworkRequest(\n    //   \"/managecategories\",\n    //   {},\n    //   taxcontent\n    // );\n    // getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          prefix={data.prefix}\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Mastercategories;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n\n    //getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n\n    getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":2  ,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport data from \"./data.json\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./Configuration.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n}));\nexport const Userconfiguration = withRouter((props) => {\n  const master_options = [\n    \"Attribute Master\",\n    \"Categories\",\n    \"ProductTypes\",\n    \"Materials\",\n    \"Metal Colours\",\n    \"Metal Purities\",\n    \"Collections\",\n    \"Occassions\",\n    \"Styles\",\n    \"Themes\",\n    \"Designs\",\n    \"Weights\",\n    \"Diamond Types\",\n    \"Diamond Settings\",\n    \"Diamond Shapes\",\n    \"Earring Backings\",\n    \"Gemstone Settings\",\n    \"Gemstone Shapes\",\n    \"Gemstone Types\",\n    \"Stones\",\n    \"Stone Colours\",\n    \"Stone Shapes\",\n    \"Gender\",\n    \"SEO Priorities\",\n    \"Tax Settings 1\",\n    \"Tax Settings 2\",\n    \"Payment Status\",\n    \"Order Status\",\n    \"Shipping Zones\",\n    \"Shipment Setting I\",\n    \"Shipment Setting II\",\n  ];\n  const master_options_url = [\n    \"masterattributes\",\n    \"categories\",\n    \"producttypes\",\n    \"materialmaster\",\n    \"mastercolors\",\n    \"masterpurities\",\n    \"collections\",\n    \"masteroccassions\",\n    \"masterstyles\",\n    \"masterthemes\",\n    \"designs\",\n    \"weights\",\n    \"diamonds\",\n    \"diamondsettings\",\n    \"diamondshapes\",\n    \"earringbacking\",\n    \"gemstonesettings\",\n    \"gemstoneshapes\",\n    \"gemstonetypes\",\n    \"masterstones\",\n    \"masterstonecolors\",\n    \"masterstoneshapes\",\n    \"genders\",\n    \"seopriority\",\n    \"Taxsetup\",\n    \"taxsettings\",\n    \"paymentstatus\",\n    \"orderstatus\",\n    \"zones\",\n    \"shipmensettings\",\n    \"shippingattributes\",\n  ];\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => {\n    setRaised(true);\n  };\n  const onMouseOut = () => {\n    setRaised(false);\n    // setCardindex(-1)\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          User and Roles Management\n        </Typography>\n      </Grid>\n\n      {data.options.map((menu, index) => (\n        <Grid item xs={6} sm={4} lg={3}>\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\n            <Card fullwidth className=\"card2\">\n              <CardContent>\n                <Typography\n                  style={{ textAlign: \"center\", marginTop: 8 }}\n                  component=\"h6\"\n                  variant=\"h5\"\n                >\n                  {menu.title}\n                </Typography>\n\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n              </CardContent>\n            </Card>\n          </Link>\n        </Grid>\n      ))}\n    </Grid>\n  );\n});\n\nexport default Userconfiguration;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\nimport Addpermissions from \"../../components/Addpermissions/Addpermissions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Masterroles = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false);\n  const [masterpages, setMasterpages] = React.useState([]);\n  const [editroleid, setEditroleid] = React.useState(\"\");\n  const [editpermissons, setEditpermissions] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    let response = await sendNetworkRequest(\"/manageroles\", {}, taxcontent);\n    getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes);\n      })\n      .catch(console.error);\n\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\n    setMastervalue(response.roles);\n    setFiltervalue(response.roles);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n  async function showpermissions(rowcontent) {\n    let response = await sendNetworkRequest(\n      \"/getrolepermissions\",\n      {},\n      { role_id: rowcontent.id }\n    );\n    setEditpermissions(response.permissions);\n    setEditroleid(rowcontent.id);\n    setIsshowpermissions(true);\n    // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent) {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id: editroleid,\n    };\n    console.log(JSON.stringify(bodydata));\n    setIsshowpermissions(false);\n    let response = await sendNetworkRequest(\"/managepermissions\", {}, bodydata);\n    getmaster();\n  }\n  function cancelpermissions(rowcontent) {\n    setIsshowpermissions(false);\n    // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs\n          url=\"userconfiguration\"\n          name=\"User Configuration\"\n        ></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? (\n          <Addpermissions\n            role_id={editroleid}\n            isopen={isshowpermissions}\n            permissions={editpermissons}\n            pages={masterpages}\n            onClose={cancelpermissions}\n            onSave={updatepermissions}\n          />\n        ) : null}\n        <Mastercontent\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onPermissionadd={showpermissions}\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Masterroles;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Masterscreens = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    let response = await sendNetworkRequest(\"/managepages\", {}, taxcontent);\n    getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes);\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs\n          url=\"userconfiguration\"\n          name=\"User Configuration\"\n        ></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          title={\"Master Screens\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Masterscreens;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Manageadminusers = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n  const [masterroles, setMasterroles] = React.useState([]);\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    let roles = [];\n    taxcontent.roles.forEach((element) => {\n      roles.push(element.name);\n    });\n    let bodydata = {\n      username: taxcontent.username,\n      password: \"123456789\",\n      email: taxcontent.email,\n      roles: roles,\n    };\n\n    let response = await sendNetworkRequest(\"/api/auth/signup\", {}, bodydata);\n    getmaster();\n  }\n  async function getmasterroles() {\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\n\n    setMasterroles(response.roles);\n\n    getmaster();\n  }\n  async function getmaster() {\n    let response = await sendNetworkRequest(\"/getadminusers\", {}, {});\n    let adminusers = response.users;\n    let users = [];\n    adminusers.forEach((element) => {\n      let userobj = {};\n      userobj[\"id\"] = element.id;\n      userobj[\"username\"] = element.username;\n      userobj[\"password\"] = element.password;\n      userobj[\"email\"] = element.email;\n      userobj[\"mobile\"] = element.mobile;\n      userobj[\"status\"] = element.status === \"Active\" ? true : false;\n      let roles = [];\n      let rolesnames = [];\n\n      let userroles = element.user_roles;\n      userroles.forEach((userroleobj) => {\n        let roleobj = {};\n        roleobj[\"id\"] = userroleobj.master_role.id;\n        roleobj[\"name\"] = userroleobj.master_role.name;\n        roles.push(roleobj);\n        rolesnames.push(userroleobj.master_role.name);\n      });\n      userobj[\"roles\"] = roles;\n      userobj[\"rolenames\"] = rolesnames.join(\" , \");\n      users.push(userobj);\n    });\n\n    setFiltervalue(users);\n    setMastervalue(users);\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs\n          url=\"userconfiguration\"\n          name=\"User Configuration\"\n        ></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          title={\"Admin Users\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          masters={masterroles}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Manageadminusers;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState({\n    cost_price : '',\n    selling_price : ''\n  })\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\n  const [defaultmetal, setDefaultmetal] = React.useState({})\n  const [pricetype, setPricetype] = React.useState({})\n\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n  const [materials, setMaterials] = React.useState([])\n  \n  const [masterpurities, setMasterpurities] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      costprices : purityprices,\n      sellingprices : puritysellingprices,\n      vendors : selectedvendors,\n      metal : defaultmetal,\n      pricetype : pricetype\n    }\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n     alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n          selectedvendors.push(vendorobj.shortCode)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   let vendorid = []\n   value.forEach(element => {\n    if(element.shortCode == 'All')\n    {\n      mastervendors.forEach(element => {\n        vendorid.push(element.shortCode)\n      })\n      setSelectedvendors(vendorid)\n    }else{\n      vendorid.push(element.shortCode)\n      setSelectedvendors(vendorid)\n\n    }\n   })\n  }\n  const handlepricetypeChange = (event, value) => {\n    setPricetype(value)\n  }\n  const handlemetalChange = type => (event, value) => {\n    // setEditcontent({ ...editcontent, [type]: value  })\n    //alert(JSON.stringify(value))\n    if(value)\n    { \n    if(value.shortCode === 'G')\n    {\n      setIspricecalculated(false)\n    }else\n    {\n      setIspricecalculated(true)\n    }\n    if(data[value.name])\n    {\n      setDefaultpurity(data[value.name])\n\n    }\n  }else\n  {\n    setIspricecalculated(false)\n\n  }\n    setDefaultmetal(value)\n   //setDefaultpurity(value)\n   }\n  const handleInputChange = type => event => {\n   // setGoldprice(event.target.value);\n   //alert(JSON.stringify(goldprice))\n   if(defaultmetal.name === 'Gold')\n    {\n    }else\n    {\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\n      if(type === 'cost_price')\n      {\n        setPurityprices(sellingpricejson)\n\n      }\n      if(type === 'selling_price')\n      {\n        setPuritysellingprices(sellingpricejson)\n\n      }\n    }\n    setGoldprice({...goldprice,[type]: event.target.value })\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    setPurityprices({...purityprices,[type]:event.target.value});\n\n    \n  }\n  const handlesellingPriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    \n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    if(defaultmetal.name === 'Gold')\n    {\n       let default_purity = parseInt()\n     let pricejson = {}\n     let sellingpricejson = {}\n    data.goldpurity.forEach(element => {\n      var sellingprice = goldprice.selling_price\n      if(pricetype.value == 2) \n      {\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\n       \n      }\n      let priceratio = element.shortCode / defaultpurity.shortCode;\n\n      let goldprice_val = priceratio*goldprice.cost_price\n      let goldsellingprice_val = priceratio*sellingprice\n      sellingpricejson[element.shortCode] = goldsellingprice_val\n\n      pricejson[element.shortCode] = goldprice_val\n    })\n    setPuritysellingprices(sellingpricejson)\n    setPurityprices(pricejson)\n    }else{\n      let pricejson = {}\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\n\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\n      setPuritysellingprices(sellingpricejson)\n      setPurityprices(pricejson)\n    }\n\n    \n     setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={materials}\n                  margin=\"dense\"\n                  fullWidth\n                  disableClearable={true}\n                 value={defaultmetal}\n                   onChange={handlemetalChange(\"material\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\n                /> \n\n                \n\n\n\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.cost_price}\n                             onChange={handleInputChange(\"cost_price\")}\n                            label=\"Cost Price\"\n                          />\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.pricetype}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                 value={pricetype}\n                  onChange={handlepricetypeChange}\n                  getOptionLabel={(option) => option.label}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\n                /> \n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.selling_price}\n                             onChange={handleInputChange(\"selling_price\")}\n                            label=\"Selling Price\"\n                          />\n              \n             {defaultpurity.name ?  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masterpurities}\n                  margin=\"dense\"\n                  fullWidth\n                  disabled\n                  style={{marginLeft: 16, width:200}}\n                  value={defaultpurity}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\n                  variant=\"outlined\" />}\n                />  : null }\n                {defaultmetal.name == 'Gold' ? \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button> : null}\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\n          {data.goldpurity.map((purityname, index) =>(\n           \n           <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.shortCode]}\n                      onChange={handlePriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n                    <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     style={{marginLeft: 16}}\n\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={puritysellingprices[purityname.shortCode]}\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))} </>:null }\n          <Grid item xs={12} sm={6} lg={3} >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={mastervendors}\n                    multiple\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\n                /> \n        </Grid>\n          </> : null}\n          \n         </Grid>\n         <Grid item  >\n\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n            </Grid>\n      </CardContent>\n      </Card>\n\n{/* \n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n    */}\n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const [filtercontent,setFiltercontent] = React.useState({\n    \"seacrchtext\" : props.fitltercontent.searchtext,\n    \"size\": props.fitltercontent.size,\n    \"offset\":props.fitltercontent.offset\n  })\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n   // alert(editcontent.searchcontent)\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\n\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    props.onPagechange((newPage*rowsPerPage))\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n   \n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    props.onPagesizechange(parseInt(event.target.value, 10))\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {row[columnname.key]} \n                                       </Moment>:null } \n                                       {columnname.type == 8 ?  <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/customerdetails/'+row['id']}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>:null }                 \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.totalcount]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from './Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const [totalcount, setTotalcount] = React.useState(0)\n\n  const [bodycontent, setBodycontent] = React.useState({\n    \"seacrchtext\" : '',\n    \"size\": 50,\n    \"offset\":0\n  })\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster(50,0)\n  }\n  function changeresult(filtercontent)\n  {\n    setBodycontent(filtercontent)\n  }\n  async function getmaster(size,offset,searchtext)\n  {\n   \n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\n    let adminusers = response.users.rows;\n    let users = []\n    setTotalcount(response.users.count)\n    adminusers.forEach(element => {\n      //   let userobj = {}\n      //   userobj['id'] = element.id;\n      //  // userobj['username'] = element.username;\n      //  // userobj['password'] = element.password;\n      //   userobj['email'] = element.email;\n      //   userobj['mobile'] = element.mobile;\n      //   userobj['status'] = element.status === 'Active' ? true : false;\n      //   let roles = []\n      //   let rolesnames = []\n\n      //   let userroles = element.user_roles;\n      //   userroles.forEach(userroleobj => {\n\n      //     let roleobj = {}\n      //     roleobj['id'] = userroleobj.master_role.id\n      //     roleobj['name'] = userroleobj.master_role.name\n      //     roles.push(roleobj)\n      //     rolesnames.push(userroleobj.master_role.name)\n      //   })\n      //   userobj['roles'] = roles\n      //   userobj['rolenames'] = rolesnames.join(' , ')\n        if(element.orders)\n        {\n          element['orders'] = element.orders.length\n        }else{\n          element['orders'] = 0\n        }\n        users.push(element)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    //setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\n  }\n  async function changepageoffset(taxcontent)\n  {\n    setBodycontent({...bodycontent,offset: taxcontent})\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\n  }\n  async function changepagesize(taxcontent)\n  {\n    setBodycontent({...bodycontent,size: taxcontent})\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Page from '../../components/Page/Page'\nimport { Header } from './components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\nexport const CustomerManagementDetails = withRouter(props => {\n\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    //return <Redirect to={`/customerdetails`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n   // return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <Page\n    //   className={classes.root}\n    //   title=\"Customer Management Details\"\n    // >\n    //   <Header />\n    //    <Tabs\n    //     className={classes.tabs}\n    //     onChange={handleTabsChange}\n    //     scrollButtons=\"auto\"\n    //     value={tab}\n    //     variant=\"scrollable\"\n    //   >\n    //     {tabs.map(tab => (\n    //       <Tab\n    //         key={tab.value}\n    //         label={tab.label}\n    //         value={tab.value}\n    //       />\n    //     ))}\n    //   </Tabs>\n    //   <Divider className={classes.divider} />\n    //  {/* <div className={classes.content}>\n    //     {tab === 'summary' && <Summary />}\n    //     {tab === 'invoices' && <Invoices />}\n    //     {tab === 'logs' && <Logs />}\n    //   </div> */}\n    // </Page>\n  );\n});\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n      //     setInvoices(response.data.invoices);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst General = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer ? customer.email : \"\"}\n                {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.isemailverified\n                      ? 'Email verified'\n                      : 'Email not verified'} \n                  </Label>\n                </div>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Phone</TableCell>\n               <TableCell>{customer.mobile}\n               {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.ismobileverified\n                      ? 'Mobile verified'\n                      : 'Mobile not verified'} \n                  </Label>\n                </div>}\n                </TableCell>\n            </TableRow>\n            \n          </TableBody>\n        </Table>\n      </CardContent>\n      {/* <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions> */}\n      {/* <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      /> */}\n    </Card>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default General;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from \"react-router-dom\";\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport {General, Results} from './components'\nimport Mastercontent from '../../components/Mastercontent'\nimport data from './data.json'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    height: '80vh'\n  },\n  tabs: {\n    minWidth: '250px',\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    marginRight : theme.spacing(2),\n    borderRight: `2px solid ${theme.palette.divider}`,\n  },\n}));\nconst master_options = ['Address Book','Wish List','Orders']\n  const master_options_url = ['/address','/userwishlist','/orderlist']\n\nexport const Customerdetails = withRouter(props => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [value, setValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({});\n  const [customer, setCustomer] = React.useState({});\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    // history.push(`orderlist/${id}`)\n    window.location.href = `orderlist/${id}`\n  }\n  let user_id = props.location.pathname.split('/')[2];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\nasync function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n\n    setCustomer(response.userprofile)\n  }\n  React.useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid> */}\n    <Grid container item xs={12} sm={12} lg={12} >\n    <Grid  item xs={12} sm={6} lg={6} >\n    <General customer ={customer} /> \n\n      </Grid>\n\n    </Grid>\n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={2} lg={2} >\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\n     <Card fullwidth\n    //  onClick={(e) => ProductEdit(customer.id)}\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <div className={classes.root}>\n      \n    //   <Tabs\n    //     orientation=\"vertical\"\n    //     variant=\"standard\"\n    //     value={value}\n    //     onChange={handleChange}\n    //     aria-label=\"Vertical tabs example\"\n    //     className={classes.tabs}\n    //   >\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\n \n    //   </Tabs>\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\n    //   <General customer ={customer} /> </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\n\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\n      \n    //   </TabPanel>\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\n    //   </TabPanel>\n      \n     \n    // </div>\n  );\n});\n\nexport default Customerdetails;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Userwishlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Userwishlist;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Useraddresses = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Useraddresses;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.hsnNumber}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Tax Settings\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addtaxattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n    let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\n    //  getmaster()\n     history.push('/taxsettings')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TAXMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n\n            var selectedcategory = []\n            \n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories)\n              {\n                if(categories.indexOf(catobj.alias) > -1)\n                {\n                  selectedcategory.push(catobj)\n                }\n              }\n              \n\n            })\n\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addtaxattributes;","import gql from \"graphql-tag\";\n\nlet CREATE_HOLIDAY = gql`\n  mutation ($item: HolidayManagerInput!) {\n    createHolidayManager(input: { holidayManager: $item }) {\n      holidayManager {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_HOLIDAY = gql`\n  mutation ($id: Int!, $item: HolidayManagerPatch!) {\n    updateHolidayManagerById(input: { id: $id, holidayManagerPatch: $item }) {\n      holidayManager {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_HOLIDAY = gql`\n  mutation ($id: Int!) {\n    deleteHolidayManagerById(input: { id: $id }) {\n      clientMutationId\n    }\n  }\n`;\n\nlet CREATE_WAREHOUSE = gql`\n  mutation ($item: WarehouseInput!) {\n    createWarehouse(input: { warehouse: $item }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_WAREHOUSE = gql`\n  mutation ($id: Int!, $item: WarehousePatch!) {\n    updateWarehouseById(input: { id: $id, warehousePatch: $item }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_WAREHOUSE = gql`\n  mutation ($id: Int!) {\n    deleteWarehouseById(input: { id: $id }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet CREATE_INVENTORY = gql`\n  mutation ($item: InventoryInput!) {\n    createInventory(input: { inventory: $item }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_INVENTORY = gql`\n  mutation ($id: UUID!, $item: InventoryPatch!) {\n    updateInventoryById(input: { id: $id, inventoryPatch: $item }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_INVENTORY = gql`\n  mutation ($id: UUID!) {\n    deleteInventoryById(input: { id: $id }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nexport {\n  CREATE_HOLIDAY,\n  UPDATE_HOLIDAY,\n  DELETE_HOLIDAY,\n  CREATE_WAREHOUSE,\n  UPDATE_WAREHOUSE,\n  DELETE_WAREHOUSE,\n  CREATE_INVENTORY,\n  UPDATE_INVENTORY,\n  DELETE_INVENTORY,\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst HolidayModal = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Holiday-Modal\"}\n    >\n      <DialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{`${props.type} Holiday`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              label={\"Holiday\"}\n              name=\"holiday\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.holiday}\n              onChange={props.editItem}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                className={classes.inputField}\n                label={\"Date\"}\n                name=\"date\"\n                fullWidth\n                inputVariant=\"outlined\"\n                value={props.item.date}\n                onChange={(_, value) => props.editItem(value, \"date\")}\n                format={\"yyyy-MM-dd\"}\n              />\n            </MuiPickersUtilsProvider>\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default HolidayModal;\n","import React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  LinearProgress,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_HOLIDAY,\n  DELETE_HOLIDAY,\n  UPDATE_HOLIDAY,\n} from \"../../graphql/mutation\";\nimport { HOLIDAYLIST } from \"../../graphql/query\";\nimport HolidayModal from \"./HolidayModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../config\";\nimport { NetworkStatus } from \"apollo-client\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport const HolidayManager = (props) => {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const { loading, data, error, refetch, networkStatus } = useQuery(\n    HOLIDAYLIST,\n    {\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\n    }\n  );\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({ holiday: \"\", date: null });\n\n  const editItem = (event, type) => {\n    var name, value;\n    if (type == \"date\") {\n      name = type;\n      value = event;\n    } else {\n      name = event.target.name;\n      value = event.target.value;\n    }\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n    setItem({ holiday: \"\", date: null });\n  };\n\n  const handleSave = () => {\n    if (type == \"Edit\") {\n      var id = item.id;\n      delete item.id;\n      delete item.createdAt;\n      delete item.updatedAt;\n      delete item.__typename;\n      item[\"updatedAt\"] = new Date();\n      client\n        .mutate({\n          mutation: UPDATE_HOLIDAY,\n          variables: {\n            id,\n            item,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_HOLIDAY,\n          variables: {\n            item,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Delete\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: DELETE_HOLIDAY,\n          variables: {\n            id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n\n  const handleUpload = (file) => {\n    var bodyFormData = new FormData();\n    bodyFormData.set(\"file\", file);\n    // console.log(file);\n    axios\n      .post(API_URL + \"/addholidays\", bodyFormData)\n      .then((res) => {\n        if (res) {\n          snack.setSnack({\n            open: true,\n            msg: \"Successfully added holidays!\",\n          });\n          refetch();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured!\",\n        });\n      });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={12}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Holiday Manager</Typography>\n\n        <input\n          accept=\".csv\"\n          className={classes.input}\n          id=\"icon-button-file\"\n          type=\"file\"\n          onChange={(event) => {\n            const files = event.target.files;\n            if (files) {\n              handleUpload(files[0]);\n            }\n          }}\n        />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n          >\n            <Tooltip title=\"Upload Holidays\">\n              <CloudUploadIcon />\n            </Tooltip>\n          </IconButton>\n        </label>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            var a = document.createElement(\"a\");\n            a.href = \"/sample/holidays.csv\";\n            a.setAttribute(\"download\", \"holidays.csv\");\n            a.click();\n          }}\n        >\n          <Tooltip title=\"Download sample file\">\n            <GetAppIcon />\n          </Tooltip>\n        </IconButton>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n          }}\n        >\n          <Tooltip title=\"Add Holiday\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Holiday</TableCell>\n                <TableCell align={\"center\"}>Date</TableCell>\n                <TableCell align={\"center\"}>Created On</TableCell>\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(loading || NetworkStatus.refetch === networkStatus) && (\n                <TableRow>\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={5} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allHolidayManagers?.nodes.length == 0 && (\n                <TableRow>\n                  <TableCell colSpan={5} align={\"center\"}>\n                    <Typography>No Holidays found!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allHolidayManagers?.nodes.length > 0 &&\n                data?.allHolidayManagers?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.holiday}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.date, \"YYYY-MM-DD\").format(\"MMM DD,YYYY\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  colSpan={5}\n                  align={\"right\"}\n                  rowsPerPageOptions={[10, 25, 100]}\n                  count={data?.allHolidayManagers?.totalCount}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <HolidayModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst WarehouseModal = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Warehouse-Modal\"}\n    >\n      <DialogTitle\n        id=\"Warehouse-Modal\"\n        disableTypography\n        className={classes.root}\n      >\n        <Typography variant=\"h6\">{`${props.type} Warehouse`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              label={\"Name\"}\n              name=\"name\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.name}\n              onChange={props.editItem}\n            />\n            <TextField\n              className={classes.inputField}\n              label={\"Shipping In Days\"}\n              name=\"shippingInDays\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.shippingInDays}\n              onChange={props.editItem}\n            />\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default WarehouseModal;\n","import React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  Switch,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_WAREHOUSE,\n  DELETE_WAREHOUSE,\n  UPDATE_WAREHOUSE,\n} from \"../../graphql/mutation\";\nimport { WAREHOUSELIST } from \"../../graphql/query\";\nimport WarehouseModal from \"./WarehouseModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport moment from \"moment\";\n\nexport const Warehouse = (props) => {\n  const { loading, data, error, refetch } = useQuery(WAREHOUSELIST);\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({ name: \"\", shippingInDays: \"\" });\n\n  const editItem = (event) => {\n    var { name, value } = event.target;\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n    setItem({ name: \"\", shippingInDays: \"\" });\n  };\n\n  const handleSave = () => {\n    item[\"shippingInDays\"] = parseInt(item.shippingInDays);\n    if (type === \"Edit\") {\n      var id = item.id;\n      delete item.id;\n      delete item.createdAt;\n      delete item.updatedAt;\n      delete item.__typename;\n      item[\"updatedAt\"] = new Date();\n      client\n        .mutate({\n          mutation: UPDATE_WAREHOUSE,\n          variables: {\n            id,\n            item,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_WAREHOUSE,\n          variables: {\n            item,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setOpen(false);\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Delete\") {\n      client\n        .mutate({\n          mutation: DELETE_WAREHOUSE,\n          variables: {\n            id: item.id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n\n  const handleSwitch = (id, isActive) => {\n    client\n      .mutate({\n        mutation: UPDATE_WAREHOUSE,\n        variables: {\n          id,\n          item: { isActive: !isActive, updatedAt: new Date() },\n        },\n      })\n      .then((res) => {\n        if (res) {\n          onClose();\n          snack.setSnack({\n            open: true,\n            msg: \"Successfully Updated!\",\n          });\n          refetch();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        onClose();\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured!\",\n        });\n      });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={12}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Warehouse</Typography>\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n          }}\n        >\n          <Tooltip title=\"Add Warehouse\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Name</TableCell>\n                <TableCell align={\"center\"}>Shipping In Days</TableCell>\n                <TableCell align={\"center\"}>Created On</TableCell>\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\n                <TableCell align={\"center\"}>Status</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allWarehouses?.nodes.length === 0 && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>No Warehouses found!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allWarehouses?.nodes.length > 0 &&\n                data?.allWarehouses?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.name}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.shippingInDays}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <Switch\n                        checked={item.isActive}\n                        onChange={() => handleSwitch(item.id, item.isActive)}\n                        name=\"active\"\n                        color=\"primary\"\n                      />\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <WarehouseModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport { VALIDATEGENERATEDSKU, WAREHOUSELIST } from \"../../graphql/query\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst InventoryModal = (props) => {\n  const classes = useStyles();\n  const { loading, data } = useQuery(WAREHOUSELIST);\n\n  const client = useApolloClient();\n  const [error, setError] = React.useState(false);\n\n  const validateGeneratedSku = (generatedSku) => {\n    client\n      .mutate({\n        mutation: VALIDATEGENERATEDSKU,\n        variables: { generatedSku },\n      })\n      .then((res) => {\n        if (res?.data?.allTransSkuLists?.nodes?.length === 0) {\n          setError(\"Tag No doesn't exists!\");\n        } else {\n          setError(false);\n        }\n      });\n  };\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Holiday-Modal\"}\n    >\n      <DialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{`${props.type} Inventory`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              required\n              label={\"Tag No\"}\n              name=\"generatedSku\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.generatedSku}\n              onChange={props.editItem}\n              error={Boolean(error)}\n              helperText={error}\n              onBlur={() => validateGeneratedSku(props.item.generatedSku)}\n            />\n            <TextField\n              className={classes.inputField}\n              required\n              type={\"Number\"}\n              label={\"Quantity\"}\n              name=\"numberOfItems\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.numberOfItems}\n              onChange={props.editItem}\n            />\n            <Autocomplete\n              loading={loading}\n              options={data?.allWarehouses?.nodes}\n              getOptionSelected={(option, value) => option.name === value.name}\n              getOptionLabel={(option) => option.name}\n              value={props.item.warehouse}\n              onChange={props.editItem}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Warehouse\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    ...params.InputProps,\n                    endAdornment: (\n                      <React.Fragment>\n                        {loading ? (\n                          <CircularProgress color=\"inherit\" size={20} />\n                        ) : null}\n                        {params.InputProps.endAdornment}\n                      </React.Fragment>\n                    ),\n                  }}\n                />\n              )}\n            />\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default InventoryModal;\n","import React from \"react\";\nimport {\n  Badge,\n  Grid,\n  IconButton,\n  InputAdornment,\n  LinearProgress,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_INVENTORY,\n  DELETE_INVENTORY,\n  UPDATE_INVENTORY,\n} from \"../../graphql/mutation\";\nimport { INVENTORYLIST, STOCKSTATUS } from \"../../graphql/query\";\nimport InventoryModal from \"./InventoryModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { v4 as uuid } from \"uuid\";\nimport { NetworkStatus } from \"apollo-client\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../config\";\nimport moment from \"moment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  iconButton: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n    flexDirection: \"column\",\n  },\n  icon: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"inherit\",\n    },\n  },\n  searchInput: {\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: 8,\n    },\n  },\n}));\n\nconst StockStatus = (props) => {\n  const classes = useStyles();\n  const { data } = useQuery(STOCKSTATUS);\n  return (\n    <>\n      {data &&\n        data.allWarehouses.nodes.length > 0 &&\n        data.allWarehouses.nodes.map((item, index) => (\n          <Badge\n            badgeContent={\n              item?.inventoriesByWarehouseId?.aggregates?.sum?.numberOfItems\n            }\n            max={99999999}\n            color={\"error\"}\n            key={index}\n            component=\"div\"\n            className={classes.iconButton}\n            overlap=\"circle\"\n          >\n            <IconButton\n              disableRipple\n              className={classes.icon}\n              onClick={() => {\n                props.setWarehouse(item?.name);\n              }}\n            >\n              <StoreIcon\n                style={{ fontSize: 35 }}\n                color={item?.name === props.warehouse ? \"secondary\" : \"default\"}\n              />\n            </IconButton>\n            <Typography variant=\"subtitle2\">{item?.name}</Typography>\n          </Badge>\n        ))}\n    </>\n  );\n};\n\nexport const Inventory = (props) => {\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [search, setSearch] = React.useState(null);\n  const [warehouse, setWarehouse] = React.useState(null);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const { loading, data, error, refetch, networkStatus } = useQuery(\n    INVENTORYLIST,\n    {\n      variables: {\n        first: rowsPerPage,\n        offset: page * rowsPerPage,\n        filter: {\n          [\"generatedSku\"]: search ? { includesInsensitive: search } : null,\n          warehouseByWarehouseId: {\n            name: {\n              includesInsensitive: warehouse,\n            },\n          },\n        },\n      },\n    }\n  );\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({\n    generatedSku: \"\",\n    numberOfItems: \"\",\n    warehouse: { id: \"\", name: \"\" },\n  });\n\n  const editItem = (event, newValue) => {\n    var name, value;\n    if (newValue) {\n      console.log(newValue);\n      name = \"warehouse\";\n      value = newValue;\n    } else {\n      name = event.target.name;\n      value = event.target.value;\n    }\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n  };\n\n  const handleSave = () => {\n    if (type === \"Edit\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: UPDATE_INVENTORY,\n          variables: {\n            id,\n            item: {\n              generatedSku: item.generatedSku,\n              numberOfItems: parseInt(item.numberOfItems),\n              warehouseId: item.warehouse.id,\n              updatedAt: new Date(),\n            },\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_INVENTORY,\n          variables: {\n            item: {\n              id: uuid(),\n              generatedSku: item.generatedSku,\n              numberOfItems: parseInt(item.numberOfItems),\n              warehouseId: item.warehouse.id,\n            },\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Delete\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: DELETE_INVENTORY,\n          variables: {\n            id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n\n  const handleUpload = (file) => {\n    var bodyFormData = new FormData();\n    bodyFormData.set(\"file\", file);\n    console.log(file);\n    axios\n      .post(API_URL + \"/addinventories\", bodyFormData)\n      .then((res) => {\n        if (res) {\n          snack.setSnack({\n            open: true,\n            msg: res.data.message || \"Successfully uploaded!\",\n          });\n          refetch();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured!\",\n        });\n      });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={6}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Inventory</Typography>\n\n        <input\n          accept=\".csv\"\n          className={classes.input}\n          id=\"icon-button-file\"\n          type=\"file\"\n          onChange={(event) => {\n            const files = event.target.files;\n            if (files) {\n              handleUpload(files[0]);\n            }\n          }}\n        />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n          >\n            <Tooltip title=\"Upload Inventory\">\n              <CloudUploadIcon />\n            </Tooltip>\n          </IconButton>\n        </label>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            var a = document.createElement(\"a\");\n            a.href = \"/sample/inventory.csv\";\n            a.setAttribute(\"download\", \"inventory.csv\");\n            a.click();\n          }}\n        >\n          <Tooltip title=\"Download sample file\">\n            <GetAppIcon />\n          </Tooltip>\n        </IconButton>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n            setItem({\n              generatedSku: \"\",\n              numberOfItems: \"\",\n              warehouse: { id: \"\", name: \"\" },\n            });\n          }}\n        >\n          <Tooltip title=\"Add Inventory\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n        <TextField\n          className={classes.searchInput}\n          name=\"tagno\"\n          placeholder=\"Search Tag No.\"\n          size=\"medium\"\n          variant=\"outlined\"\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        container\n        xs={6}\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"center\"\n      >\n        <StockStatus warehouse={warehouse} setWarehouse={setWarehouse} />\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Tag No</TableCell>\n                <TableCell align={\"center\"}>Quantity</TableCell>\n                <TableCell align={\"center\"}>Warehouse</TableCell>\n                <TableCell align={\"center\"}>Created On</TableCell>\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(loading || networkStatus === NetworkStatus.refetch) && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allInventories?.nodes.length == 0 && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>No items in inventory!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allInventories?.nodes.length > 0 &&\n                data?.allInventories?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.generatedSku}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.numberOfItems}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.warehouse.name}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  colSpan={6}\n                  align={\"right\"}\n                  rowsPerPageOptions={[10, 25, 100]}\n                  count={data?.allInventories?.totalCount}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <InventoryModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from \"react\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { withRouter } from \"react-router-dom\";\nimport { useStyles } from \"./styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { ProductContext } from \"../../context\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { GlobalContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nimport { Paper, Avatar, Typography } from \"@material-ui/core\";\nimport data from \"../menupages.json\";\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { isreload, setIsreload } = React.useState(false);\n  let accesspages = localStorage.getItem(\"accesspages\");\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\n  };\n  const handleClick = (type) => (e) => {\n    if (type === \"Pricing\" || type == \"Inventory & Shipping Setup\") {\n      setGlobalCtx({\n        ...globalCtx,\n        optionname: type,\n        selectedIndex: 5,\n        isExpand: !globalCtx.isExpand,\n      });\n    } else {\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\n    }\n  };\n  async function getmasterpages() {\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\n    let pages = [];\n    let pagepermissions = [];\n\n    pageaccess.pages.forEach((element) => {\n      pages.push(element.pageurl);\n      if (element.is_write) {\n        pagepermissions.push(element.pageurl);\n      }\n    });\n    // setPages(pageaccess)\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\n    //setIsreload(true)\n\n    localStorage.setItem(\"accesspages\", pages);\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\n\n    window.location.reload();\n  }\n  React.useEffect(() => {\n    //alert(globalCtx.accesspages)\n    if (!accesspages) {\n      // getmasterpages()\n    } else {\n      //  setIsreload(true)\n    }\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\n  }, []);\n  function handleListItemClick(event, index) {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\n  }\n\n  return (\n    <>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n\n        <List>\n          {data.menus.map((menuobj, index) => (\n            <React.Fragment key={index}>\n              {menuobj.submenu ? (\n                <>\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <>\n                      <ListItem button onClick={handleClick(menuobj.name)}>\n                        <ListItemIcon>\n                          <InboxIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                        {globalCtx.isExpand &&\n                        globalCtx.optionname === menuobj.name ? (\n                          <ExpandLess />\n                        ) : (\n                          <ExpandMore />\n                        )}\n                      </ListItem>\n                      <Collapse\n                        in={\n                          globalCtx.isExpand &&\n                          globalCtx.optionname === menuobj.name\n                        }\n                        timeout=\"auto\"\n                        unmountOnExit\n                      >\n                        <List component=\"div\" disablePadding>\n                          {menuobj.submenu.map((submenuobj, subindex) => (\n                            <React.Fragment key={subindex}>\n                              {accesspages &&\n                              accesspages.indexOf(submenuobj.url) > -1 ? (\n                                <Link\n                                  underline=\"none\"\n                                  component={RouterLink}\n                                  to={submenuobj.url}\n                                >\n                                  <ListItem\n                                    button\n                                    className={classes.nested}\n                                    selected={\n                                      globalCtx.selectedIndex === subindex\n                                    }\n                                    onClick={(event) =>\n                                      handleListItemClick(event, subindex)\n                                    }\n                                  >\n                                    <ListItemIcon>\n                                      <StarBorder />\n                                    </ListItemIcon>\n                                    <ListItemText primary={submenuobj.name} />\n                                  </ListItem>\n                                </Link>\n                              ) : null}\n                            </React.Fragment>\n                          ))}\n                        </List>\n                      </Collapse>{\" \"}\n                    </>\n                  ) : null}\n                </>\n              ) : (\n                <>\n                  {\" \"}\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <Link\n                      underline=\"none\"\n                      component={RouterLink}\n                      to={menuobj.url}\n                    >\n                      <ListItem\n                        button\n                        key={\"Product List\"}\n                        selected={globalCtx.optionname === menuobj.name}\n                        onClick={handleClick(menuobj.name)}\n                      >\n                        <ListItemIcon>\n                          <InboxIcon />{\" \"}\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                      </ListItem>\n                    </Link>\n                  ) : null}{\" \"}\n                </>\n              )}\n            </React.Fragment>\n          ))}\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link> */}\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport { useStyles } from \"./styles\";\nimport { withRouter } from \"react-router-dom\";\nimport SideBar from \"../SideBar\";\nimport { GlobalContext } from \"../../context\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport \"./style.css\";\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handlelogout() {\n    localStorage.removeItem(\"accesstoken\");\n    window.location = \"/\";\n  }\n\n  function handleDrawer() {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n  }\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem> */}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: globalCtx.sideBarOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{ color: \"#fff\" }} variant=\"h4\" noWrap>\n            Stylori\n          </Typography>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = (props) => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return (\n    <main className={classes.content}>\n      <div className={classes.toolbar} />\n      <Component {...rest} />\n    </main>\n  );\n};\n\nexport const withAppBar = (component, props) => {\n  return (\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n};\n\nexport default PrimaryAppBar;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport route from \"./route\";\nimport { withAppBar } from \"../components/PrimaryAppBar\";\n\nconst PrivateRoute = (props) => {\n  const { component, ...rest } = props;\n\n  const checkAuth = () => {\n    let accesstoken = localStorage.getItem(\"accesstoken\");\n    if (accesstoken) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const Component = (props) => withAppBar(component, props);\n  return checkAuth() ? (\n    rest.path === \"/\" || rest.path === \"/login\" ? (\n      <Redirect to={route.productlist} />\n    ) : (\n      <Component {...rest} />\n    )\n  ) : (\n    <Redirect to={route.login} />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditDiamond = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    diamondweight  : diamond.diamondweight ? diamond.diamondweight : '',\n    diamondcount  : diamond.diamondcount ? diamond.diamondcount : '',\n    diamondsettings : diamond.diamondsettings ? diamond.diamondsettings : null,\n    diamondshape : diamond.diamondshape ? diamond.diamondshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.diamondweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.diamondcount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondsettings}\n                    value={editcontent.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditDiamond.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditDiamond;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditDiamond from './Components/EditDiamond/EditDiamond';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    \n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setEditcontent({\n      id : diamondData.id,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    setOpenedit(true)\n  }\n  async function DiamondSave(diamondobj){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight){\n      \n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(diamondobj.id===diamondListData.id){\n          diamondListData.diamondSettings=diamondobj.diamondsettings.name;\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\n          diamondListData.stoneCount = diamondobj.diamondcount;\n          diamondListData.stoneWeight = diamondobj.diamondweight;\n          bodydata['diamondSettings'] = diamondobj.diamondsettings.name\n          bodydata['diamondShape'] = diamondobj.diamondshape.name\n          bodydata['stoneCount'] = diamondobj.diamondcount;\n          bodydata['stoneWeight'] = diamondobj.diamondweight;\n          bodydata['diamondid'] = diamondobj.id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      let response =  await sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n   // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      setEditcontent(null)\n      setOpenedit(false)\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table> \n        {editcontent && <EditDiamond\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditGemstone = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    gemstonesettings  : diamond.gemstonesettings ? diamond.gemstonesettings : '',\n    gemstonecount  : diamond.gemstonecount ? diamond.gemstonecount : '',\n    gemstoneweight : diamond.gemstoneweight ? diamond.gemstoneweight : null,\n    gemstonesize : diamond.gemstonesize ? diamond.gemstonesize : null,\n\n    \n    gemstoneshape : diamond.gemstoneshape ? diamond.gemstoneshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n   // alert(JSON.stringify(editcontent.gemstonecount))\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        \n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstonesize}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstonesize')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstoneweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstoneweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.gemstonecount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.gemstonesettings}\n                    value={editcontent.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.gemstoneshape}\n                    options={productCtx.masterData.gemstoneshape}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditGemstone.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditGemstone;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport EditGemstone from \"./Components/EditGemstone/EditGemstone\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: \"Gemstone Type\", label: \"Gemstone Type\" },\n  { id: \"Shape\", label: \"Shape\" },\n  { id: \"Setting\", label: \"Setting\" },\n  { id: \"Size\", label: \"Size\" },\n  { id: \"Weight\", label: \"Weight\" },\n  { id: \"Number\", label: \"Number\" },\n  {\n    id: \"Edit\",\n    label: \"Edit\",\n    minWidth: 120,\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  let [gemstoneEditObject, setGemstoneEditObject] = React.useState({\n    edit: \"\",\n  });\n  const emptyRows =\n    rowsPerPage -\n    Math.min(\n      rowsPerPage,\n      props.gemstone && props.gemstone.length - page * rowsPerPage\n    );\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit: JSON.parse(JSON.stringify(gemstoneData)),\n    });\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\n        (settingData, index) =>\n          settingData.name === gemstoneData.gemstoneSetting\n      )[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\n      )[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize,\n    });\n    setEditcontent({\n      id: gemstoneData.id,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\n        (settingData, index) =>\n          settingData.name === gemstoneData.gemstoneSetting\n      )[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\n      )[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize,\n    });\n    // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n    setOpenedit(true);\n  }\n  async function GemstoneSave(gemdata) {\n    if (\n      gemdata.gemstonesettings &&\n      gemdata.gemstoneshape &&\n      gemdata.gemstonecount &&\n      gemdata.gemstoneweight &&\n      gemdata.gemstonesize\n    ) {\n      let list_data = props.gemstone;\n      var bodydata = {};\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (gemdata.id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\n          bodydata[\"gemstoneSetting\"] = gemdata.gemstonesettings.name;\n          bodydata[\"gemstoneShape\"] = gemdata.gemstoneshape.name;\n          bodydata[\"stoneCount\"] = gemdata.gemstonecount;\n          bodydata[\"gemstoneSize\"] = gemdata.gemstonesize;\n          bodydata[\"stoneWeight\"] = gemdata.gemstoneweight;\n          bodydata[\"id\"] = gemdata.id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response = await sendNetworkRequest(\n        \"/editproductgemstone\",\n        {},\n        bodydata\n      );\n      let editGemstoneList =\n        gemstoneChangeData &&\n        gemstoneChangeData.filter(\n          (edit_data, index) => edit_data.id === gemdata.id\n        )[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if (\n        JSON.stringify(editGemstoneList) !==\n        JSON.stringify(gemstoneEditObject.edit)\n      ) {\n        let status =\n          editGemstoneLists &&\n          editGemstoneLists.some(\n            (check_edit, index) => check_edit.id === editGemstoneList.id\n          )\n            ? (editGemstoneLists =\n                editGemstoneLists &&\n                editGemstoneLists.map((gemstone_list, index) => {\n                  if (gemstone_list.id === editGemstoneList.id) {\n                    return editGemstoneList;\n                  }\n                  return gemstone_list;\n                }))\n            : editGemstoneLists.push(editGemstoneList);\n      }\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\",\n      });\n      setEditcontent(null);\n      setOpenedit(false);\n      //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not fill all item\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n  const handleInputChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  return (\n    <Paper className={classes.root}>\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone &&\n              props.gemstone\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.gemstoneType}\n                    </TableCell>\n                    {btnEdit.action && btnEdit.id == row.id ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          value={productCtx.gemstoneshape}\n                          options={productCtx.masterData.gemstonshapes}\n                          onChange={handleoptionChange(\"gemstoneshape\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Gemstone Shape\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </TableCell>\n                    ) : (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.gemstoneShape}\n                      </TableCell>\n                    )}\n                    {btnEdit.action && btnEdit.id == row.id ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          value={productCtx.gemstonesettings}\n                          options={productCtx.masterData.gemstonesettings}\n                          onChange={handleoptionChange(\"gemstonesettings\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Gemstone Setting\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </TableCell>\n                    ) : (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.gemstoneSetting}\n                      </TableCell>\n                    )}\n                    {btnEdit.action && btnEdit.id == row.id ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Input\n                          variant=\"outlined\"\n                          fullWidth\n                          id=\"size\"\n                          margin=\"dense\"\n                          label=\"Gemstone Size\"\n                          name=\"size\"\n                          onChange={handleInputChange(\"gemstonesize\")}\n                          autoComplete=\"size\"\n                          value={productCtx.gemstonesize}\n                        />\n                      </TableCell>\n                    ) : (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.gemstoneSize}\n                      </TableCell>\n                    )}\n                    {btnEdit.action && btnEdit.id == row.id ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Input\n                          variant=\"outlined\"\n                          fullWidth\n                          id=\"size\"\n                          margin=\"dense\"\n                          label=\"Weight\"\n                          name=\"size\"\n                          autoComplete=\"size\"\n                          onChange={handleInputChange(\"gemstoneweight\")}\n                          value={productCtx.gemstoneweight}\n                        />\n                      </TableCell>\n                    ) : (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.stoneWeight}\n                      </TableCell>\n                    )}\n                    {btnEdit.action && btnEdit.id == row.id ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Input\n                          variant=\"outlined\"\n                          fullWidth\n                          id=\"size\"\n                          margin=\"dense\"\n                          label=\"#of Stones\"\n                          name=\"size\"\n                          autoComplete=\"size\"\n                          onChange={handleInputChange(\"gemstonecount\")}\n                          value={productCtx.gemstonecount}\n                        />\n                      </TableCell>\n                    ) : (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.stoneCount}\n                      </TableCell>\n                    )}\n                    {btnEdit.action && btnEdit.id == row.id ? (\n                      <TableCell align=\"center\">\n                        <Button onClick={(e) => GemstoneSave(row.id)}>\n                          <SaveIcon />\n                        </Button>\n                      </TableCell>\n                    ) : (\n                      <TableCell align=\"center\">\n                        <Button onClick={(e) => GemstoneEdit(row)}>\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && (\n          <EditGemstone\n            diamond={editcontent}\n            onApply={GemstoneSave}\n            onClose={handleApplicationClose}\n            open={openedit}\n          />\n        )}\n      </div>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nconst columns = [\n  { id: \"SKU\", label: \"SKU\" },\n  { id: \"Metal Colour\", label: \"Metal Colour\" },\n  { id: \"Metal Purity\", label: \"Metal Purity\" },\n  { id: \"Gold Weight\", label: \"Gold Weight\" },\n  { id: \"Size\", label: \"Size\" },\n  { id: \"Vendor lead Time\", label: \"Vendor lead Time\" },\n  { id: \"Ready to Ship\", label: \"Ready to Ship\" },\n  { id: \"Default\", label: \"Default\" },\n  {\n    id: \"Active\",\n    label: \"Active\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n  {\n    id: \"Edit\",\n    label: \"Edit\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {}\n\n  const handleChangeswitch = (name) => (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n\n    //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist =\n      productCtx.variants &&\n      productCtx.variants.map((variant, index) => {\n        if (variant.id === variantId) {\n          let status = variant.isActive\n            ? (variant.isActive = false)\n            : (variant.isActive = true);\n        }\n        return variant;\n      });\n    let filterVariant =\n      variantslist &&\n      variantslist.filter(\n        (filter_data, index) => filter_data.id === variantId\n      )[0];\n    let editVaraint = {\n      id: filterVariant.id,\n      isActive: filterVariant.isActive,\n    };\n    let editVariants = productCtx.editVariants;\n    let editStatus =\n      editVariants &&\n      editVariants.some(\n        (check_variant, index) => check_variant.id === variantId\n      )\n        ? (editVariants =\n            editVariants &&\n            editVariants.filter(\n              (edit_variant_filter, index) =>\n                edit_variant_filter.id !== variantId\n            ))\n        : editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants: variantslist,\n      editVariants,\n    });\n  }\n  const emptyRows =\n    rowsPerPage -\n    Math.min(\n      rowsPerPage,\n      props.variants && props.variants.length - page * rowsPerPage\n    );\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange = (type) => (e) => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime: diamondData.vendorDeliveryTime,\n      discount: diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault: diamondData.isdefault,\n      editisactive: diamondData.isActive,\n    });\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\n  }\n  function DiamondSave(id) {\n    var bodydata = {};\n    if (productCtx.editleadtime) {\n      let list_data = props.variants;\n      let Skuchangedata = list_data.map((skulistdata, index) => {\n        if (id === skulistdata.generatedSku) {\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive = productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship;\n\n          skulistdata.discountDesc = productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata[\"vendorDeliveryTime\"] = productCtx.editleadtime;\n          bodydata[\"isdefault\"] = productCtx.editisdefault;\n          bodydata[\"isActive\"] = productCtx.editisactive;\n          bodydata[\"discount\"] = productCtx.discount;\n\n          bodydata[\"isReadyToShip\"] = productCtx.editreadytoship;\n          bodydata[\"generatedSku\"] = id;\n          console.log(JSON.stringify(bodydata));\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest(\"/updateskuinfo\", {}, bodydata);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  //   const handleoptionChange = type => (event, value) => {\n\n  //     setProductCtx({ ...productCtx, [type]: value})\n\n  // }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {props.columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants &&\n              props.variants\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <TableRow key={row.id}>\n                    {props.displycolumns.indexOf(\"SKU\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.generatedSku}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Metal Colour\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        scope=\"row\"\n                      >\n                        {row.metalColor}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Metal Purity\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.purity}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Gold Weight\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.skuWeight}\n                      </TableCell>\n                    ) : null}\n                    {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                    {props.displycolumns.indexOf(\"Size\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.skuSize}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Vendor lead Time\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.editleadtime}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Vendor Lead Time\"\n                            //onInput={keyPress.bind(this)}\n                            onChange={handleinputChange(\"editleadtime\")}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.vendorDeliveryTime}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.discount}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount\"\n                            //onInput={keyPress.bind(this)}\n                            onChange={handleinputChange(\"discount\")}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountDesc}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Ready To Ship\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Switch\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editreadytoship\n                              : row.isReadyToShip\n                          }\n                          // onChange={()=>handleChange(row.id)}\n                          value=\"checkedA\"\n                          // onChange={handleChangeswitch('editreadytoship')}\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editreadytoship\")\n                              : null\n                          }\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Default\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Switch\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editisdefault\n                              : row.isdefault\n                          }\n                          value=\"checkedA\"\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editisdefault\")\n                              : null\n                          }\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Active\") > -1 ? (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        <Switch\n                          checked={row.isActive}\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editisactive\n                              : row.isActive\n                          }\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editisactive\")\n                              : null\n                          }\n                          value=\"checkedA\"\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                      <TableCell style={{ width: 20 }} align=\"center\">\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\n                          <SaveIcon />\n                        </Button>\n                        <Button onClick={(e) => CancelEdit(row)}>\n                          <CancelIcon />\n                        </Button>\n                      </TableCell>\n                    ) : (\n                      <TableCell align=\"center\" style={{ width: 20 }}>\n                        <Button onClick={(e) => DiamondEdit(row)}>\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants && props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(2, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditPrice = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    editcostprice:diamond.editcostprice,\n    editcostpricetax: diamond.editcostpricetax,\n    editsellingprice:diamond.editsellingprice,\n    editsellingpricetax:diamond.editsellingpricetax,\n    editmarkupprice: diamond.editmarkupprice,\n    editmarkuppricetax : diamond.editmarkuppricetax,\n    editdiscountprice: diamond.editdiscountprice,\n    editdiscountpricetax: diamond.editdiscountpricetax\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Price Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editcostprice}\n              placeholder={\"costPrice\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"costPriceTax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostpricetax')}\n              value={editcontent.editcostpricetax}\n              />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editsellingprice}\n              placeholder={\"Selling Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Selling Pricetax\"\n              placeholder=\"Selling Pricetax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingpricetax')}\n              value={editcontent.editsellingpricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editmarkupprice}\n              placeholder={\"Markup Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkupprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Markup Price Tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkuppricetax')}\n              value={editcontent.editmarkuppricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editdiscountprice}\n              placeholder={\"Discount Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Discount Price tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountpricetax')}\n              value={editcontent.editdiscountpricetax}\n              />\n                 \n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditPrice.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditPrice;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  Typography,\n  Button,\n  Chip,\n  Input,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport EditPrice from \"./Components/EditPrice/EditPrice\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nconst columns = [\n  { id: \"SKU\", label: \"SKU\" },\n  { id: \"Cost Price\", label: \"Cost Price\" },\n  { id: \"Cost Price Tax\", label: \"Cost Price Tax\" },\n  { id: \"Selling Price\", label: \"Selling Price\" },\n  { id: \"Selling Price Tax\", label: \"Selling Price Tax\" },\n  { id: \"Markup Price\", label: \"Markup Price\" },\n  { id: \"Markup Price Tax\", label: \"Markup Price Tax\" },\n  { id: \"Discount Price\", label: \"Discount Price\" },\n  { id: \"Discount Price Tax\", label: \"Discount Price Tax\" },\n  { id: \"Margin On Sale\", label: \"Margin On Sale\" },\n  { id: \"Discount\", label: \"Discount\" },\n\n  {\n    id: \"Disable\",\n    label: \"Price Update\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: \"\",\n  });\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist =\n      productCtx.variants &&\n      productCtx.variants.map((variant, index) => {\n        if (variant.id === variantId) {\n          let status = variant.isActive\n            ? (variant.isActive = false)\n            : (variant.isActive = true);\n        }\n        return variant;\n      });\n    let filterVariant =\n      variantslist &&\n      variantslist.filter(\n        (filter_data, index) => filter_data.id === variantId\n      )[0];\n    let editVaraint = {\n      id: filterVariant.id,\n      isActive: filterVariant.isActive,\n    };\n    let editVariants = productCtx.editVariants;\n    let editStatus =\n      editVariants &&\n      editVariants.some(\n        (check_variant, index) => check_variant.id === variantId\n      )\n        ? (editVariants =\n            editVariants &&\n            editVariants.filter(\n              (edit_variant_filter, index) =>\n                edit_variant_filter.id !== variantId\n            ))\n        : editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants: variantslist,\n      editVariants,\n    });\n  }\n  const emptyRows =\n    rowsPerPage -\n    Math.min(\n      rowsPerPage,\n      props.variants && props.variants.length - page * rowsPerPage\n    );\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange = (type) => (e) => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, pricerun: true });\n\n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku: diamondData.generatedSku,\n    };\n    console.log(JSON.stringify(bodydata));\n    await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n    setBtnEdit({ ...btnEdit, id: \"\", pricerun: false });\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice: diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice: diamondData.sellingPrice,\n      editsellingpricetax: diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax: diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax,\n    });\n    setEditcontent({\n      id: diamondData.generatedSku,\n      editcostprice: diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice: diamondData.sellingPrice,\n      editsellingpricetax: diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax: diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax,\n    });\n    //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    // setOpenedit(true)\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\n  }\n  function DiamondSave(priceobj) {\n    var bodydata = {};\n    let list_data = props.variants;\n    let Skuchangedata = list_data.map((skulistdata, index) => {\n      if (priceobj.id === skulistdata.generatedSku) {\n        skulistdata.costPrice = priceobj.editcostprice;\n        skulistdata.costPriceTax = priceobj.editcostpricetax;\n        skulistdata.sellingPrice = priceobj.editsellingprice;\n        skulistdata.sellingPriceTax = priceobj.editsellingpricetax;\n        skulistdata.markupPrice = priceobj.editmarkupprice;\n        skulistdata.markupPriceTax = priceobj.editmarkuppricetax;\n        skulistdata.discountPrice = priceobj.editdiscountprice;\n        skulistdata.discountPriceTax = priceobj.editdiscountpricetax;\n\n        bodydata[\"costPrice\"] = parseFloat(priceobj.editcostprice);\n        bodydata[\"costPriceTax\"] = parseFloat(priceobj.editcostpricetax);\n        bodydata[\"sellingPrice\"] = parseFloat(priceobj.editsellingprice);\n        bodydata[\"sellingPriceTax\"] = parseFloat(priceobj.editsellingpricetax);\n        bodydata[\"markupPrice\"] = parseFloat(priceobj.editmarkupprice);\n        bodydata[\"markupPriceTax\"] = parseFloat(priceobj.editmarkuppricetax);\n        bodydata[\"discountPrice\"] = parseFloat(priceobj.editdiscountprice);\n        bodydata[\"discountPriceTax\"] = parseFloat(\n          priceobj.editdiscountpricetax\n        );\n        bodydata[\"marginOnSalePercentage\"] = parseFloat(\n          priceobj.marginOnSalePercentage\n        );\n\n        bodydata[\"generatedSku\"] = priceobj.id;\n        return skulistdata;\n      }\n      return skulistdata;\n    });\n    alert(JSON.stringify(bodydata));\n    // sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    // setEditcontent(null)\n    // setOpenedit(false)\n  }\n  //   const handleoptionChange = type => (event, value) => {\n\n  //     setProductCtx({ ...productCtx, [type]: value})\n\n  // }\n  // const handleInputChange = type => e => {\n  //   setProductCtx({ ...productCtx, [type]: e.target.value  })\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {props.columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants &&\n              props.variants\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.generatedSku}\n                    </TableCell>\n                    {props.displycolumns.indexOf(\"Cost Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.editcostprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Cost Price\"\n                            onChange={handleinputChange(\"editcostprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {\" \"}\n                            {row.costPrice}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Cost Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editcostpricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Cost Price Tax\"\n                            onChange={handleinputChange(\"editcostpricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {\" \"}\n                            {row.costPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Selling Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editsellingprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Selling Price\"\n                            onChange={handleinputChange(\"editsellingprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.sellingPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Selling Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editsellingpricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Selling Price Tax\"\n                            onChange={handleinputChange(\"editsellingpricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            //onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.sellingPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Markup Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editmarkupprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Markup Price\"\n                            onChange={handleinputChange(\"editmarkupprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.markupPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Markup Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editmarkuppricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Markup Price Tax\"\n                            onChange={handleinputChange(\"editmarkuppricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.markupPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Discount Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editdiscountprice}\n                            id=\"productname\"\n                            onChange={handleinputChange(\"editdiscountprice\")}\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount Price\"\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Discount Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editdiscountpricetax}\n                            onChange={handleinputChange(\"editdiscountpricetax\")}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount Price Tax\"\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Margin on Sale\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.marginOnSalePercentage}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.discount}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"View\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={(e) => props.onShow(row.generatedSku)}\n                        >\n                          Summary\n                        </Button>{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        <Button\n                          onClick={(e) => Skupricesync(row)}\n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                        >\n                          ₹ Run\n                        </Button>\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\n                          <SaveIcon />\n                        </Button>\n                        <Button onClick={(e) => CancelEdit(row)}>\n                          <CancelIcon />\n                        </Button>\n                      </TableCell>\n                    ) : (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        {btnEdit.pricerun && btnEdit.id == row.generatedSku ? (\n                          <CircularProgress size={15} />\n                        ) : (\n                          <Button\n                            onClick={(e) => Skupricesync(row)}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                          >\n                            ₹ Run\n                          </Button>\n                        )}\n                        <Button onClick={(e) => DiamondEdit(row)}>\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants && props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && (\n          <EditPrice\n            diamond={editcontent}\n            onApply={DiamondSave}\n            onClose={handleApplicationClose}\n            open={openedit}\n          />\n        )}\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport axios from \"axios\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { API_URL } from \"../../config\";\nimport { isString } from \"util\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { Chip } from \"@material-ui/core\";\n\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginImageValidateSize,\n  FilePondPluginFileRename\n);\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  variantFontSize: {\n    fontSize: \".9rem\",\n  },\n  variantMarginTop: {\n    marginTop: \"20px\",\n  },\n}));\nexport function CreateVariant(props) {\n  const classes = useStyle();\n  let prod_id = props.productId;\n  let colors = [];\n  let purities = [];\n  let diamondtypes = [];\n  let oldpurity = [];\n\n  const TOKEN = \"token\";\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor);\n  productCtx.oldproductMetalColor.forEach((colorobj) => {\n    colors.push(colorobj.productColor);\n  });\n  productCtx.oldproductMetalPurity.forEach((colorobj) => {\n    purities.push(colorobj.purity);\n    oldpurity.push(colorobj);\n  });\n\n  productCtx.oldproductDiamondTypesArray.forEach((diamondobj) => {\n    diamondtypes.push(diamondobj.diamondType);\n  });\n\n  const [variant, setVariant] = useState({\n    metal_color: [],\n    metal_purity: [],\n    diamond_color: [],\n    diamond_clarity: [],\n    variant_diamond_type: [],\n    product_images: {},\n    size: [],\n  });\n\n  function handleMetalColor(status_data) {\n    let color = variant.metal_color;\n    color.some((color_data) => color_data.id === status_data.id)\n      ? (color = color.filter((color_fil) => color_fil.id !== status_data.id))\n      : color.push(status_data);\n    setVariant({\n      ...variant,\n      metal_color: color,\n    });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    let color_arr = [];\n    value.map((color, index) => {\n      if (\n        productCtx.productMetalColor.some(\n          (item) => item.productColor === color.productColor\n        )\n      ) {\n      } else {\n        let color_obj = {\n          ...color,\n          metal_color: color.productColor,\n        };\n        color_arr.push(color_obj);\n      }\n    });\n    setVariant({\n      ...variant,\n      metal_color: color_arr,\n    });\n\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n    });\n  };\n  const sendNetworkRequest = async (url, params, data, auth = false) => {\n    alert(url);\n    url = API_URL + url;\n    console.info(\"URL\", url, data);\n    const method = data ? \"POST\" : \"GET\",\n      headers = {\n        \"Content-Type\": \"application/json\",\n      };\n    let resdata = null;\n    if (auth) {\n      const token = localStorage.getItem(TOKEN);\n      if (token) headers[\"auth\"] = token;\n      else window.location = \"/\";\n    }\n    const response = await fetch(url, {\n      method,\n      body: isString(data) ? data : JSON.stringify(data),\n      headers,\n    });\n\n    if (response.status < 400) {\n      resdata = await response.json();\n    } else {\n      alert(\n        `${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`\n      );\n    }\n    return resdata;\n  };\n\n  const handleMetalPurity = (type) => (event, value) => {\n    let purity_arr = [];\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n    });\n    value.map((color, index) => {\n      let color_obj = {\n        ...color,\n        purity: color.purity,\n      };\n      purity_arr.push(color_obj);\n    });\n    setVariant({\n      ...variant,\n      metal_purity: purity_arr,\n    });\n  };\n  // function handleMetalPurity(status_data) {\n  //     status_data.metal_weight = \"\";\n  //     status_data.error_message = false;\n  //     // alert(JSON.stringify(status_data));\n  //     let purity = variant.metal_purity;\n  //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         metal_purity: purity\n  //     })\n  // }\n  const diamondTypeChange = (type) => (event, value) => {\n    let diamondtype_arr = [];\n    value.map((color, index) => {\n      if (color.label) {\n        let color_obj = {\n          ...color,\n          diamondType: color.label,\n        };\n        diamondtype_arr.push(color_obj);\n      } else {\n        let color_obj = {\n          ...color,\n          diamondType: color.diamondType,\n        };\n        diamondtype_arr.push(color_obj);\n      }\n\n      //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n      //    }else{ let color_obj = {\n      //         ...color,\n      //         diamondType: color.label\n      //     }\n      //     diamondtype_arr.push(color_obj)\n      //   }\n    });\n    setVariant({\n      ...variant,\n      variant_diamond_type: diamondtype_arr,\n    });\n    alert(JSON.stringify(value));\n    setProductCtx({\n      ...productCtx,\n      [type]: diamondtype_arr,\n    });\n  };\n\n  // function diamondTypeChange(status_data){\n  //     let diamond__type = variant.variant_diamond_type;\n  //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         variant_diamond_type: diamond__type\n  //     })\n  // }\n\n  const sizeChange = (type) => (event, value) => {\n    let size_arr = [];\n    value.map((color, index) => {\n      if (productCtx.productDiamondTypes.some((item) => item === color)) {\n      } else {\n        let color_obj = {\n          ...color,\n          label: color,\n        };\n        size_arr.push(color_obj);\n      }\n    });\n    setVariant({\n      ...variant,\n      size: size_arr,\n    });\n  };\n  // function sizeChange(status_data) {\n  //     let variantSize = variant.size;\n  //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         size: variantSize\n  //     })\n\n  // }\n\n  function setMetalWeightInput(e, metalPurityId) {\n    // alert(e.target.value)\n    let metalWeight = variant.metal_purity;\n    metalWeight =\n      metalWeight &&\n      metalWeight.map((metal_weight, index) => {\n        if (metalPurityId === metal_weight.id) {\n          metal_weight.metal_weight = e.target.value;\n        }\n        return metal_weight;\n      });\n    setVariant({\n      ...variant,\n      metal_purity: metalWeight,\n    });\n  }\n  function saveCreateVariant() {\n    let createVariant = {\n      productId: prod_id,\n      productMetalcoloursByProductId: variant.metal_color,\n      productPuritiesByProductId: variant.metal_purity,\n      productDiamondTypes: variant.variant_diamond_type,\n      productSize: variant.size,\n      product_images: variant.product_images,\n      // productImage:variant.product_images\n    };\n\n    let metal_color_image_length = Object.entries(variant.product_images);\n    let metal_purity_weight = false;\n    let metal_purity =\n      variant.metal_purity &&\n      variant.metal_purity.map((metal_weight_check) => {\n        if (metal_weight_check.metal_weight === \"\") {\n          metal_weight_check.error_message = true;\n          metal_purity_weight = true;\n        }\n        return metal_weight_check;\n      });\n    variant[\"metal_purity\"] = metal_purity;\n    setVariant({\n      ...variant,\n      variant,\n    });\n    if (metal_color_image_length.length !== variant.metal_color.length) {\n      alert(\"Select Metal Color Images\");\n    }\n    if (\n      (variant.metal_color.length > 0 &&\n        variant.metal_color.length === metal_color_image_length.length) ||\n      (variant.metal_purity.length > 0 && metal_purity_weight === false) ||\n      variant.size.length > 0 ||\n      variant.variant_diamond_type.length > 0\n    ) {\n      let createVariants = productCtx.createVariantList;\n      let editVariants = productCtx.editVariants;\n      let variants = productCtx.variants;\n      let productImages = productCtx.productImages;\n      productImages = [...productImages, variant.product_images];\n      createVariants.push(createVariant);\n      let params = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(createVariant),\n      };\n    } else {\n      alert(\"please fill the Create variant\");\n    }\n  }\n  function backToProductAttribute() {\n    props.changeVariant();\n  }\n  async function uploadimagetoserver(\n    bodaydata,\n    imageposition,\n    imagecolor,\n    uploadtype\n  ) {\n    let prodimages = variant.product_images;\n    // if(true)\n    // {\n    var prodid = prod_id;\n    let imagecolourobj = variant.product_images[imagecolor];\n    var imagecount = 1;\n    if (imagecolourobj) {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = prodid + \"_\" + imagecount + imagecolor.charAt(0);\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        product_id: prodid,\n      },\n      false\n    );\n    var returnData =\n      responsedata && responsedata.data && responsedata.data.returnData;\n    var signedRequest = returnData && returnData.signedRequest;\n    var url = returnData && returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData && returnData.filepath;\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    if (imagecolourobj) {\n      const imageobj = {\n        name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\n        position: imageposition,\n        color: imagecolor,\n        image_url: filepathname,\n        url:\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\n          filepathname,\n      };\n      if (uploadtype === \"edit\") {\n        imagecolourobj[imageposition] = imageobj;\n      } else {\n        imagecolourobj.push(imageobj);\n      }\n      prodimages[imagecolor] = imagecolourobj;\n    } else {\n      const imageobj = {\n        name: prodid + \"_1\" + imagecolor.charAt(0),\n        position: imageposition,\n        color: imagecolor,\n        image_url: filepathname,\n        url:\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\n          filepathname,\n      };\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj);\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setVariant({ ...variant, product_images: prodimages });\n    // setFiles([])\n    // }\n\n    await axios.put(signedRequest, bodaydata.file, options);\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          fullWidth\n          margin=\"dense\"\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.productColor}\n          getOptionDisabled={(option) =>\n            colors.indexOf(option.productColor) > -1\n          }\n          defaultValue={productCtx.oldproductMetalColor}\n          options={productCtx.masterData.metalcolour}\n          value={productCtx.productMetalColor}\n          onChange={handleoptionChange(\"productMetalColor\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.productColor}\n                {...getTagProps({ index })}\n                disabled={colors.indexOf(option.productColor) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Metal Colours\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          className={classes.fixedTag}\n          margin=\"dense\"\n          getOptionLabel={(option) => option.name}\n          getOptionDisabled={(option) => purities.indexOf(option.name) > -1}\n          defaultValue={productCtx.oldproductMetalPurity}\n          options={productCtx.masterData.metalpurity}\n          value={productCtx.productMetalPurity}\n          onChange={handleMetalPurity(\"productMetalPurity\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.purity}\n                {...getTagProps({ index })}\n                disabled={purities.indexOf(option.purity) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Metal Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n\n        {productCtx.productMetalPurity &&\n          productCtx.productMetalPurity.map((metal_purity) => (\n            <TextField\n              key={metal_purity.id}\n              className={classes.helperinput}\n              style={{ width: \"100px\", marginLeft: \"8px\" }}\n              variant=\"outlined\"\n              margin=\"dense\"\n              fullWidth\n              type=\"number\"\n              value={metal_purity.metal_weight}\n              id=\"metal_weight\"\n              error={metal_purity && metal_purity.error_message}\n              name=\"metal_weight\"\n              label={`Weight ${metal_purity.purity}`}\n              onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n            />\n          ))}\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.label}\n          getOptionDisabled={(option) =>\n            diamondtypes.indexOf(option.label) > -1\n          }\n          defaultValue={productCtx.oldproductDiamondTypesArray}\n          options={productCtx.masterData.diamondtypes}\n          value={\n            productCtx.productDiamondTypesArray\n              ? productCtx.productDiamondTypesArray\n              : []\n          }\n          onChange={diamondTypeChange(\"productDiamondTypesArray\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.diamondType}\n                {...getTagProps({ index })}\n                disabled={diamondtypes.indexOf(option.diamondType) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Diamond Types\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        {productCtx.variant_size && productCtx.variant_size.length > 0 ? (\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            fullWidth\n            getOptionLabel={(option) => option}\n            options={productCtx.productVariantSize}\n            value={productCtx.variant_size}\n            onChange={sizeChange(\"productSizes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Sizes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n        ) : null}\n      </Grid>\n\n      {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n\n      <Grid container>\n        {variant.metal_color === undefined\n          ? null\n          : variant.metal_color.map((value, index) => (\n              <Grid xs={12} container spacing={1} item>\n                <Grid xs={12} item>\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                    {value.productColor}\n                  </Typography>\n                </Grid>\n                <Grid xs={12} sm={12} md={12} item>\n                  <FilePond\n                    allowImageValidateSize\n                    imageValidateSizeMinWidth=\"2400\"\n                    imageValidateSizeMinHeight=\"2400\"\n                    imageValidateSizeMeasure={(file) =>\n                      new Promise((resolve, reject) => {})\n                    }\n                    labelIdle=\"Upload Image\"\n                    allowMultiple={true}\n                    //files = {files}\n                    onupdatefiles={(fileItem) => {\n                      // Set currently active file objectsfiles to this.state\n                    }}\n                    onaddfile={(error, fileItem) => {\n                      uploadimagetoserver(fileItem, index, value.name, \"add\");\n                    }}\n                    onremovefile={(error, fileItem) => {}}\n                    fileRenameFunction={(file) =>\n                      new Promise((resolve) => {\n                        var prodid = prod_id;\n                        let imagecolourobj = variant.product_images[value.name];\n                        var imagecount = 1;\n                        if (imagecolourobj) {\n                          imagecount = imagecolourobj.length + 1;\n                        }\n                        let imagename =\n                          prodid +\n                          \"_\" +\n                          imagecount +\n                          value.name.charAt(0) +\n                          file.extension;\n                        resolve(imagename);\n                      })\n                    }\n                  ></FilePond>\n                </Grid>\n              </Grid>\n            ))}\n      </Grid>\n      {\n        <Grid\n          container\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"16px\",\n          }}\n        >\n          <Grid item>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={(e) => saveCreateVariant()}\n            >\n              Save\n            </Button>\n          </Grid>\n          <Grid item>\n            {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n          </Grid>\n        </Grid>\n      }\n    </Grid>\n  );\n}\nexport default CreateVariant;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Columns from \"./columns\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"./table.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nfunction SortHeader(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [options, setOptions] = React.useState(props.columnnames);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <Grid\n      item\n      container\n      lg={12}\n      md={12}\n      sm={12}\n      xs={12}\n      style={{ display: \"flex\", justifyContent: \"space-between\" }}\n    >\n      <Grid item xl={8} lg={9} md={8} sm={7} xs={12}>\n        <h4 className=\"products\">\n          {props.title ? props.title : \"Variants Table\"}{\" \"}\n        </h4>\n      </Grid>\n      <Grid\n        item\n        container\n        xl={4}\n        lg={3}\n        md={4}\n        sm={5}\n        xs={12}\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n      >\n        <Grid\n          item\n          className=\"column-btn\"\n          lg={5}\n          md={5}\n          sm={5}\n          xs={5}\n          style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n        >\n          <Button\n            className=\"product\"\n            size=\"small\"\n            id=\"one\"\n            color=\"primary\"\n            backgroundColor=\"secondary\"\n            onClick={handleClick}\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\n          >\n            COLUMNS\n            <ArrowDownwardIcon fontSize=\"inherit\" />\n          </Button>\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <Columns\n              columns={options}\n              selectcolumnfilter={props.getColumnnames}\n              displytype={props.displytype}\n              columnclose={handleClose}\n            />\n          </Popover>\n        </Grid>\n        {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n      </Grid>\n    </Grid>\n  );\n}\nexport default SortHeader;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport axios from \"axios\";\nimport { makeid } from \"../../utils/commonmethod\";\n\nimport { Paper, Card, CardHeader, CardContent, Grid } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport \"./upload.css\";\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\",\n  },\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow:\n      \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\",\n  },\n  formContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30,\n  },\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = \"\";\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  // productimages.forEach((imgobj) => {\n  //   if (props.color === imgobj.productColor) {\n  //     image_count = image_count + 1;\n  //     if (imgobj.productId) {\n  //       product_id = imgobj.productId;\n  //     }\n  //     // setTotalimages(image_count)\n  //   }\n  // });\n  async function uploadimagetoserver(\n    fileobj,\n    filetype,\n    imagename,\n    prodid,\n    imagecontent,\n    isedit,\n    position\n  ) {\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      { image: filetype, filename: imagename, product_id: prodid },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    var filepathname = returnData.filepath;\n    filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\n    var options = {\n      headers: {\n        \"Content-Type\": filetype,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n    if (isedit) {\n      imagecontent[\"imageUrl\"] = filepathname.replace(\"jpeg\", \"jpg\");\n    } else {\n      const imageobj = {\n        name: product_id + \"_\" + (image_count + 1) + props.color.charAt(0),\n        imagePosition: image_count + 1,\n        productColor: props.color,\n        productId: product_id,\n        imageUrl: filepathname.replace(\"jpeg\", \"jpg\"),\n        url:\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\n          filepathname,\n      };\n      imagecontent = imageobj;\n    }\n    if (!isedit) {\n      var productimgs = [];\n      productimages.forEach((img) => {\n        productimgs.push(img);\n      });\n      productimgs.push(imagecontent);\n    }\n    await axios.put(signedRequest, fileobj, options);\n    let responsecontent = await sendNetworkRequest(\n      \"/updateproductimage\",\n      {},\n      { imageobj: imagecontent, isedit: isedit },\n      false\n    );\n    image_count = image_count + 1;\n    if (!isedit) {\n      setProductimages(productimgs);\n    }\n  }\n  const handlenewAssetChange = (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => {\n      // const size = files[index].size;\n      var imagecount = 1;\n      if (productimages) {\n        imagecount = image_count + 1;\n      }\n      let imagename = product_id + \"-\" + imagecount + props.color.charAt(0);\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n\n      uploadimagetoserver(\n        files[index],\n        fileType,\n        imagename,\n        product_id,\n        {},\n        false\n      );\n    });\n  };\n  const handleAssetChange = (e, imageposition, category, endPoint) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => {\n      const size = files[index].size;\n      alert(imageposition);\n      let productimageobj = {};\n      productimages.forEach((content) => {\n        if (\n          content.productColor === props.color &&\n          imageposition === content.imagePosition\n        ) {\n          productimageobj = content;\n        }\n      });\n      var prodid = productimageobj.productId;\n      var prodcolor = productimageobj.productColor;\n      var imagecount = 1;\n      let randomnum = makeid(1, \"\", 1);\n      if (productimages) {\n        //  imagecount = image_count + 1;\n      }\n      let imagename =\n        prodid + \"-\" + imageposition + randomnum + prodcolor.charAt(0);\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n      //alert(imagename)\n      uploadimagetoserver(\n        files[index],\n        fileType,\n        imagename,\n        prodid,\n        productimageobj,\n        true\n      );\n      // alert(imagename)\n    });\n  };\n  return (\n    <Paper className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader\n          title={\n            props.color && props.isdefault\n              ? props.color + \" (Default Colour)\"\n              : props.color\n          }\n        />\n        <CardContent>\n          <Grid container spacing={2} className={classes.styleFile}>\n            {props.prodimages.map((url) => (\n              <React.Fragment key={url.id}>\n                {/* {props.color === url.productColor ? ( */}\n                <div style={{ position: \"relative\" }}>\n                  <i\n                    className=\"fa fa-window-edit\"\n                    style={{\n                      position: \"absolute\",\n                      right: 10,\n                      top: 11,\n                      color: \"red\",\n                      zIndex: \"12\",\n                    }}\n                  />\n\n                  <Grid\n                    item\n                    style={{\n                      width: \"150px\",\n                      wordBreak: \"break-all\",\n                      height: \"150px\",\n                      padding: \"8px\",\n                      margin: \"0\",\n                      cursor: \"pointer\",\n                      position: \"relative\",\n                    }}\n                    className=\"container\"\n                  >\n                    <input\n                      type=\"file\"\n                      className=\"custom-file-input\"\n                      multiple\n                      onChange={(e) =>\n                        handleAssetChange(e, url.imagePosition, \"\", \"\")\n                      }\n                    ></input>\n\n                    <img\n                      src={\n                        url.imageUrl\n                        // \"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\" +\n                        // url.imageUrl.replace(\n                        //   url.productId,\n                        //   url.productId + \"/1000X1000\"\n                        // )\n                      }\n                      style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        borderRadius: \"4px\",\n                      }}\n                    />\n                  </Grid>\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\n                    {\" \"}\n                    {url.imagePosition}{\" \"}\n                  </Typography>\n\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\n                    {\" \"}\n                    {url.ishover ? \"hover\" : \"\"}{\" \"}\n                  </Typography>\n                </div>\n                {/* ) : null} */}\n              </React.Fragment>\n            ))}\n            <Grid\n              item\n              style={{\n                width: \"150px\",\n                wordBreak: \"break-all\",\n                height: \"150px\",\n                padding: \"8px\",\n                margin: \"0\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                position: \"relative\",\n              }}\n              className=\"container\"\n            >\n              {\n                <label\n                  className=\"custom-file-upload\"\n                  style={{ display: \"flex\" }}\n                >\n                  <i\n                    className=\"fa fa-plus\"\n                    aria-hidden=\"true\"\n                    style={{\n                      color: \"rgba(60,64,67,.15)\",\n                      fontSize: \"45px\",\n                      margin: \"auto\",\n                    }}\n                  ></i>\n                  <input\n                    type=\"file\"\n                    className=\"custom-file-input\"\n                    multiple\n                    onChange={(e) => handlenewAssetChange(e)}\n                  ></input>\n                </label>\n              }\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n      \n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n         \n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\nimport columnnames from './columnnames.json';\n\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(true);\n  const theme = useTheme();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('lg');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose()\n  };\n\n  return (\n    <div>\n      \n      <Dialog\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\n        <DialogContent>\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\n        </DialogContent>\n        <DialogActions>\n       \n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, TextField, Button, Fab } from \"@material-ui/core\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from \"./DiamondDetails\";\nimport GemstoneDetails from \"./GemstoneDetails\";\nimport Variants from \"./Variants\";\nimport Skupricing from \"./Skupricing\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport CreateVariant from \"./CreateVariant\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SortHeader from \"./Components/SortHeader\";\nimport columnnames from \"./columnnames.json\";\nimport Productimages from \"./Productimages\";\nimport FullLoader from \"../../components/Loader\";\nimport Pricedetails from \"./Pricedetails\";\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { sk } from \"date-fns/locale\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"33.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(\n    columnnames.defaultvarients\n  );\n  const [displycolumns, setDisplycolumns] = React.useState(\n    columnnames.defaultvarientnames\n  );\n  const [pricingcolumns, setPricingcolumns] = React.useState(\n    columnnames.pricing\n  );\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(\n    columnnames.defaultpricing\n  );\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(\n    columnnames.defaultpricingnames\n  );\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\n\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    createVariant();\n    setExpand(isExpanded ? true : false);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\",\n  });\n  let prod_id = props.location.pathname.split(\"/\")[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = evt.target.validity.valid\n      ? evt.target.value\n      : productCtx.productname;\n    setProductCtx({ ...productCtx, productname });\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n\n  const handleinputChange = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n  // const handleinputChange = type => (event, value) => {\n  //   alert(event.target.value)\n  //       setProductCtx({ ...productCtx, [type]: value})\n  // }\n  function dismisspricesummary() {\n    setIsshowpricesummary(false);\n  }\n  function getColumnnames(columnnames, displytype) {\n    let displycolumns = [];\n    let displycolumnnames = [];\n\n    columnnames.forEach((element) => {\n      displycolumnnames.push(element.name);\n      displycolumns.push(element);\n    });\n    if (displytype === 1) {\n      setDisplycolumns(displycolumnnames);\n      setVarientcolumns(columnnames);\n    } else {\n      setPricingcolumns(columnnames);\n      setDisplypricingcolumns(displycolumns);\n      setDisplycolumnnames(displycolumnnames);\n    }\n  }\n\n  let client = useApolloClient();\n\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist &&\n      productCtx.diamondlist.map((diamond_type) => {\n        let diamond_data = {\n          id: diamond_type.id,\n          diamondType: diamond_type.diamondType,\n        };\n        let status = diamondTypesArray.some(\n          (store_dia) => store_dia.diamondType == diamond_type.diamondType\n        )\n          ? \"\"\n          : diamondTypesArray.push(diamond_data);\n        return diamond_type;\n      });\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\n\n    setProductCtx({\n      ...productCtx,\n      productCtx,\n    });\n\n    client\n      .query({ query: PRODUCTDIAMONDTYPES })\n      .then((res) => {\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: res.data.allMasterDiamondTypes.nodes,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    // let params = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify({ query: PRODUCTDIAMONDTYPES }),\n    // };\n    // fetch(GRAPHQL_DEV_CLIENT, params)\n    //   .then((res) => res.json())\n    //   .then((diamondtypesData) => {\n    //     console.log(\n    //       diamondtypesData.data.allMasterDiamondTypes.nodes,\n    //       \"diamondtypesdata\"\n    //     );\n    //     setProductCtx({\n    //       ...productCtx,\n    //       productDiamondTypes:\n    //         diamondtypesData.data.allMasterDiamondTypes.nodes,\n    //     });\n    //   })\n    //   .catch(console.error);\n\n    //setstate({ ...state, create_variant: true })\n  }\n  async function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions: productCtx.occassions,\n      collections: productCtx.collections,\n      stonecount: productCtx.stonecount,\n      stonecolour: productCtx.stonecolour,\n      gender: productCtx.product_gender,\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    };\n    let response = await sendNetworkRequest(\n      \"/editproduct\",\n      {},\n      productEditItem\n    );\n\n    console.log(\"************\");\n    console.log(JSON.stringify(productEditItem));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      console.log(JSON.stringify(productEditItem));\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem));\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = (name) => async (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      productid: prod_id,\n      isactive: event.target.checked,\n    };\n    let esbody = {\n      product_id: prod_id,\n    };\n    var endpoint = \"/reindex\";\n    if (event.target.checked) {\n      endpoint = \"/esearch_forceindex\";\n    }\n    debugger;\n    console.log(bodycontent);\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\n\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\n    let updateproductattr = await sendNetworkRequest(\n      \"/updateproductattribute\",\n      {},\n      esbody\n    );\n\n    console.log(\"************\");\n    console.log(JSON.stringify(bodycontent));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  };\n  async function showpricesummary(sku) {\n    let response = await sendNetworkRequest(\n      \"/viewskupricesummary/\" + sku,\n      {},\n      null\n    );\n    let price_summary = [];\n    let skuprice = response.price_summary.skuprice;\n    // let cost_obj = {\n    //   component: \"Cost Price\",\n    //   price : skuprice.cost_price - skuprice.cost_price_tax,\n    //   tax : skuprice.cost_price_tax,\n    //   total : skuprice.cost_price\n\n    // }\n    // price_summary.push(cost_obj)\n\n    // let selling_price = {\n    //   component: \"Selling Price\",\n    //   price : skuprice.selling_price ,\n    //   tax : skuprice.selling_price_tax,\n    //   total : skuprice.selling_price\n\n    // }\n    // price_summary.push(selling_price)\n    // let discount_price = {\n    //   component: \"discount Price\",\n    //   price : skuprice.discount_price ,\n    //   tax : skuprice.discount_price_tax,\n    //   total : skuprice.discount_price\n\n    // }\n    // price_summary.push(discount_price)\n    // let markup_price = {\n    //   component: \"markup Price\",\n    //   price : skuprice.markup_price ,\n    //   tax : skuprice.markup_price_tax,\n    //   total : skuprice.markup_price\n\n    // }\n\n    let metalprice = response.price_summary.metals;\n    metalprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n\n    let mateialprice = response.price_summary.materials;\n    mateialprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n    let obj = {\n      component: \"SKU Price\",\n      cost_price: skuprice.cost_price,\n      selling_price: skuprice.selling_price,\n      markup_price: skuprice.markup_price,\n      discount_price: skuprice.discount_price,\n    };\n    price_summary.push(obj);\n    //alert(JSON.stringify(metalprice))\n    //   price_summary.push(markup_price)\n    setPricesummaryvalue(price_summary);\n    setIsshowpricesummary(true);\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function backProductList() {\n    window.location = \"/productlist\";\n  }\n  useEffect(() => {\n    client\n      .query({ query: PRODUCTEDIT, variables: { productId: prod_id } })\n      .then((res) => {\n        var { productListByProductId } = res.data;\n        var genders = productListByProductId.gender;\n        var size_obj = productListByProductId.sizeVarient;\n        let sizes_arr = [];\n        if (size_obj) {\n          let sizes = size_obj.split(\",\");\n          sizes.forEach((element) => {\n            sizes_arr.push(element);\n          });\n        }\n        let gender_arr = [];\n        if (genders) {\n          genders = genders.split(\",\");\n          genders.forEach((element) => {\n            let gender_obj = {\n              label: element,\n            };\n            gender_arr.push(gender_obj);\n          });\n        }\n        let defaultcolour = \"\";\n        var images_arr = productListByProductId.productImagesByProductId.nodes;\n        images_arr.forEach((element) => {\n          if (element.isdefault) {\n            defaultcolour = element.productColor;\n          }\n        });\n        var metalcolors = [];\n        Array.prototype.insert = function (index, item) {\n          this.splice(index, 0, item);\n        };\n        let metalcolor =\n          productListByProductId.productMetalcoloursByProductId.nodes;\n        metalcolor.forEach((colorobj) => {\n          if (colorobj.productColor === defaultcolour) {\n            colorobj[\"isdefault\"] = true;\n            metalcolors.insert(0, colorobj);\n          } else {\n            colorobj[\"isdefault\"] = false;\n            metalcolors.push(colorobj);\n          }\n        });\n        setProductCtx({\n          ...productCtx,\n          productname: productListByProductId.productName,\n          isactive: productListByProductId.isactive,\n          product_type: productListByProductId.productType,\n          product_categoy: productListByProductId.productCategory,\n          gemstonelist:\n            productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: productListByProductId.productDiamondsByProductSku.nodes,\n          variants: productListByProductId.transSkuListsByProductId.nodes,\n          productImages: productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor:\n            productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity:\n            productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity:\n            productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials:\n            productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode: productListByProductId.vendorCode,\n          product_gender: gender_arr,\n          themes: productListByProductId.productThemesByProductId.nodes,\n          prod_styles: productListByProductId.productStylesByProductId.nodes, // productDiamondColor:diamondTypesArray,\n          occassions: productListByProductId.productOccassionsByProductId.nodes,\n          collections:\n            productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:\n            productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:\n            productListByProductId.productStonecolorsByProductId.nodes,\n          // productDiamondClarity:diamondClaritySku,\n        });\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(\n            JSON.stringify(productListByProductId.productName)\n          ),\n        });\n        setLoadopen(false);\n      })\n      .catch(console.error);\n  }, []);\n  return state.create_variant ? (\n    <CreateVariant\n      productMetalColor={productCtx.productMetalColor}\n      productMetalPurity={productCtx.productMetalPurity}\n      changeVariant={changeVariant}\n      productId={prod_id}\n    />\n  ) : (\n    <Grid container>\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <Grid item container spacing={1}>\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={3}\n          lg={3}\n          spacing={2}\n          style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}\n        >\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            pattern=\"[a-zA-Z]*\"\n            value={productCtx.productname}\n            id=\"productname\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.productname\n            }\n            name=\"productname\"\n            label=\"Product Name\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"productname\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_categoy}\n            id=\"product_category\"\n            InputProps={{\n              readOnly: true,\n            }}\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.product_categoy\n            }\n            name=\"product_category\"\n            label=\"Product Category\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_type}\n            id=\"product_type\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.product_type\n            }\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"product_type\"\n            label=\"Product Type\"\n          />\n          <Input\n            variant=\"outlined\"\n            margin=\"dense\"\n            label=\"Vendor Name\"\n            fullWidth\n            className={classes.helperinput}\n            value={productCtx?.vendorcode ?? \"\"}\n            id=\"productvendorcode\"\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"Vendor Name\"\n          />\n\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            defaultValue={productCtx.productname}\n            id=\"seo_text\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.productname\n            }\n            name=\"seo_text\"\n            label=\"Minimum Order Quantity\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            defaultValue={productCtx.productname}\n            id=\"url\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.productname\n            }\n            name=\"url\"\n            label=\"Maximum Order Quantity\"\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            options={[]}\n            className={classes.fixedTag}\n            value={productCtx.productmaterials}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.materialName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Product Materials\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{\n                  ...params.InputProps,\n                  readOnly: true,\n                  type: \"search\",\n                }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            options={[]}\n            className={classes.fixedTag}\n            value={productCtx.productMetalColor}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.productColor}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            options={[]}\n            className={classes.fixedTag}\n            value={productCtx.productMetalPurity}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.purity}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Purity\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.product_gender}\n            getOptionLabel={(option) => option.label}\n            onChange={handleoptionChange(\"product_gender\")}\n            options={productCtx.masterData.gender}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.label}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Gender\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.themes}\n            options={productCtx.masterData.themes}\n            value={productCtx.themes}\n            onChange={handleoptionChange(\"themes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.themeName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Themes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.prod_styles}\n            options={productCtx.masterData.styles}\n            onChange={handleoptionChange(\"prod_styles\")}\n            value={productCtx.prod_styles}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.styleName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Styles\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.occassions}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.occassions}\n            options={productCtx.masterData.occasions}\n            onChange={handleoptionChange(\"occassions\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.occassionName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Occasions\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.collections}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.collections}\n            options={productCtx.masterData.collections}\n            onChange={handleoptionChange(\"collections\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.collectionName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Collections\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecount}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecount}\n            options={productCtx.masterData.stones}\n            onChange={handleoptionChange(\"stonecount\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.stonecount}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"No of Stones\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecolour}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecolour}\n            options={productCtx.masterData.gemstonecolor}\n            onChange={handleoptionChange(\"stonecolour\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.stonecolor}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Stone Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n\n          <FormControlLabel\n            label={\n              productCtx.isactive\n                ? \"Disable this product\"\n                : \"Enable this product\"\n            }\n            control={\n              <Switch\n                checked={productCtx.isactive}\n                onChange={handledisableproduct(\"isactive\")}\n                value=\"checkedA\"\n              />\n            }\n          />\n\n          <Grid\n            item\n            container\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\",\n            }}\n          >\n            <Grid item>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={(e) => saveProductEditItem()}\n              >\n                Update\n              </Button>\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={9}\n          lg={9}\n          spacing={2}\n          style={{ padding: \"15px\" }}\n        >\n          <Grid container item md={6}></Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\n            Diamond Table\n          </Grid>\n          <DiamondDetails diamond={productCtx.diamondlist} />\n          {productCtx.gemstonelist.length > 0 ? (\n            <>\n              {\" \"}\n              <Grid\n                style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}\n              >\n                Gemstone Table\n              </Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\n            </>\n          ) : null}\n          <Grid\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\n          >\n            Variant Creation\n          </Grid>\n\n          <Grid style={{}}>\n            {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n\n            <ExpansionPanel expanded={expand} onChange={handleChange()}>\n              <ExpansionPanelSummary\n                expandIcon={expand ? <CloseIcon /> : <AddIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n              >\n                <div className={classes.column}>\n                  <Typography className={classes.heading}>\n                    Add New variant\n                  </Typography>\n                </div>\n              </ExpansionPanelSummary>\n              <Divider />\n              <ExpansionPanelDetails className={classes.details}>\n                <CreateVariant\n                  productMetalColor={productCtx.productMetalColor}\n                  productMetalPurity={productCtx.productMetalPurity}\n                  changeVariant={changeVariant}\n                  productId={prod_id}\n                />\n              </ExpansionPanelDetails>\n              <Divider />\n              {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n            </ExpansionPanel>\n          </Grid>\n          <Grid\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\n          >\n            <SortHeader\n              columnnames={columnnames.varients}\n              getColumnnames={getColumnnames}\n              displytype={1}\n            />{\" \"}\n          </Grid>\n\n          <Variants\n            variants={productCtx.variants}\n            columns={varientcolumns}\n            displycolumns={displycolumns}\n          />\n\n          <Grid\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\n          >\n            <SortHeader\n              title={\"Pricing Table\"}\n              columnnames={pricingcolumns}\n              displycolumns={displypricingcolumns}\n              getColumnnames={getColumnnames}\n              displytype={2}\n            />\n            <Button\n              onClick={(e) => Skupricesync(prod_id)}\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Price Run For This Product\n            </Button>\n          </Grid>\n          {isshowpricesummary ? (\n            <Pricedetails\n              onClose={dismisspricesummary}\n              values={pricesummaryvalues}\n            />\n          ) : null}\n          <Skupricing\n            variants={productCtx.variants}\n            onShow={showpricesummary}\n            columns={displypricingcolumns}\n            displycolumns={displycolumnnames}\n          />\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\n            Product Images\n          </Grid>\n          {/* {productCtx.productMetalColor.map((colors) => ( */}\n          <Productimages\n            //color={colors.productColor}\n            //isdefault={colors.isdefault}\n            prodimages={productCtx.productImages}\n          />\n          {/* ))} */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const ProductAttributes = withRouter((props) => {\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n\n  const _content = (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n  return _content;\n});\nexport default withRouter(ProductAttributes);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Columns from \"./columns\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"./table.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nfunction SortHeader() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <Grid\n      container\n      lg={12}\n      md={12}\n      sm={12}\n      xs={12}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginBottom: \"17px\",\n        marginTop: \"25px\",\n      }}\n    >\n      <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n        <h2\n          className=\"products\"\n          style={{ fontSize: \"24px\", fontWeight: \"400\" }}\n        >\n          Products\n        </h2>\n      </Grid>\n      <Grid\n        container\n        xl={4}\n        lg={3}\n        md={4}\n        sm={5}\n        xs={12}\n        lassName=\"column\"\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\n      >\n        <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n          <Button\n            className=\"product\"\n            id=\"one\"\n            color=\"primary\"\n            onClick={handleClick}\n            variant=\"outlined\"\n            size=\"large\"\n            color=\"primary\"\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\n          >\n            COLUMNS\n            <ArrowDownwardIcon fontSize=\"inherit\" />\n          </Button>\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <Columns columnclose={handleClose} />\n          </Popover>\n        </Grid>\n        <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n          <Button\n            id=\"create\"\n            className=\"product\"\n            variant=\"contained\"\n            size=\"large\"\n            color=\"primary\"\n            backgroundColor=\"secondary\"\n          >\n            CREATE PRODUCT\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\nexport default SortHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport route from \"./route\";\nimport {\n  Dashboard,\n  Login,\n  Productupload,\n  Configuration,\n  Manageusers,\n  Customerdetails,\n  Priceupdate,\n  Vendorprice,\n  Vendorlist,\n  Markupprice,\n  Goldpriceupdate,\n  Userwishlist,\n  Productlist,\n  Materiallist,\n  Masterorderstatus,\n  Shippingzones,\n  Manageadminusers,\n  Shipmentsettings,\n  Addshippingattributes,\n  Userconfiguration,\n  Masterroles,\n  Masterscreens,\n  Useraddresses,\n  Addtaxattributes,\n  OrderManagementDetails,\n  Materialmaster,\n  CategoryList,\n  Mastermetalcolors,\n  Masterpurities,\n  Masterdesigns,\n  Shippingattributes,\n  Voucherdiscount,\n  Masterstyles,\n  Masterthemes,\n  Masteroccassions,\n  Masterpaymentstatus,\n  Salediscount,\n  Masterweights,\n  Taxsettings,\n  Masterstones,\n  Masterstonecolors,\n  Masterstoneshapes,\n  Masterattribute,\n  Mastercategories,\n  OrderList,\n  Mastergemsettings,\n  Seopriority,\n  Mastergenders,\n  Mastergemshapes,\n  Mastergemtypes,\n  Earringbacking,\n  Masterproducttypes,\n  Masterdiamondshapes,\n  Taxsetup,\n  Masterdiamonds,\n  Masterdiamondsettings,\n  DiscountList,\n  VoucherdiscountListing,\n  Mastercollections,\n  Masterpages,\n  HolidayManager,\n  Inventory,\n  Warehouse,\n} from \"../screens\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { NetworkProvider } from \"../context/NetworkContext\";\nimport { GlobalContext } from \"../context\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\nimport {\n  ProductContext,\n  ProductProvider,\n} from \"../context/ProductuploadContext\";\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\n\nconst MainApp = () => {\n  const { globalCtx } = React.useContext(GlobalContext);\n  const { productCtx } = React.useContext(ProductContext);\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\n\n  return (\n    <ApolloProvider client={client}>\n      {/* <ProductProvider > */}\n      <NetworkProvider>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Login} />\n          <Route path={route.login} component={Login} />\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\n          <PrivateRoute path={route.productupload} component={Productupload} />\n          <PrivateRoute path={route.configuration} component={Configuration} />\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\n          <PrivateRoute path={route.productlist} component={Productlist} />\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n          <PrivateRoute\n            path={route.producttypes}\n            component={Masterproducttypes}\n          />\n          <PrivateRoute\n            path={route.voucherdiscount}\n            component={Voucherdiscount}\n          />\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n          <PrivateRoute path={route.orderlist} component={OrderList} />\n          <PrivateRoute path={route.userorders} component={OrderList} />\n          <PrivateRoute path={route.address} component={Useraddresses} />\n\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n          <PrivateRoute path={route.category} component={Mastercategories} />\n          <PrivateRoute\n            path={route.masterattributes}\n            component={Masterattribute}\n          />\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\n          <PrivateRoute\n            path={route.masterstonecolors}\n            component={Masterstonecolors}\n          />\n          <PrivateRoute\n            path={route.masterstoneshapes}\n            component={Masterstoneshapes}\n          />\n          <PrivateRoute path={route.weights} component={Masterweights} />\n          <PrivateRoute\n            path={route.masteroccassions}\n            component={Masteroccassions}\n          />\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\n          <PrivateRoute\n            path={route.manageadminusers}\n            component={Manageadminusers}\n          />\n          <PrivateRoute\n            path={route.goldpriceupdate}\n            component={Goldpriceupdate}\n          />\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\n          <PrivateRoute\n            path={route.customerdetails}\n            component={Customerdetails}\n          />\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\n          <PrivateRoute\n            path={route.orderdetails}\n            component={OrderManagementDetails}\n          />\n\n          <PrivateRoute\n            path={route.userconfiguration}\n            component={Userconfiguration}\n          />\n\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n          <PrivateRoute\n            path={route.mastermaterial}\n            component={Materialmaster}\n          />\n          <PrivateRoute\n            path={route.mastercolors}\n            component={Mastermetalcolors}\n          />\n          <PrivateRoute\n            path={route.masterpurities}\n            component={Masterpurities}\n          />\n          <PrivateRoute\n            path={route.salediscountlist}\n            component={DiscountList}\n          />\n          <PrivateRoute\n            path={route.voucherdiscountlist}\n            component={VoucherdiscountListing}\n          />\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n          <PrivateRoute\n            path={route.mastercollections}\n            component={Mastercollections}\n          />\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n          <PrivateRoute\n            path={route.masterdiamonds}\n            component={Masterdiamonds}\n          />\n          <PrivateRoute\n            path={route.diamondsettings}\n            component={Masterdiamondsettings}\n          />\n          <PrivateRoute\n            path={route.diamondshapes}\n            component={Masterdiamondshapes}\n          />\n          <PrivateRoute\n            path={route.earringbacking}\n            component={Earringbacking}\n          />\n          <PrivateRoute\n            path={route.gemsettings}\n            component={Mastergemsettings}\n          />\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n          <PrivateRoute\n            path={route.masterpaymentstatus}\n            component={Masterpaymentstatus}\n          />\n          <PrivateRoute\n            path={route.masterorderstatus}\n            component={Masterorderstatus}\n          />\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n          <PrivateRoute\n            path={route.shippingattributes}\n            component={Shippingattributes}\n          />\n          <PrivateRoute\n            path={route.addshippingattributes}\n            component={Addshippingattributes}\n          />\n          <PrivateRoute\n            path={route.addtaxattributes}\n            component={Addtaxattributes}\n          />\n\n          <PrivateRoute path={route.gender} component={Mastergenders} />\n          <PrivateRoute path={route.seo} component={Seopriority} />\n\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n          <PrivateRoute\n            exact\n            path={route.editdiscount}\n            component={Salediscount}\n          />\n\n          <PrivateRoute\n            exact\n            path={`${route.productAttributes}/:id`}\n            component={ProductAttributes}\n          />\n          <PrivateRoute\n            exact\n            path={`${route.createVariant}`}\n            component={CreateVariant}\n          />\n          <PrivateRoute\n            path={route.shipmentsettings}\n            component={Shipmentsettings}\n          />\n          <PrivateRoute\n            path={route.holiday_manager}\n            component={HolidayManager}\n          />\n          <PrivateRoute path={route.warehouse} component={Warehouse} />\n          <PrivateRoute path={route.inventory} component={Inventory} />\n        </Switch>\n      </NetworkProvider>\n      {/* </ProductProvider> */}\n    </ApolloProvider>\n  );\n};\n\nexport default MainApp;\n","import React from \"react\";\nimport { Alerts as Alert } from \"./components\";\nimport { AlertProps, AlertContext } from \"./context\";\n\nclass AppAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      severity: AlertProps.severity.success,\n      msg: \"\",\n      vertical: AlertProps.vertical.top,\n      horizontal: AlertProps.horizontal.center,\n    };\n  }\n\n  close = () => {\n    this.setState({\n      open: false,\n      severity: AlertProps.severity.success,\n      msg: \"\",\n      vertical: AlertProps.vertical.top,\n      horizontal: AlertProps.horizontal.center,\n    });\n  };\n\n  set = (props) => {\n    this.setState({ ...props });\n  };\n\n  render() {\n    return (\n      <AlertContext.Provider\n        value={{\n          ...this.state,\n          onclose: this.close,\n          setSnack: this.set,\n        }}\n      >\n        {this.state.open ? <Alert {...this.state} onclose={this.close} /> : \"\"}\n        {this.props.children}\n      </AlertContext.Provider>\n    );\n  }\n}\n\nexport default AppAlert;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport MainApp from \"./routes\";\nimport { GlobalProvider } from \"./context\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport AppAlert from \"./App.Alert\";\n\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n\n//       'Roboto'\n\n//     ].join(','),\n//   },\n// });\nfunction App() {\n  return (\n    <GlobalProvider>\n      <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n          <Router>\n            <AppAlert>\n              <MainApp />\n            </AppAlert>\n          </Router>\n        </div>\n      </MuiThemeProvider>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}