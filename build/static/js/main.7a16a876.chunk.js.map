{"version":3,"sources":["components/Categoryrow/Categoryrow.js","components/Label/Label.js","config.js","components/Breadcrumbs/Breadcrumbs.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","components/ProductFilter/components/downloadcsv.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","context/AlertContext.js","components/ProductFilter/components/FullCSVData.js","components/ProductFilter/ProductFilter.js","components/Alert/index.js","components/FeaturedProduct/Component/FeaturedProductComponent.js","components/FeaturedProduct/FeaturedProduct.js","components/Newarrival/component/NewarrivalComponent.js","components/Newarrival/NewArrival.js","components/Review/Component/Reviewcoponent.js","components/Review/Review.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","components/Input.js","components/Page/Page.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/ProductSync.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/Customerdetails.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","graphql/mutation.js","screens/HolidayManager/HolidayModal.js","screens/HolidayManager/index.js","screens/Warehouse/WarehouseModal.js","screens/Warehouse/index.js","screens/Inventory/InventoryModal.js","screens/Inventory/index.js","screens/CategoryList/components/editpage/editcategory.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/cms/cmshome.js","screens/cms/silverbanner/components/silverlandingpage.js","screens/cms/silverbanner/components/silverlistingpage.js","screens/cms/silverbanner/components/specificListPages.js","screens/cms/silverbanner/components/silverbottmpage.js","screens/cms/silverbanner/components/silverlistingroutingpage.js","screens/cms/silverbanner/silverbanner.js","screens/cms/silverbanner/silverListingBanner/silverListingBanner.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","routes/route.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","routes/index.js","App.Alert.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","card","width","padding","spacing","marginTop","buttonPadding","marginLeft","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","chip","color","palette","success","contrastText","main","pendingchip","secondary","useStyles","root","display","alignItems","justifyContent","flexGrow","flexShrink","borderRadius","shape","lineHeight","fontSize","minWidth","whiteSpace","rounded","Label","props","_clsx","className","variant","children","style","rest","Object","objectWithoutProperties","_excluded","classes","rootClassName","clsx","defineProperty","finalStyle","objectSpread2","border","concat","react_default","a","createElement","Typography","assign","defaultProps","colors","grey","API_URL","APP_URL","GRAPHQL_DEV_CLIENT","URL","StyledBreadcrumb","withStyles","fontWeight","typography","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","emphasize","Chip","CustomizedBreadcrumbs","Breadcrumbs","aria-label","component","href","url","label","name","icon","ArrowBackIos_default","PRODUCTCATEGORY","gql","_templateObject","taggedTemplateLiteral","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","_templateObject30","ALLMASTERRINGSIZE","HOLIDAYLIST","_templateObject31","WAREHOUSELIST","_templateObject32","INVENTORYLIST","_templateObject33","VALIDATEGENERATEDSKU","_templateObject34","STOCKSTATUS","_templateObject35","VERIFYTAGNO","_templateObject36","ALLSPECIFICLISTINGPAGE","CREATESPECIFICLISTINGPAGE","IMAGEDELETE","_templateObject37","ALLSTYLORISILVERLISTINGBOTTOMBANNERS","ALLSTYLORISILVERLANDINGBANNERS","ALLSTYLORISILVERLISTINGPAGE","DELETESILVERLANDINGBANNER","ALLFEATUREDPRODUCT","ALLNEWARRIVALPRODUCT","ORDERS","queries_templateObject","queries_templateObject2","orderid","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","category","allMasterProductCategories","nodes","map","_","value","id","product_type","allMasterProductTypes","shortCode","title","material","allMasterMaterials","gender","allMasterGenders","vendorcode","allMasterVendors","diamondsettings","allMasterDiamondsSettings","diamondshapes","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","earringbacking","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","DownloadCsv","_useState","_useState2","loader","setLoader","_useState3","_useState4","showdownload","setShowDownload","_useState5","keyCSV","valueCSV","_useState6","dataCSV","setDataCSV","useContext","fetchCSVdata","event","done","responseCSV","responseData","keyData","_i","_Object$entries","_Object$entries$_i","key","res_json","statuscode","entries","push","Fragment","Button","disabled","marginRight","CircularProgress","size","react_csv","header","filename","onClick","textDecoration","flexDirection","drawer","maxWidth","buttonIcon","content","contentSection","contentSectionHeader","cursor","contentSectionContent","formGroup","fieldGroup","field","marginBottom","addButton","tags","minAmount","maxAmount","radioGroup","actions","& > * + *","Filter","open","onClose","masters","onFilter","Filter_excluded","initialValues","company","mobile","city","version","commodity","values","setValues","handleoptionchange","type","Drawer","anchor","paper","onSubmit","preventDefault","Close_default","Grid","container","xs","Autocomplete","options","margin","fullWidth","product_category","getOptionLabel","option","onChange","renderInput","TextField","item","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","Search_excluded","searchcontent","setSearchcontent","Paper","elevation","Search_default","Input_Input","disableUnderline","placeholder","e","target","AlertProps","vertical","top","bottom","horizontal","left","right","center","severity","warning","AlertContext","msg","onclose","setSnack","Transition","forwardRef","ref","Slide","direction","FullCSVData","setOpen","_React$useState3","_React$useState4","setOptions","_React$useState5","_React$useState6","_React$useState7","_React$useState8","productType","setProductType","client","useApolloClient","snack","handleClose","useEffect","FullCSVData_templateObject","then","res","i","catch","err","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","exportFromJSON","fileName","exportType","flexWrap","flexBasis","filterButton","filterIcon","ProductFilter","ProductFilter_excluded","openFilter","setOpenFilter","components_Search_Search","window","location","pathname","downloadcsv","components_FullCSVData","FilterList_default","components_Filter_Filter","Alert","Alert_Alert","Alerts","reason","Snackbar","anchorOrigin","autoHideDuration","components_Alert_Alert","useStyles2","imagecontainer","& > *","table","tableWrapper","overflowX","link","link_style","FeaturedProuductComponent","allFeaturedProudct","setAllFeaturedProduct","productId","isActive","createFeaturedProduct","setCreateFeaturedProduct","_styloribannerfetch","opts","fatchvalue","allFeaturedProducts","styloribannerfetch","handleDelete","_ref2","_callee3","ProductId","_context3","variables","reload","onsubmitvalue","_ref3","_callee4","create_featured_Product","_context4","sm","fullwidth","text-align","autoFocus","FormControlLabel","control","Switch","checked","inputProps","labelPlacement","Table","borderColor","stickyHeader","TableHead","TableRow","TableCell","TableBody","val","index","_val$productListByPro","_val$productListByPro2","_val$productListByPro3","_val$productListByPro4","_val$isActive","productListByProductId","productName","alt","src","productImagesByProductId","imageUrl","_callee2","_context2","FeaturedProduct","FeaturedProductComponent","allNewArrivalProducts","NewarrivalComponent","columns","CustomerReview","page","setPage","rowsPerPage","setRowsPerPage","allReview","setAllReview","allCustomerReviews","log","handleChangeIsActive","Id","headCell","align","numeric","disablePadding","slice","row","_row$isPublish","_row$isActive","productSku","customerName","rating","message","isPublish","TableFooter","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","Reviewcoponent","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","description","minOrderQty","maxOrderQty","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","productSize","masterProductSize","metal","product_code","isactive","gemstonelist","diamondlist","variants","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","diamonditemname","diamondsubitemname","diamonddescription","gemstoneitemname","gemstonesubitemname","gemstonedescription","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","Input","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","Input_excluded","onKeyPress","which","input-label","textOverflow","overflow","input","&::placeholder","process","REACT_APP_GA_MEASUREMENT_ID","Page","Page_excluded","buildGradient","start","end","gradients","blue","indigo","green","orange","validate","require","schema","email","presence","allowEmpty","password","position","borderTopRightRadius","borderBottomRightRadius","white","breakpoints","down","backgroundImage","loginForm","divider","person","fields","submitButton","withRouter","LoginForm_excluded","_React$useContext2","isValid","touched","errors","formState","setFormState","showmessage","setShowmessage","handleChange","persist","handleSubmit","signinobj","pageaccess","pages","pagepermissions","setItem","accessToken","forEach","element","pageurl","is_write","history","alert","hasError","Card","CardContent","gutterBottom","autoComplete","LoginForm_Alert","Login","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","components_LoginForm_LoginForm","Component","Dashboard_","Container","components_Input_Input","Dashboard","paddingLeft","FullLoader","isopen","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","fieldHint","dateField","& + &","AddressForm","_React$useContext","initailRingSize","updateRingSize","AddressForm_excluded","allMasterRingsSizes","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","CardHeader","Divider","cardcontent","test","defaultValue","renderTags","getTagProps","InputProps","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","isreorderable","Radio","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","pointerEvents","zIndex","placeholderzindex","paddingRight","isDisabled","SelectContainer","View","selectzindex","SelectView","react_select_browser_esm","isClearable","PaymentForm","PaymentForm_excluded","handleInputChange","includes","button","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","Review_excluded","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","weight","handleClick","metalsarr","stonedetails","isvalid","justify","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chipFocused","noOptionsMessage","singleValue","borderBottom","formControl","selectEmpty","createData","calories","fat","carbs","protein","Step4_excluded","selectedOption","default_metal_size","Step5_excluded","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","product_id","filepath","replace","image_url","axios","put","file","unshift","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","setSuccess","setLoading","handleNext","error_content","formdata","keyvalue","sleep","_sleep","millis","setTimeout","Stepper","Step","StepLabel","step","Review_Review","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","textAlign","&:hover","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","lighten","light","primary","dark","clip","placeItems","withApollo","useHistory","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","fetchPolicy","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","offset","products","rows","addnewvendor","isAsc","react_components_esm","onCompleted","totalCount","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","address","gstNo","createdAt","vendordata","pincode","SelectProps","native","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","showproductdetails","_showproductdetails","prod_id","bodycontent","productid","filterparams","categoryname","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","_row$trans_sku_lists","trans_sku_lists","sku_id","Visibility_default","product_name","vendor_code","textarea","resize","backdrop","errorTable","LinearProgressWithLabel","Box","mr","LinearProgress","Math","round","ChooseWareHouse","_data$allWarehouses$n","_data$allWarehouses","getOptionSelected","allWarehouses","warehouse","newValue","setWarehouse","required","endAdornment","ProductSync","action_type","sync_url","new_tagno","setData","setProgress","errorTagNo","setErrorTagNo","validatedTagNo","setValidatedTagNo","backDrop","setBackDrop","_event$target","socket","socketIOClient","on","completed","timeElapsed","close","fullScreen","AppBar","Toolbar","IconButton","edge","errorStatus","tagno","isEmpty","startIcon","AssignmentTurnedInOutlined_default","Product_lists","Sync_default","ProductSync_ChooseWareHouse","ChipInput_default","onAdd","_data$list","_data$list2","list","toConsumableArray","onDelete","newChipKeyCodes","join","rowSpan","Backdrop","Productlist","setMasters","setFilterparams","components_ProductFilter_ProductFilter","filterobj","filtercontent","Product","Productlist_ProductSync","Header","Header_excluded","inner","Results","Results_excluded","CardActions","results","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","Results_Results_excluded","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","AboutVoucher_excluded","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","voucherdiscount","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","enddate","strictCompareDates","VoucherComponent","_React$createElement","VoucherComponent_excluded","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","producttypes","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","components_Results_Results_excluded","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","AboutVoucher_AboutVoucher_excluded","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","anchorEl","setAnchorEl","Boolean","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","myDate","setDate","getDate","orderstatus","OrderList_components_Header_Header_excluded","fromDate","setFromDate","ToDate","setToDate","statusval","setStatusval","handleDateChange","date","orderStatus","borderTop","select","onSelect","InputAdornment","MenuItem","DatePicker","onDate","Header_SortHeader","containergrid","OrderList_components_Results_Results_excluded","columnobjs","orderdate","onupdate","_showorderdetails","orderurl","components_EnhancedTableHead_EnhancedTableHead","columnsname","showcolumns","col","iswrite","showorderdetails","paymentmode","paymentstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","parse","paymentResponse","ipgTransactionId","APTRANSACTIONID","fail_reason","TRANSACTIONPAYMENTSTATUS","shoppingCartByCartId","cartcontent","cartAddressesByCartId","addressobj","addressline1","contactNumber","firstname","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","userProfileByUserprofileId","usercontent","firstName","useraddressess","userAddressesByUserProfileId","useraddressobj","giftwrapsByCartId","gift","getmaster","_getmaster","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","filter","data_filter","match","username","min","max","fromdate","todate","date_filter","OrderList_components_Results_Results","OrderList","user_id","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","onSuccess","positivebtn","closeButton","other","Addmetalprice_excluded","disableTypography","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","handleinputChange","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","readOnly","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","vendor","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","Adddiamondprice_excluded","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice_excluded","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","Addmakingchargeprice_excluded","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup_excluded","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","materiallist","puritylist","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","material_list","purity_list","sellpricemin","sellpricemax","markuptype","allPricingMarkups","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","setMateriallist","setPuritylist","Markuppricesetup_components_Product","black","blueGrey","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","Salediscount_components_Results_Results_excluded","components_AboutVoucher_AboutVoucher_excluded","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","VoucherComponent_VoucherComponent_excluded","Viewsku_excluded","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","Viewsku_DialogActions","Products","Products_excluded","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","author","applyButton","EditContent","diamond","onApply","EditContent_excluded","showpreview","setShowpreview","previewurl","imageurl","previmagenames","previmages","moment","foldername","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","Avatar","small","oninit","masterlist","setMasterlist","openedit","setOpenedit","editEmail","setEditEmail","aliasName","setaliasName","_React$useState33","_React$useState34","onCreate","Array","prototype","insert","setpreviewurl","_React$useState35","_React$useState36","_React$useState37","_React$useState38","toLowerCase","button_title","sort_id","filterOrder","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","editemail","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","toolbar","deleteButton","deleteIcon","OrderManagementDetails_components_Header_Header_excluded","OrderInfo","OrderInfo_excluded","setOption","setPaymentstatus","setOrderstatus","user_profile","first_name","last_name","shopping_cart","cart_addresses","addressline2","state","country","contact_number","discounted_price","awb_number","giftwraps","payment_mode","OrderItems","OrderItems_excluded","react_perfect_scrollbar_lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","text_heading","text_content","final_total_text","OrderDetails","OrderDetails_excluded","trans_sku_list","sku_weight","diamond_type","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","_fetchorderdetails","order_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","Materialmaster","Mastermetalcolors","Masterpurities_components_Results_Results_excluded","Masterpurities","DiscountList_components_Header_Header_excluded","DiscountList_components_Results_Results_excluded","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","VoucherdiscountListing_components_Header_Header_excluded","VoucherdiscountListing_components_Results_Results_excluded","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections_components_Results_Results_excluded","Mastercollections","Masterdesigns_components_Results_Results_excluded","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings_components_Results_Results_excluded","Mastergemsettings","Mastergemshapes_components_Results_Results_excluded","Mastergemshapes","Mastergemtypes_components_Results_Results_excluded","Mastergemtypes","Mastergenders_components_Results_Results_excluded","Mastergenders","Seopriority_components_Results_Results_excluded","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Taxsettings","Attributescontent","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles_components_Results_Results_excluded","Masterstyles","Masterthemes_components_Results_Results_excluded","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent_Attributescontent","AttributeComponent","AttributesComponent_excluded","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","productAttributes","selectedcategory","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","masterpages","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","masterroles","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","masterpurities","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","setFiltercontent","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","master_options","_match$params","tab","find","t","General","General_excluded","isemailverified","components_Label_Label","ismobileverified","borderRight","Customerdetails","setCustomer","userinfo","userprofile","components_General_General","Invoices","Userwishlist_components_Results_Results_excluded","setInvoices","invoice","Userwishlist","wishlists","Userwishlist_components_Results_Results","Useraddresses_components_Results_Results_excluded","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","AttributesComponent_AttributesComponent_excluded","Addtaxattributes","AttributesComponent_AttributesComponent","CREATE_HOLIDAY","mutation_templateObject","UPDATE_HOLIDAY","mutation_templateObject2","DELETE_HOLIDAY","mutation_templateObject3","CREATE_WAREHOUSE","mutation_templateObject4","UPDATE_WAREHOUSE","mutation_templateObject5","DELETE_WAREHOUSE","mutation_templateObject6","CREATE_INVENTORY","mutation_templateObject7","UPDATE_INVENTORY","mutation_templateObject8","DELETE_INVENTORY","mutation_templateObject9","inputField","HolidayModal","holiday","editItem","HolidayManager","_data$allHolidayManag","_data$allHolidayManag2","_data$allHolidayManag3","_data$allHolidayManag4","first","networkStatus","setType","accept","files","bodyFormData","FormData","set","post","handleUpload","htmlFor","Tooltip","CloudUpload_default","document","setAttribute","click","GetApp_default","AddCircle_default","TableContainer","NetworkStatus","colSpan","allHolidayManagers","DeleteForever_default","HolidayManager_HolidayModal","__typename","WarehouseModal","shippingInDays","Warehouse","_data$allWarehouses2","_data$allWarehouses3","Warehouse_WarehouseModal","InventoryModal","setError","onBlur","_res$data","_res$data$allTransSku","_res$data$allTransSku2","allTransSkuLists","numberOfItems","iconButton","StockStatus","_item$inventoriesByWa","_item$inventoriesByWa2","_item$inventoriesByWa3","inventoriesByWarehouseId","aggregates","sum","disableRipple","Store_default","Inventory","_filter","_data$allInventories","_data$allInventories2","_data$allInventories3","_data$allInventories4","setSearch","_useQuery2","includesInsensitive","startAdornment","Inventory_StockStatus","allInventories","Inventory_InventoryModal","warehouseId","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","editcategory_excluded","focusVisibleClassName","Editcategory","checkedA","checkedB","checkedC","setState","spaceing","useStyless","FormPropsTextFields","FontWeight","Select","notchedOutline","labelId","Menu_Menu","noValidate","lassName","columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","EnhancedTable","selected","setSelected","dense","emptyRows","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","CmsHome","SilverLandingPage","alllandingbanner","setalllandingbanner","web","createlandingbanner","setCreatelandingbanner","allBanners","onChangeData","create_banner_data","now","toISOString","SilverListingPage","SpecificListPages","urlParam","SilverListingBottom","Silverbanner","silverlandingpage","silverlistingpage","specificListPages","silverbottmpage","SilverListingbanner","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamondobj","diamondType","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","some","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","createVariant","productMetalcoloursByProductId","productPuritiesByProductId","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","saveCreateVariant","EditDiamond","_diamond$diamonditemn","_diamond$diamondsubit","_diamond$diamonddescr","_diamond$diamondClari","_diamond$diamondType","_diamond$diamondColou","EditDiamond_excluded","_Object$assign","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","DiamondSave","_DiamondSave","list_data","diamondListData","_diamondobj$diamondco","_diamondobj$diamondcl","_diamondobj$diamondty","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","itemName","subItemName","stoneAmount","settingData","shapeData","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","_diamond$gemstonesett","_diamond$gemstonecoun","_diamond$gemstoneweig","_diamond$gemstonesize","_diamond$gemstoneitem","_diamond$gemstonesubi","_diamond$gemstonedesc","_diamond$gemstoneshap","_diamond$gemstonetype","EditGemstone_excluded","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","Variants","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discountDesc","isReadyToShip","isdefault","skulistdata","EditPrice","EditPrice_excluded","pricerun","Skupricesync","_Skupricesync","priceobj","costPriceTax","sellingPriceTax","markupPrice","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","Components_EditPrice_EditPrice","selectcolumnfilter","Components_columns_Columns","minHeight","Productimages","image_count","productimages","setProductimages","imgobj","deleteImage","imageData","productimageid","handlenewAssetChange","fileType","fileobj","filetype","imagecontent","productimgs","responsecontent","imagePosition","styleFile","wordBreak","ishover","aria-hidden","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","_productCtx$masterDat","_productCtx$product_t","_productCtx$product_t2","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","_saveProductEditItem","_productCtx$product_t3","_productCtx$product_t4","_productCtx$productMe","_productCtx$vendorcod","_productCtx$vendorcod2","_productCtx$earringba","_productCtx$earringba2","productEditItem","earingBacking","_showpricesummary","sku","price_summary","skuprice","obj","material_name","_productListByProduct","_productListByProduct2","_productListByProduct3","_productListByProduct4","_productListByProduct5","_productListByProduct6","_productListByProduct7","_productListByProduct8","_productListByProduct9","_productListByProduct10","genders","productTypes","earringBackings","earringBacking","size_obj","sizeVarient","vendorCodes","sizes_arr","gender_arr","gender_obj","earring_backing","defaultcolour","metalcolors","unfilterMetalColor","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","transSkuDescriptionsBySkuId","skuDescription","ProductEdit_CreateVariant","changeVariant","ProductAttributes_Alert","materialName","esbody","endpoint","saveProductEditItem","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","route","login","dashboard","profile","productupload","configuration","productlist","orderlist","orderdetails","userorders","userwishlist","cmshome","mastermaterial","mastercolors","salediscountlist","voucherdiscountlist","salediscount","priceupdate","diamondDetails","gemstoneDetails","images","materiallistpage","editCategory","vendorPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","addshippingattributes","addtaxattributes","userconfiguration","manageadminusers","goldpriceupdate","manageusers","gemsettings","gemshapes","gemtypes","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","holiday_manager","inventory","silverbanner","silverlistingbanner","Comments","Newarrival","grow","menuButton","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","mixins","outline","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","icons","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","Menu_default","noWrap","MoreVert_default","MainWrapper","PrimaryAppBar_excluded","PrivateRoute","PrivateRoute_excluded","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","AppAlert","_this","call","Alert_Alerts","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","App_Alert","routes","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a16a876.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\nexport const BASE_URL = \"https://api-staging.nacjewellers.net\";\nexport const API_URL = \"https://api-staging.nacjewellers.net\";\nexport const APP_URL = \"https://staging.nacjewellers.net\";\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.nacjewellers.net/graphql\";\nexport const URL = \"https://console-staging.nacjewellers.net\";\nexport const BASE_IMAGE_URL = \"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\";\n//  export const GRAPHQL_DEV_CLIENT = \"http://localhost:8080/graphql\"\n//  export const API_URL = \"http://localhost:8080\"\n//  export const BASE_URL = \"http://localhost:8000\"\n//  export const URL = \"https://localhost:3000\"\n","import React from \"react\";\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { URL } from \"../../config\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.grey[300],\n    },\n    \"&:active\": {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info(\"You clicked a breadcrumb.\");\n}\n\nexport default function CustomizedBreadcrumbs(props) {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        href={props.url ? URL + props.url : URL + \"configuration\"}\n        label={props.name ? props.name : \"Configuration\"}\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n    </Breadcrumbs>\n  );\n}\n","import gql from \"graphql-tag\";\n\nconst PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterGenders {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        diamondClarity\n        diamondColor\n        id\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondsShapes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterThemes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        id\n        alias\n        name\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondClarities {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterVendors {\n      nodes {\n        id\n        name\n        shortCode\n        vendorDelivaryDays\n      }\n    }\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n      nodes {\n        productSeries\n        id\n      }\n    }\n    allMasterGemstonesTypes {\n      nodes {\n        alias\n        colorCode\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterGemstonesShapes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterEarringBackings {\n      nodes {\n        name\n        createdAt\n        alias\n        id\n        nodeId\n        updatedAt\n      }\n    }\n    allMasterGemstonesSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\nconst PRODUCTFILTERMASTER = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n        displayOrder\n      }\n    }\n  }\n`;\n\nconst ALLPRODUCTLIST = gql`\n  query {\n    allProductLists(first: 500) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLIST = (category) => gql`\n  query ($Veiw: Int!, $Offset: Int!) {\n    allProductLists(first: $Veiw, offset: $Offset) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLISTS = gql`\n  query {\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\n      nodes {\n        vendorDelivaryDays\n        updatedAt\n        state\n        shortCode\n        partnerCategory\n        name\n        organization\n        gstNo\n        currency\n        createdAt\n        city\n        address\n      }\n      totalCount\n    }\n  }\n`;\n\nconst TaxList_1 = gql`\n  query {\n    allMasterTaxSettings {\n      nodes {\n        hsnNumber\n        taxName\n        taxValue\n        updatedAt\n        id\n      }\n      totalCount\n    }\n  }\n`; /*********** configuration query */\n\nconst TaxList = `\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      sgst\n      productAttributes\n      displayAttributes\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList = `\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL = `\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS = `\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      shortCode\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES = `\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER = `\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    alias\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER = `\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER = `\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER = `\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER = `\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER = `\nquery  {\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    diamondClarity\n    diamondColor\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\n\nconst PAYMENTSTATUSMASTER = `\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS = `\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES = `\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES = `\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name\n    id\n    alias\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES = `\nquery{\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPAGES = `\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst GOLDPRICESETUPMASTER = `\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING = `\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONES = `\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES = `\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES = `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`;\nconst ACTIVESHIPPINGZONES = `\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES = `\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS = `\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS = `\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES = `\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERATTRIBUTES = `\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    isTopMenu\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS = `\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES = `\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES = `\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER = `\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES = `\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      imageUrl\n        mobileImageUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        purity\n        vendorCode\n        updatedAt\n        sellingPriceType\n        sellingPrice\n        material\n        id\n        createdAt\n        costPrice\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDMARKUP = gql`\n  query MyQuery($vendorCode: String!) {\n    allPricingMarkups(\n      condition: { material: $vendorCode }\n      orderBy: UPDATED_AT_DESC\n    ) {\n      nodes {\n        updatedAt\n        sellingPriceMin\n        sellingPriceMax\n        material\n        category\n        productType\n        markupValue\n        markupType\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        costPrice\n        createdAt\n        diamondClarity\n        diamondColour\n        id\n        sellingPrice\n        sellingPriceType\n        updatedAt\n        vendorCode\n      }\n      totalCount\n    }\n  }\n`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\nconst CATGORYLIST = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        shortCode\n        id\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTTYPEMASTER = gql`\n  query {\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MATERIALMASTER = gql`\n  query {\n    allMasterMaterials {\n      nodes {\n        alias\n        name\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MASTERCOLORS = gql`\n  query {\n    allMasterMetalsColors {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst SALEDISCOUNTS = gql`\n  query {\n    allSaleDiscounts {\n      nodes {\n        id\n        discountName\n        discountType\n        discountValue\n        components\n        attributes\n        isActive\n        productAttributes\n        productAttributesText\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst VOUCHERDISCOUNTS = gql`\n  query {\n    allVouchers {\n      nodes {\n        id\n        name\n        code\n        uses\n        maxUses\n        isActive\n        voucherCodes\n        description\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst MASTERPURITIES = gql`\n  query {\n    allMasterMetalsPurities {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLIST = `\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER = `\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst MASTERCATEGORY = `\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  }\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst GEMSTONEMASTER = `\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\nconst MAKINGCHARGEPRICELIST = gql`\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\n    allMakingChargeSettings(\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\n    ) {\n      nodes {\n        weightStart\n        weightEnd\n        vendorCode\n        updatedAt\n        sellingPriceType\n        rateType\n        purity\n        priceType\n        price\n        material\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\nconst GEMPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGemstonePriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        price\n        rateType\n        priceType\n        sellingPriceType\n        vendorCode\n        weightEnd\n        weightStart\n        updatedAt\n        id\n        createdAt\n        gemstoneType\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLISTSTATUSEDIT = gql`\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\n    __typename\n    updateProductListByProductId(\n      input: {\n        productId: $productId\n        productListPatch: { isactive: $isActive }\n      }\n    ) {\n      clientMutationId\n      productList {\n        isactive\n      }\n    }\n  }\n`;\n\nconst REVIEWQUERY = `\n  query {\n    allCustomerReviews {\n      nodes {\n        customerName\n        id\n        isActive\n        isPublish\n        message\n        nodeId\n        productSku\n        rating\n        title\n        updatedAt\n        userprofileId\n        productId\n      }\n    }\n  }\n`;\nconst CREATETAXSETUP = gql`\n  mutation MyMutation(\n    $id: UUID!\n    $updatedAt: Date!\n    $createdAt: Date!\n    $taxValue: Double!\n    $taxName: String!\n    $hsnNumber: String!\n  ) {\n    __typename\n    createMasterTaxSetting(\n      input: {\n        masterTaxSetting: {\n          id: $id\n          updatedAt: $updatedAt\n          createdAt: $createdAt\n          taxValue: $taxValue\n          taxName: $taxName\n          hsnNumber: $hsnNumber\n        }\n      }\n    ) {\n      clientMutationId\n    }\n  }\n`;\n\nconst VOUCHERSTATUSEDIT = gql`\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateVoucherById(\n      input: { id: $voucherId, voucherPatch: { isActive: $isActive } }\n    ) {\n      clientMutationId\n      voucher {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateSaleDiscountById(\n      input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }\n    ) {\n      clientMutationId\n      saleDiscount {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DELETEMARKUPPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deletePricingMarkupById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGOLDPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETESALEDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteSaleDiscountById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteVoucherById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEMAKINGCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGEMCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETEDIAMONDCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = gql`\n  query MyQuery($productId: String!) {\n    productListByProductId(productId: $productId) {\n      productMetalcoloursByProductId {\n        nodes {\n          productColor\n          id\n          __typename\n        }\n        __typename\n      }\n      productName\n      productType\n      vendorCode\n      gender\n      earringBacking\n      isactive\n      prodDescription\n      productMaterialsByProductSku {\n        nodes {\n          materialName\n          __typename\n        }\n        __typename\n      }\n      productDiamondsByProductSku {\n        nodes {\n          itemName\n          subItemName\n          description\n          diamondClarity\n          diamondColour\n          diamondSettings\n          diamondShape\n          diamondType\n          id\n          stoneCount\n          stoneWeight\n          stoneAmount\n          stoneRate\n\n          __typename\n        }\n        __typename\n      }\n      productGemstonesByProductSku {\n        nodes {\n          itemName\n          subItemName\n          description\n          gemstoneSetting\n          gemstoneShape\n          gemstoneSize\n          gemstoneType\n          gemstonsSize\n          id\n          stoneCount\n          stoneWeight\n          stoneAmount\n          stoneRate\n          __typename\n        }\n        __typename\n      }\n      productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n        nodes {\n          id\n          imagePosition\n          productId\n          imageUrl\n          ishover\n          isdefault\n          productColor\n          __typename\n        }\n        __typename\n      }\n      productPuritiesByProductId {\n        nodes {\n          purity\n          id\n          __typename\n        }\n        __typename\n      }\n      productThemesByProductId(condition: { isActive: true }) {\n        nodes {\n          themeName\n          id\n          __typename\n        }\n        __typename\n      }\n      productStonecolorsByProductId {\n        nodes {\n          id\n          stonecolor\n          __typename\n        }\n        __typename\n      }\n      productStylesByProductId(condition: { isActive: true }) {\n        nodes {\n          styleName\n          id\n          __typename\n        }\n        __typename\n      }\n      productCollectionsByProductId {\n        nodes {\n          collectionName\n          id\n          __typename\n        }\n        __typename\n      }\n      productOccassionsByProductId(condition: { isActive: true }) {\n        nodes {\n          occassionName\n          id\n          __typename\n        }\n        __typename\n      }\n      productStonecountsByProductId {\n        nodes {\n          id\n          stonecount\n          __typename\n        }\n        __typename\n      }\n      transSkuListsByProductId {\n        nodes {\n          skuSize\n          diamondType\n          metalColor\n          purity\n          productId\n          skuWeight\n          generatedSku\n          costPrice\n          costPriceTax\n          discountPrice\n          discountPriceTax\n          markupPrice\n          marginOnSalePercentage\n          markupPriceTax\n          marginOnSalePercentage\n          sellingPrice\n          discountDesc\n          sellingPriceTax\n          isReadyToShip\n          discount\n          isActive\n          isdefault\n          vendorDeliveryTime\n          id\n          isActive\n\n          transSkuDescriptionsBySkuId {\n            nodes {\n              skuDescription\n              certificate\n              ringsizeImage\n              __typename\n            }\n            __typename\n          }\n          maxOrderQty\n          minOrderQty\n          __typename\n        }\n        __typename\n      }\n      productCategory\n      sizeVarient\n      height\n      length\n      width\n      __typename\n      productVendorCode\n    }\n  }\n`;\n\nconst ALLMASTERRINGSIZE = `\n  query {\n    allMasterRingsSizes {\n      nodes {\n        gender\n        productType\n        name\n        size\n        sizeValue\n      }\n    }\n  }\n`;\n\nconst HOLIDAYLIST = gql`\n  query ($first: Int, $offset: Int, $filter: HolidayManagerFilter) {\n    allHolidayManagers(\n      first: $first\n      offset: $offset\n      filter: $filter\n      orderBy: DATE_ASC\n    ) {\n      nodes {\n        id\n        holiday\n        date\n        createdAt\n        updatedAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst WAREHOUSELIST = gql`\n  query {\n    allWarehouses(orderBy: ID_ASC) {\n      nodes {\n        id\n        name\n        shippingInDays\n        isActive\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\n\nconst INVENTORYLIST = gql`\n  query ($first: Int, $offset: Int, $filter: InventoryFilter) {\n    allInventories(first: $first, offset: $offset, filter: $filter) {\n      nodes {\n        id\n        generatedSku\n        numberOfItems\n        createdAt\n        updatedAt\n        warehouse: warehouseByWarehouseId {\n          id\n          name\n        }\n      }\n      totalCount\n    }\n  }\n`;\n\nconst VALIDATEGENERATEDSKU = gql`\n  query ($generatedSku: String!) {\n    allTransSkuLists(condition: { generatedSku: $generatedSku }) {\n      nodes {\n        id\n      }\n    }\n  }\n`;\n\nconst STOCKSTATUS = gql`\n  query {\n    allWarehouses {\n      nodes {\n        name\n        isActive\n        inventoriesByWarehouseId {\n          aggregates {\n            sum {\n              numberOfItems\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst VERIFYTAGNO = gql`\n  query ($tagno: String!) {\n    list: allTransSkuLists(condition: { generatedSku: $tagno }) {\n      nodes {\n        id\n      }\n    }\n  }\n`;\n\nconst ALLBANNERSCOMPLETE = `\nquery MyQuery {\n  allBanners\n  {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam \n    }\n  }\n}\n`;\n\nconst ALLBANNERS = `\nquery MyQuery {\n  allBanners(condition: {urlParam: \"landing\"})\n  {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam \n    }\n  }\n}\n`;\n\nconst CREATEALLBANNERS = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam : \"landing\"\n      }\n    }\n  ) {\n    clientMutationId\n     banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\n\nconst ALLLISTINGBANNERS = `\nquery MyQuery {\n  allBanners(condition: {urlParam: \"listing\"})\n  {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam \n    }\n  }\n}\n`;\n\nconst CREATELISTINGBANNERS = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam : \"listing\"\n      }\n    }\n  ) {\n    clientMutationId\n     banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\n\nconst ALLSPECIFICLISTINGPAGE = `\nquery MyQuery {\n  allBanners\n  (condition: {url: \"specificListingPage\"}) \n  {\n    nodes {\n      id\n      mobile\n      position\n      web\n      urlParam\n    }\n  }\n}\n`;\n\nconst CREATESPECIFICLISTINGPAGE = `\nmutation MyMutation(\n  $now: Datetime!\n  $web: String\n  $mobile: String\n  $urlParam :String\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        url: \"specificListingPage\"\n        web: $web\n        urlParam : $urlParam\n      }\n    }\n  ) {\n    clientMutationId\n    banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\n\nconst DELETEALLBANNER = `\nmutation MyMutation($id : Int!) {\n  deleteBannerById(input: {id: $id}) {\n    banner {\n      id\n      nodeId\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\nconst ALLMASTERPRODUCTSIZE = gql`\n  query allproductsizes($productType: String) {\n    allMasterRingsSizes(condition: { productType: $productType }) {\n      nodes {\n        name\n        nodeId\n        id\n        size\n        updatedAt\n        productType\n        gender\n        sizeValue\n      }\n    }\n  }\n`;\n\nconst IMAGEDELETE = `\nmutation MyMutation($productimageid: UUID!) {\n  deleteProductImageById(input: { id: $productimageid }) {\n    productListByProductId {\n      productId\n    }\n  }\n}\n\n`;\n\nconst ALLSTYLORISILVERLISTINGBOTTOMBANNERS = `\nquery MyQuery {\n  allBanners(condition: { urlParam: \"bottom\" }) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}\n\n`;\n\nconst ALLSTYLORISILVERLANDINGBANNERS = `\nquery MyQuery {\n  allBanners(condition: { urlParam: \"landing\" }) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}\n\n`;\n\nconst ALLSTYLORISILVERLISTINGPAGE = `\nquery MyQuery {\n  allBanners(condition: { urlParam: \"listingPage\" }) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}\n\n\n`;\n\nconst ALLSTYLORISILVERROUTINGPAGE = `\nquery MyQuery {\n  allBanners(condition: {url: \"#\"}) {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam\n    }\n  }\n}`;\n\nconst CREATESILVERLANDINGBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam :\"landing\"\n      }\n    }\n  ) {\n    clientMutationId\n    banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}`;\n\nconst CREATESILVERLISTINGBOTTOMBANNER = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        url: $url\n        web: $web\n        urlParam: \"bottom\"\n        position: $position\n      }\n    }\n  ) {\n    clientMutationId\n    banner {\n      id\n      mobile\n      updatedAt\n      url\n      web\n      createdAt\n      urlParam\n    }\n  }\n}\n\n\n`;\n\nconst CREATESILVERLISTINGPAGE = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam: \"listingPage\"\n      }\n    }\n  ) {\n    clientMutationId\n    banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n\n`;\n\nconst CREATESTYLORISILVERROUTINGPAGE = `\nmutation MyMutation(\n  $now: Datetime!\n  $web: String\n  $mobile: String\n  $position: Int\n  $urlParam: String\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: \"S\"\n        web: $web\n        urlParam: $urlParam\n      }\n    }\n  ) {\n    clientMutationId\n    banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n      urlParam\n    }\n  }\n}\n\n`;\n\nconst DELETESILVERLANDINGBANNER = `\nmutation MyMutation($id: Int!) {\n  deleteBannerById(input: { id: $id }) {\n    banner {\n      id\n      nodeId\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n\n`;\n\nconst DELETESILVERLISTINGBOTTOMBANNER = `\nmutation MyMutation($id: Int!) {\n  deleteBannerById(input: { id: $id }) {\n    banner {\n      id\n      mobile\n      position\n      url\n      web\n    }\n  }\n}\n`;\nconst ALLFEATUREDPRODUCT = `query MyQuery {\n  allFeaturedProducts {\n    nodes {\n      productId\n      productListByProductId {\n        productName\n        productId\n        productImagesByProductId(condition: { ishover: true }) {\n          nodes {\n            imageUrl\n          }\n        }\n        transSkuListsByProductId {\n          nodes {\n            costPrice\n            markupPrice\n            skuUrl\n            transSkuDescriptionsBySkuId {\n              nodes {\n                skuDescription\n              }\n            }\n            sellingPrice\n          }\n        }\n      }\n      isActive\n    }\n  }\n}\n\n`;\n\nconst CREATEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\n  createFeaturedProduct(\n    input: { featuredProduct: { productId: $ProductId, isActive: $isActive } }\n  ) {\n    featuredProduct {\n      productId\n      isActive\n    }\n  }\n}\n`;\nconst ISACTIVEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\n  updateFeaturedProductByProductId(\n    input: {\n      featuredProductPatch: { isActive: $isActive }\n      productId: $ProductId\n    }\n  ) {\n    featuredProduct {\n      productId\n      isActive\n    }\n  }\n}\n`;\nconst DELETEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!) {\n  deleteFeaturedProductByProductId(input: { productId: $ProductId }) {\n    featuredProduct {\n      productId\n    }\n  }\n}\n`;\nconst CREATENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\n  createNewArrivalProduct(\n    input: { newArrivalProduct: { productId: $ProductId, isActive: $isActive } }\n  ) {\n    newArrivalProduct {\n      productId\n      isActive\n    }\n  }\n}\n`;\nconst ALLNEWARRIVALPRODUCT = `query MyQuery{\n  allNewArrivalProducts {\n    nodes {\n      productId\n      productListByProductId {\n        productName\n        productId\n        productImagesByProductId(condition: {ishover: false}) {\n          nodes {\n            imageUrl\n          }\n        }\n        transSkuListsByProductId{\n          nodes{\n            costPrice\n            markupPrice\n            skuUrl\n            transSkuDescriptionsBySkuId{\n              nodes{\n                skuDescription\n              }\n            }\n            sellingPrice\n          }\n        }\n      }\n      isActive\n    }\n  }\n}\n`;\nconst ISACTIVENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\n  updateNewArrivalProductByProductId(\n    input: {newArrivalProductPatch: {isActive: $isActive}, productId: $ProductId}\n  ) {\n    newArrivalProduct {\n      productId\n      isActive\n    }\n  }\n}\n`;\nconst DELETENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!) {\n  deleteNewArrivalProductByProductId(input: {productId: $ProductId}) {\n    clientMutationId\n    deletedNewArrivalProductId\n  }\n}\n\n`;\nexport {\n  ALLBANNERS,\n  ALLLISTINGBANNERS,\n  ALLSPECIFICLISTINGPAGE,\n  CREATEALLBANNERS,\n  CREATELISTINGBANNERS,\n  CREATESPECIFICLISTINGPAGE,\n  DELETEALLBANNER,\n  PRODUCTCATEGORY,\n  PRODUCTLIST,\n  PRODUCTEDIT,\n  PRODUCTLISTSTATUSEDIT,\n  PRODUCTDIAMONDTYPES,\n  GOLDPRICELIST,\n  DIAMONDPRICELIST,\n  GEMPRICELIST,\n  MAKINGCHARGEPRICELIST,\n  VENDORLIST,\n  ALLPRODUCTLIST,\n  DIAMONDMARKUP,\n  PRODUCTFILTERMASTER,\n  METALMASTER,\n  GEMSTONEMASTER,\n  MASTERCATEGORY,\n  DELETEMARKUPPRICE,\n  DELETEMAKINGCHARGE,\n  DELETEGEMCHARGE,\n  DELETEGOLDPRICE,\n  DELETESALEDISCOUNT,\n  CATGORYLIST,\n  DELETEDIAMONDCHARGE,\n  VENDORLISTS,\n  TaxList,\n  PRODUCTTYPEMASTER,\n  MATERIALMASTER,\n  MASTERCOLORS,\n  MASTERPURITIES,\n  SALEDISCOUNTS,\n  VOUCHERDISCOUNTS,\n  DELETEVOUCHERDISCOUNT,\n  VOUCHERSTATUSEDIT,\n  DISCOUNTSTATUSEDIT,\n  MASTERMATERIAL,\n  MASTERMATERIALCOLORS,\n  MASTERPRODUCTPURITIES,\n  COLLECTIONMASTER,\n  DESIGNMASTER,\n  DIAMONDMASTER,\n  DIAMONDSETTINGS,\n  DIAMONDSHAPES,\n  MASTERPRODUCTTYPES,\n  MASTERGEMSETTINGS,\n  MASTERGEMSHAPES,\n  MASTERGEMTYPES,\n  MASTERGENDER,\n  SEOPRIORITIES,\n  CREATETAXSETUP,\n  TaxSettingList,\n  MASTERCATEGORIES,\n  EARRINGBACKING,\n  MASTERATTRIBUTES,\n  MASTERSTONESHAPES,\n  MASTERSTONECOLORS,\n  MASTERSTONES,\n  MASTERWEIGHTS,\n  THEMEMASTER,\n  STYLEMASTER,\n  OCCASSIONSMASTER,\n  PAYMENTSTATUSMASTER,\n  SHIPPINGZONES,\n  MASTERCOUNTRIES,\n  SHIPPINGCHARGES,\n  ACTIVESHIPPINGZONES,\n  MASTERPAGES,\n  GOLDPRICESETUPMASTER,\n  ALLMASTERRINGSIZE,\n  HOLIDAYLIST,\n  WAREHOUSELIST,\n  INVENTORYLIST,\n  VALIDATEGENERATEDSKU,\n  STOCKSTATUS,\n  VERIFYTAGNO,\n  ALLMASTERPRODUCTSIZE,\n  IMAGEDELETE,\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\n  ALLSTYLORISILVERLANDINGBANNERS,\n  ALLSTYLORISILVERLISTINGPAGE,\n  ALLSTYLORISILVERROUTINGPAGE,\n  CREATESILVERLANDINGBANNER,\n  CREATESILVERLISTINGBOTTOMBANNER,\n  CREATESILVERLISTINGPAGE,\n  CREATESTYLORISILVERROUTINGPAGE,\n  DELETESILVERLANDINGBANNER,\n  DELETESILVERLISTINGBOTTOMBANNER,\n  ALLFEATUREDPRODUCT,\n  CREATEFEATUREDPRODUCT,\n  ISACTIVEFEATUREDPRODUCT,\n  DELETEFEATUREDPRODUCT,\n  REVIEWQUERY,\n  CREATENEWARRIVALPRODUCT,\n  ALLNEWARRIVALPRODUCT,\n  ISACTIVENEWARRIVALPRODUCT,\n  DELETENEWARRIVALPRODUCT,\n};\n","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export const USERORDERS = gql`query($userid: UUID!) {\n    allOrders(filter: {userProfileByUserProfileId: {id: {equalTo: $userid}}}) {\n      nodes {\n        paymentMode\n        paymentStatus\n        updatedAt\n        createdAt\n        awbNumber\n        cartId\n        orderStatus\n        comments\n        id\n        shoppingCartByCartId {\n          shoppingCartItemsByShoppingCartId {\n            nodes {\n              transSkuListByProductSku {\n                generatedSku\n                productListByProductId {\n                  productCategory\n                  productType\n                  productCollectionsByProductId {\n                    nodes {\n                      collectionName\n                    }\n                  }\n                }\n              }\n            }\n          }\n          giftwrapsByCartId {\n            nodes {\n              message\n              giftFrom\n              giftTo\n            }\n          }\n          \n          cartAddressesByCartId {\n            nodes {\n              firstname\n              contactNumber\n              addressline1\n              addressline2\n              city\n              pincode\n              state\n            }\n          }\n          userProfileByUserprofileId {\n            firstName\n            mobile\n            email\n          }\n        }\n        paymentDetailsByOrderId {\n          nodes {\n            paymentResponse\n          }\n        }\n      }\n    }\n  \n  }`\nexport const ORDERS = orderid  => gql`query {\n  allOrders(filter:  ${orderid ? `{userProfileId: {equalTo: \"${orderid}\"}}` : `{id: {isNull: false}}`},orderBy: CREATED_AT_DESC) {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n          userAddressesByUserProfileId {\n            nodes {\n              contactNumber\n            }\n          }\n          \n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`\n\nexport const VOUCHERMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      \n      \n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\n\nexport const TAXMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,USERORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._,\n        //     name: _.name,\n        //     size:_.size,\n        //     productType : _.productType ,\n        // }))\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking,\n            // metalSizeMinToMax\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const userOders = {\n    query: USERORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._\n        // }))\n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes,\n            // metalSizeMinToMax\n        }\n    }\n\n\n}","import React from \"react\";\nimport { productCategory } from \"../services/mapper\";\nimport { API_URL } from \"../config\";\nimport { isString } from \"util\";\n\nconst TOKEN = \"accesstoken\";\n\nconst initialNetworkCtx = {\n  networkCtx: {\n    mapper: productCategory,\n    status: {\n      called: false,\n      data: [],\n      loading: true,\n      error: false,\n      parsedData: [],\n    },\n    notRequested: true,\n  },\n  setNetworkCtx: () => null,\n  sendNetworkRequest: () => null,\n};\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n  url = API_URL + url;\n  console.info(\"URL\", url, data);\n  const method = data ? \"POST\" : \"GET\",\n    headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n  let resdata = null;\n  if (auth) {\n    const token = localStorage.getItem(TOKEN);\n    if (token) headers[\"x-access-token\"] = token;\n    // else window.location = '/'\n  }\n  const response = await fetch(\n    url,\n    method === \"GET\"\n      ? { method }\n      : {\n          method,\n          body: isString(data) ? data : JSON.stringify(data),\n          headers,\n        }\n  );\n\n  if (response.status < 400) {\n    resdata = await response.json();\n  } else {\n    resdata = await response.json();\n    // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n    // {\n    //    if(!resdata.auth)\n    //    {\n    //     //alert(resdata.message)\n    //    }\n    // }else{\n    //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    // }\n  }\n  resdata[\"statuscode\"] = response.status;\n\n  return resdata;\n};\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n  const [networkCtx, setNetworkCtx] = React.useState(\n    initialNetworkCtx.networkCtx\n  );\n\n  return (\n    <NetworkContext.Provider\n      value={{ networkCtx, setNetworkCtx, sendNetworkRequest }}\n    >\n      {props.children}\n    </NetworkContext.Provider>\n  );\n};\n","import React, { useState } from \"react\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport { CSVLink } from \"react-csv\";\nconst DownloadCsv = () => {\n  const [loader, setLoader] = useState(false);\n  const [showdownload, setShowDownload] = useState(false);\n  const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const fetchCSVdata = async (event, done) => {\n    setLoader(true);\n    let responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\n    let responseData = responseCSV.res_json;\n\n    if (responseCSV.statuscode === 200) {\n      let keyData = [];\n\n      for (const [key] of Object.entries(responseData[0])) {\n        keyData.push({ label: key, key: key });\n      }\n\n      setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\n      setLoader(false);\n      setShowDownload(true);\n    }\n  };\n\n  const clearCsv = () => {\n    setDataCSV({ keyCSV: [], valueCSV: [] });\n    setShowDownload(false);\n  };\n\n  return (\n    <>\n      {loader ? (\n        <Button variant=\"outlined\" disabled color=\"primary\" style={{ marginRight: \"8px\" }}>\n          <CircularProgress size={20} />\n        </Button>\n      ) : showdownload ? (\n        <CSVLink\n          header={dataCSV.keyCSV}\n          data={dataCSV.valueCSV}\n          filename={\"product-details.csv\"}\n          onClick={() => {\n            clearCsv();\n          }}\n          style={{ textDecoration: \"none\" }}\n        >\n          <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }}>\n            Download CSV\n          </Button>\n        </CSVLink>\n      ) : (\n        <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }} onClick={() => fetchCSVdata()}>\n          Load CSV\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default DownloadCsv;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Chip,\n  Collapse,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Slider,\n  TextField,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: 420,\n    maxWidth: '100%'\n  },\n  header: {\n    padding: theme.spacing(2, 1),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 3),\n    flexGrow: 1\n  },\n  contentSection: {\n    padding: theme.spacing(2, 0)\n  },\n  contentSectionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    cursor: 'pointer'\n  },\n  contentSectionContent: {},\n  formGroup: {\n   \n    padding: theme.spacing(2, 0)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  addButton: {\n    marginLeft: theme.spacing(1)\n  },\n  tags: {\n    marginTop: theme.spacing(1)\n  },\n  minAmount: {\n    marginRight: theme.spacing(3)\n  },\n  maxAmount: {\n    marginLeft: theme.spacing(3)\n  },\n  radioGroup: {},\n  actions: {\n    padding: theme.spacing(3),\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst Filter = props => {\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n      name: '',\n      company: '',\n      mobile: '',\n      city: '',\n      version: null,\n      commodity: []\n  };\n\n  const [expandProject, setExpandProject] = useState(true);\n  const [expandCustomer, setExpandCustomer] = useState(false);\n  const [values, setValues] = useState({ ...initialValues });\n\n  const handleClear = () => {\n    setValues({ \n      ...initialValues });\n  };\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n  const handleoptionchange = type => (event, value) => {\n    setValues(values => ({\n      ...values,\n      [type]: value\n    }));\n  }\n  const handleinputchange = type => (e) => {\n    setValues({\n      ...values,\n      [type]: e.target.value\n    })\n  }\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n  const handleDateChange = type => (date) => {\n    setValues({\n      ...values,\n      [type]: date\n    })\n  };\n  const handleToggleProject = () => {\n    setExpandProject(expandProject => !expandProject);\n  };\n\n  const handleToggleCustomer = () => {\n    setExpandCustomer(expandCustomer => !expandCustomer);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    onFilter && onFilter(values);\n    onClose && onClose()\n  };\n\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\"\n    >\n      <form\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}\n      >\n        <div className={classes.header}>\n          <Button\n            onClick={onClose}\n            size=\"small\"\n          >\n            <CloseIcon className={classes.buttonIcon} />\n            Close\n          </Button>\n        </div>\n        <div className={classes.content}>\n          <Grid container xs={12} spacing={1}>\n            {/* <Grid item xs={12}>\n                      <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={values.name}\n                            onChange={handleinputchange('name')}\n                           label=\"Name\"\n                          />\n            </Grid> */}\n             <Grid xs={12}>\n            <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masters.product_categories}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_category}\n                  getOptionLabel={(option) => option.name}\n                  onChange={handleoptionchange('product_category')}\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n                      \n           \n            <Grid item xs={12}>\n            <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={masters.product_types}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_type}\n                  onChange={handleoptionchange('product_type')}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n           </Grid>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            fullWidth\n            onClick={handleClear}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.buttonIcon} />\n            Clear\n          </Button>\n          <Button\n            color=\"primary\"\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Apply filters\n          </Button>\n        </div>\n      </form>\n    </Drawer>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  onFilter: PropTypes.func,\n  masters : PropTypes.object,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Button, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  search: {\n    flexGrow: 1,\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  },\n  searchButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Search = props => {\n  const { onSearch, className, ...rest } = props;\n  const [searchcontent, setSearchcontent] = React.useState('');\n\n  const classes = useStyles();\n  const handleinputchange = type => e => {\n    setSearchcontent(e.target.value)\n  }\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search by order id, Name and Mobile\"\n          onChange={handleinputchange('searchcontent')}\n        />\n      </Paper>\n      <Button\n        className={classes.searchButton}\n        onClick={() => onSearch(searchcontent)}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onSearch: PropTypes.func\n};\n\nexport default Search;\n","import React from \"react\";\nexport let AlertProps = {\n  vertical: {\n    top: \"top\",\n    bottom: \"bottom\",\n  },\n  horizontal: {\n    left: \"left\",\n    right: \"right\",\n    center: \"center\",\n  },\n  severity: {\n    success: \"success\",\n    error: \"error\",\n    warning: \"warning\",\n    info: \"info\",\n  },\n};\n\n/**\n * AlertContext store the props which are neccessary to show the Alert component,\n * which is provided at the /src/App.js using the /src/App.alert.js.\n */\nexport let AlertContext = React.createContext({\n  open: false,\n  severity: AlertProps.severity.success,\n  msg: \"\",\n  vertical: AlertProps.vertical.top,\n  horizontal: AlertProps.horizontal.center,\n  onclose: () => null,\n  setSnack: () => null,\n});\n","import React from \"react\";\nimport { Button, Dialog, DialogActions, DialogTitle, DialogContent, TextField, CircularProgress, Grid } from \"@material-ui/core\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { useApolloClient } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport {AlertContext} from \"../../../context/AlertContext\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport exportFromJSON from \"export-from-json\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst FullCSVData = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const [loader, setLoader] = React.useState(false);\n  const [productType, setProductType] = React.useState(null);\n  const client = useApolloClient();\n  const snack = React.useContext(AlertContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(() => {\n    client\n      .query({\n        query: gql`\n          query {\n            type: allMasterProductTypes(orderBy: NAME_ASC) {\n              nodes {\n                name\n              }\n            }\n          }\n        `,\n      })\n      .then((res) => {\n        setOptions(res.data.type.nodes.map((i) => i.name));\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  const onDownload = () => {\n    if (productType == null) {\n      return snack.setSnack({\n        open: true,\n        severity: \"warning\",\n        msg: \"Please choose a product type!\",\n      });\n    }\n    setLoader(true);\n    sendNetworkRequest(\"/getcsvdata\", {}, { type: productType })\n      .then((data) => {\n        exportFromJSON({\n          data,\n          fileName: `${productType}`,\n          exportType: \"xls\",\n        });\n        setOpen(false);\n        setLoader(false);\n        setProductType(null);\n      })\n      .catch((err) => {\n        console.error(err);\n        setOpen(false);\n        setLoader(false);\n        return snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occurred while downloading, Please try again!\",\n        });\n      });\n  };\n\n  return (\n    <Grid>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} style={{ marginRight: \"8px\" }}>\n        Full Data Download\n      </Button>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Choose Product Type to download data?\"}</DialogTitle>\n        <DialogContent>\n          <Autocomplete\n            id=\"type\"\n            options={options}\n            value={productType}\n            getOptionLabel={(option) => option}\n            style={{ width: 300 }}\n            onChange={(e, value) => {\n              setProductType(value);\n            }}\n            renderInput={(params) => <TextField {...params} label=\"Product Type\" variant=\"outlined\" />}\n          />\n        </DialogContent>\n        <DialogActions>\n          {loader && <CircularProgress size={28} />}\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={onDownload} color=\"primary\">\n            Download\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n};\n\nexport default FullCSVData;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport DownloadCsv from \"./components/downloadcsv\";\nimport { Search, Filter } from \"./components\";\nimport FullCSVData from \"./components/FullCSVData\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n  },\n  search: {\n    flexGrow: 1,\n    maxWidth: 480,\n    flexBasis: 480,\n  },\n  filterButton: {\n    marginLeft: \"auto\",\n  },\n  filterIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst ProductFilter = (props) => {\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const handleFilterOpen = () => {\n    setOpenFilter(true);\n  };\n\n  const handleFilterClose = () => {\n    setOpenFilter(false);\n  };\n\n  return (\n    <Grid {...rest} className={clsx(classes.root, className)} container spacing={3}>\n      <Grid item>\n        <Search className={classes.search} onSearch={onSearch} />\n      </Grid>\n\n      <Grid item>\n        <Grid container>\n          <Grid>{window.location.pathname === \"/productlist\" && <DownloadCsv />}</Grid>\n          <Grid>{window.location.pathname === \"/productlist\" && <FullCSVData />}</Grid>\n          <Grid>\n            <Button className={classes.filterButton} color=\"primary\" onClick={handleFilterOpen} size=\"small\" variant=\"outlined\">\n              <FilterListIcon className={classes.filterIcon} /> Filter\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Filter onClose={handleFilterClose} onFilter={onFilter} open={openFilter} masters={masters} />\n    </Grid>\n  );\n};\n\nProductFilter.propTypes = {\n  className: PropTypes.string,\n  onFilter: PropTypes.func,\n  onSearch: PropTypes.func,\n  masters: PropTypes.object,\n};\n\nexport default ProductFilter;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\n//MuiAlert component which is shown inside the Snackbar component\nlet Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nexport const Alerts = (props) => {\n  const [open, setOpen] = React.useState(props.open);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.onclose();\n    setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      id=\"main_alert_snackbar\"\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal,\n      }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <Alert id=\"main_alert\" severity={props.severity} onClose={handleClose}>\n        {props.msg}\n      </Alert>\n    </Snackbar>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport React, { useEffect, useState } from \"react\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\nimport {\n  ALLFEATUREDPRODUCT,\n  CREATEFEATUREDPRODUCT,\n  DELETEFEATUREDPRODUCT,\n  ISACTIVEFEATUREDPRODUCT,\n} from \"../../../graphql/query\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst FeaturedProuductComponent = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [allFeaturedProudct, setAllFeaturedProduct] = useState([]);\n  const [createFeaturedProduct, setCreateFeaturedProduct] = useState({\n    productId: \"\",\n    isActive: false,\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLFEATUREDPRODUCT,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allFeaturedProducts.nodes;\n\n          setAllFeaturedProduct(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreateFeaturedProduct({\n      ...createFeaturedProduct,\n      [event.target.name]: event.target.value,\n    });\n  };\n  const onChangeChecked = (event) => {\n    setCreateFeaturedProduct({\n      ...createFeaturedProduct,\n      [event.target.name]: event.target.checked,\n    });\n  };\n  const handleChangeIsActive = (productId) => async (event) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: ISACTIVEFEATUREDPRODUCT,\n        variables: { ProductId: productId, isActive: event.target.checked },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const handleDelete = async (ProductId) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETEFEATUREDPRODUCT,\n        variables: { ProductId: ProductId },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_featured_Product = {\n      ProductId: createFeaturedProduct.productId,\n      isActive: createFeaturedProduct.isActive,\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATEFEATUREDPRODUCT,\n        variables: create_featured_Product,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid\n          container\n          item\n          xs={12}\n          style={{ padding: \"16px\" }}\n          sm={12}\n          alignItems={\"flex-end\"}\n        >\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography\n              component=\"h6\"\n              variant=\"h6\"\n              style={{ fontWeight: \"bold\" }}\n            >\n              NAC - Landing Page - Featured Product\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">\n            {\" \"}\n            NAC - Landing Page - Featured Product :{\" \"}\n          </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"productId\"\n              label=\"Product Id\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createFeaturedProduct.productId}\n              name=\"productId\"\n            />\n            <FormControlLabel\n              value=\"start\"\n              control={\n                <Switch\n                  checked={createFeaturedProduct.isActive}\n                  onChange={onChangeChecked}\n                  name=\"isActive\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                />\n              }\n              label=\"Product Active\"\n              labelPlacement=\"start\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            border={1}\n            borderColor={\"#ddd\"}\n            size=\"small\"\n            stickyHeader\n          >\n            <TableHead>\n              <TableRow>\n                <TableCell>Product Id</TableCell>\n                <TableCell>Proudct Name</TableCell>\n                <TableCell>Image</TableCell>\n                <TableCell>Active</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {allFeaturedProudct.map((val, index) => (\n                <TableRow key={index}>\n                  <TableCell>{val.productId}</TableCell>\n                  <TableCell>\n                    {val?.productListByProductId?.productName}\n                  </TableCell>\n                  <TableCell>\n                    <img\n                      alt=\"nacimages\"\n                      src={\n                        val?.productListByProductId?.productImagesByProductId\n                          ?.nodes[0]?.imageUrl\n                      }\n                      style={{ width: \"50px\", height: \"auto\" }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Switch\n                      checked={val.isActive ?? false}\n                      onChange={handleChangeIsActive(val.productId)}\n                      color=\"primary\"\n                      name=\"isActive\"\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Button\n                      onClick={() => handleDelete(val.productId)}\n                      style={{\n                        color: \"#fff\",\n                        backgroundColor: \"red\",\n                        cursor: \"pointer !important\",\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default FeaturedProuductComponent;\n","import React from \"react\";\n\nimport { Breadcrumbs } from \"../index\";\nimport FeaturedProductComponent from \"./Component/FeaturedProductComponent\";\nconst FeaturedProduct = (props) => {\n  return (\n    <>\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\n      <FeaturedProductComponent />\n    </>\n  );\n};\nexport default FeaturedProduct;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport React, { useEffect, useState } from \"react\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\nimport {\n  ALLNEWARRIVALPRODUCT,\n  CREATENEWARRIVALPRODUCT,\n  DELETENEWARRIVALPRODUCT,\n  ISACTIVENEWARRIVALPRODUCT,\n} from \"../../../graphql/query\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst FeaturedProuductComponent = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [allFeaturedProudct, setAllFeaturedProduct] = useState([]);\n  const [createFeaturedProduct, setCreateFeaturedProduct] = useState({\n    productId: \"\",\n    isActive: false,\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLNEWARRIVALPRODUCT,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allNewArrivalProducts.nodes;\n          setAllFeaturedProduct(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreateFeaturedProduct({\n      ...createFeaturedProduct,\n      [event.target.name]: event.target.value,\n    });\n  };\n  const onChangeChecked = (event) => {\n    setCreateFeaturedProduct({\n      ...createFeaturedProduct,\n      [event.target.name]: event.target.checked,\n    });\n  };\n  const handleChangeIsActive = (productId) => async (event) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: ISACTIVENEWARRIVALPRODUCT,\n        variables: { ProductId: productId, isActive: event.target.checked },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const handleDelete = async (ProductId) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETENEWARRIVALPRODUCT,\n        variables: { ProductId: ProductId },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_featured_Product = {\n      ProductId: createFeaturedProduct.productId,\n      isActive: createFeaturedProduct.isActive,\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATENEWARRIVALPRODUCT,\n        variables: create_featured_Product,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid\n          container\n          item\n          xs={12}\n          style={{ padding: \"16px\" }}\n          sm={12}\n          alignItems={\"flex-end\"}\n        >\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography\n              component=\"h6\"\n              variant=\"h6\"\n              style={{ fontWeight: \"bold\" }}\n            >\n              NAC - Landing Page - New Arrival\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">\n            {\" \"}\n            NAC - Landing Page - Featured Product :{\" \"}\n          </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"productId\"\n              label=\"Product Id\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createFeaturedProduct.productId}\n              name=\"productId\"\n            />\n            <FormControlLabel\n              value=\"start\"\n              control={\n                <Switch\n                  checked={createFeaturedProduct.isActive}\n                  onChange={onChangeChecked}\n                  name=\"isActive\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                />\n              }\n              label=\"Product Active\"\n              labelPlacement=\"start\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            border={1}\n            borderColor={\"#ddd\"}\n            size=\"small\"\n            stickyHeader\n          >\n            <TableHead>\n              <TableRow>\n                <TableCell>Product Id</TableCell>\n                <TableCell>Proudct Name</TableCell>\n                <TableCell>Image</TableCell>\n                <TableCell>Active</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {allFeaturedProudct.map((val, index) => (\n                <TableRow key={index}>\n                  <TableCell>{val.productId}</TableCell>\n                  <TableCell>\n                    {val?.productListByProductId?.productName}\n                  </TableCell>\n                  <TableCell>\n                    <img\n                      alt=\"nacimages\"\n                      src={\n                        val?.productListByProductId?.productImagesByProductId\n                          ?.nodes[0]?.imageUrl\n                      }\n                      style={{ width: \"50px\", height: \"auto\" }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Switch\n                      checked={val.isActive ?? false}\n                      onChange={handleChangeIsActive(val.productId)}\n                      color=\"primary\"\n                      name=\"isActive\"\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Button\n                      onClick={() => handleDelete(val.productId)}\n                      style={{\n                        color: \"#fff\",\n                        backgroundColor: \"red\",\n                        cursor: \"pointer !important\",\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default FeaturedProuductComponent;\n","import React from \"react\";\nimport { Breadcrumbs } from \"../index\";\nimport Reviewcomponent from \"./component/NewarrivalComponent\";\n\nconst FeaturedProduct = (props) => {\n  return (\n    <>\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\n      <Reviewcomponent />\n    </>\n  );\n};\nexport default FeaturedProduct;\n","import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport React, { useEffect, useState } from \"react\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\nimport { REVIEWQUERY } from \"../../../graphql/query\";\n\nconst columns = [\n  { id: \"product_sku\", label: \"Product Sku\" },\n  { id: \"customerName\", label: \"customer Name\" },\n  { id: \"rating\", label: \"Rating\" },\n  { id: \"title\", label: \"Title\" },\n  { id: \"message\", label: \"Message\" },\n  { id: \"ispublish\", label: \"Publish\" },\n  { id: \"isactive\", label: \"Active\" },\n];\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\nconst ISACTIVEREVIEW = `mutation MyMutation($id: UUID!, $isActive: Boolean) {\n    updateCustomerReviewById(\n      input: { customerReviewPatch: { isActive: $isActive }, id: $id }\n    ) {\n      customerReview {\n        id\n        isActive\n        message\n        productId\n        title\n        customerName\n        productSku\n        rating\n      }\n    }\n  }\n`;\nconst ISPUBLISHREVIEW = `mutation MyMutation($id: UUID!, $isPublish: Boolean) {\n  updateCustomerReviewById(\n    input: { customerReviewPatch: { isPublish: $isPublish }, id: $id }\n  ) {\n    customerReview {\n      id\n      isPublish\n      message\n      productId\n      title\n      customerName\n      productSku\n      rating\n    }\n  }\n}\n`;\nconst CustomerReview = (props) => {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [allReview, setAllReview] = useState([]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: REVIEWQUERY }),\n    };\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        let data = fatchvalue.data.allCustomerReviews.nodes;\n        console.log(data);\n        setAllReview(data);\n      })\n      .catch(console.error);\n  }, []);\n\n  const handleChangeIsPublish = (Id) => async (event) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: ISPUBLISHREVIEW,\n        variables: { id: Id, isPublish: event.target.checked },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n  const handleChangeIsActive = (Id) => async (event) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: ISACTIVEREVIEW,\n        variables: { id: Id, isActive: event.target.checked },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {columns.map((headCell) => (\n                <TableCell\n                  key={headCell.id}\n                  style={{ whiteSpace: \"nowrap\" }}\n                  align={headCell.numeric ? \"right\" : \"left\"}\n                  padding={headCell.disablePadding ? \"none\" : \"default\"}\n                >\n                  {headCell.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {allReview\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => (\n                <TableRow key={row.id}>\n                  <TableCell align=\"left\">{row.productSku}</TableCell>\n                  <TableCell align=\"left\">{row.customerName}</TableCell>\n                  <TableCell align=\"left\">{row.rating}</TableCell>\n                  <TableCell align=\"left\">{row.title}</TableCell>\n                  <TableCell align=\"left\">{row.message}</TableCell>\n                  <TableCell align=\"left\">\n                    <Switch\n                      checked={row.isPublish ?? false}\n                      onChange={handleChangeIsPublish(row.id)}\n                    />\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    <Switch\n                      checked={row.isActive ?? false}\n                      onChange={handleChangeIsActive(row.id)}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 15, 20, 25, 50, 100]}\n                count={allReview.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n};\nexport default CustomerReview;\n","import React from \"react\";\nimport { Breadcrumbs } from \"../index\";\nimport Reviewcomponent from \"./Component/Reviewcoponent\";\n\nconst FeaturedProduct = (props) => {\n  return (\n    <>\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\n      <Reviewcomponent />\n    </>\n  );\n};\nexport default FeaturedProduct;\n","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from \"react\";\n\nconst productuploadCtxInitial = {\n  productCtx: {\n    product_categoy: \"\",\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\n    product_type: [],\n    productname: \"\",\n    material: \"\",\n    description: \"\",\n    minOrderQty: \"\",\n    maxOrderQty: \"\",\n    height: \"\",\n    length: \"\",\n    earringbacking: [],\n    product_type_shortcode: \"\",\n    category: [],\n    metalColour: \"\",\n    metalpurities: \"\",\n    isExpand: false,\n    selectedgender: \"\",\n    selected_metal_colour: {},\n    gender: {},\n    product_gender: [],\n    vendorcode: [],\n    productseries: [],\n    size: 0,\n    sizes: [],\n    selected_sizes: [],\n    productSize: [],\n    masterProductSize: [],\n    metal: {\n      value: 1,\n      label: \"Diamond\",\n    },\n    materials: [\"Diamond\", \"Gold\", \"Gemstone\", \"Solitaire\", \"Silver\", \"Platinum\"],\n    gemstontypes: \"\",\n    gemstonshapes: \"\",\n    product_code: \"\",\n    isactive: false,\n    gemstonelist: [],\n    diamondlist: [],\n    variants: [],\n    oldproductMetalColor: [],\n    oldproductMetalPurity: [],\n    productMetalColor: [],\n    productMetalPurity: [],\n    productDiamondColor: [],\n    productDiamondClarity: [],\n    productDiamondTypes: [],\n    productImages: [],\n    productDiamondTypesArray: [],\n    oldproductDiamondTypesArray: [],\n    productmaterials: [],\n    createVariantList: [],\n    editVariants: [],\n    editDiamondLists: [],\n    editGemstoneLists: [],\n    productVariantSize: [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\n    variant_size: [],\n    gemstonetype: \"\",\n    gemstoneshape: \"\",\n    gemstonesettings: \"\",\n    gemstonesize: \"\",\n    gemstonecount: \"\",\n    gemstoneweight: \"\",\n    stonetype: \"\",\n\n    editleadtime: \"\",\n    editreadytoship: false,\n    editisdefault: false,\n    editisactive: false,\n\n    editcostprice: 0,\n    editsellingprice: 0,\n    editmarkupprice: 0,\n    editdiscountprice: 0,\n    editcostpricetax: 0,\n    editsellingpricetax: 0,\n    editmarkuppricetax: 0,\n    editdiscountpricetax: 0,\n\n    diamondclarity: \"\",\n    diamondcolor: \"\",\n    diamondsettings: \"\",\n    diamondshape: \"\",\n    diamondcount: \"\",\n    diamondweight: \"\",\n    diamonditemname: \"\",\n    diamondsubitemname: \"\",\n    diamonddescription: \"\",\n    gemstoneitemname: \"\",\n    gemstonesubitemname: \"\",\n    gemstonedescription: \"\",\n    metalindex: -1,\n    themes: [],\n    prod_styles: [],\n    occassions: [],\n    collections: [],\n    stonecount: [],\n    stonecolour: [],\n    product_images: {},\n    metalcolour: [],\n    metal_purity: [],\n    metalpurity: [],\n    metal_color: 0,\n    metal_weight: 0,\n    diamond_colour: 0,\n    diamond_clarity: 0,\n    metal_height: 0,\n    metal_width: 0,\n    metal_length: 0,\n    metal_object: 0,\n    diamondtype: 0,\n    metals: [],\n    error_message: {},\n  },\n  masterData: {},\n  setProductCtx: () => null,\n};\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n  return productuploadCtxInitial.productCtx;\n};\n\nexport const ProductProvider = (props) => {\n  console.info(\"PROPS\", props, props.value.mappertype);\n  const [productCtx, setProductCtx] = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype));\n  // on Mount get Data from storage\n  // on Unmount store data to storage\n\n  React.useEffect(() => {\n    console.info(\"productCtx s\", productCtx);\n  }, [productCtx.material]);\n\n  return (\n    <ProductContext.Provider\n      value={{\n        productCtx,\n        setProductCtx,\n        masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype),\n      }}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n};\n","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from \"react\";\n\nconst orderCtxInitial = {\n  orderCtx: {},\n  orderMaster: {\n    orders: [],\n  },\n  setOrderCtx: () => null,\n};\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n\n  orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n  console.log(\"resposeobjvalue1\" + JSON.stringify(orderCtxInitial.orderCtx));\n\n  return orderCtxInitial.orderCtx;\n};\n\nexport const OrderProvider = (props) => {\n  console.info(\"PROPS\", props, props.value.mappertype);\n  const [orderCtx, setorderCtx] = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype));\n  // on Mount get Data from storage\n  // on Unmount store data to storage\n\n  React.useEffect(() => {\n    console.info(\"orderCtx s\", orderCtx);\n  }, [orderCtx.order]);\n\n  return (\n    <OrderContext.Provider\n      value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }}\n    >\n      {props.children}\n    </OrderContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import { Helmet } from 'react-helmet';\nimport PropTypes from \"prop-types\";\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n\n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}\n","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { GlobalContext } from '../../../../context';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\n    let pages = [];\n    let pagepermissions = [];\n    pageaccess.pages.forEach(element => {\n      pages.push(element.pageurl)\n      // pagepermissions[element.pageurl] = {\n      //   isread : element.is_view,\n      //   iswrite : element.is_write\n      // }\n      if(element.is_write)\n      {\n        pagepermissions.push(element.pageurl)\n      }\n    });\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\n\n    localStorage.setItem('accesspages', pages);\n    localStorage.setItem('pagepermissions', pagepermissions);\n\n    \n    props.history.push('/productlist')\n\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Log in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport clsx from \"clsx\";\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext } from \"../../context\";\nimport FullLoader from \"../../components/Loader\";\nimport \"./Productupload.css\";\nimport Select from \"react-select\";\nimport \"./floating_dropdown.css\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useQuery } from \"react-apollo\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\nimport { arrayIncludes } from \"@material-ui/pickers/_helpers/utils\";\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n];\nconst useStyles = makeStyles((theme) => ({\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  dropdownlayout: {\n    \"& .menu\": {\n      position: \"Relative !important\",\n    },\n  },\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3),\n  },\n  fieldGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0),\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    \"& > * + *\": {\n      marginLeft: theme.spacing(1),\n    },\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n  dateField: {\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AddressForm(props) {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [initailRingSize, updateRingSize] = useState([]);\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  React.useEffect(async () => {\n    fetch(GRAPHQL_DEV_CLIENT, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\n    })\n      .then((res) => res.json())\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\n  }, []);\n\n  React.useEffect(() => {}, [productCtx]);\n  // const handleChange = selectedOption => {\n\n  // };\n  const handlesizeChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\n  };\n  const handlevendorChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\n  };\n\n  const changeproducttype = (type) => (event, newvalue) => {\n    setProductCtx({ ...productCtx, product_type: newvalue });\n  };\n  const handlechange = (type) => (selectedOption) => {\n    if (type === \"product_type\") {\n      if (selectedOption) {\n        var size = \"\";\n        var minvalue = 0;\n        var maxvalue = 0;\n        var selected_sizes = [];\n        var default_size = 0;\n        if (selectedOption.shortCode === \"K\") {\n          selected_sizes.push({\n            value: \"XS\",\n            label: \"XS\",\n          });\n          selected_sizes.push({\n            value: \"S\",\n            label: \"S\",\n          });\n          selected_sizes.push({\n            value: \"M\",\n            label: \"M\",\n          });\n          selected_sizes.push({\n            value: \"L\",\n            label: \"L\",\n          });\n        } else {\n          // if (\n          //   selectedOption.shortCode === \"R\" &&\n          //   productCtx.selectedgender.name === \"Male\"\n          // ) {\n          //   minvalue = 13;\n          //   maxvalue = 25;\n          //   default_size = 15;\n          // }\n          // if (\n          //   selectedOption.shortCode === \"R\" &&\n          //   productCtx.selectedgender.name === \"Female\"\n          // ) {\n          //   minvalue = 8;\n          //   maxvalue = 23;\n          //   default_size = 12;\n          // }\n          // for (var i = minvalue; i < maxvalue; i++) {\n          //   selected_sizes.push({\n          //     value: i,\n          //     label: \"\" + i,\n          //   });\n          // }\n        }\n\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: selectedOption.shortCode,\n          product_type: selectedOption,\n          size,\n          default_size,\n          selected_sizes,\n        });\n      } else {\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: \"\",\n          product_type: \"\",\n          size,\n          selected_sizes: \"\",\n        });\n      }\n    } else {\n      setProductCtx({ ...productCtx, [type]: selectedOption });\n    }\n  };\n  const handleTextChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"vendorcode\") {\n      setProductCtx({\n        ...productCtx,\n        [type]: value,\n        vendorleadtime: value.vendorDelivaryDays,\n      });\n    } else {\n      setProductCtx({ ...productCtx, [type]: value });\n    }\n  };\n\n  const switchisorderable = (event) => {\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\n  };\n\n  const purityChange = (type) => (selectedOption) => {\n    setProductCtx({ ...productCtx, [type]: selectedOption });\n  };\n\n  const handleGenderChange = (type) => (event, value) => {\n    var minvalue = 0;\n    var maxvalue = 0;\n    var selected_sizes = [];\n    var sizes = [];\n    var default_size = 0;\n    // if (productCtx.product_type.shortCode === \"K\") {\n    //   default_size = \"XS\";\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    // } else {\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\n    //   minvalue = 13;\n    //   maxvalue = 26;\n    //   default_size = \"\" + 15;\n    // }\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\n    //   minvalue = 8;\n    //   maxvalue = 24;\n    //   default_size = \"\" + 12;\n    // }\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Male\") {\n    //   minvalue = 13;\n    //   maxvalue = 26;\n    //   default_size = \"\" + 15;\n    // }\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Female\") {\n    //   minvalue = 8;\n    //   maxvalue = 24;\n    //   default_size = \"\" + 12;\n    // }\n\n    // for (var i = minvalue; i < maxvalue; i++) {\n    // selected_sizes.push(\"\" + i);\n    // sizes.push(\"\" + i);\n    // }\n\n    // if (productCtx.product_type.shortCode !== \"K\" ) {\n     \n      // updateRingSize(\n      //   initailRingSize.sort(\n      //     (a, b) => parseFloat(a.sizeValue) - parseFloat(b.sizeValue)\n      //   )\n      // );\n    \n\n    initailRingSize.forEach((e) => {\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\n        selected_sizes.push(\"\" + e.sizeValue);\n        sizes.push(\"\" + e.sizeValue);\n      }\n    });\n    // }\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n      sizes,\n      selected_sizes,\n      default_size,\n    });\n  };\n\n  const handleMaterialChange = (type) => (event, value) => {\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\n    if (value) {\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\n        if (steps.indexOf(\"Step3\") === -1) {\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n        }\n      }\n    }\n    setProductCtx({ ...productCtx, [type]: value, steps });\n  };\n\n  const handleInputChange = (type) => (e) => {\n    var size = productCtx.size;\n    var materials = productCtx.materials;\n    var selected_sizes = productCtx.selected_sizes;\n\n    if (type === \"selectedgender\") {\n      var minvalue = 0;\n      var maxvalue = 0;\n      selected_sizes = [];\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\n      //   size = \"13-25\";\n      //   minvalue = 13;\n      //   maxvalue = 26;\n      // }\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\n      //   size = \"8-18\";\n      //   minvalue = 8;\n      //   maxvalue = 19;\n      // }\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Male\") {\n      //   size = \"13-25\";\n      //   minvalue = 13;\n      //   maxvalue = 26;\n      // }\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Female\") {\n      //   size = \"8-18\";\n      //   minvalue = 8;\n      //   maxvalue = 19;\n      // }\n\n      // for (var i = minvalue; i < maxvalue; i++) {\n      //   selected_sizes.push({\n      //     value: i,\n      //     label: \"\" + i,\n      //   });\n      // }\n    }\n\n    if (type === \"product_categoy\") {\n      if (e.target.value === \"Platinum Jewellery\") {\n        materials.push(\"Platinum Jewellery\");\n        var index = materials.indexOf(\"Silver Jewellery\");\n\n        if (index >= 0) {\n          materials.splice(index, 1);\n        }\n      } else if (e.target.value === \"Silver Jewellery\") {\n        materials.push(\"Silver Jewellery\");\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\n        if (index1 >= 0) {\n          materials.splice(index1, 1);\n        }\n      } else {\n        var indexval = materials.indexOf(\"Silver Jewellery\");\n\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n        indexval = materials.indexOf(\"Platinum Jewellery\");\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n      }\n    }\n\n    setProductCtx({\n      ...productCtx,\n      size,\n      [type]: e,\n      materials,\n      selected_sizes,\n    });\n  };\n\n  const materialChange = (type) => (selectedOption) => {\n    //   let material = { ...productCtx.material, [type]: selectedOption }\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\n    //   if(material.material)\n    //   {\n    //   material.material.forEach(element => {\n    let material_names = [];\n    if (selectedOption) {\n      selectedOption.forEach((element) => {\n        material_names.push(element.name);\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\n          if (steps.indexOf(\"Step3\") === -1) {\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n          }\n        }\n      });\n    }\n    //   });\n    // }\n\n    setProductCtx({\n      ...productCtx,\n      [type]: selectedOption,\n      steps,\n      material_names,\n    });\n  };\n  const keyPress = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {/* <FullLoader /> */}\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} spacing={1}>\n            <Card {...rest} className={clsx(classes.root, className)}>\n              <CardHeader title=\"Product Information 1\" />\n              <Divider />\n              <CardContent className={classes.cardcontent}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} sm={12} spacing={1}>\n                    <Input\n                      className={classes.helperinput}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={productCtx.productname}\n                      id=\"productname\"\n                      error={productCtx.error_message.productname}\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                      name=\"productname\"\n                      label=\"Product Name\"\n                      onChange={keyPress(\"productname\")}\n                    />\n                  </Grid>\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\n                    <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange(\"product_categoy\")}\n                      options={productCtx.masterData.category.map(\n                        (option) => option.label\n                      )}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip\n                            variant=\"outlined\"\n                            label={option.label}\n                            {...getTagProps({ index })}\n                          />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Category\"\n                          margin=\"dense\"\n                          error={productCtx.error_message.product_categoy}\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} spacing={1}>\n                    <Autocomplete\n                      id=\"product_type\"\n                      className={classes.fixedTag}\n                      getOptionLabel={(option) => option.label}\n                      defaultValue={productCtx.product_type}\n                      options={productCtx.masterData.product_type}\n                      onChange={handleoptionChange(\"product_type\")}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip\n                            variant=\"outlined\"\n                            label={option.label}\n                            {...getTagProps({ index })}\n                          />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Type\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          error={productCtx.error_message.product_type}\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Product Information 2\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      {productCtx.product_type ? (\n                        <>\n                          <Grid item xs={12} sm={6}>\n                            <Autocomplete\n                              id=\"free-solo-2-demo\"\n                              multiple\n                              className={classes.fixedTag}\n                              defaultValue={productCtx.material_names}\n                              options={productCtx.masterData.material.map(\n                                (option) => option.label\n                              )}\n                              onChange={handleMaterialChange(\"material_names\")}\n                              renderTags={(value, getTagProps) =>\n                                value.map((option, index) => (\n                                  <Chip\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label={option}\n                                    {...getTagProps({ index })}\n                                  />\n                                ))\n                              }\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Select Product Materials\"\n                                  margin=\"dense\"\n                                  variant=\"outlined\"\n                                  error={\n                                    productCtx.error_message.material_names\n                                  }\n                                  fullWidth\n                                  InputProps={{\n                                    ...params.InputProps,\n                                    type: \"search\",\n                                  }}\n                                />\n                              )}\n                            />\n                          </Grid>\n                        </>\n                      ) : null}\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.selectedgender}\n                          options={productCtx.masterData.gender.map(\n                            (option) => option.label\n                          )}\n                          onChange={handleGenderChange(\"selectedgender\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Gender\"\n                              margin=\"dense\"\n                              error={productCtx.error_message.selectedgender}\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalpurity}\n                          options={productCtx.masterData.metalpurity}\n                          onChange={handleoptionChange(\"metalpurity\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Purity\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              error={productCtx.error_message.metalpurity}\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalcolour}\n                          options={productCtx.masterData.metalcolour}\n                          onChange={handleoptionChange(\"metalcolour\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Colour\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.metalcolour}\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </>\n            ) : null}\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Vendor Information\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.vendorcode}\n                          getOptionLabel={(option) => option.label}\n                          options={productCtx.masterData.vendorcode}\n                          onChange={handleoptionChange(\"vendorcode\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Vendor Code\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.vendorcode}\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Product Code\"\n                          fullWidth\n                          className={classes.helperinput}\n                          value={productCtx.productvendorcode}\n                          error={productCtx.error_message.productvendorcode}\n                          id=\"productvendorcode\"\n                          name=\"productvendorcode\"\n                          onChange={handleTextChange(\"productvendorcode\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Lead Time\"\n                          fullWidth\n                          className={classes.helperinput}\n                          error={productCtx.error_message.vendorleadtime}\n                          value={productCtx.vendorleadtime}\n                          InputLabelProps={{\n                            shrink: productCtx.vendorleadtime,\n                          }}\n                          id=\"vendorleadtime\"\n                          name=\"vendorleadtime\"\n                          onChange={handleTextChange(\"vendorleadtime\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\">\n                            IsReorderable\n                          </FormLabel>\n                          <RadioGroup\n                            aria-label=\"position\"\n                            name=\"position\"\n                            value={productCtx.isreorderable}\n                            onChange={switchisorderable}\n                            row\n                          >\n                            <FormControlLabel\n                              value=\"Yes\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"Yes\"\n                              labelPlacement=\"right\"\n                            />\n                            <FormControlLabel\n                              value=\"No\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"No\"\n                              labelPlacement=\"right\"\n                            />\n                          </RadioGroup>\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>{\" \"}\n              </>\n            ) : null}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12}>\n                {productCtx.product_type ? (\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader\n                      title=\"Default SKU For Display\n  \"\n                    />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_colour}\n                            onChange={handleoptionChange(\n                              \"default_metal_colour\"\n                            )}\n                            options={productCtx.metalcolour.map(\n                              (option) => option.label\n                            )}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Colour\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={\n                                  productCtx.error_message.default_metal_colour\n                                }\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_purity}\n                            onChange={handleoptionChange(\n                              \"default_metal_purity\"\n                            )}\n                            options={productCtx.metalpurity.map(\n                              (option) => option.label\n                            )}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Purity\"\n                                margin=\"dense\"\n                                error={\n                                  productCtx.error_message.default_metal_purity\n                                }\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>\n                ) : null}\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              (productCtx.product_type.shortCode === \"K\" ||\n                productCtx.product_type.shortCode === \"R\" ||\n                productCtx.product_type.shortCode === \"BA\") &&\n              productCtx.sizes.length > 0 ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Size Information\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            multiple\n                            freeSolo\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.selected_sizes}\n                            options={productCtx.sizes}\n                            onChange={handleoptionChange(\"selected_sizes\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Ring Sizes\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.selected_sizes}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_type\"\n                            className={classes.fixedTag}\n                            freeSolo\n                            defaultValue={productCtx.default_size}\n                            options={productCtx.selected_sizes}\n                            onChange={handleoptionChange(\"default_size\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Select Default Size\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_size}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              productCtx.product_type.alias === \"Earrings\" ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Type of Fit\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.earringbacking}\n                            options={productCtx.masterData.earringbacking.map(\n                              (option) => option.label\n                            )}\n                            onChange={handleoptionChange(\"earringbacking\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Earring Backing\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.earringbacking}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}></Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { Grid } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nimport Step4 from \"./Step4\";\nimport Step5 from \"./Step5\";\nimport Step6 from \"./Step6\";\nimport Step7 from \"./Step7\";\nimport Step8 from \"./Step8\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { ProductContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { element } from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\",\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\",\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;\n    case \"Step6\":\n      return <Step6 />;\n\n    case \"Step7\":\n      return <Step7 />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var error_content = {};\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if (activeStep === 0) {\n      if (!productCtx.product_type) {\n        isvalid = false;\n        error_content[\"product_type\"] = \"Error messsage\";\n      }\n      if (!productCtx.productname) {\n        isvalid = false;\n        error_content[\"productname\"] = \"Error messsage\";\n      }\n      if (!productCtx.product_categoy) {\n        isvalid = false;\n        error_content[\"product_categoy\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.metalcolour) {\n        isvalid = false;\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n      if (!productCtx.material_names) {\n        isvalid = false;\n        error_content[\"material_names\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalpurity\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.vendorcode) {\n        isvalid = false;\n        error_content[\"vendorcode\"] = \"Error messsage\";\n      }\n      if (!productCtx.vendorleadtime) {\n        isvalid = false;\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.default_metal_colour) {\n        isvalid = false;\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\n      }\n      if (!productCtx.default_metal_purity) {\n        isvalid = false;\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\n      }\n      if (!productCtx.productvendorcode) {\n        isvalid = false;\n        error_content[\"productvendorcode\"] = \"Error messsage\";\n      }\n      if (\n        !productCtx.earringbacking &&\n        productCtx.product_type.alias === \"Earrings\"\n      ) {\n        isvalid = false;\n        error_content[\"earringbacking\"] = \"Error messsage\";\n      }\n      if (!productCtx.selectedgender) {\n        isvalid = false;\n        error_content[\"selectedgender\"] = \"Error messsage\";\n      }\n      if (\n        (!productCtx.selected_sizes ||\n          productCtx.selected_sizes.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"selected_sizes\"] = \"Error messsage\";\n      }\n\n      if (\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"default_size\"] = \"Error messsage\";\n      }\n      // isvalid = true;\n    }\n\n    if (activeStep === 1) {\n      productCtx.metalpurity.forEach((element) => {\n        const keyvalue = element.name + \"_metal_weight\";\n\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\n          isvalid = false;\n\n          error_content[keyvalue] = \"Error messsage\";\n        }\n      });\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (productCtx.product_type_shortcode === \"R\") {\n        if (!productCtx.metal_height) {\n          isvalid = false;\n          error_content[\"metal_height\"] = \"Error messsage\";\n        }\n        if (!productCtx.metal_width) {\n          isvalid = false;\n          error_content[\"metal_width\"] = \"Error messsage\";\n        }\n      }\n\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\n        isvalid = false;\n        error_content[\"prod_styles\"] = \"Error messsage\";\n      }\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\n        isvalid = false;\n        error_content[\"occassions\"] = \"Error messsage\";\n      }\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\n      // {\n      //   isvalid = false\n      //   error_content['collections'] = \"Error messsage\"\n      // }\n\n      //  isvalid = true;\n    }\n\n    setProductCtx({ ...productCtx, error_message: error_content });\n    if (activeStep === productCtx.steps.length - 1) {\n      console.info(\"HANDLE\", sendNetworkRequest);\n      const productseries =\n        productCtx.masterData.productseries[0].productSeries;\n\n      delete productCtx[\"masterData\"];\n\n      var formdata = productCtx;\n      formdata[\"productseries\"] = productseries;\n\n      setLoading(true);\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\n      setLoading(false);\n      setSuccess(true);\n      await sleep(500);\n      window.location.replace(\"/productlist\");\n    } else {\n      if (isvalid) {\n        setActiveStep(activeStep + 1);\n      }\n    }\n\n    //else\n    //  {\n    //  }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async function sleep(millis) {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n  }\n  console.log(productCtx, \"Component Samir\");\n  return (\n    <Grid item xs={12} sm={12}>\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\n      </Snackbar>\n\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {productCtx.steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel></StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </Paper>\n\n      <React.Fragment>\n        {activeStep === productCtx.steps.length ? (\n          <React.Fragment>\n            <Typography variant=\"h5\" gutterBottom>\n              Product Added Successfully\n            </Typography>\n            <Typography variant=\"subtitle1\"></Typography>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            {getStepContent(productCtx.steps[activeStep])}\n            <div className={classes.buttons}>\n              {activeStep !== 0 && (\n                <Button onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n              )}\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === productCtx.steps.length - 1\n                  ? \"Product Upload\"\n                  : \"Next\"}\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Component from \"./Component\";\nimport { ProductProvider } from \"../../context\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./Productupload.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const Productupload = withRouter((props) => {\n  const classes = useStyles();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n});\nexport default Productupload;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from \"react\";\nimport { Form, Grid, Select } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip } from \"@material-ui/core\";\n\nconst useStyless = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\",\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange = (type) => (e) => {\n    setSearchtext(e.target.value);\n  };\n  const handlecategoryChange = (type) => (event, value) => {\n    setCategory(value.name);\n    props.applyfilter(searchtext, value.name, producttype);\n  };\n  const handletypeChange = (type) => (event, value) => {\n    setProducttype(value.name);\n    props.applyfilter(searchtext, category, value.name);\n  };\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  function applyfilter() {\n    props.applyfilter(searchtext, category, producttype);\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div\n      className=\"search\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        background: \"white\",\n        borderTop: \"1px solid #e4e4e4\",\n        borderBottom: \"1px solid #e4e4e4\",\n      }}\n    >\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          fullWidth\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.mastercategory}\n          onChange={handlecategoryChange(\"product_category\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.masterproducttype}\n          onChange={handletypeChange(\"product_type\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <TextField\n          fullWidth\n          margin=\"dense\"\n          onChange={handleinputChange(\"productname\")}\n          placeholder={\"Search by product name or product id\"}\n          onChange={handleinputChange(\"productname\")}\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Button\n          onClick={(e) => applyfilter()}\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          Search\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import { Button, FormControlLabel, Switch } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport VisibityIcon from \"@material-ui/icons/Visibility\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport Moment from \"react-moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\n\nconst columns = [\n  { id: \"product_id\", label: \"product id\" },\n  { id: \"product_name\", label: \"product name\" },\n  { id: \"product_type\", label: \"product type\" },\n  { id: \"vendor_code\", label: \"vendor code\" },\n  { id: \"product_category\", label: \"product category\" },\n  { id: \"isactive\", label: \"active\" },\n  { id: \"createdAt\", label: \"Created on\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"\" : \"\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(\"updatedAt\");\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n    getproductlist(\"\", \"\", \"\", \"\", newPage);\n  }\n  useEffect(() => {\n    getproductlist(\"\", \"\", \"\", \"\", \"\", order, orderBy);\n  }, []);\n  useEffect(() => {\n    getproductlist(\n      props.filterparams.searchtext,\n      props.filterparams.categoryname,\n      props.filterparams.product_type,\n      \"\",\n      \"\",\n      order,\n      orderBy\n    );\n  }, [props.filterparams]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\", \"\", \"\", event.target.value, \"\");\n  }\n  async function showproductdetails(prod_id) {\n    let bodycontent = {\n      productid: prod_id,\n    };\n\n    let response = await sendNetworkRequest(\"/getproducturl\", {}, bodycontent);\n    console.log(response);\n    //setProductlists(response.products.rows)\n    window.open(response.url, \"_blank\");\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n    getproductlist(\"\", \"\", \"\", \"\", \"\", isAsc ? \"desc\" : \"asc\", property);\n  };\n  function searchproduct(searchtext, productcategory, producttype) {\n    let products = allproductlists.filter((l) => {\n      return (\n        l.productId.toLowerCase().match(searchtext.toLowerCase()) ||\n        l.productName.toLowerCase().match(searchtext.toLowerCase())\n      );\n    });\n    setProductlists(products);\n  }\n  async function getproductlist(\n    searchtext,\n    productcategory,\n    producttype,\n    pagesize,\n    offsetvalue,\n    sort,\n    orderby\n  ) {\n    let bodydata = {\n      size: pagesize ? pagesize : rowsPerPage,\n      offset: offsetValue,\n      searchtext: searchtext,\n      productcategory: productcategory,\n      producttype: producttype,\n      order: sort ? sort : order,\n      orderby: orderby ? orderby : orderBy,\n    };\n    let response = await sendNetworkRequest(\"/getproductlist\", {}, bodydata);\n\n    console.log(response);\n    setProductlists(response.products.rows);\n    setPageCount(response.products.count);\n  }\n  function applyfilter(searchtext, categoryname, typename) {\n    getproductlist(searchtext, categoryname, typename);\n  }\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n  async function productItemStatusChange(id, isactive, refetch) {\n    let variables = {\n      productId: id,\n      isActive: isactive ? false : true,\n    };\n    await props.client\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n        }\n      })\n      .catch(console.error);\n  }\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n          <EnhancedTableHead\n            classes={classes}\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n          />\n          <TableBody>\n            {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n            {stableSort(productlists, getComparator(order, orderBy)).map(\n              (row, index) => (\n                <TableRow key={row.product_id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row?.trans_sku_lists?.[0].sku_id}\n                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                      <EditIcon />\n                    </Button>\n                    <Button onClick={(e) => showproductdetails(row.product_id)}>\n                      <VisibityIcon />\n                    </Button>\n                  </TableCell>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    onClick={() => showproductdetails(row)}\n                  >\n                    {/* <Link variant=\"body2\">  */}\n                    {row.product_name}\n\n                    {/* </Link>   */}\n                  </TableCell>\n                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\n                  <TableCell align=\"left\">{row.product_category}</TableCell>\n\n                  <TableCell align=\"left\">\n                    {\" \"}\n                    <FormControlLabel\n                      label={row.isactive ? \"\" : \"\"}\n                      control={\n                        <Switch checked={row.isactive} value=\"checkedA\" />\n                      }\n                    />\n                  </TableCell>\n\n                  <TableCell align=\"left\">\n                    <Moment format=\"DD MMM YYYY hh:mm a\">\n                      {row.createdAt}\n                    </Moment>\n                  </TableCell>\n                </TableRow>\n              )\n            )}\n            {/* </> */}\n            {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10, 50, 100, 200, 500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n};\nexport default withApollo(AddContact);\n","import React from \"react\";\nimport {\n  AppBar,\n  Dialog,\n  IconButton,\n  Slide,\n  Toolbar,\n  Typography,\n  makeStyles,\n  Button,\n  Grid,\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  TextField,\n  LinearProgress,\n  Box,\n  CircularProgress,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Backdrop,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ChipInput from \"material-ui-chip-input\";\nimport { AlertContext, AlertProps } from \"../../context\";\nimport socketIOClient from \"socket.io-client\";\nimport { API_URL } from \"../../config\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\nimport AssignmentTurnedInOutlinedIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport { VERIFYTAGNO, WAREHOUSELIST } from \"../../graphql/query\";\nimport { isEmpty } from \"validate.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  content: {\n    width: \"90%\",\n    margin: theme.spacing(5),\n  },\n  textarea: {\n    resize: \"both\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n  errorTable: {\n    margin: 10,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nconst ChooseWareHouse = (props) => {\n  const { loading, data } = useQuery(WAREHOUSELIST);\n  return (\n    <Autocomplete\n      id={\"warehouse-id\"}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option.name}\n      options={data?.allWarehouses?.nodes ?? []}\n      value={props.warehouse || null}\n      onChange={(event, newValue) => {\n        props.setWarehouse(newValue);\n      }}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Warehouse\"\n          fullWidth\n          required\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n};\n\nconst ProductSync = (props) => {\n  const classes = useStyles();\n  const client = useApolloClient();\n  const snack = React.useContext(AlertContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  var [data, setData] = React.useState({\n    action_type: \"price_sync\",\n    sync_url: \"\",\n    new_tagno: [],\n  });\n  const [progress, setProgress] = React.useState(0);\n  const [warehouse, setWarehouse] = React.useState(null);\n  const [errorTagNo, setErrorTagNo] = React.useState([]);\n  const [validatedTagNo, setValidatedTagNo] = React.useState({\n    status: false,\n    errors: {},\n  });\n  const [backDrop, setBackDrop] = React.useState(false);\n  var handleChange = (event) => {\n    var { name, value } = event.target;\n    setData({ ...data, [name]: value });\n  };\n\n  var handleAddChip = (chip) => {\n    var _ = data;\n    _.new_tagno.push(chip);\n    setData({ ..._ });\n    client\n      .query({ query: VERIFYTAGNO, variables: { tagno: chip } })\n      .then(({ data }) => {\n        if (data?.list?.nodes && data?.list?.nodes.length >= 1) {\n          setErrorTagNo([...errorTagNo, chip]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  var handleDeleteChip = (chip, index) => {\n    var _ = data;\n    _.new_tagno.splice(index, 1);\n    setData({ ..._ });\n  };\n\n  var { open, handleClose } = props;\n\n  React.useEffect(() => {\n    const socket = socketIOClient(API_URL);\n    socket.on(\"sync_data\", (data) => {\n      if (data.status !== \"completed\") {\n        setProgress(data?.completed * 100);\n      } else {\n        setData({\n          action_type: \"price_sync\",\n          sync_url: \"\",\n          new_tagno: [],\n        });\n        snack.setSnack({\n          severity: AlertProps.severity.info,\n          msg: `Process Completed ${data.timeElapsed}`,\n        });\n        socket.close();\n      }\n    });\n  }, []);\n\n  const handleRun = () => {\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"TAG Number cannot be empty!\",\n      });\n      return;\n    }\n    if (data.sync_url === \"\") {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"Sync Data URL cannot be empty!\",\n      });\n      return;\n    }\n    if (!warehouse?.id && data.action_type === \"new_uploads\") {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"Warehouse is mandatory!\",\n      });\n      return;\n    }\n    setProgress(0);\n    var Product_lists = data.Product_lists;\n    delete data.Product_lists;\n    sendNetworkRequest(\n      \"/product_sync\",\n      {},\n      {\n        ...data,\n        warehouse: warehouse?.id,\n      }\n    )\n      .then((res) => {\n        snack.setSnack({\n          open: true,\n          severity: \"success\",\n          msg: res.message,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured while processing!\",\n        });\n      });\n  };\n\n  const validatePreSync = () => {\n    if (data.sync_url === \"\") {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"Sync Data URL cannot be empty!\",\n      });\n      return;\n    }\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"TAG Number cannot be empty!\",\n      });\n      return;\n    }\n    setBackDrop(true);\n    sendNetworkRequest(\"/preSync_validator\", {}, { ...data })\n      .then((response) => {\n        let errorStatus = true;\n        data.new_tagno.forEach((tagno) => {\n          if (response[tagno] && !isEmpty(response[tagno])) {\n            errorStatus = false;\n          }\n        });\n        setBackDrop(false);\n        setValidatedTagNo({\n          status: errorStatus,\n          errors: !errorStatus ? response : {},\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        setBackDrop(false);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured, Please try again!\",\n        });\n      });\n  };\n\n  return (\n    <Dialog fullScreen open={open} TransitionComponent={Transition}>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n            Product Sync\n          </Typography>\n          {data.action_type !== \"price_sync\" && (\n            <Button\n              variant=\"outlined\"\n              autoFocus\n              color=\"inherit\"\n              onClick={validatePreSync}\n              startIcon={<AssignmentTurnedInOutlinedIcon />}\n            >\n              {\"Validate Product Sync\"}\n            </Button>\n          )}\n          <Button\n            autoFocus\n            color=\"inherit\"\n            variant=\"outlined\"\n            onClick={handleRun}\n            startIcon={<SyncIcon />}\n            disabled={\n              data.action_type !== \"price_sync\" && !validatedTagNo?.status\n            }\n          >\n            {data.action_type === \"price_sync\"\n              ? \"Run Price Sync\"\n              : \"Run Product Sync\"}\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Grid\n        className={classes.content}\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={2}\n      >\n        <Grid item xs={12}>\n          <FormControl component=\"fieldset\" fullWidth required>\n            <Typography variant=\"h4\">Choose action type</Typography>\n            <RadioGroup\n              aria-label=\"action-type\"\n              name=\"action_type\"\n              value={data.action_type}\n              onChange={handleChange}\n            >\n              <FormControlLabel\n                value={\"price_sync\"}\n                control={<Radio />}\n                label={\"Price Sync\"}\n              />\n              <FormControlLabel\n                value={\"new_uploads\"}\n                control={<Radio />}\n                label={\"Product Sync\"}\n              />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} style={{ padding: \"9px\" }}>\n          <TextField\n            value={data.sync_url}\n            onChange={handleChange}\n            rows={15}\n            fullWidth\n            label={\"Sync Data URL\"}\n            name=\"sync_url\"\n            variant=\"outlined\"\n            required\n            inputProps={{ className: classes.textarea }}\n          />\n        </Grid>\n        {data.action_type === \"new_uploads\" && (\n          <>\n            <Grid item xs={12}>\n              <ChooseWareHouse\n                warehouse={warehouse}\n                setWarehouse={setWarehouse}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ChipInput\n                value={data.new_tagno}\n                onAdd={handleAddChip}\n                onDelete={handleDeleteChip}\n                fullWidth\n                newChipKeyCodes={[13, 32]}\n                variant=\"outlined\"\n                label={\"TAG Number\"}\n                error={errorTagNo.length > 0}\n                helperText={\n                  errorTagNo.length > 0\n                    ? `${errorTagNo.join(\n                        \",\"\n                      )} already exists these could not be synced again!`\n                    : ``\n                }\n              />\n            </Grid>\n          </>\n        )}\n        {!isEmpty(validatedTagNo?.errors) && (\n          <Grid item xs={12} className={classes.errorTable}>\n            <Typography variant=\"overline\" color=\"error\" style={{ padding: 5 }}>\n              {\n                \"Below masters are missing respectively, Please add them before syncing products\"\n              }\n            </Typography>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\">Tag No.</TableCell>\n                  <TableCell align=\"center\">Master Type</TableCell>\n                  <TableCell align=\"center\">Value</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.new_tagno.map(\n                  (element, index) =>\n                    !isEmpty(validatedTagNo.errors[element]) && (\n                      <React.Fragment key={index}>\n                        {console.log(\n                          Object.keys(validatedTagNo.errors[element]).length\n                        )}\n                        <TableRow>\n                          <TableCell\n                            rowSpan={\n                              Object.keys(validatedTagNo.errors[element]).length\n                            }\n                            align=\"center\"\n                          >\n                            {element}\n                          </TableCell>\n                          {Object.keys(validatedTagNo.errors[element]).map(\n                            (item, i) =>\n                              i == 0 && (\n                                <React.Fragment key={i}>\n                                  <TableCell align=\"center\">{item}</TableCell>\n                                  <TableCell align=\"center\">\n                                    {validatedTagNo.errors[element][item]}\n                                  </TableCell>\n                                </React.Fragment>\n                              )\n                          )}\n                        </TableRow>\n                        {Object.keys(validatedTagNo.errors[element]).map(\n                          (item, i) =>\n                            i > 0 && (\n                              <TableRow key={i}>\n                                <TableCell align=\"center\">{item}</TableCell>\n                                <TableCell align=\"center\">\n                                  {validatedTagNo.errors[element][item]}\n                                </TableCell>\n                              </TableRow>\n                            )\n                        )}\n                      </React.Fragment>\n                    )\n                )}\n              </TableBody>\n            </Table>\n          </Grid>\n        )}\n        {progress > 0 && (\n          <Grid item xs={12}>\n            <LinearProgressWithLabel value={progress} />\n          </Grid>\n        )}\n        <Backdrop className={classes.backdrop} open={backDrop}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </Grid>\n    </Dialog>\n  );\n};\n\nexport default ProductSync;\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withApollo } from \"react-apollo\";\nimport { PRODUCTFILTERMASTER } from \"../../graphql/query\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"../../components/Products\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { ProductFilter } from \"../../components\";\nimport ProductSync from \"./ProductSync\";\n\nexport const Productlist = withRouter(\n  withApollo((props) => {\n    const [masters, setMasters] = useState({});\n    const [filterparams, setFilterparams] = useState({});\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    function onFilter(filterobj) {\n      let filtercontent = {};\n\n      if (filterobj.product_category) {\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      if (filterobj.product_type) {\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      setFilterparams({\n        ...filterparams,\n        ...filtercontent,\n      });\n      // fetchadminusers()\n    }\n    function onSearch(searchtext) {\n      //  alert(searchtext)\n      setFilterparams({\n        ...filterparams,\n        searchtext,\n      });\n      // fetchadminusers()\n    }\n    useEffect(() => {\n      const query = props.client.query;\n      query({\n        query: PRODUCTFILTERMASTER,\n        fetchPolicy: \"network-only\",\n      })\n        .then((data) => {\n          if (data) {\n            let product_categories = data.data.allMasterProductCategories.nodes;\n            let product_types = data.data.allMasterProductTypes.nodes;\n            setMasters({\n              product_categories,\n              product_types,\n            });\n          } else {\n          }\n        })\n        .catch((error) => {\n          console.log(\"smbcj\");\n        });\n    }, []);\n\n    return (\n      <Grid container spacing={2}>\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={6} sm={6}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Products\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\n            <Link underline=\"none\">\n              <Button variant=\"contained\" color=\"primary\" disabled>\n                Add New Product\n              </Button>\n            </Link>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen} style={{ marginLeft: 2 }}>\n              Product Sync\n            </Button>\n          </Grid>\n        </Grid>\n        <ProductFilter masters={masters} onSearch={onSearch} onFilter={onFilter} />\n        <Product filterparams={filterparams} />\n        <ProductSync open={open} handleClose={handleClose} />\n      </Grid>\n    );\n  })\n);\n\nexport default Productlist;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import moment from 'moment';\nimport { Query, withApollo } from \"react-apollo\";\nimport { CATGORYLIST } from \"../../../../graphql/query\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Results = (props) => {\n  const { className, orders, ...rest } = props;\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  const [editcontent, setEditcontent] = React.useState({});\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias: vendordata.alias,\n      name: vendordata.name,\n      isedit: true,\n    });\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\n  }\n  async function Savevendor(refetch) {}\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    props.onCancel();\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Card>\n        <CardHeader title=\"Category\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n\n                  <TableCell align=\"left\">Alias</TableCell>\n\n                  <TableCell align=\"left\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  <Query\n                    query={CATGORYLIST}\n                    onCompleted={(data) =>\n                      setPageCount(data.allMasterProductCategories.totalCount)\n                    }\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\n                  >\n                    {({ data, loading, error, refetch }) => {\n                      if (loading) {\n                        // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>;\n                        // return false\n                      }\n                      if (data) {\n                        return (\n                          <>\n                            {data.allMasterProductCategories.nodes.map(\n                              (row, index) => (\n                                <>\n                                  {index == 0 && props.isadd ? (\n                                    <TableRow key={row.name}>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => Cancelcreate()}>\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    </TableRow>\n                                  ) : null}\n                                  <TableRow key={row.name}>\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"categoryname\"\n                                          name=\"categoryname\"\n                                          value={editcontent.name}\n                                          onChange={handleInputChange(\"name\")}\n                                          label=\"Name\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.name}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"alias\"\n                                          name=\"alias\"\n                                          value={editcontent.alias}\n                                          onChange={handleInputChange(\"alias\")}\n                                          label=\"alias\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.shortCode}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button\n                                          onClick={(e) => CancelEdit(row)}\n                                        >\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell\n                                        align=\"center\"\n                                        onClick={(e) => Editvendor(row)}\n                                        style={{ width: 20 }}\n                                      >\n                                        <Button>\n                                          <EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                    )}\n                                  </TableRow>\n                                </>\n                              )\n                            )}\n                          </>\n                        );\n                      } else {\n                        return <div>{\"Fetch Products\"}</div>;\n                      }\n                    }}\n                  </Query>\n                }\n              </TableBody>\n            </Table>\n          </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nResults.defaultProps = {\n  orders: [],\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { VoucherContext } from \"../../../../context\";\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from \"../../../../utils/commonmethod\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: \"flex\",\n    alignItems: \"flex-center\",\n    padding: theme.spacing(1),\n\n    cursor: \"pointer\",\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: \"flex\",\n    alignItems: \"flex-center\",\n    padding: theme.spacing(1),\n    cursor: \"pointer\",\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  cardcontent: {\n    display: \"flex\",\n    alignItems: \"flex-center\",\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n    // border: `3px solid ${theme.palette.divider}`,\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n    // border: `3px solid ${theme.palette.divider}`,\n  },\n  optionRadio: {\n    margin: -10,\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  selectedtext: {\n    color: theme.palette.common.white,\n  },\n}));\n\nconst AboutVoucher = (props) => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(\n    props.masterData.product_type\n  );\n  const [productids, setProductids] = useState(props.productids);\n\n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n  };\n\n  const handleproducttypechange = (type) => (event, option) => {\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.name);\n    });\n    setFormData({ ...formData, producttypes: vendorsarray });\n    props.apply(formData.vendorid, formData.categories, vendorsarray);\n  };\n  const handlecategorychange = (type) => (event, option) => {\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.name);\n    });\n    setFormData({ ...formData, categories: vendorsarray });\n\n    props.apply(formData.vendorid, vendorsarray, formData.producttypes);\n  };\n  const hangeoptionchange = (type) => (event, option) => {\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.shortCode);\n    });\n    setFormData({ ...formData, vendorid: vendorsarray });\n\n    props.apply(vendorsarray, formData.categories, formData.producttypes);\n  };\n\n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest(\n      \"/updatepricelist\",\n      {},\n      formData,\n      false\n    );\n    if (response.status < 400) {\n    } else {\n      alert(\"error\");\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest(\n      \"/getpriceupdatestatus\",\n      {},\n      formData,\n      false\n    );\n    if (response.status < 400) {\n      setUpdatestatus(response.message);\n    } else {\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n  };\n  const handleInputChange = (type) => (e) => {\n    setVouchercode(e.target.value.toUpperCase());\n  };\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n    // alert(JSON.stringify(voucherCtx))\n    setVouchercode(makeid(10));\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n        <Grid container spacing={2}>\n          <Grid item xs={6} sm={4}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist || []}\n              getOptionLabel={(option) => option.display}\n              fullWidth\n              onChange={hangeoptionchange(\"vendorcode\")}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Selct Vendor\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6} sm={4}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist || []}\n              getOptionLabel={(option) => option.name}\n              onChange={handlecategorychange(\"category\")}\n              fullWidth\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Select Product Category\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6} sm={4}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist || []}\n              getOptionLabel={(option) => option.name}\n              onChange={handleproducttypechange(\"product_type\")}\n              fullWidth\n              margin=\"dense\"\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Select Product type\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              disabled={props.isdisabled}\n              className={classes.fixedTag}\n              value={props.productids}\n              options={productids}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label={\n                    props.productids.length > 0\n                      ? \"Products (\" + props.productids.length + \") \"\n                      : \"Products\"\n                  }\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </Grid>\n\n          {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n          {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\nasync function rerun(component)\n{\n  var  bodydata = {}\n  bodydata = {\n    component: component.label,\n    // req_product_id : products\n  }\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\n  let history_id = response.id;\n  let update_products = response.products\n  if(response.products && response.products.length > 0)\n  {\n    setOpen(true)\n\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id : update_products,\n      history_id : history_id\n    }\n    setStartrun(true)\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n    setOpen(false)\n  }else\n  {\n    alert(\" Doesn't have any incomplete products\")\n  }\n  \n}\n\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./table.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  conatainerRow: {\n    width: \"300px\",\n    color: \"#6f6f6f\",\n    display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight: \" 256px\",\n    fontSize: \"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"500px\",\n      color: \"#6f6f6f\",\n      display: \"grid\",\n      padding: \"16px 24px\",\n      maxHeight: \" 270px\",\n      fontSize: \"14px\",\n      overflowX: \"visible\",\n      overflowY: \"scroll\",\n      gridColumnGap: \"20px\",\n      gridTemplateColumns: \"repeat(2, 1fr)\",\n    },\n  },\n}));\n\nexport default function Columns(props) {\n  const classes = useStyles();\n\n  const checkboxrow = props.columns;\n  const [columns, setColumns] = React.useState({\n    listOfValue: checkboxrow,\n  });\n  const [showcolumns, setshowColumns] = React.useState();\n\n  function stateChange(id) {\n    let listOfValue = columns.listOfValue.map((data, index) => {\n      if (id === data.id) {\n        data.isActive = data.isActive ? false : true;\n      }\n      return data;\n    });\n    setColumns({\n      listOfValue,\n    });\n  }\n  function resetButton() {\n    let listOfValue = columns.listOfValue.map((data, index) => {\n      if (data.disabled === false) {\n        data.isActive = false;\n      }\n\n      return data;\n    });\n    setColumns({\n      listOfValue,\n    });\n  }\n  function saveaction() {\n    let columnnames = [];\n    columns.listOfValue.map((element) => {\n      if (element.isActive && element.disabled === false) {\n        columnnames.push(element);\n      }\n    });\n    props.getColumnnames(columnnames);\n    props.columnclose();\n  }\n  // const lists = columns.listOfValue.map((head) =>\n  //     (\n  //         <Grid conatiner>\n  //             <Grid item xs={4}><Checkbox\n  //                 value=\"secondary\"\n  //                 color=\"primary\"\n  //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n  //                 checked = {head.isActive}\n  //                 onChange = {()=>stateChange(head.id)}\n\n  //             />\n  //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n  //             </Grid>\n  //         </Grid>\n  //     )\n\n  // );\n\n  console.log(columns, \"the main columns\");\n\n  return (\n    <div style={{ maxHeight: \"420px\" }}>\n      {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n      <Grid\n        style={{\n          height: \"270px\",\n          borderBottom: \"1px solid #ddd\",\n          width: \"100%\",\n          margin: \"auto\",\n          paddingTop: \"5px\",\n          paddingBottom: \"10px\",\n        }}\n      >\n        <Grid conatiner>\n          <Grid item className={classes.conatainerRow}>\n            {columns.listOfValue.map((head) => (\n              <Grid container>\n                <Checkbox\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  checked={head.isActive}\n                  disabled={head.disabled}\n                  onChange={() => stateChange(head.id)}\n                />\n                <h3 style={{ fontWeight: \"500\" }}>{head.name}</h3>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n        <Grid>\n          <Button size=\"large\" onClick={() => resetButton()}>\n            RESET\n          </Button>\n        </Grid>\n        <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <Button size=\"small\" onClick={() => props.columnclose()}>\n            cancel\n          </Button>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => saveaction()}\n            backgroundColor=\"secondary\"\n            size=\"large\"\n            variant=\"contained\"\n            className={classes.margin}\n          >\n            SAVE\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Columns from \"./columns\";\nimport Popover from \"@material-ui/core/Popover\";\n\nconst useStyles = makeStyles((theme) => ({\n  // button: {\n  //     color:\"#06847B\",\n  //     border: \"1px solid #7bbcb7\",\n  //     '&:hover':{\n  //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n  //         border: \"1px solid #06847B\",\n  //     }\n  //   },\n}));\n\nfunction SortHeader(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [options, setOptions] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  useEffect(() => {\n    setOptions(props.columnnames);\n  });\n  return (\n    <Grid container lg={12} md={12} sm={12} xs={12}>\n      <Grid\n        container\n        xl={12}\n        lg={12}\n        md={12}\n        sm={12}\n        xs={12}\n        style={{ display: \"flex\", margin: \"10px\", justifyContent: \"flex-end\" }}\n      >\n        <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n          {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n          <Button\n            className=\"product\"\n            size=\"medium\"\n            id=\"one\"\n            color=\"primary\"\n            backgroundColor=\"secondary\"\n            onClick={handleClick}\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            COLUMNS\n            <ArrowDownwardIcon fontSize=\"inherit\" />\n          </Button>\n\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <Columns\n              columns={options}\n              getColumnnames={props.getColumnnames}\n              displytype={props.displytype}\n              columnclose={handleClose}\n            />\n          </Popover>\n        </Grid>\n        {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n      </Grid>\n    </Grid>\n  );\n}\nexport default SortHeader;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Typography, Button, TextField, MenuItem, InputAdornment } from \"@material-ui/core\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from \"./SortHeader\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems: \"center\",\n  },\n}));\n\nvar myDate = new Date();\nmyDate.setDate(myDate.getDate() + 2);\n// const statusval=[\n// {\n//   value:0,\n//   label:\"All\"\n// },\n// {\n//   value:1,\n//   label:\"Submitted\"\n// },\n// {\n//   value:2,\n//   label:\"Intiated\"\n// },\n// {\n//   value:3,\n//   label:\"Failed\"\n// },\n// {\n//   value:4,\n//   label:\"Approved\"\n// }\n\n// ]\n\nconst Header = (props) => {\n  console.log(props.orderstatus, \"the header data\");\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [fromDate, setFromDate] = useState(null);\n  const [ToDate, setToDate] = useState(null);\n  const [statusval, setStatusval] = useState([]);\n\n  const handleDateChange = (date, value) => {\n    if (value === \"from\") {\n      setFromDate(date);\n    }\n    if (value === \"to\") {\n      if (date > fromDate) {\n        setToDate(date);\n      } else alert(\"the To date must be higher thean from\");\n    }\n  };\n\n  useEffect(() => {\n    let orderStatus = [];\n    let orderstatus = props?.orderstatus;\n    orderstatus.forEach((element) => {\n      orderStatus.push({ label: element.name, value: element.id });\n    });\n    setStatusval(orderStatus);\n  }, [props.orderstatus]);\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n    // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n  };\n  function handlesearch() {\n    props.onSearch(searchtext);\n  }\n  const handleinputChange = (type) => (e) => {\n    setSearchtext(e.target.value);\n    //props.onSearch(e.target.value)\n  };\n  function handleCancel() {\n    props.onCancel();\n    setStatus(\"\");\n  }\n  function handleDate() {\n    if (fromDate && ToDate !== \"\") {\n      props.onDate(fromDate, ToDate);\n    }\n  }\n  const handleChange = (event) => {\n    props.onSelect(event.target.value);\n    setStatus(event.target.value);\n  };\n  const classes = useStyles();\n  console.log(statusval, \"options\");\n  return (\n    <div\n      className=\"search\"\n      style={{\n        display: \"flex\",\n        background: \"white\",\n        borderTop: \"1px solid #e4e4e4\",\n        borderBottom: \"1px solid #e4e4e4\",\n      }}\n    >\n      <Grid className={classes.contantview} container spacing={1}>\n        {/* <Grid item xs={1}>\n          <Typography variant=\"h4\" style={{ margin: \"8px\" }}>\n            Orders\n          </Typography>\n        </Grid> */}\n        <Grid container item xs={4}>\n          <Grid item xs={9}>\n            <TextField\n              className={classes.helperinput}\n              variant=\"outlined\"\n              margin=\"dense\"\n              value={searchtext}\n              id=\"productname\"\n              fullWidth\n              name=\"productname\"\n              label=\"Search by name/email/mobile\"\n              //onInput={keyPress.bind(this)}\n              style={{ marginLeft: \"4px\", marginTop: \"21px\" }}\n              onChange={handleinputChange(\"searchtext\")}\n\n              //onChange={(e)=>handleinputChange(e,'productname')}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => handlesearch()}\n              style={{\n                marginLeft: \"7px\",\n                marginTop: \"22px\",\n                marginBottom: \"10px\",\n              }}\n            >\n              Search\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid container item xs={8} spacing={3}>\n          <Grid item xs={4}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              select\n              fullWidth\n              label=\"OrderStatus\"\n              value={status}\n              onChange={handleChange}\n              style={{ marginTop: \"17px\" }}\n              variant=\"outlined\"\n              InputProps={\n                status !== \"\" && {\n                  endAdornment: (\n                    <InputAdornment position=\"start\" style={{ marginRight: 20, cursor: \"pointer\" }}>\n                      <CancelOutlinedIcon onClick={() => handleCancel()} />\n                    </InputAdornment>\n                  ),\n                }\n              }\n            >\n              {statusval.map((option) => (\n                <MenuItem key={option.value} value={option.label}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item xs={3}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                variant=\"inline\"\n                format=\"yyyy/MM/dd\"\n                margin=\"normal\"\n                label=\"From\"\n                value={fromDate}\n                style={{ marginTop: 6 }}\n                onChange={(date) => handleDateChange(date, \"from\")}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid item xs={3}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                variant=\"inline\"\n                format=\"yyyy/MM/dd\"\n                margin=\"normal\"\n                label=\"To\"\n                value={ToDate}\n                style={{ marginTop: 6 }}\n                onChange={(date) => handleDateChange(date, \"to\")}\n              />\n            </MuiPickersUtilsProvider>\n          </Grid>\n          <Grid item xs={2}>\n            <Button color=\"primary\" variant=\"contained\" style={{ marginTop: \"17px\" }} onClick={() => handleDate()}>\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <SortHeader columnnames={props.columns} getColumnnames={props.getColumnnames} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n \n  console.log(props);\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n        {props.columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            width={headCell.type == 9 ? 300 : null}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label ? headCell.label : headCell.name}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"\" : \"\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Moment from \"react-moment\";\nimport { TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\n\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  table: {\n    // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n    overflowY: \"auto\",\n    maxHeight: \"100vh\",\n  },\n  containergrid: {\n    overflowX: \"scroll\",\n    width: 1000,\n    height: 20,\n    overflowY: \"hidden\",\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Results = (props) => {\n  // debugger\n  console.log(props, \"the list data\");\n  const { className, orders, ...rest } = props;\n  const [editcontent, setEditcontent] = React.useState({});\n  const [order, setOrder] = React.useState(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].orderdate : \"Order Date\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = (event) => {\n    const selectedOrders = event.target.checked ? orders.map((order) => order.id) : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent);\n    // setIsadd(false)\n    // alert(JSON.stringify(editcontent))\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    // refetch()\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  async function showorderdetails(orderurl) {\n    window.open(orderurl);\n  }\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n    let paymentstatusobj = {};\n    props.orderstatus.forEach((element) => {\n      if (vendordata.orderstatus === element.name) {\n        paymentstatusobj = element;\n      }\n    });\n\n    delete vendordata[\"action\"];\n\n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus: paymentstatusobj,\n      isedit: true,\n    });\n\n    setBtnEdit({ ...btnEdit, id: vendordata.orderid, action: true });\n  }\n  function CancelEdit(diamondData) {\n    //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n\n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n\n    // }\n    //    setIsadd(false)\n    setEditcontent({});\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n\n  return (\n    <Card>\n      <CardContent className={classes.content}>\n        {/* <PerfectScrollbar> */}\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n            {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n            <EnhancedTableHead\n              columns={props.columnobjs}\n              columnsname={props.showcolumns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n            {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n            {/* </TableRow>\n                </TableHead> */}\n            <TableBody style={{ overflow: \"scroll\" }}>\n              {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((order) => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  <TableRow\n                  // key={order.id}\n                  // selected={selectedOrders.indexOf(order.id) !== -1}\n                  >\n                    {props.columnobjs.map((col) => (\n                      <>\n                        {col.key === \"action\" && props.iswrite ? (\n                          <TableCell align=\"center\" style={{ width: 20 }}>\n                            {btnEdit.action && btnEdit.id == order.orderid ? (\n                              <>\n                                <Button onClick={(e) => Savevendor()}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(order)}>\n                                  <CancelIcon />\n                                </Button>\n                              </>\n                            ) : (\n                              <Button>\n                                <VisibilityIcon onClick={(e) => showorderdetails(`/orderdetails/${order.orderid}`)} />\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <>\n                            {btnEdit.action && btnEdit.id == order.orderid ? (\n                              <TableCell>\n                                {!col.type || col.type == 1 ? <Typography> {order[col.key]}</Typography> : null}\n                                {col.type == 2 ? (\n                                  <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    id={col.key}\n                                    name={col.key}\n                                    value={editcontent[col.key]}\n                                    onChange={handleInputChange(col.key)}\n                                    label={col.label}\n                                  />\n                                ) : null}\n                                {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">{order[col.key]}</Moment> : null}\n\n                                {col.type == 5 && order.paymentmode == \"COD\" ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={props.paymentstatus}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[col.key]}\n                                    onChange={handleoptionChange(col.key)}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                                  />\n                                ) : null}\n                                {col.type == 5 && order.paymentmode != \"COD\" ? <Typography> {order[col.key]}</Typography> : null}\n\n                                {col.type == 3 ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={props.orderstatus}\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[col.key]}\n                                    onChange={handleoptionChange(col.key)}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                                  />\n                                ) : null}\n                              </TableCell>\n                            ) : (\n                              <TableCell align=\"center\" style={{ width: 20 }}>\n                                {col.type == 4 ? (\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">{order[col.key]}</Moment>\n                                ) : (\n                                  <Typography> {order[col.key]}</Typography>\n                                )}\n                              </TableCell>\n                            )}\n                          </>\n                        )}\n                      </>\n                    ))}\n\n                    {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                    {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </div>\n        {/* </PerfectScrollbar> */}\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <TablePagination\n          component=\"div\"\n          count={orders.length}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n          page={page}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={[10, 50, 100, 250]}\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nResults.defaultProps = {\n  orders: [],\n};\n\nexport default Results;\n","import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { OrderContext } from \"../../context\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { v4 as uuid } from 'uuid';\nimport Page from \"../../components/Page\";\nimport { Header, Results } from \"./components\";\nimport Columns from \"./components/columnnames.json\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n}));\n\nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx, orderMaster } = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n  const [iswrite, setIswrite] = useState(false);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(\n    Columns.defaultcolumns\n  );\n  const [displaycolumns, setDisplaycolumns] = useState(\n    Columns.defaultcolumnnames\n  );\n\n  function columnchanged(columnnames) {  \n    let displycolumns = [];\n    columnnames.filter((element) => {\n      displycolumns.push(element.name);\n    });\n    setDisplaycolumns(columnnames);\n    setDisplaycolumnnames(displycolumns);\n  }\n\n  async function updateorder(ordercontent) {\n    let response = await sendNetworkRequest(\n      \"/updateorderstatus\",\n      {},\n      ordercontent\n    );\n    window.location.reload();\n\n    // getorders()\n  }\n  function searchorder(searchtext) {\n    if (searchtext.length > 0) {\n      var data_filter = orders.filter(\n        (element) =>\n          (element.email && element.email.match(searchtext + \".*\")) ||\n          (element.mobile && element.mobile.match(searchtext + \".*\")) ||\n          (element.orderid && element.orderid.match(searchtext + \".*\")) ||\n          (element.username && element.username.match(searchtext + \".*\"))\n      );\n      setFilteredorder(data_filter);\n    } else {\n      setFilteredorder(orders);\n    }\n  }\n\n  function searchOption(searchtext) {\n    if (searchtext !== \"\") {\n      var data_filter = orders.filter((element) => {\n         if(element.orderstatus === searchtext){\n            return element\n         }\n          });\n      setFilteredorder(data_filter);\n    } else {\n      setFilteredorder(orders);\n    }\n  }\n  function onCancel(){\n    setFilteredorder(orders);\n  }\n\n  function searchDate(min,max) {\n    let  fromdate = JSON.stringify(min)\n    fromdate = fromdate.slice(1,11)\n    console.log(fromdate)\n    let  todate = JSON.stringify(max)\n    todate = todate.slice(1,11)\n    console.log(todate)\n   if(fromdate && todate !== \"\"){\n    var date_filter = orders.filter((element)=>{\n    //  console.log(element.orderdate.slice(0,10))\n      if(element.orderdate.slice(0,10) > fromdate && element.orderdate.slice(0,10) <=todate){\n        return element\n      }   \n    });\n    setFilteredorder(date_filter)\n  }\n  else {\n    setFilteredorder(orders);\n  }\n  }\n\n\n\n  async function getorders() {\n    var orders_arr = [];\n    orderCtx.orderMaster.orders.forEach((element) => {\n      let orderobj = {};   \n      orderobj[\"orderid\"] = element.id;\n      orderobj[\"orderdate\"] = element.createdAt;\n      orderobj[\"paymentmode\"] = element.paymentMode;\n      orderobj[\"cartid\"] = element.cartId;\n      // orderobj['paymentstatusmaster'] = element.paymentStatus\n      orderobj[\"awbNumber\"] = element.awbNumber ? element.awbNumber : \"\";\n      orderobj[\"comments\"] = element.comments ? element.comments : \"\";\n      orderobj[\"orderstatus\"] = element.orderStatus;\n      if (element.paymentMode === \"COD\") {\n        orderobj[\"paymentstatus\"] = element.paymentStatus;\n      }\n      if (element.paymentDetailsByOrderId) {\n        let pgresponseobj = element.paymentDetailsByOrderId.nodes;\n        pgresponseobj.forEach((pgres) => {\n          let response_pg = JSON.parse(pgres.paymentResponse);\n          if (element.paymentMode === \"Prepaid\") {\n            orderobj[\"paymentstatus\"] = `${\n              response_pg?.ipgTransactionId || response_pg?.APTRANSACTIONID\n            }\\n${response_pg?.fail_reason || \"\"}\\n${\n              response_pg?.status || response_pg?.TRANSACTIONPAYMENTSTATUS\n            }`;\n            /* response_pg?.ipgTransactionId ||\n              response_pg?.APTRANSACTIONID +\n                \" \\n\" +\n                response_pg?.fail_reason +\n                \" \\n\" +\n                response_pg?.status ||\n              response_pg?.TRANSACTIONPAYMENTSTATUS; */\n          }\n        });\n      }\n      if (element.shoppingCartByCartId) {\n        let cartcontent = element.shoppingCartByCartId;\n\n        if (cartcontent.cartAddressesByCartId) {\n          let addresscontent = cartcontent.cartAddressesByCartId.nodes;\n          addresscontent.forEach((addressobj) => {\n            orderobj[\"address\"] = addressobj.addressline1;\n            if (!orderobj[\"mobile\"]) {\n              orderobj[\"mobile\"] = addressobj.contactNumber;\n            }\n            if (!orderobj[\"username\"]) {\n              orderobj[\"username\"] = addressobj.firstname\n                ? addressobj.firstname\n                : \"\";\n            }\n          });\n        }\n        if (cartcontent.shoppingCartItemsByShoppingCartId) {\n          let cartitemscontent =\n            cartcontent.shoppingCartItemsByShoppingCartId.nodes;\n          let skus = [];\n\n          cartitemscontent.forEach((element) => {\n            if (element.transSkuListByProductSku) {\n              skus.push(element.transSkuListByProductSku.generatedSku);\n            }\n          });\n          orderobj[\"skus\"] = skus.join(\" , \");\n        }\n        if (cartcontent.userProfileByUserprofileId) {\n          // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n          let usercontent = cartcontent.userProfileByUserprofileId;\n          if (usercontent.firstName) {\n            orderobj[\"username\"] = usercontent.firstName\n              ? usercontent.firstName\n              : \"\";\n          }\n          orderobj[\"email\"] = usercontent.email ? usercontent.email : \"\";\n          if (!orderobj[\"username\"]) {\n            orderobj[\"username\"] = usercontent.firstname\n              ? usercontent.firstname\n              : \"\";\n          }\n\n          let useraddressess = usercontent.userAddressesByUserProfileId;\n          if (useraddressess) {\n            let address_arr = useraddressess.nodes;\n            address_arr.forEach((useraddressobj) => {\n              // if(!orderobj[\"mobile\"])\n              // {\n              //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n              // }\n              // if(!orderobj[\"mobile\"])\n              // {\n              //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n              // }\n            });\n          }\n        }\n\n        if (cartcontent.giftwrapsByCartId) {\n          let giftobj = cartcontent.giftwrapsByCartId.nodes;\n          giftobj.forEach((gift) => {\n            orderobj[\"giftmessage\"] = gift.message;\n          });\n        }\n      }\n      orders_arr.push(orderobj);\n    });\n\n    setOrders(orders_arr);\n    setFilteredorder(orders_arr);\n  }\n  async function getmaster(getmaster) {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes);\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    let pagepermission = localStorage.getItem(\"pagepermissions\");\n    if (pagepermission.indexOf(\"/orderlist\") > -1) {\n      setIswrite(true);\n    } else {\n      setIswrite(false);\n    }\n    getmaster();\n  }, []);\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {};\n\n    getmaster();\n    getorders();\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n//   debugger\nconsole.log(orders,\"main\")\n  return (\n    <Page className={classes.root} title=\"Orders Management List\">\n      \n\n            <Typography component=\"h3\" variant=\"h3\" style={{margin:\"10px\"}}>\n            Orders\n           </Typography>\n          \n      <Header\n        getColumnnames={columnchanged}\n        onSearch={searchorder}\n        onSelect={searchOption}\n        onDate={searchDate}\n        onCancel={onCancel}\n        columns={columnnames}\n        orderstatus={paymentstatus}\n      />\n      {filteredorder ? (\n        <Results\n          className={classes.results}\n          orderstatus={paymentstatus}\n          paymentstatus={orderstatus}\n          iswrite={iswrite}\n          orders={filteredorder}\n          onupdate={updateorder}\n          showcolumns={displaycolumnnames}\n          columnobjs={displaycolumns}\n        />\n      ) : null}\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from \"../../context\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport { useQuery } from \"react-apollo\";\nimport { orderList } from \"../../services/mapper\";\nimport { ORDERS } from \"../../services/queries\";\n\nimport Component from \"./Orderlistcontent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: theme.spacing(2),\n  },\n}));\nexport const OrderList = withRouter((props) => {\n  const classes = useStyles();\n  let user_id = props.location.pathname.split(\"/\")[2];\n\n  const { data, loading, error } = useQuery(ORDERS(user_id));\n\n  if (loading)\n    return (\n      <div>\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <OrderProvider value={{ data, mapper: orderList.mapper, mappertype: \"orderMaster\" }}>\n      <Component {...props} />\n    </OrderProvider>\n  );\n});\nexport default OrderList;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\n      let selectedsellingPriceType = {}\n      pricetypes.forEach(element => {\n    \n        if(element.label == diamondData.sellingPriceType)\n        {\n          selectedsellingPriceType = element\n        }\n      })\n        setEditdiamond({  \n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          selectedsellingPriceType : selectedsellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      value={editdiamond.selectedsellingPriceType}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n     \n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState([]);\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    if(deleteid.length > 0)\n    {\n      let variables ={\n        elementId:deleteid[0]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    if(deleteid.length > 1)\n    {\n      let variables ={\n        elementId:deleteid[1]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n    //   if(res!==null){\n    //    // refetch();\n    //     // refetchval()\n    //     getgemlist()\n    //   }\n    // }).catch(err => {\n\n    // })\n    setgemlist([])\n\n    setDeleteid([])\n    getgemlist()\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n\n    let deleteids = [];\n    deleteids.push(diamondData.costprice.id)\n    deleteids.push(diamondData.sellprice.id)\n\n     setDeleteid(deleteids)\n     setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata ={}\n    bodydata['material'] = makingcontent.metal.name;\n    bodydata['weight_start'] = makingcontent.weightstart;\n    bodydata['weight_end'] = makingcontent.weightend;\n    bodydata['price_type'] = makingcontent.pricetype.label;\n    bodydata['vendor_code'] = props.vendor;\n    bodydata['purity'] = makingcontent.purity.shortCode;\n    bodydata['cost_price'] = makingcontent.costPrice;\n    bodydata['selling_price'] = makingcontent.sellingprice;\n    bodydata['isadd'] = true\n\n     await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\n\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     setOpen(false)\n     getmclist()\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster}  isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds vendor={vendorcode}/>\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { TextField, Grid, Chip } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup, props.refetch);\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setMarkup({ ...markup, [type]: value });\n  };\n  const handleinputChange = (type) => (e) => {\n    setMarkup({\n      ...markup,\n      [type]: e.target.value,\n    });\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose();\n  };\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"category\")}\n                getOptionLabel={(option) => option.name}\n                options={props.category}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose category\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"producttype\")}\n                getOptionLabel={(option) => option.name}\n                options={props.producttype}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose product type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"materiallist\")}\n                getOptionLabel={(option) => option.name}\n                options={props.materiallist}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose Material type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"puritylist\")}\n                getOptionLabel={(option) => option.name}\n                options={props.puritylist}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose Purity type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Selling Price Min\"\n                fullWidth\n                onChange={handleinputChange(\"sellpricemin\")}\n                id=\"productvendorcode\"\n                name=\"Selling Price Min\"\n              />\n            </Grid>\n\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Selling Price Max\"\n                fullWidth\n                onChange={handleinputChange(\"sellpricemax\")}\n                id=\"productvendorcode\"\n                name=\"Cost Price\"\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                fullWidth\n                disableClearable\n                getOptionLabel={(option) => option.name}\n                onChange={handleoptionChange(\"markuptype\")}\n                options={[\n                  { label: 1, name: \"Flat\" },\n                  { label: 2, name: \"Percentage\" },\n                ]}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Markup Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Markup Value \"\n                onChange={handleinputChange(\"markup\")}\n                fullWidth\n                id=\"productvendorcode\"\n                name=\"Cost Price\"\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport ConformationAlert from \"../../../components/ConformationAlert\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Input, Grid, Card } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  DIAMONDMARKUP,\n  PRODUCTLISTSTATUSEDIT,\n  DELETEMARKUPPRICE,\n} from \"../../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport Addmarkup from \"./Addmarkup\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\nimport { BASE_URL } from \"../../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\nconst columns = [\n  { id: \"Component\", label: \"Components\" },\n  { id: \"Product Category\", label: \"product Category\" },\n  { id: \"Product Type\", label: \"Product Type\" },\n  { id: \"Selling Price Min\", label: \"Selling Price Min\" },\n  { id: \"Selling Price Max\", label: \"Selling Price Max\" },\n  { id: \"Markup Type\", label: \"Markup Type\" },\n  { id: \"Markup value\", label: \"Markup value\" },\n  { id: \"updatedAt\", label: \"updatedAt\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [editmarkup, setEditmarkup] = React.useState({});\n  const [goldpricelist, setGoldpricelist] = React.useState({});\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState(\"\");\n  const [refetch, setRefetch] = React.useState(null);\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch) {\n    setIsdelete(true);\n    let variables = {\n      elementId: deleteid,\n    };\n    await props.client\n      .mutate({ mutation: DELETEMARKUPPRICE, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n          // refetchval()\n        }\n      })\n      .catch((err) => {});\n    setIsconformation(false);\n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id);\n\n    setIsconformation(true);\n  }\n\n  async function updatemarkup(markupcontent, refetch) {\n    let product_type = markupcontent.producttype\n      ? markupcontent.producttype\n      : [];\n    let material_list = markupcontent.materiallist\n      ? markupcontent.materiallist\n      : [];\n    let purity_list = markupcontent.puritylist ? markupcontent.puritylist : [];\n\n    var bodydata = {};\n    bodydata[\"category\"] = markupcontent.category.name;\n    bodydata[\"producttype\"] = product_type;\n    bodydata[\"sellingPriceMin\"] = markupcontent.sellpricemin;\n    bodydata[\"sellingPriceMax\"] = markupcontent.sellpricemax;\n    bodydata[\"markuptype\"] = markupcontent.markuptype.label;\n    bodydata[\"material_list\"] = material_list;\n    bodydata[\"purity_list\"] = purity_list;\n    bodydata[\"markupValue\"] = markupcontent.markup;\n    bodydata[\"material\"] = pricecomponent;\n    console.log(\"XXXXXXXX\");\n    await sendNetworkRequest(\"/addmarkup\", {}, bodydata);\n    setOpen(false);\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n      ...editmarkup,\n      markupid: diamondData.id,\n      sellingPriceMin: diamondData.sellingPriceMin,\n      sellingPriceMax: diamondData.sellingPriceMax,\n      markupValue: diamondData.markupValue,\n      updatedAt: new Date(),\n    });\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\n  }\n  async function handleSave(id, refetch) {\n    var bodydata = {};\n\n    await sendNetworkRequest(\"/updatemarkup\", {}, editmarkup);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value });\n  };\n  const handlecomponentChange = (type) => (event, value) => {\n    setPriceomponent(value);\n  };\n  const handleinputChange = (type) => (e) => {\n    setEditmarkup({\n      ...editmarkup,\n      [type]: e.target.value,\n    });\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\n  };\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n\n  return (\n    <>\n      <Card className={classes.cardcontent}>\n        <Grid\n          container\n          justify=\"left\"\n          alignItems=\"center\"\n          className={classes.cardroot}\n          spacing={4}\n        >\n          <Grid item xs={3}>\n            <Typography variant=\"h6\">{\"Selling Price Markup Setup\"}</Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              className={classes.fixedTag}\n              defaultValue={pricecomponent}\n              options={[\"Diamond\", \"Gem Stone\", \"Gold\", \"Making Charge\", \"All\"]}\n              onChange={handlecomponentChange(\"earringbacking\")}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    label={option}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Pricing Components\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  // error = {productCtx.error_message.earringbacking}\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              style={{ paddingRight: 16, paddingLeft: 16 }}\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            border={1}\n            borderColor={\"#ddd\"}\n            size=\"small\"\n            stickyHeader\n          >\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <Query\n                query={DIAMONDMARKUP}\n                onCompleted={(data) =>\n                  setPageCount(data.allPricingMarkups.totalCount)\n                }\n                variables={{ vendorCode: pricecomponent }}\n              >\n                {({ data, loading, error, refetch }) => {\n                  debugger;\n                  if (loading) {\n                    // return <Loader />\n                  }\n                  if (error) {\n                    return <div>{error}</div>;\n                    // return false\n                  }\n                  if (data) {\n                    setGoldpricelist(data);\n                    return (\n                      <>\n                        <ConformationAlert\n                          title={\"Are you sure to delete?\"}\n                          positivebtn={\"Yes\"}\n                          negativebtn={\"No\"}\n                          message={\"\"}\n                          refetch={refetch}\n                          onSuccess={handledelete}\n                          onCancel={hidedeleteconformation}\n                          isshow={isconformation}\n                        />\n                        {open ? (\n                          <Addmarkup\n                            isadd={open}\n                            material={pricecomponent}\n                            refetch={refetch}\n                            actionSave={updatemarkup}\n                            category={props.categories}\n                            producttype={props.producttypes}\n                            materiallist={props.materiallist}\n                            puritylist={props.puritylist}\n                            title={props.title}\n                            actionclose={handleClose}\n                          />\n                        ) : null}\n\n                        {data.allPricingMarkups.nodes.map((row, index) => (\n                          <>\n                            <TableRow key={row.category}>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.material}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.category}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.productType ? row.productType : \"All\"}\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                <Typography className={classes.heading}>\n                                  {row.sellingPriceMin}{\" \"}\n                                </Typography>\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                <Typography className={classes.heading}>\n                                  {row.sellingPriceMax}{\" \"}\n                                </Typography>\n                              </TableCell>\n\n                              <TableCell align=\"center\">\n                                {btnEdit.action && btnEdit.id == row.id ? (\n                                  <Autocomplete\n                                    id=\"free-solo-2-demo\"\n                                    fullWidth\n                                    disableClearable\n                                    className={classes.fixedTag}\n                                    getOptionLabel={(option) => option.name}\n                                    onChange={handleoptionChange(\n                                      \"sellingPriceType\"\n                                    )}\n                                    options={[\n                                      { label: 1, name: \"Flat\" },\n                                      { label: 2, name: \"Percentage\" },\n                                    ]}\n                                    renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                        <Chip\n                                          variant=\"outlined\"\n                                          size=\"small\"\n                                          label={option.name}\n                                          {...getTagProps({ index })}\n                                        />\n                                      ))\n                                    }\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label=\"Price Type\"\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        InputProps={{\n                                          ...params.InputProps,\n                                          readOnly: true,\n                                          type: \"search\",\n                                        }}\n                                      />\n                                    )}\n                                  />\n                                ) : (\n                                  <Typography className={classes.heading}>\n                                    {row.markupType === 1\n                                      ? \"Flat\"\n                                      : \"Percentage\"}{\" \"}\n                                  </Typography>\n                                )}\n                              </TableCell>\n\n                              <TableCell align=\"left\">\n                                {btnEdit.action && btnEdit.id == row.id ? (\n                                  <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value={editmarkup.markupValue}\n                                    onChange={handleinputChange(\"markupValue\")}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                  />\n                                ) : (\n                                  <Typography className={classes.heading}>\n                                    {row.markupValue}{\" \"}\n                                  </Typography>\n                                )}\n                              </TableCell>\n\n                              <TableCell align=\"left\">\n                                <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {btnEdit.action && btnEdit.id == row.id\n                                    ? editmarkup.updatedAt\n                                    : row.updatedAt}\n                                </Moment>\n                              </TableCell>\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <TableCell\n                                  style={{ width: 170 }}\n                                  align=\"center\"\n                                >\n                                  <Button\n                                    onClick={(e) => handleSave(row.id, refetch)}\n                                  >\n                                    <SaveIcon />\n                                  </Button>\n                                  <Button onClick={(e) => CancelEdit(row)}>\n                                    <CancelIcon />\n                                  </Button>\n                                </TableCell>\n                              ) : (\n                                <TableCell\n                                  align=\"center\"\n                                  style={{ width: 170 }}\n                                >\n                                  <Button onClick={(e) => handleEdit(row)}>\n                                    <EditIcon />\n                                  </Button>\n                                  <Button\n                                    onClick={(e) => handleDelete(row, refetch)}\n                                  >\n                                    <DeleteIcon />\n                                  </Button>\n                                </TableCell>\n                              )}\n                            </TableRow>\n                          </>\n                        ))}\n                      </>\n                    );\n                  } else {\n                    return <div>{\"Fetch Products\"}</div>;\n                  }\n                }}\n              </Query>\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n            </TableBody>\n            {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"./components/Product\";\nimport Diamonds from \"./components/Diamonds\";\nimport Gemstones from \"./components/Gemstones\";\nimport Makingcharge from \"./components/Makingcharge\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport {\n  VENDORLIST,\n  MASTERCATEGORY,\n  PRODUCTDIAMONDTYPES,\n} from \"../../graphql/query\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\n\nconst useStyle = makeStyles((theme) => ({}));\nexport const Markupprice = withRouter((props) => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [materiallist, setMateriallist] = React.useState([]);\n  const [puritylist, setPuritylist] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n  const classes = useStyle();\n\n  const handlevendorchange = (type) => (event, value) => {\n    setVendorcode(value.shortCode);\n  };\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes);\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes);\n        setMateriallist(fatchvalue.data.allMasterMaterials.nodes);\n        setPuritylist(fatchvalue.data.allMasterMetalsPurities.nodes);\n        // setVendorlist({\n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <Grid container spacing={1}>\n      {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n\n      <Grid item xs={12} sm={12}>\n        <Product\n          categories={categorylist}\n          producttypes={producttypes}\n          materiallist={materiallist}\n          puritylist={puritylist}\n          vendor={\"Gold\"}\n        />\n      </Grid>\n      {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n      {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n      {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n      {/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  );\n});\n\nexport default withApollo(withRouter(Markupprice));\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '12px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '12px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { CategoryComponents } from \"./../../components\";\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button,\n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs,\n  Tab,\n  Divider,\n  colors,\n} from \"@material-ui/core\";\nimport { VoucherContext } from \"../../../../context\";\nconst tabs = [\n  { value: \"Category\", label: \"Category\" },\n  { value: \"Producttype\", label: \"Product type\" },\n  { value: \"Material\", label: \"Material\" },\n  { value: \"Collections\", label: \"Collections\" },\n  { value: \"Occations\", label: \"Occations\" },\n  { value: \"Styles\", label: \"Styles\" },\n  { value: \"Themes\", label: \"Themes\" },\n];\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: \"flex\",\n    alignItems: \"flex-center\",\n    padding: theme.spacing(1),\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  divider: {\n    backgroundColor: colors.grey[300],\n  },\n  cardcontent: {\n    display: \"flex\",\n    alignItems: \"flex-center\",\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200],\n  },\n  optionRadio: {\n    margin: -10,\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst VoucherComponent = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx, voucherMaster } =\n    React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\",\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n  };\n  const myFunction = () => {\n    props.onAdded(attrobj);\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"materials\") {\n      let elements_arr = [];\n      value.forEach((element) => {\n        elements_arr.push(element.name);\n      });\n      if (elements_arr.indexOf(\"Gold\") > -1) {\n        setIsgold(true);\n      } else {\n        setIsgold(false);\n      }\n\n      if (elements_arr.indexOf(\"Diamond\") > -1) {\n        setIsdiamond(true);\n      } else {\n        setIsdiamond(false);\n      }\n    }\n    setAttrobj({\n      ...attrobj,\n      [type]: value,\n    });\n\n    // props.onAdded(type,value)\n  };\n  const handleTabsChange = (event, value) => {\n    if (value == \"Material\") {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if (tabnames.indexOf(\"Purity\") === -1) {\n        tabnames.splice(3, 0, \"Purity\");\n      }\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {}, []);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <div className={classes.content}>\n        <Grid container spacing={2}>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              value={attrobj.category}\n              className={classes.fixedTag}\n              fullWidth\n              getOptionLabel={(option) => option.name}\n              options={voucherCtx.voucherMaster.product_categories}\n              onChange={handleoptionChange(\"category\")}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Product Category\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              value={attrobj.product_types}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.product_types}\n              onChange={handleoptionChange(\"product_types\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.product_types}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Product Types\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.materials}\n              onChange={handleoptionChange(\"materials\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.materials}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Materials\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          {isgold ? (\n            <Grid item xs={4} sm={4}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                //  value={attrobj.componenets}\n                className={classes.fixedTag}\n                fullWidth\n                options={voucherCtx.voucherMaster.purities}\n                onChange={handleoptionChange(\"purities\")}\n                getOptionLabel={(option) => option.name}\n                value={attrobj.purities}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    //  error = {productCtx.error_message.selected_sizes}\n\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\n                  />\n                )}\n              />\n            </Grid>\n          ) : null}\n          {isdiamond ? (\n            <Grid item xs={4} sm={4}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                //  value={attrobj.componenets}\n                className={classes.fixedTag}\n                fullWidth\n                getOptionLabel={(option) => option.diamondtype}\n                options={voucherCtx.voucherMaster.diamondtypes}\n                onChange={handleoptionChange(\"diamondtype\")}\n                value={attrobj.diamondtype}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.diamondtype}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    //  error = {productCtx.error_message.selected_sizes}\n\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\n                  />\n                )}\n              />\n            </Grid>\n          ) : null}\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.collections}\n              onChange={handleoptionChange(\"collections\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.collections}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Collections\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.occations}\n              onChange={handleoptionChange(\"occations\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.occations}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Occassions\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.styles}\n              onChange={handleoptionChange(\"styles\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.styles}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Styles\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.themes}\n              onChange={handleoptionChange(\"themes\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.themes}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Themes\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\n            <Button\n              onClick={() => props.onAdded(attrobj)}\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Check Applicable Products\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired,\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import moment from 'moment';\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport Viewsku from \"../Viewsku\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Products = (props) => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = (event) => {\n    const selectedOrders = event.target.checked\n      ? orders.map((order) => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel() {\n    setOpen(false);\n  }\n  function handleOpen(prodskus) {\n    setOpen(true);\n    setSelectskus(prodskus);\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      {open ? (\n        <Viewsku\n          isadd={open}\n          products={selectskus}\n          actionclose={handlecancel}\n        />\n      ) : null}\n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader title={props.title} />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Product ID</TableCell>\n\n                  {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {props.products\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((order) => (\n                    <TableRow\n                    // key={order.id}\n                    // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      <TableCell>{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nProducts.defaultProps = {\n  orders: [],\n};\n\nexport default Products;\n","import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\n\nimport { VoucherContext } from \"../../context\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { Chip, IconButton } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport uuid from \"uuid/v1\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { palette } from \"../../theme\";\nimport Page from \"../../components/Page\";\nimport {\n  Header,\n  Results,\n  Products,\n  AboutVoucher,\n  VoucherComponent,\n} from \"./components\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport FullLoader from \"../../components/Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3),\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n  productcontent: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1),\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor: theme.palette.white,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"Created Successfully\",\n    severity: \"Success\",\n  });\n\n  const { voucherCtx, setVoucherCtx, materialMaster } =\n    React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  async function getdiscountvalue(discount_id) {\n    let bodydata = {\n      discountid: discount_id,\n    };\n    let response = await sendNetworkRequest(\n      \"/getdiscount\",\n      {},\n      bodydata,\n      false\n    );\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach((comp) => {\n      comparr.push({\n        name: comp,\n      });\n    });\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids);\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname: response.discunt.discount_name,\n      discountvalue: response.discunt.discount_value,\n      discounttype: response.discunt.discount_type,\n      discounttitle: response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes),\n    });\n    setIsloaded(true);\n  }\n  async function creatediscount(ispricerun) {\n    let skuarray = [];\n    while (skus.length > 0) {\n      let sku_content = skus.splice(0, 25000);\n      skuarray.push(sku_content);\n    }\n    if (errorskus.length > 0) {\n      alert(\"Some skus are overlapping\");\n    } else {\n      let discount_count = 0;\n      setIsloading(true);\n      updatediscount(discount_count);\n      async function updatediscount() {\n        let bodydata = {\n          discountvalue: parseFloat(attributeobj.discountvalue),\n          discounttype: attributeobj.discounttype,\n          componenets: attributeobj.componenets,\n          discountname: attributeobj.discountname,\n          discounttitle: attributeobj.discounttitle,\n          product_attributes: productattr,\n          product_attributes_text: productattrtext,\n          skus: skuarray[discount_count],\n        };\n        console.log(JSON.stringify(productattr));\n        let response = await sendNetworkRequest(\n          \"/creatediscount\",\n          {},\n          bodydata,\n          false\n        );\n\n        discount_count = discount_count + 1;\n        if (skuarray.length > discount_count) {\n          setLoadingtitle(skus.length + \" Left\");\n          updatediscount(discount_count);\n        } else {\n          setIsloading(false);\n          setOpen(true);\n          setIsshowpriceupdate(false);\n\n          window.location = \"/salediscountlist\";\n        }\n      }\n    }\n  }\n  const handleDelete = (chipToDelete) => () => {\n    //setProducts([])\n    let errorindex = errorskus.indexOf(chipToDelete);\n    if (errorindex > -1) {\n      errorskus.splice(errorindex, 1);\n      var erroritems = [];\n      errorskus.forEach((itemname) => {\n        erroritems.push(itemname);\n      });\n      setErrorskus(erroritems);\n    }\n    let index = products.indexOf(chipToDelete);\n    products.splice(index, 1);\n    var items = [];\n    products.forEach((itemname) => {\n      items.push(itemname);\n    });\n    setProducts(items);\n\n    //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n  };\n\n  async function filterapllied(value) {\n    var bodydata = {};\n\n    let product_ids = [];\n    let response = await sendNetworkRequest(\n      \"/getaliasproduct\",\n      {},\n      value,\n      false\n    );\n    setProducts(response.products);\n    setSkus(response.skus);\n    setErrorskus(response.eror_skus);\n    setIsloading(false);\n    setTitlecontent(response.title);\n  }\n  async function updateprices() {\n    alert(\"i am here\");\n    var bodydata = {};\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id: products,\n    };\n    setIsshowpriceupdate(true);\n\n    let response = await sendNetworkRequest(\n      \"/productpriceupdate\",\n      {},\n      bodydata,\n      false\n    );\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n      component: \"updateskuprice\",\n    };\n    let response = await sendNetworkRequest(\n      \"/getcomponentpricestatus\",\n      {},\n      bodydata,\n      false\n    );\n\n    setStatusmessage(response.message);\n  }\n  function attributeadded(value) {\n    let componentsstring = {};\n    let attrs = [];\n    let display_arr = [];\n    let keys = Object.keys(value);\n    keys.forEach((key) => {\n      let values = [];\n      let alias_arr = [];\n      value[key].forEach((valueobj) => {\n        values.push(valueobj.name);\n        alias_arr.push(valueobj.alias);\n        attrs.push(valueobj.name);\n      });\n      componentsstring[key] = {\n        values: values,\n        alias: alias_arr,\n      };\n      let displaytext = key + \" : \" + attrs.join(\" , \");\n      display_arr.push(displaytext);\n    });\n    setProductattr(componentsstring);\n    setProductattrtext(display_arr.join(\" | \"));\n    //alert(JSON.stringify(componentsstring))\n    setIsloading(true);\n    //setAttributeobj(value)\n    filterapllied(value);\n  }\n  function valuechange(type, value) {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value,\n    });\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {};\n    fetchOrders();\n    if (\n      props.location.pathname &&\n      props.location.pathname.split(\"/\").length > 2\n    ) {\n      let discount_id = props.location.pathname.split(\"/\")[2];\n      setDiscount_id(discount_id);\n      getdiscountvalue(discount_id);\n    } else {\n      setIsloaded(true);\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n      <FullLoader title={loadingtitle} isopen={isloading} />\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Page className={classes.root} title=\"Orders Management List\">\n          {!discount_id ? (\n            <>\n              <VoucherComponent\n                onAdded={attributeadded}\n                className={classes.aboutvoucher}\n              />\n              {products.length > 0 ? (\n                <Products title={titlecontent} products={errorskus} />\n              ) : null}\n              {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n              {isloaded || !discount_id ? (\n                <AboutVoucher\n                  discountcontent={attributeobj}\n                  className={classes.aboutvoucher}\n                  onAdded={valuechange}\n                  categories={[\"Fixed Amount\", \"percentage\"]}\n                />\n              ) : null}\n\n              {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n              <Grid\n                container\n                xs={12}\n                spacing={2}\n                style={{ textAlign: \"center\" }}\n              >\n                <Grid\n                  item\n                  xs={12}\n                  style={{ marginTop: 16, textAlign: \"center\" }}\n                  spacing={2}\n                >\n                  {!isshowpriceupdate ? (\n                    <>\n                      <Button\n                        onClick={() => creatediscount(false)}\n                        color=\"primary\"\n                        style={{ margin: 16 }}\n                        variant=\"contained\"\n                      >\n                        Submit\n                      </Button>\n\n                      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n                    </>\n                  ) : null}\n                </Grid>\n              </Grid>\n            </>\n          ) : (\n            <Grid container xs={12} spacing={2}>\n              <Grid item xs={6} style={{ marginTop: 16 }}>\n                <Grid item xs={12} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Discount Name\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.discountname}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Discount Title\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.discounttitle}\n                  </Typography>\n                </Grid>\n                <Grid item xs={6} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Discount Value\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.discounttype == 2\n                      ? attributeobj.discountvalue + \"%\"\n                      : attributeobj.discountvalue}\n                  </Typography>\n                </Grid>\n                <Grid item xs={6} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Pricing Compponent\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.displaycomp}\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              {attributeobj.allkeys ? (\n                <Grid item xs={6} style={{ marginTop: 16 }}>\n                  {attributeobj.allkeys.map((row, index) => (\n                    <Grid item xs={12} style={{ marginTop: 16 }}>\n                      <Typography variant=\"body2\" component=\"body2\">\n                        {row}\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"h5\">\n                        {attributeobj.attributes[row].values}\n                      </Typography>\n                    </Grid>\n                  ))}\n                  <Grid item xs={12} style={{ marginTop: 16 }}>\n                    <Typography variant=\"body2\" component=\"body2\">\n                      Total Sku\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h5\">\n                      {attributeobj.skucount}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              ) : null}\n              <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\n                {!isshowpriceupdate ? (\n                  <>\n                    {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n                  </>\n                ) : (\n                  <>\n                    {\" \"}\n                    {statusmessage}\n                    <IconButton\n                      aria-label=\"delete\"\n                      onClick={(e) => handlestatus()}\n                      color=\"primary\"\n                    >\n                      <RefreshIcon />\n                    </IconButton>\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          )}\n        </Page>\n      </MuiPickersUtilsProvider>\n    </>\n  );\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from \"../../context\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport { useQuery } from \"react-apollo\";\nimport { materialMaster } from \"../../services/mapper\";\nimport Component from \"./Salediscountcontent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: theme.spacing(2),\n  },\n}));\nexport const Salediscount = withRouter((props) => {\n  const classes = useStyles();\n\n  const { data, loading, error } = useQuery(materialMaster.query);\n  if (loading)\n    return (\n      <div>\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <VoucherProvider\n      value={{\n        data,\n        mapper: materialMaster.mapper,\n        mappertype: \"voucherMaster\",\n      }}\n    >\n      <Component {...props} />\n    </VoucherProvider>\n  );\n});\nexport default Salediscount;\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport \"../../tmp.css\";\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  Switch,\n  FormControlLabel,\n  Grid,\n  TextField,\n  Typography,\n  colors,\n  Input,\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    paddingBottom: theme.spacing(2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    marginRight: theme.spacing(2),\n    // backgroundColor: colors.green[600],\n    // '&:hover': {\n    //   backgroundColor: colors.green[900]\n    // }\n  },\n}));\n\nconst EditContent = (props) => {\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    ...diamond,\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  function previewimage(url) {\n    // setpreviewurl(url)\n    // setShowpreview(true)\n  }\n  const handleInputChange = (type) => (e) => {\n    debugger;\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const toggleChecked = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\n  };\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {}, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            {props.title}\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          {attributes.map((columnname, index) => (\n            <>\n              {showpreview && (\n                <Lightbox\n                  class=\"fade\"\n                  mainSrc={previewurl}\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                  onCloseRequest={() => setShowpreview(false)}\n                  onMovePrevRequest={() => alert(\"prev\")}\n                  onMoveNextRequest={() => alert(\"next\")}\n                />\n              )}\n              <Grid container xs={12} spacing={2}>\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n                      label={columnname.label}\n                      disabled={columnname.type === 10}\n                    />\n                  </Grid>\n                ) : null}\n\n                {columnname.key == \"email\" && !diamond.isedit ? (\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n                      label={columnname.label}\n                      disabled={columnname.type === 10}\n                    />\n                  </Grid>\n                ) : null}\n                {columnname.type === 2 && (\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      label={columnname.key}\n                      labelPlacement=\"start\"\n                      control={\n                        <Switch\n                          checked={editcontent[columnname.key]}\n                          name=\"checkedB\"\n                          color=\"primary\"\n                          onChange={toggleChecked(columnname.key)}\n                        />\n                      }\n                    />\n                  </Grid>\n                )}\n                {columnname.type === 3 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      multiple\n                      id=\"combo-box-demo\"\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      margin=\"dense\"\n                      fullWidth\n                      value={editcontent[columnname.defaultkey]}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />\n                  </Grid>\n                )}\n\n                {columnname.type == 4 && (\n                  <Grid item xs={12}>\n                    <Typography> {diamond[columnname.key]}</Typography>\n                  </Grid>\n                )}\n\n                {columnname.type == 5 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id=\"combo-box-demo\"\n                      // options={props.masters[columnname.mastervaluekey]}\n                      margin=\"dense\"\n                      fullWidth\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      value={editcontent[columnname.defaultkey]}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 6 && (\n                  <Grid item xs={12}>\n                    <Button variant=\"outlined\" color=\"primary\">\n                      {columnname.controllabel}\n                    </Button>{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 9 && (\n                  <Grid container item xs={12}>\n                    <Grid item xs={12}>\n                      <AvatarGroup max={2}>\n                        {diamond[columnname.key]\n                          ? diamond[columnname.key]\n                              .split(\",\")\n                              .map((diamond, index) => (\n                                <Avatar\n                                  alt=\"Remy Sharp\"\n                                  src={diamond}\n                                  onClick={() => previewimage(diamond)}\n                                  className={classes.small}\n                                />\n                              ))\n                          : null}\n                      </AvatarGroup>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <FilePond\n                        style={{ height: \"100\", width: \"100\" }}\n                        oninit={() => handleInit()}\n                        labelIdle=\"Add Banner Image\"\n                        onaddfile={(error, fileItem) => {\n                          if (!error) {\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\n                          } else {\n                            // alert(row[columnname.key])\n                          }\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </>\n          ))}\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\n            Save\n          </Button>\n          <Button onClick={() => onClose()} variant=\"contained\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditContent.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  attributes: PropTypes.array,\n\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditContent;\n","import React, { useEffect, useContext, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  TaxList,\n  VENDORLISTS,\n  PRODUCTFILTERMASTER,\n  PRODUCTLISTSTATUSEDIT,\n} from \"../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport EditContent from \"./components/EditContent\";\nimport { Button, Switch, Grid, FormControlLabel } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport GrainIcon from \"@material-ui/icons/Grain\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"./tmp.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport moment from \"moment\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst Vendor = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [masterlist, setMasterlist] = React.useState(props.values);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editEmail, setEditEmail] = React.useState(false);\n  const [isadd, setIsadd] = React.useState(false);\n  const [isedit, setIsedit] = React.useState(false);\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const [aliasName, setaliasName] = React.useState(\"\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function addnewvendor() {\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\n    setaliasName(props.prefix + sort_id);\n\n    setEditcontent({\n      alias: aliasName,\n      ...editcontent,\n      isedit: false,\n    });\n    debugger;\n    console.log(editcontent);\n    // let masters = masterlist;\n    // masters.insert(0, []);\n\n    //setMasterlist(masters)\n    setIsadd(true);\n    setOpenedit(true);\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\n  }\n  Array.prototype.insert = function (index, item) {\n    this.splice(index, 0, item);\n  };\n  function Editvendor(vendordata) {\n    setEditEmail(true);\n    delete vendordata[\"action\"];\n\n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit: true,\n    });\n    setOpenedit(true);\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n  }\n  async function Savevendor(content) {\n    props.onCreate(content);\n    setIsadd(false);\n    setEditcontent(null);\n    setOpenedit(false);\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\n    // refetch()\n  }\n  function Cancelcreate() {\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function searrchcontent() {\n    props.onSearch(\n      editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\"\n    );\n  }\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n  function removeimage(imagename, keyvalue) {\n    let previmagenames = editcontent[keyvalue];\n    let newimages = [];\n    let previmages = previmagenames.split(\",\");\n    previmages.forEach((element) => {\n      if (element == imagename) {\n      } else {\n        newimages.push(element);\n      }\n    });\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\n  }\n  function CancelEdit(diamondData) {\n    if (isadd) {\n      let masters = masterlist;\n\n      masters.splice(0, 1);\n      setMasterlist(masterlist);\n    }\n    setIsadd(false);\n    setEditcontent({});\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleSearchChange = (type) => (e) => {\n    props.onSearch(e.target.value);\n  };\n  const handleChange = (type) => (event) => {\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl =\n      \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  useEffect(() => {\n    setMasterlist(props.values);\n  }, [props.values]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb.\");\n  }\n  function previewimage(url) {\n    setpreviewurl(url);\n    setShowpreview(true);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <>\n      {showpreview && (\n        <Lightbox\n          class=\"fade\"\n          mainSrc={previewurl}\n          // nextSrc={images[(photoIndex + 1) % images.length]}\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={() => setShowpreview(false)}\n          onMovePrevRequest={() => alert(\"prev\")}\n          onMoveNextRequest={() => alert(\"next\")}\n        />\n      )}\n      <Paper className={classes.root}>\n        <Grid\n          container\n          item\n          xs={12}\n          style={{ padding: \"16px\" }}\n          sm={12}\n          alignItems={\"flex-end\"}\n        >\n          <Grid fullwidth item xs={3} sm={3}>\n            <Typography component=\"h6\" variant=\"h6\">\n              {props.title}\n            </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\n            <Grid fullwidth item xs={9} sm={9}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                autoComplete=\"off\"\n                id=\"vendordeliverydays\"\n                name=\"vendordeliverydays\"\n                //  /  value={editcontent.searchcontent}\n                onChange={handleInputChange(\"searchcontent\")}\n                label=\"Search text\"\n              />\n            </Grid>\n            <Grid fullwidth item xs={3} sm={3}>\n              <Button\n                variant=\"contained\"\n                onClick={() => searrchcontent()}\n                color=\"primary\"\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            {props.button_title ? (\n              <Button\n                variant=\"contained\"\n                onClick={() => addnewvendor()}\n                color=\"primary\"\n              >\n                {props.button_title}\n              </Button>\n            ) : null}\n          </Grid>\n        </Grid>\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            border={1}\n            borderColor={\"#ddd\"}\n            size=\"small\"\n            stickyHeader\n          >\n            {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n            <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            <TableBody>\n              {masterlist.map((row, index) => (\n                <>\n                  <TableRow>\n                    {props.columns.map((columnname, index) => (\n                      <>\n                        {columnname.key === \"action\" ? (\n                          <TableCell align=\"center\" style={{ width: 20 }}>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <>\n                                <Button onClick={(e) => Savevendor()}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </>\n                            ) : (\n                              <Button onClick={(e) => Editvendor(row)}>\n                                <EditIcon />\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell align=\"left\">\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    onChange={handleChange(columnname.key)}\n                                    checked={editcontent[columnname.key]}\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button variant=\"outlined\" color=\"primary\">\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n                                {columnname.type == 3 ? (\n                                  <Autocomplete\n                                    multiple\n                                    id=\"combo-box-demo\"\n                                    options={\n                                      columnname.mastervaluekey\n                                        ? props.masters[\n                                            columnname.mastervaluekey\n                                          ]\n                                        : props.masters\n                                    }\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[columnname.defaultkey]}\n                                    onChange={handleoptionChange(\n                                      columnname.defaultkey\n                                    )}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label={columnname.label}\n                                        variant=\"outlined\"\n                                      />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 9 ? (\n                                  <>\n                                    <FilePond\n                                      oninit={() => handleInit()}\n                                      labelIdle=\"Add Banner Image\"\n                                      onaddfile={(error, fileItem) => {\n                                        if (!error) {\n                                          uploadimagetoserver(\n                                            fileItem,\n                                            columnname.key,\n                                            \"add\"\n                                          );\n                                        } else {\n                                          // alert(row[columnname.key])\n                                        }\n                                      }}\n                                    />\n                                    <div className={classes.imagecontainer}>\n                                      {editcontent[columnname.key]\n                                        ? editcontent[columnname.key]\n                                            .split(\",\")\n                                            .map((row, index) => (\n                                              <Badge\n                                                overlap=\"circle\"\n                                                anchorOrigin={{\n                                                  vertical: \"top\",\n                                                  horizontal: \"right\",\n                                                }}\n                                                badgeContent={\n                                                  <HighlightOffIcon\n                                                    fontSize=\"small\"\n                                                    onClick={() =>\n                                                      removeimage(\n                                                        row,\n                                                        columnname.key\n                                                      )\n                                                    }\n                                                  />\n                                                }\n                                              >\n                                                <Avatar\n                                                  alt=\"Remy Sharp\"\n                                                  src={row}\n                                                  className={classes.small}\n                                                />\n                                              </Badge>\n                                            ))\n                                        : null}\n                                    </div>\n                                  </>\n                                ) : null}\n                                {columnname.type == 5 ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={\n                                      props.masters[columnname.mastervaluekey]\n                                    }\n                                    margin=\"dense\"\n                                    fullWidth\n                                    options={\n                                      columnname.mastervaluekey\n                                        ? props.masters[\n                                            columnname.mastervaluekey\n                                          ]\n                                        : props.masters\n                                    }\n                                    onChange={handleoptionChange(\n                                      columnname.defaultkey\n                                    )}\n                                    value={editcontent[columnname.defaultkey]}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label={columnname.label}\n                                        variant=\"outlined\"\n                                      />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 4 ? (\n                                  <Typography>\n                                    {\" \"}\n                                    {row[columnname.key]}\n                                  </Typography>\n                                ) : null}\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {!columnname.type || columnname.type == 1 ? (\n                                  <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    id={columnname.key}\n                                    name={columnname.key}\n                                    value={editcontent[columnname.key]}\n                                    onChange={handleInputChange(columnname.key)}\n                                    label={columnname.label}\n                                  />\n                                ) : null}{\" \"}\n                              </TableCell>\n                            ) : (\n                              <TableCell>\n                                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n\n                                {columnname.type === 9 ? (\n                                  <AvatarGroup max={2}>\n                                    {row[columnname.key]\n                                      ? row[columnname.key]\n                                          .split(\",\")\n                                          .map((row, index) => (\n                                            <Avatar\n                                              alt=\"Remy Sharp\"\n                                              src={row}\n                                              onClick={() => previewimage(row)}\n                                              className={classes.small}\n                                            />\n                                          ))\n                                      : null}{\" \"}\n                                    {/* className={classes.small} />)) : null } */}\n                                  </AvatarGroup>\n                                ) : null}\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    onChange={handleInputChange(columnname.key)}\n                                    checked={row[columnname.key]}\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type != 2 &&\n                                columnname.type != 6 &&\n                                columnname.type != 8 &&\n                                columnname.type != 9 ? (\n                                  <Typography>\n                                    {\" \"}\n                                    {row[columnname.key]}\n                                  </Typography>\n                                ) : null}\n                              </TableCell>\n                            )}\n                          </>\n                        )}\n                      </>\n                    ))}\n                  </TableRow>\n                </>\n              ))}\n\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[50, 100, 200, 500]}\n                  count={[props.values.length]}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { \"aria-label\": \"rows per page\" },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  // ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n          {editcontent && (\n            <EditContent\n              diamond={editcontent}\n              attributes={props.columns}\n              title={props.title}\n              masters={props.masters}\n              onApply={Savevendor}\n              onClose={handleApplicationClose}\n              open={openedit}\n              prefix={aliasName}\n              editemail={editEmail}\n            />\n          )}\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolbar: {\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  deleteIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Header = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Orders\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Order #{order.id}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {/* <Button\n            className={classes.deleteButton}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.deleteIcon} />\n            Delete\n          </Button> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nimport {\n  PAYMENTSTATUSMASTER,\n  PRODUCTDIAMONDTYPES,\n} from \"../../../../graphql/query\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TextField,\n  Link,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ReceiptIcon from \"@material-ui/icons/ReceiptOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0,\n  },\n  actions: {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    \"& > * + *\": {\n      marginLeft: 0,\n    },\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst OrderInfo = (props) => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const options = [\"Canceled\", \"Completed\", \"Rejected\"];\n\n  const [option, setOption] = useState(options[0]);\n  const [paymentstatus, setPaymentstatus] = useState([]);\n  const [orderstatus, setOrderstatus] = useState([]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setOption(event.target.value);\n  };\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\n      })\n      .catch(console.error);\n  }\n  React.useEffect(() => {\n    getmaster();\n  }, []);\n  debugger;\n  console.log(props);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Customer</TableCell>\n              <TableCell>\n                <Link\n                  target=\"_blank\"\n                  component={RouterLink}\n                  to={`/customerdetails/${order.user_profile.id}`}\n                >\n                  {order.user_profile.first_name} {order.user_profile.last_name}\n                </Link>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline1\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline2\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].city\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].state\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].country\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email ID</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.cart_addresses\n                    ? order.shopping_cart.cart_addresses.length > 0\n                      ? order.shopping_cart.cart_addresses[0].contact_number\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Mobile Number</TableCell>\n              <TableCell>{order.user_profile.email}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Amount</TableCell>\n              <TableCell>\n                {order.currency}\n                {order.shopping_cart.discounted_price}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Waybil Number</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Waybill Number\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Gift Message</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.giftwraps\n                    ? order.shopping_cart.giftwraps.length > 0\n                      ? order.shopping_cart.giftwraps[0].message\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Mode</TableCell>\n              <TableCell>{order.payment_mode}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {paymentstatus.map((option) => (\n                    <option key={option.name} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Order Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {orderstatus.map((option) => (\n                    <option key={option.id} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Comments</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Comments\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant=\"contained\" color=\"primary\">\n          {/* <EditIcon className={classes.buttonIcon} /> */}\n          Save\n        </Button>\n        {/* <Button>\n          <ReceiptIcon className={classes.buttonIcon} />\n          Resend invoice\n        </Button> */}\n      </CardActions>\n    </Card>\n  );\n};\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired,\n};\n\nexport default OrderInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  }\n}));\n\nconst OrderItems = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Sku</TableCell>\n                  <TableCell>Product Image</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Amount</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {order.shopping_cart.shopping_cart_items.map(item => (\n                  <TableRow key={item.id}>\n                     <TableCell>\n                      {item.product_sku}\n                    </TableCell>\n                    <TableCell>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </TableCell>\n                    <TableCell>\n                      {item.qty}\n                    </TableCell>\n                    <TableCell>{item.price}</TableCell>\n                    \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderItems;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  CardContent,\n  Grid,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  inner_card: {\n    padding: \"10px\",\n    marginBottom: \"16px\",\n  },\n  image_container: {\n    padding: \"16px\",\n  },\n  product_image: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n  },\n  text_heading: {\n    // fontWeight: \"400\",\n    margin: \"8px 0px\",\n  },\n  text_content: {\n    margin: \"8px 0px\",\n  },\n  final_total_text: {\n    textAlign: \"right\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n  },\n}));\nconst OrderDetails = (props) => {\n  const { order, className, ...rest } = props;\n  console.log(order, \"samir\");\n  const classes = useStyles();\n  return (\n    <div style={{ marginTop: 30 }}>\n      <Card>\n        <CardHeader title=\"Order Details\" />\n        <Divider />\n\n        <CardContent>\n          {order.shopping_cart.shopping_cart_items.map((item) => (\n            <Card key={item.id} className={classes.inner_card}>\n              <Grid container xs={12}>\n                {/*-------------------------------- Image part-------------------------------- */}\n                <Grid\n                  container\n                  xs={12}\n                  md={3}\n                  className={classes.image_container}\n                >\n                  <img\n                    src=\"\"\n                    alt=\"Product Image\"\n                    className={classes.product_image}\n                  />\n                </Grid>\n                <Grid container xs={12} md={9}>\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Product Code</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.product_sku}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Metal</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}\n                      </p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.trans_sku_list.sku_weight}\n                      </p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Diamond Quality</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.trans_sku_list.diamond_type}{\" \"}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>\n                        Diamond Weight (Ct)\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> ? </p>\n                    </Grid>\n                  </Grid>\n                  {/* ----------------------------------------------------------------- */}\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Quantity</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.qty} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.discount_price)}`}{\" \"}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Saved</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(\n                          item.trans_sku_list.discount_price -\n                            item.trans_sku_list.markup_price\n                        )} (${\n                          item.trans_sku_list.discount === null\n                            ? \"0\"\n                            : item.trans_sku_list.discount\n                        }%off)`}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Shipping</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> Free </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Grand Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.markup_price)}`}\n                      </p>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Card>\n          ))}\n          <Grid>\n            <p className={classes.final_total_text}>\n              Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;\n            </p>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\nexport default OrderDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport uuid from \"uuid/v1\";\nimport moment from \"moment\";\nimport Page from \"../../components/Page\";\nimport { Header, OrderInfo, OrderItems } from \"./components\";\nimport { withRouter } from \"react-router-dom\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  container: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const OrderManagementDetails = withRouter((props) => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(null);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  async function fetchorderdetails(order_id) {\n    let response = await sendNetworkRequest(\n      \"/getorderdetails\",\n      {},\n      { order_id }\n    );\n    console.log(response);\n    setOrder(response.orders);\n  }\n  useEffect(() => {\n    let mounted = true;\n    var com_id = props.location.pathname.split(\"/\")[2];\n    const fetchOrder = () => {\n      setOrder({\n        id: uuid(),\n        ref: \"FAD107\",\n        promoCode: null,\n        value: \"55.25\",\n        currency: \"$\",\n        status: \"canceled\",\n        customer: {\n          name: \"Ekaterina Tankova\",\n          address: \"Street King William, 42456\",\n          city: \"Montgomery\",\n          country: \"United States\",\n        },\n        items: [\n          {\n            id: uuid(),\n            name: \"Project Points\",\n            cuantity: 25,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"50.25\",\n            currency: \"$\",\n          },\n          {\n            id: uuid(),\n            name: \"Freelancer Subscription\",\n            cuantity: 1,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"5.00\",\n            currency: \"$\",\n          },\n        ],\n        created_at: moment(),\n      });\n    };\n\n    // fetchOrder();\n    fetchorderdetails(com_id);\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Order Management Details\">\n      <Header order={order} />\n      <Grid className={classes.container} container spacing={3}>\n        <Grid item md={4} xl={3} xs={12}>\n          <OrderInfo order={order} />\n        </Grid>\n        <Grid item md={8} xl={9} xs={12}>\n          <OrderItems order={order} />\n          <OrderDetails order={order} style={{ marginTop: 30 }} />\n        </Grid>\n      </Grid>\n    </Page>\n  );\n});\n\nexport default OrderManagementDetails;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n      alert(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.priority && x.priority == taxcontent ||\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\n\n\n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  // element.email &&  element.email.match(searchtext+'.*')  || \n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \n  //     element.username && element.username.match(searchtext+'.*')\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addtaxattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\nimport Attributescontent from './Attributescontent/Attributescontent';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n     <Attributescontent title= {\"Shipment Settings II\"} \n        masters={[]}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Mastercategories = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    alert(JSON.stringify(taxcontent));\n    // let response = await sendNetworkRequest(\n    //   \"/managecategories\",\n    //   {},\n    //   taxcontent\n    // );\n    // getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          prefix={data.prefix}\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Mastercategories;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n\n    //getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n\n    getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":2  ,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport data from \"./data.json\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./Configuration.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n}));\nexport const Userconfiguration = withRouter((props) => {\n  const master_options = [\n    \"Attribute Master\",\n    \"Categories\",\n    \"ProductTypes\",\n    \"Materials\",\n    \"Metal Colours\",\n    \"Metal Purities\",\n    \"Collections\",\n    \"Occassions\",\n    \"Styles\",\n    \"Themes\",\n    \"Designs\",\n    \"Weights\",\n    \"Diamond Types\",\n    \"Diamond Settings\",\n    \"Diamond Shapes\",\n    \"Earring Backings\",\n    \"Gemstone Settings\",\n    \"Gemstone Shapes\",\n    \"Gemstone Types\",\n    \"Stones\",\n    \"Stone Colours\",\n    \"Stone Shapes\",\n    \"Gender\",\n    \"SEO Priorities\",\n    \"Tax Settings 1\",\n    \"Tax Settings 2\",\n    \"Payment Status\",\n    \"Order Status\",\n    \"Shipping Zones\",\n    \"Shipment Setting I\",\n    \"Shipment Setting II\",\n  ];\n  const master_options_url = [\n    \"masterattributes\",\n    \"categories\",\n    \"producttypes\",\n    \"materialmaster\",\n    \"mastercolors\",\n    \"masterpurities\",\n    \"collections\",\n    \"masteroccassions\",\n    \"masterstyles\",\n    \"masterthemes\",\n    \"designs\",\n    \"weights\",\n    \"diamonds\",\n    \"diamondsettings\",\n    \"diamondshapes\",\n    \"earringbacking\",\n    \"gemstonesettings\",\n    \"gemstoneshapes\",\n    \"gemstonetypes\",\n    \"masterstones\",\n    \"masterstonecolors\",\n    \"masterstoneshapes\",\n    \"genders\",\n    \"seopriority\",\n    \"Taxsetup\",\n    \"taxsettings\",\n    \"paymentstatus\",\n    \"orderstatus\",\n    \"zones\",\n    \"shipmensettings\",\n    \"shippingattributes\",\n  ];\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => {\n    setRaised(true);\n  };\n  const onMouseOut = () => {\n    setRaised(false);\n    // setCardindex(-1)\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          User and Roles Management\n        </Typography>\n      </Grid>\n\n      {data.options.map((menu, index) => (\n        <Grid item xs={6} sm={4} lg={3}>\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\n            <Card fullwidth className=\"card2\">\n              <CardContent>\n                <Typography\n                  style={{ textAlign: \"center\", marginTop: 8 }}\n                  component=\"h6\"\n                  variant=\"h5\"\n                >\n                  {menu.title}\n                </Typography>\n\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n              </CardContent>\n            </Card>\n          </Link>\n        </Grid>\n      ))}\n    </Grid>\n  );\n});\n\nexport default Userconfiguration;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\nimport Addpermissions from \"../../components/Addpermissions/Addpermissions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Masterroles = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false);\n  const [masterpages, setMasterpages] = React.useState([]);\n  const [editroleid, setEditroleid] = React.useState(\"\");\n  const [editpermissons, setEditpermissions] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    let response = await sendNetworkRequest(\"/manageroles\", {}, taxcontent);\n    getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes);\n      })\n      .catch(console.error);\n\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\n    setMastervalue(response.roles);\n    setFiltervalue(response.roles);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n  async function showpermissions(rowcontent) {\n    let response = await sendNetworkRequest(\n      \"/getrolepermissions\",\n      {},\n      { role_id: rowcontent.id }\n    );\n    setEditpermissions(response.permissions);\n    setEditroleid(rowcontent.id);\n    setIsshowpermissions(true);\n    // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent) {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id: editroleid,\n    };\n    console.log(JSON.stringify(bodydata));\n    setIsshowpermissions(false);\n    let response = await sendNetworkRequest(\"/managepermissions\", {}, bodydata);\n    getmaster();\n  }\n  function cancelpermissions(rowcontent) {\n    setIsshowpermissions(false);\n    // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs\n          url=\"userconfiguration\"\n          name=\"User Configuration\"\n        ></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? (\n          <Addpermissions\n            role_id={editroleid}\n            isopen={isshowpermissions}\n            permissions={editpermissons}\n            pages={masterpages}\n            onClose={cancelpermissions}\n            onSave={updatepermissions}\n          />\n        ) : null}\n        <Mastercontent\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onPermissionadd={showpermissions}\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Masterroles;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Masterscreens = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    let response = await sendNetworkRequest(\"/managepages\", {}, taxcontent);\n    getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes);\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs\n          url=\"userconfiguration\"\n          name=\"User Configuration\"\n        ></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          title={\"Master Screens\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Masterscreens;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Manageadminusers = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n  const [masterroles, setMasterroles] = React.useState([]);\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    let roles = [];\n    taxcontent.roles.forEach((element) => {\n      roles.push(element.name);\n    });\n    let bodydata = {\n      username: taxcontent.username,\n      password: \"123456789\",\n      email: taxcontent.email,\n      roles: roles,\n    };\n\n    let response = await sendNetworkRequest(\"/api/auth/signup\", {}, bodydata);\n    getmaster();\n  }\n  async function getmasterroles() {\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\n\n    setMasterroles(response.roles);\n\n    getmaster();\n  }\n  async function getmaster() {\n    let response = await sendNetworkRequest(\"/getadminusers\", {}, {});\n    let adminusers = response.users;\n    let users = [];\n    adminusers.forEach((element) => {\n      let userobj = {};\n      userobj[\"id\"] = element.id;\n      userobj[\"username\"] = element.username;\n      userobj[\"password\"] = element.password;\n      userobj[\"email\"] = element.email;\n      userobj[\"mobile\"] = element.mobile;\n      userobj[\"status\"] = element.status === \"Active\" ? true : false;\n      let roles = [];\n      let rolesnames = [];\n\n      let userroles = element.user_roles;\n      userroles.forEach((userroleobj) => {\n        let roleobj = {};\n        roleobj[\"id\"] = userroleobj.master_role.id;\n        roleobj[\"name\"] = userroleobj.master_role.name;\n        roles.push(roleobj);\n        rolesnames.push(userroleobj.master_role.name);\n      });\n      userobj[\"roles\"] = roles;\n      userobj[\"rolenames\"] = rolesnames.join(\" , \");\n      users.push(userobj);\n    });\n\n    setFiltervalue(users);\n    setMastervalue(users);\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs\n          url=\"userconfiguration\"\n          name=\"User Configuration\"\n        ></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          title={\"Admin Users\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          masters={masterroles}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Manageadminusers;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState({\n    cost_price : '',\n    selling_price : ''\n  })\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\n  const [defaultmetal, setDefaultmetal] = React.useState({})\n  const [pricetype, setPricetype] = React.useState({})\n\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n  const [materials, setMaterials] = React.useState([])\n  \n  const [masterpurities, setMasterpurities] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      costprices : purityprices,\n      sellingprices : puritysellingprices,\n      vendors : selectedvendors,\n      metal : defaultmetal,\n      pricetype : pricetype\n    }\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n     alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n          selectedvendors.push(vendorobj.shortCode)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   let vendorid = []\n   value.forEach(element => {\n    if(element.shortCode == 'All')\n    {\n      mastervendors.forEach(element => {\n        vendorid.push(element.shortCode)\n      })\n      setSelectedvendors(vendorid)\n    }else{\n      vendorid.push(element.shortCode)\n      setSelectedvendors(vendorid)\n\n    }\n   })\n  }\n  const handlepricetypeChange = (event, value) => {\n    setPricetype(value)\n  }\n  const handlemetalChange = type => (event, value) => {\n    // setEditcontent({ ...editcontent, [type]: value  })\n    //alert(JSON.stringify(value))\n    if(value)\n    { \n    if(value.shortCode === 'G')\n    {\n      setIspricecalculated(false)\n    }else\n    {\n      setIspricecalculated(true)\n    }\n    if(data[value.name])\n    {\n      setDefaultpurity(data[value.name])\n\n    }\n  }else\n  {\n    setIspricecalculated(false)\n\n  }\n    setDefaultmetal(value)\n   //setDefaultpurity(value)\n   }\n  const handleInputChange = type => event => {\n   // setGoldprice(event.target.value);\n   //alert(JSON.stringify(goldprice))\n   if(defaultmetal.name === 'Gold')\n    {\n    }else\n    {\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\n      if(type === 'cost_price')\n      {\n        setPurityprices(sellingpricejson)\n\n      }\n      if(type === 'selling_price')\n      {\n        setPuritysellingprices(sellingpricejson)\n\n      }\n    }\n    setGoldprice({...goldprice,[type]: event.target.value })\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    setPurityprices({...purityprices,[type]:event.target.value});\n\n    \n  }\n  const handlesellingPriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    \n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    if(defaultmetal.name === 'Gold')\n    {\n       let default_purity = parseInt()\n     let pricejson = {}\n     let sellingpricejson = {}\n    data.goldpurity.forEach(element => {\n      var sellingprice = goldprice.selling_price\n      if(pricetype.value == 2) \n      {\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\n       \n      }\n      let priceratio = element.shortCode / defaultpurity.shortCode;\n\n      let goldprice_val = priceratio*goldprice.cost_price\n      let goldsellingprice_val = priceratio*sellingprice\n      sellingpricejson[element.shortCode] = goldsellingprice_val\n\n      pricejson[element.shortCode] = goldprice_val\n    })\n    setPuritysellingprices(sellingpricejson)\n    setPurityprices(pricejson)\n    }else{\n      let pricejson = {}\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\n\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\n      setPuritysellingprices(sellingpricejson)\n      setPurityprices(pricejson)\n    }\n\n    \n     setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={materials}\n                  margin=\"dense\"\n                  fullWidth\n                  disableClearable={true}\n                 value={defaultmetal}\n                   onChange={handlemetalChange(\"material\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\n                /> \n\n                \n\n\n\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.cost_price}\n                             onChange={handleInputChange(\"cost_price\")}\n                            label=\"Cost Price\"\n                          />\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.pricetype}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                 value={pricetype}\n                  onChange={handlepricetypeChange}\n                  getOptionLabel={(option) => option.label}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\n                /> \n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.selling_price}\n                             onChange={handleInputChange(\"selling_price\")}\n                            label=\"Selling Price\"\n                          />\n              \n             {defaultpurity.name ?  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masterpurities}\n                  margin=\"dense\"\n                  fullWidth\n                  disabled\n                  style={{marginLeft: 16, width:200}}\n                  value={defaultpurity}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\n                  variant=\"outlined\" />}\n                />  : null }\n                {defaultmetal.name == 'Gold' ? \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button> : null}\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\n          {data.goldpurity.map((purityname, index) =>(\n           \n           <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.shortCode]}\n                      onChange={handlePriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n                    <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     style={{marginLeft: 16}}\n\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={puritysellingprices[purityname.shortCode]}\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))} </>:null }\n          <Grid item xs={12} sm={6} lg={3} >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={mastervendors}\n                    multiple\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\n                /> \n        </Grid>\n          </> : null}\n          \n         </Grid>\n         <Grid item  >\n\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n            </Grid>\n      </CardContent>\n      </Card>\n\n{/* \n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n    */}\n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const [filtercontent,setFiltercontent] = React.useState({\n    \"seacrchtext\" : props.fitltercontent.searchtext,\n    \"size\": props.fitltercontent.size,\n    \"offset\":props.fitltercontent.offset\n  })\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n   // alert(editcontent.searchcontent)\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\n\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    props.onPagechange((newPage*rowsPerPage))\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n   \n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    props.onPagesizechange(parseInt(event.target.value, 10))\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {row[columnname.key]} \n                                       </Moment>:null } \n                                       {columnname.type == 8 ?  <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/customerdetails/'+row['id']}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>:null }                 \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.totalcount]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from './Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const [totalcount, setTotalcount] = React.useState(0)\n\n  const [bodycontent, setBodycontent] = React.useState({\n    \"seacrchtext\" : '',\n    \"size\": 50,\n    \"offset\":0\n  })\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster(50,0)\n  }\n  function changeresult(filtercontent)\n  {\n    setBodycontent(filtercontent)\n  }\n  async function getmaster(size,offset,searchtext)\n  {\n   \n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\n    let adminusers = response.users.rows;\n    let users = []\n    setTotalcount(response.users.count)\n    adminusers.forEach(element => {\n      //   let userobj = {}\n      //   userobj['id'] = element.id;\n      //  // userobj['username'] = element.username;\n      //  // userobj['password'] = element.password;\n      //   userobj['email'] = element.email;\n      //   userobj['mobile'] = element.mobile;\n      //   userobj['status'] = element.status === 'Active' ? true : false;\n      //   let roles = []\n      //   let rolesnames = []\n\n      //   let userroles = element.user_roles;\n      //   userroles.forEach(userroleobj => {\n\n      //     let roleobj = {}\n      //     roleobj['id'] = userroleobj.master_role.id\n      //     roleobj['name'] = userroleobj.master_role.name\n      //     roles.push(roleobj)\n      //     rolesnames.push(userroleobj.master_role.name)\n      //   })\n      //   userobj['roles'] = roles\n      //   userobj['rolenames'] = rolesnames.join(' , ')\n        if(element.orders)\n        {\n          element['orders'] = element.orders.length\n        }else{\n          element['orders'] = 0\n        }\n        users.push(element)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    //setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\n  }\n  async function changepageoffset(taxcontent)\n  {\n    setBodycontent({...bodycontent,offset: taxcontent})\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\n  }\n  async function changepagesize(taxcontent)\n  {\n    setBodycontent({...bodycontent,size: taxcontent})\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Page from '../../components/Page/Page'\nimport { Header } from './components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\nexport const CustomerManagementDetails = withRouter(props => {\n\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    //return <Redirect to={`/customerdetails`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n   // return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <Page\n    //   className={classes.root}\n    //   title=\"Customer Management Details\"\n    // >\n    //   <Header />\n    //    <Tabs\n    //     className={classes.tabs}\n    //     onChange={handleTabsChange}\n    //     scrollButtons=\"auto\"\n    //     value={tab}\n    //     variant=\"scrollable\"\n    //   >\n    //     {tabs.map(tab => (\n    //       <Tab\n    //         key={tab.value}\n    //         label={tab.label}\n    //         value={tab.value}\n    //       />\n    //     ))}\n    //   </Tabs>\n    //   <Divider className={classes.divider} />\n    //  {/* <div className={classes.content}>\n    //     {tab === 'summary' && <Summary />}\n    //     {tab === 'invoices' && <Invoices />}\n    //     {tab === 'logs' && <Logs />}\n    //   </div> */}\n    // </Page>\n  );\n});\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n      //     setInvoices(response.data.invoices);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst General = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer ? customer.email : \"\"}\n                {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.isemailverified\n                      ? 'Email verified'\n                      : 'Email not verified'} \n                  </Label>\n                </div>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Phone</TableCell>\n               <TableCell>{customer.mobile}\n               {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.ismobileverified\n                      ? 'Mobile verified'\n                      : 'Mobile not verified'} \n                  </Label>\n                </div>}\n                </TableCell>\n            </TableRow>\n            \n          </TableBody>\n        </Table>\n      </CardContent>\n      {/* <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions> */}\n      {/* <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      /> */}\n    </Card>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default General;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from \"react-router-dom\";\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport {General, Results} from './components'\nimport Mastercontent from '../../components/Mastercontent'\nimport data from './data.json'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    height: '80vh'\n  },\n  tabs: {\n    minWidth: '250px',\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    marginRight : theme.spacing(2),\n    borderRight: `2px solid ${theme.palette.divider}`,\n  },\n}));\nconst master_options = ['Address Book','Wish List','Orders']\n  const master_options_url = ['/address','/userwishlist','/orderlist']\n\nexport const Customerdetails = withRouter(props => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [value, setValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({});\n  const [customer, setCustomer] = React.useState({});\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    // history.push(`orderlist/${id}`)\n    window.location.href = `orderlist/${id}`\n  }\n  let user_id = props.location.pathname.split('/')[2];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\nasync function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n\n    setCustomer(response.userprofile)\n  }\n  React.useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid> */}\n    <Grid container item xs={12} sm={12} lg={12} >\n    <Grid  item xs={12} sm={6} lg={6} >\n    <General customer ={customer} /> \n\n      </Grid>\n\n    </Grid>\n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={2} lg={2} >\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\n     <Card fullwidth\n    //  onClick={(e) => ProductEdit(customer.id)}\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <div className={classes.root}>\n      \n    //   <Tabs\n    //     orientation=\"vertical\"\n    //     variant=\"standard\"\n    //     value={value}\n    //     onChange={handleChange}\n    //     aria-label=\"Vertical tabs example\"\n    //     className={classes.tabs}\n    //   >\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\n \n    //   </Tabs>\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\n    //   <General customer ={customer} /> </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\n\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\n      \n    //   </TabPanel>\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\n    //   </TabPanel>\n      \n     \n    // </div>\n  );\n});\n\nexport default Customerdetails;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Userwishlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Userwishlist;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Useraddresses = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Useraddresses;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.hsnNumber}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Tax Settings\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addtaxattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n    let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\n    //  getmaster()\n     history.push('/taxsettings')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TAXMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n\n            var selectedcategory = []\n            \n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories)\n              {\n                if(categories.indexOf(catobj.alias) > -1)\n                {\n                  selectedcategory.push(catobj)\n                }\n              }\n              \n\n            })\n\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addtaxattributes;","import gql from \"graphql-tag\";\n\nlet CREATE_HOLIDAY = gql`\n  mutation ($item: HolidayManagerInput!) {\n    createHolidayManager(input: { holidayManager: $item }) {\n      holidayManager {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_HOLIDAY = gql`\n  mutation ($id: Int!, $item: HolidayManagerPatch!) {\n    updateHolidayManagerById(input: { id: $id, holidayManagerPatch: $item }) {\n      holidayManager {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_HOLIDAY = gql`\n  mutation ($id: Int!) {\n    deleteHolidayManagerById(input: { id: $id }) {\n      clientMutationId\n    }\n  }\n`;\n\nlet CREATE_WAREHOUSE = gql`\n  mutation ($item: WarehouseInput!) {\n    createWarehouse(input: { warehouse: $item }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_WAREHOUSE = gql`\n  mutation ($id: Int!, $item: WarehousePatch!) {\n    updateWarehouseById(input: { id: $id, warehousePatch: $item }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_WAREHOUSE = gql`\n  mutation ($id: Int!) {\n    deleteWarehouseById(input: { id: $id }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet CREATE_INVENTORY = gql`\n  mutation ($item: InventoryInput!) {\n    createInventory(input: { inventory: $item }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_INVENTORY = gql`\n  mutation ($id: UUID!, $item: InventoryPatch!) {\n    updateInventoryById(input: { id: $id, inventoryPatch: $item }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_INVENTORY = gql`\n  mutation ($id: UUID!) {\n    deleteInventoryById(input: { id: $id }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nexport {\n  CREATE_HOLIDAY,\n  UPDATE_HOLIDAY,\n  DELETE_HOLIDAY,\n  CREATE_WAREHOUSE,\n  UPDATE_WAREHOUSE,\n  DELETE_WAREHOUSE,\n  CREATE_INVENTORY,\n  UPDATE_INVENTORY,\n  DELETE_INVENTORY,\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst HolidayModal = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Holiday-Modal\"}\n    >\n      <DialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{`${props.type} Holiday`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              label={\"Holiday\"}\n              name=\"holiday\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.holiday}\n              onChange={props.editItem}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                className={classes.inputField}\n                label={\"Date\"}\n                name=\"date\"\n                fullWidth\n                inputVariant=\"outlined\"\n                value={props.item.date}\n                onChange={(_, value) => props.editItem(value, \"date\")}\n                format={\"yyyy-MM-dd\"}\n              />\n            </MuiPickersUtilsProvider>\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default HolidayModal;\n","import React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  LinearProgress,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_HOLIDAY,\n  DELETE_HOLIDAY,\n  UPDATE_HOLIDAY,\n} from \"../../graphql/mutation\";\nimport { HOLIDAYLIST } from \"../../graphql/query\";\nimport HolidayModal from \"./HolidayModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../config\";\nimport { NetworkStatus } from \"apollo-client\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport const HolidayManager = (props) => {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const { loading, data, error, refetch, networkStatus } = useQuery(\n    HOLIDAYLIST,\n    {\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\n    }\n  );\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({ holiday: \"\", date: null });\n\n  const editItem = (event, type) => {\n    var name, value;\n    if (type == \"date\") {\n      name = type;\n      value = event;\n    } else {\n      name = event.target.name;\n      value = event.target.value;\n    }\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n    setItem({ holiday: \"\", date: null });\n  };\n\n  const handleSave = () => {\n    if (type == \"Edit\") {\n      var id = item.id;\n      delete item.id;\n      delete item.createdAt;\n      delete item.updatedAt;\n      delete item.__typename;\n      item[\"updatedAt\"] = new Date();\n      client\n        .mutate({\n          mutation: UPDATE_HOLIDAY,\n          variables: {\n            id,\n            item,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_HOLIDAY,\n          variables: {\n            item,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Delete\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: DELETE_HOLIDAY,\n          variables: {\n            id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n\n  const handleUpload = (file) => {\n    var bodyFormData = new FormData();\n    bodyFormData.set(\"file\", file);\n    // console.log(file);\n    axios\n      .post(API_URL + \"/addholidays\", bodyFormData)\n      .then((res) => {\n        if (res) {\n          snack.setSnack({\n            open: true,\n            msg: \"Successfully added holidays!\",\n          });\n          refetch();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured!\",\n        });\n      });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={12}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Holiday Manager</Typography>\n\n        <input\n          accept=\".csv\"\n          className={classes.input}\n          id=\"icon-button-file\"\n          type=\"file\"\n          onChange={(event) => {\n            const files = event.target.files;\n            if (files) {\n              handleUpload(files[0]);\n            }\n          }}\n        />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n          >\n            <Tooltip title=\"Upload Holidays\">\n              <CloudUploadIcon />\n            </Tooltip>\n          </IconButton>\n        </label>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            var a = document.createElement(\"a\");\n            a.href = \"/sample/holidays.csv\";\n            a.setAttribute(\"download\", \"holidays.csv\");\n            a.click();\n          }}\n        >\n          <Tooltip title=\"Download sample file\">\n            <GetAppIcon />\n          </Tooltip>\n        </IconButton>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n          }}\n        >\n          <Tooltip title=\"Add Holiday\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Holiday</TableCell>\n                <TableCell align={\"center\"}>Date</TableCell>\n                <TableCell align={\"center\"}>Created On</TableCell>\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(loading || NetworkStatus.refetch === networkStatus) && (\n                <TableRow>\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={5} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allHolidayManagers?.nodes.length == 0 && (\n                <TableRow>\n                  <TableCell colSpan={5} align={\"center\"}>\n                    <Typography>No Holidays found!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allHolidayManagers?.nodes.length > 0 &&\n                data?.allHolidayManagers?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.holiday}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.date, \"YYYY-MM-DD\").format(\"MMM DD,YYYY\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  colSpan={5}\n                  align={\"right\"}\n                  rowsPerPageOptions={[10, 25, 100]}\n                  count={data?.allHolidayManagers?.totalCount}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <HolidayModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst WarehouseModal = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Warehouse-Modal\"}\n    >\n      <DialogTitle\n        id=\"Warehouse-Modal\"\n        disableTypography\n        className={classes.root}\n      >\n        <Typography variant=\"h6\">{`${props.type} Warehouse`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              label={\"Name\"}\n              name=\"name\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.name}\n              onChange={props.editItem}\n            />\n            <TextField\n              className={classes.inputField}\n              label={\"Shipping In Days\"}\n              name=\"shippingInDays\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.shippingInDays}\n              onChange={props.editItem}\n            />\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default WarehouseModal;\n","import React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  Switch,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_WAREHOUSE,\n  DELETE_WAREHOUSE,\n  UPDATE_WAREHOUSE,\n} from \"../../graphql/mutation\";\nimport { WAREHOUSELIST } from \"../../graphql/query\";\nimport WarehouseModal from \"./WarehouseModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport moment from \"moment\";\n\nexport const Warehouse = (props) => {\n  const { loading, data, error, refetch } = useQuery(WAREHOUSELIST);\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({ name: \"\", shippingInDays: \"\" });\n\n  const editItem = (event) => {\n    var { name, value } = event.target;\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n    setItem({ name: \"\", shippingInDays: \"\" });\n  };\n\n  const handleSave = () => {\n    item[\"shippingInDays\"] = parseInt(item.shippingInDays);\n    if (type === \"Edit\") {\n      var id = item.id;\n      delete item.id;\n      delete item.createdAt;\n      delete item.updatedAt;\n      delete item.__typename;\n      item[\"updatedAt\"] = new Date();\n      client\n        .mutate({\n          mutation: UPDATE_WAREHOUSE,\n          variables: {\n            id,\n            item,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_WAREHOUSE,\n          variables: {\n            item,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setOpen(false);\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Delete\") {\n      client\n        .mutate({\n          mutation: DELETE_WAREHOUSE,\n          variables: {\n            id: item.id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n\n  const handleSwitch = (id, isActive) => {\n    client\n      .mutate({\n        mutation: UPDATE_WAREHOUSE,\n        variables: {\n          id,\n          item: { isActive: !isActive, updatedAt: new Date() },\n        },\n      })\n      .then((res) => {\n        if (res) {\n          onClose();\n          snack.setSnack({\n            open: true,\n            msg: \"Successfully Updated!\",\n          });\n          refetch();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        onClose();\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured!\",\n        });\n      });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={12}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Warehouse</Typography>\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n          }}\n        >\n          <Tooltip title=\"Add Warehouse\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Name</TableCell>\n                <TableCell align={\"center\"}>Shipping In Days</TableCell>\n                <TableCell align={\"center\"}>Created On</TableCell>\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\n                <TableCell align={\"center\"}>Status</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allWarehouses?.nodes.length === 0 && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>No Warehouses found!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allWarehouses?.nodes.length > 0 &&\n                data?.allWarehouses?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.name}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.shippingInDays}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <Switch\n                        checked={item.isActive}\n                        onChange={() => handleSwitch(item.id, item.isActive)}\n                        name=\"active\"\n                        color=\"primary\"\n                      />\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <WarehouseModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport { VALIDATEGENERATEDSKU, WAREHOUSELIST } from \"../../graphql/query\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst InventoryModal = (props) => {\n  const classes = useStyles();\n  const { loading, data } = useQuery(WAREHOUSELIST);\n\n  const client = useApolloClient();\n  const [error, setError] = React.useState(false);\n\n  const validateGeneratedSku = (generatedSku) => {\n    client\n      .mutate({\n        mutation: VALIDATEGENERATEDSKU,\n        variables: { generatedSku },\n      })\n      .then((res) => {\n        if (res?.data?.allTransSkuLists?.nodes?.length === 0) {\n          setError(\"Tag No doesn't exists!\");\n        } else {\n          setError(false);\n        }\n      });\n  };\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Holiday-Modal\"}\n    >\n      <DialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{`${props.type} Inventory`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              required\n              label={\"Tag No\"}\n              name=\"generatedSku\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.generatedSku}\n              onChange={props.editItem}\n              error={Boolean(error)}\n              helperText={error}\n              onBlur={() => validateGeneratedSku(props.item.generatedSku)}\n            />\n            <TextField\n              className={classes.inputField}\n              required\n              type={\"Number\"}\n              label={\"Quantity\"}\n              name=\"numberOfItems\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.numberOfItems}\n              onChange={props.editItem}\n            />\n            <Autocomplete\n              loading={loading}\n              options={data?.allWarehouses?.nodes}\n              getOptionSelected={(option, value) => option.name === value.name}\n              getOptionLabel={(option) => option.name}\n              value={props.item.warehouse}\n              onChange={props.editItem}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Warehouse\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    ...params.InputProps,\n                    endAdornment: (\n                      <React.Fragment>\n                        {loading ? (\n                          <CircularProgress color=\"inherit\" size={20} />\n                        ) : null}\n                        {params.InputProps.endAdornment}\n                      </React.Fragment>\n                    ),\n                  }}\n                />\n              )}\n            />\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default InventoryModal;\n","import React from \"react\";\nimport {\n  Badge,\n  Grid,\n  IconButton,\n  InputAdornment,\n  LinearProgress,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_INVENTORY,\n  DELETE_INVENTORY,\n  UPDATE_INVENTORY,\n} from \"../../graphql/mutation\";\nimport { INVENTORYLIST, STOCKSTATUS } from \"../../graphql/query\";\nimport InventoryModal from \"./InventoryModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { v4 as uuid } from \"uuid\";\nimport { NetworkStatus } from \"apollo-client\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../config\";\nimport moment from \"moment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  iconButton: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n    flexDirection: \"column\",\n  },\n  icon: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"inherit\",\n    },\n  },\n  searchInput: {\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: 8,\n    },\n  },\n}));\n\nconst StockStatus = (props) => {\n  const classes = useStyles();\n  const { data } = useQuery(STOCKSTATUS);\n  return (\n    <>\n      {data &&\n        data.allWarehouses.nodes.length > 0 &&\n        data.allWarehouses.nodes.map((item, index) => (\n          <Badge\n            badgeContent={\n              item?.inventoriesByWarehouseId?.aggregates?.sum?.numberOfItems\n            }\n            max={99999999}\n            color={\"error\"}\n            key={index}\n            component=\"div\"\n            className={classes.iconButton}\n            overlap=\"circle\"\n          >\n            <IconButton\n              disableRipple\n              className={classes.icon}\n              onClick={() => {\n                props.setWarehouse(item?.name);\n              }}\n            >\n              <StoreIcon\n                style={{ fontSize: 35 }}\n                color={item?.name === props.warehouse ? \"secondary\" : \"default\"}\n              />\n            </IconButton>\n            <Typography variant=\"subtitle2\">{item?.name}</Typography>\n          </Badge>\n        ))}\n    </>\n  );\n};\n\nexport const Inventory = (props) => {\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [search, setSearch] = React.useState(null);\n  const [warehouse, setWarehouse] = React.useState(null);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const { loading, data, error, refetch, networkStatus } = useQuery(\n    INVENTORYLIST,\n    {\n      variables: {\n        first: rowsPerPage,\n        offset: page * rowsPerPage,\n        filter: {\n          [\"generatedSku\"]: search ? { includesInsensitive: search } : null,\n          warehouseByWarehouseId: {\n            name: {\n              includesInsensitive: warehouse,\n            },\n          },\n        },\n      },\n    }\n  );\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({\n    generatedSku: \"\",\n    numberOfItems: \"\",\n    warehouse: { id: \"\", name: \"\" },\n  });\n\n  const editItem = (event, newValue) => {\n    var name, value;\n    if (newValue) {\n      console.log(newValue);\n      name = \"warehouse\";\n      value = newValue;\n    } else {\n      name = event.target.name;\n      value = event.target.value;\n    }\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n  };\n\n  const handleSave = () => {\n    if (type === \"Edit\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: UPDATE_INVENTORY,\n          variables: {\n            id,\n            item: {\n              generatedSku: item.generatedSku,\n              numberOfItems: parseInt(item.numberOfItems),\n              warehouseId: item.warehouse.id,\n              updatedAt: new Date(),\n            },\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_INVENTORY,\n          variables: {\n            item: {\n              id: uuid(),\n              generatedSku: item.generatedSku,\n              numberOfItems: parseInt(item.numberOfItems),\n              warehouseId: item.warehouse.id,\n            },\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Delete\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: DELETE_INVENTORY,\n          variables: {\n            id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n\n  const handleUpload = (file) => {\n    var bodyFormData = new FormData();\n    bodyFormData.set(\"file\", file);\n    console.log(file);\n    axios\n      .post(API_URL + \"/addinventories\", bodyFormData)\n      .then((res) => {\n        if (res) {\n          snack.setSnack({\n            open: true,\n            msg: res.data.message || \"Successfully uploaded!\",\n          });\n          refetch();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured!\",\n        });\n      });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={6}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Inventory</Typography>\n\n        <input\n          accept=\".csv\"\n          className={classes.input}\n          id=\"icon-button-file\"\n          type=\"file\"\n          onChange={(event) => {\n            const files = event.target.files;\n            if (files) {\n              handleUpload(files[0]);\n            }\n          }}\n        />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n          >\n            <Tooltip title=\"Upload Inventory\">\n              <CloudUploadIcon />\n            </Tooltip>\n          </IconButton>\n        </label>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            var a = document.createElement(\"a\");\n            a.href = \"/sample/inventory.csv\";\n            a.setAttribute(\"download\", \"inventory.csv\");\n            a.click();\n          }}\n        >\n          <Tooltip title=\"Download sample file\">\n            <GetAppIcon />\n          </Tooltip>\n        </IconButton>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n            setItem({\n              generatedSku: \"\",\n              numberOfItems: \"\",\n              warehouse: { id: \"\", name: \"\" },\n            });\n          }}\n        >\n          <Tooltip title=\"Add Inventory\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n        <TextField\n          className={classes.searchInput}\n          name=\"tagno\"\n          placeholder=\"Search Tag No.\"\n          size=\"medium\"\n          variant=\"outlined\"\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        container\n        xs={6}\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"center\"\n      >\n        <StockStatus warehouse={warehouse} setWarehouse={setWarehouse} />\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Tag No</TableCell>\n                <TableCell align={\"center\"}>Quantity</TableCell>\n                <TableCell align={\"center\"}>Warehouse</TableCell>\n                <TableCell align={\"center\"}>Created On</TableCell>\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(loading || networkStatus === NetworkStatus.refetch) && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allInventories?.nodes.length == 0 && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>No items in inventory!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allInventories?.nodes.length > 0 &&\n                data?.allInventories?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.generatedSku}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.numberOfItems}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.warehouse.name}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  colSpan={6}\n                  align={\"right\"}\n                  rowsPerPageOptions={[10, 25, 100]}\n                  count={data?.allInventories?.totalCount}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <InventoryModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Columns from \"./columns\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"./table.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nfunction SortHeader() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <Grid\n      container\n      lg={12}\n      md={12}\n      sm={12}\n      xs={12}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginBottom: \"17px\",\n        marginTop: \"25px\",\n      }}\n    >\n      <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n        <h2\n          className=\"products\"\n          style={{ fontSize: \"24px\", fontWeight: \"400\" }}\n        >\n          Products\n        </h2>\n      </Grid>\n      <Grid\n        container\n        xl={4}\n        lg={3}\n        md={4}\n        sm={5}\n        xs={12}\n        lassName=\"column\"\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\n      >\n        <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n          <Button\n            className=\"product\"\n            id=\"one\"\n            color=\"primary\"\n            onClick={handleClick}\n            variant=\"outlined\"\n            size=\"large\"\n            color=\"primary\"\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\n          >\n            COLUMNS\n            <ArrowDownwardIcon fontSize=\"inherit\" />\n          </Button>\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <Columns columnclose={handleClose} />\n          </Popover>\n        </Grid>\n        <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n          <Button\n            id=\"create\"\n            className=\"product\"\n            variant=\"contained\"\n            size=\"large\"\n            color=\"primary\"\n            backgroundColor=\"secondary\"\n          >\n            CREATE PRODUCT\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\nexport default SortHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst CmsHome = (props) => {\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          CMS Complete List\n        </Typography>\n      </Grid>\n\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/silverbanner\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography\n                style={{ textAlign: \"center\", marginTop: 8 }}\n                component=\"h6\"\n                variant=\"h5\"\n              >\n                NAC Banners\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/featuredproduct\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography\n                style={{ textAlign: \"center\", marginTop: 8 }}\n                component=\"h6\"\n                variant=\"h5\"\n              >\n                Featured Product\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/comments\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography\n                style={{ textAlign: \"center\", marginTop: 8 }}\n                component=\"h6\"\n                variant=\"h5\"\n              >\n                Customers Reviews\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n      <Grid item xs={6} sm={4} lg={3}>\n        <Link underline=\"none\" component={RouterLink} to=\"/newarrival\">\n          <Card fullwidth className=\"card2\">\n            <CardContent>\n              <Typography\n                style={{ textAlign: \"center\", marginTop: 8 }}\n                component=\"h6\"\n                variant=\"h5\"\n              >\n                New Arrival\n              </Typography>\n            </CardContent>\n          </Card>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CmsHome;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERLANDINGBANNERS, CREATESILVERLANDINGBANNER, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverLandingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLANDINGBANNERS,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: +createlandingbanner.position,\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLANDINGBANNER,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC - Landing Page - Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\"> - Landing Page - Banners : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Banner's Redirect Link (Routes Only)\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link to Check</TableCell>\n                <TableCell>Mobile Image</TableCell>\n                <TableCell>Desktop Image</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL}`} target=\"_blank\" className={classes.link_style}>\n                      {`${APP_URL}`}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {/* {val.mobile} */}\n                      <img alt=\"nacimages\" src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {/* {val.web} */}\n                      <img alt=\"nacimages\" src={val.web} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverLandingPage;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERLISTINGPAGE, CREATESILVERLISTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"60px\",\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLISTINGPAGE,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: +createlandingbanner.position,\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n    debugger;\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLISTINGPAGE,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        debugger;\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC - Listing Page - Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">NAC - Listing Page - Banners : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Banner's Redirect Link (Routes Only)\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link to Check</TableCell>\n                {/* <TableCell>Mobile Image</TableCell> */}\n                <TableCell>Banner Image</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL}`} target=\"_blank\" className={classes.link_style}>\n                      {`${APP_URL}`}\n                    </Link>\n                  </TableCell>\n                  {/* <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                     \n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell> */}\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {/* {val.web} */}\n                      <img src={val.web} alt=\"nacimages\" style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverListingPage;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nimport { CREATESPECIFICLISTINGPAGE, ALLSPECIFICLISTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"60px\",\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\n\nfunction SpecificListPages(props) {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    urlParam: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSPECIFICLISTINGPAGE,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      urlParam: createlandingbanner.urlParam,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESPECIFICLISTINGPAGE,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC - Specific Listing Page - Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">NAC - Specific Listing Page - Banners : </DialogTitle>\n          <DialogContent>\n            {/* <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            /> */}\n            <TextField\n              margin=\"dense\"\n              id=\"urlParam\"\n              label=\"Banner's Page Link (Routes Only)\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.urlParam}\n              name=\"urlParam\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image URL\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>S.No</TableCell>\n                <TableCell>Link to Check</TableCell>\n                {/* <TableCell>Mobile Image</TableCell> */}\n                <TableCell>Banner Image</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{index + 1}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL + val.urlParam}`} target=\"_blank\" className={classes.link_style}>\n                      {`${APP_URL + val.urlParam}`}\n                    </Link>\n                  </TableCell>\n                  {/* <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell> */}\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      <img alt=\"nacimages\" src={val.web} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n}\n\nexport default SpecificListPages;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport {\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\n  CREATESILVERLISTINGBOTTOMBANNER,\n  DELETESILVERLISTINGBOTTOMBANNER,\n} from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"60px\",\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingBottom = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\n        }),\n      };\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLISTINGBOTTOMBANNER,\n        variables: { id: id },\n      }),\n    };\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: +\"1\",\n      url: \"#\",\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESILVERLISTINGBOTTOMBANNER,\n        variables: create_banner_data,\n      }),\n    };\n  \n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC - Listing Page - Bottom Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">NAC - Listing Page - Bottom Banners : </DialogTitle>\n          <DialogContent>\n            {/* <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            /> */}\n            {/* <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            /> */}\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Desktop Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>S.No</TableCell>\n                <TableCell>Link to Check</TableCell>\n                <TableCell>Banner Image</TableCell>\n                {/* <TableCell>Desktop Image</TableCell> */}\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{index + 1}</TableCell>\n                  <TableCell>\n                    <Link href={`${APP_URL}/silver-jewellery`} target=\"_blank\" className={classes.link_style}>\n                      {`${APP_URL}/silver-jewellery`}\n                    </Link>\n                  </TableCell>\n                  {/* <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                    <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell> */}\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      <img alt=\"nacimages\" src={val.web} style={{ width: \"150px\", height: \"auto\" }} />\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverListingBottom;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\n\nimport { ALLSTYLORISILVERROUTINGPAGE, CREATESTYLORISILVERROUTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingRoutingPage = (props) => {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n  const [alllandingbanner, setalllandingbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    urlParam : \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n\n  useEffect(() => {\n    async function styloribannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSTYLORISILVERROUTINGPAGE,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setalllandingbanner(data);\n        })\n        .catch(console.error);\n    }\n    styloribannerfetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETESILVERLANDINGBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: +createlandingbanner.position,\n      urlParam: createlandingbanner.urlParam,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESTYLORISILVERROUTINGPAGE,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC Listing Routing Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"urlParam\"\n              label=\"Router Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.urlParam}\n              name=\"urlParam\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Router Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {alllandingbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.urlParam} target=\"_blank\" className={classes.link_style}>\n                      {val.urlParam}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default SilverListingRoutingPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Breadcrumbs } from \"../../../components\";\nimport SilverLandingPage from \"./components/silverlandingpage\";\nimport SilverListingPage from \"./components/silverlistingpage\";\nimport SpecificListPages from \"./components/specificListPages\";\nimport SilverListingRoutingPage from \"./components/silverlistingroutingpage\";\nimport SilverListingBottom from \"./components/silverbottmpage\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst Silverbanner = (props) => {\n  const classes = useStyles2();\n\n  return (\n    <>\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\n      <SilverLandingPage />\n      <SilverListingPage />\n      <SpecificListPages />\n      <SilverListingBottom />\n      {/* <SilverListingRoutingPage /> */}\n    </>\n  );\n};\nexport default Silverbanner;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SilverListingPage from \"../components/silverlistingpage\";\nimport { Breadcrumbs } from \"../../../../components\";\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\nconst SilverListingbanner = (props) => {\n  const classes = useStyles2();\n\n  return (\n    <>\n      <Breadcrumbs url=\"cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\n      <SilverListingPage />\n      {/* <SilverListingRoutingPage /> */}\n      {/* <SilverLandingPage /> */}\n    </>\n  );\n};\nexport default SilverListingbanner;\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport axios from \"axios\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { API_URL } from \"../../config\";\nimport { isString } from \"util\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { Chip } from \"@material-ui/core\";\n\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginImageValidateSize,\n  FilePondPluginFileRename\n);\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  variantFontSize: {\n    fontSize: \".9rem\",\n  },\n  variantMarginTop: {\n    marginTop: \"20px\",\n  },\n}));\nexport function CreateVariant(props) {\n  const classes = useStyle();\n  let prod_id = props.productId;\n  let colors = [];\n  let purities = [];\n  let diamondtypes = [];\n  let oldpurity = [];\n\n  const TOKEN = \"token\";\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor);\n  productCtx.oldproductMetalColor.forEach((colorobj) => {\n    colors.push(colorobj.productColor);\n  });\n  productCtx.oldproductMetalPurity.forEach((colorobj) => {\n    purities.push(colorobj.purity);\n    oldpurity.push(colorobj);\n  });\n\n  productCtx.oldproductDiamondTypesArray.forEach((diamondobj) => {\n    diamondtypes.push(diamondobj.diamondType);\n  });\n\n  const [variant, setVariant] = useState({\n    metal_color: [],\n    metal_purity: [],\n    diamond_color: [],\n    diamond_clarity: [],\n    variant_diamond_type: [],\n    product_images: {},\n    size: [],\n  });\n\n  function handleMetalColor(status_data) {\n    let color = variant.metal_color;\n    color.some((color_data) => color_data.id === status_data.id)\n      ? (color = color.filter((color_fil) => color_fil.id !== status_data.id))\n      : color.push(status_data);\n    setVariant({\n      ...variant,\n      metal_color: color,\n    });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    let color_arr = [];\n    value.map((color, index) => {\n      if (\n        productCtx.productMetalColor.some(\n          (item) => item.productColor === color.productColor\n        )\n      ) {\n      } else {\n        let color_obj = {\n          ...color,\n          metal_color: color.productColor,\n        };\n        color_arr.push(color_obj);\n      }\n    });\n    setVariant({\n      ...variant,\n      metal_color: color_arr,\n    });\n\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n    });\n  };\n  const sendNetworkRequest = async (url, params, data, auth = false) => {\n    alert(url);\n    url = API_URL + url;\n    console.info(\"URL\", url, data);\n    const method = data ? \"POST\" : \"GET\",\n      headers = {\n        \"Content-Type\": \"application/json\",\n      };\n    let resdata = null;\n    if (auth) {\n      const token = localStorage.getItem(TOKEN);\n      if (token) headers[\"auth\"] = token;\n      else window.location = \"/\";\n    }\n    const response = await fetch(url, {\n      method,\n      body: isString(data) ? data : JSON.stringify(data),\n      headers,\n    });\n\n    if (response.status < 400) {\n      resdata = await response.json();\n    } else {\n      alert(\n        `${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`\n      );\n    }\n    return resdata;\n  };\n\n  const handleMetalPurity = (type) => (event, value) => {\n    let purity_arr = [];\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n    });\n    value.map((color, index) => {\n      let color_obj = {\n        ...color,\n        purity: color.purity,\n      };\n      purity_arr.push(color_obj);\n    });\n    setVariant({\n      ...variant,\n      metal_purity: purity_arr,\n    });\n  };\n  // function handleMetalPurity(status_data) {\n  //     status_data.metal_weight = \"\";\n  //     status_data.error_message = false;\n  //     // alert(JSON.stringify(status_data));\n  //     let purity = variant.metal_purity;\n  //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         metal_purity: purity\n  //     })\n  // }\n  const diamondTypeChange = (type) => (event, value) => {\n    let diamondtype_arr = [];\n    value.map((color, index) => {\n      if (color.label) {\n        let color_obj = {\n          ...color,\n          diamondType: color.label,\n        };\n        diamondtype_arr.push(color_obj);\n      } else {\n        let color_obj = {\n          ...color,\n          diamondType: color.diamondType,\n        };\n        diamondtype_arr.push(color_obj);\n      }\n\n      //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n      //    }else{ let color_obj = {\n      //         ...color,\n      //         diamondType: color.label\n      //     }\n      //     diamondtype_arr.push(color_obj)\n      //   }\n    });\n    setVariant({\n      ...variant,\n      variant_diamond_type: diamondtype_arr,\n    });\n    alert(JSON.stringify(value));\n    setProductCtx({\n      ...productCtx,\n      [type]: diamondtype_arr,\n    });\n  };\n\n  // function diamondTypeChange(status_data){\n  //     let diamond__type = variant.variant_diamond_type;\n  //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         variant_diamond_type: diamond__type\n  //     })\n  // }\n\n  const sizeChange = (type) => (event, value) => {\n    let size_arr = [];\n    value.map((color, index) => {\n      if (productCtx.productDiamondTypes.some((item) => item === color)) {\n      } else {\n        let color_obj = {\n          ...color,\n          label: color,\n        };\n        size_arr.push(color_obj);\n      }\n    });\n    setVariant({\n      ...variant,\n      size: size_arr,\n    });\n  };\n  // function sizeChange(status_data) {\n  //     let variantSize = variant.size;\n  //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         size: variantSize\n  //     })\n\n  // }\n\n  function setMetalWeightInput(e, metalPurityId) {\n    // alert(e.target.value)\n    let metalWeight = variant.metal_purity;\n    metalWeight =\n      metalWeight &&\n      metalWeight.map((metal_weight, index) => {\n        if (metalPurityId === metal_weight.id) {\n          metal_weight.metal_weight = e.target.value;\n        }\n        return metal_weight;\n      });\n    setVariant({\n      ...variant,\n      metal_purity: metalWeight,\n    });\n  }\n  function saveCreateVariant() {\n    let createVariant = {\n      productId: prod_id,\n      productMetalcoloursByProductId: variant.metal_color,\n      productPuritiesByProductId: variant.metal_purity,\n      productDiamondTypes: variant.variant_diamond_type,\n      productSize: variant.size,\n      product_images: variant.product_images,\n      // productImage:variant.product_images\n    };\n\n    let metal_color_image_length = Object.entries(variant.product_images);\n    let metal_purity_weight = false;\n    let metal_purity =\n      variant.metal_purity &&\n      variant.metal_purity.map((metal_weight_check) => {\n        if (metal_weight_check.metal_weight === \"\") {\n          metal_weight_check.error_message = true;\n          metal_purity_weight = true;\n        }\n        return metal_weight_check;\n      });\n    variant[\"metal_purity\"] = metal_purity;\n    setVariant({\n      ...variant,\n      variant,\n    });\n    if (metal_color_image_length.length !== variant.metal_color.length) {\n      alert(\"Select Metal Color Images\");\n    }\n    if (\n      (variant.metal_color.length > 0 &&\n        variant.metal_color.length === metal_color_image_length.length) ||\n      (variant.metal_purity.length > 0 && metal_purity_weight === false) ||\n      variant.size.length > 0 ||\n      variant.variant_diamond_type.length > 0\n    ) {\n      let createVariants = productCtx.createVariantList;\n      let editVariants = productCtx.editVariants;\n      let variants = productCtx.variants;\n      let productImages = productCtx.productImages;\n      productImages = [...productImages, variant.product_images];\n      createVariants.push(createVariant);\n      let params = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(createVariant),\n      };\n    } else {\n      alert(\"please fill the Create variant\");\n    }\n  }\n  function backToProductAttribute() {\n    props.changeVariant();\n  }\n  async function uploadimagetoserver(\n    bodaydata,\n    imageposition,\n    imagecolor,\n    uploadtype\n  ) {\n    let prodimages = variant.product_images;\n    // if(true)\n    // {\n    var prodid = prod_id;\n    let imagecolourobj = variant.product_images[imagecolor];\n    var imagecount = 1;\n    if (imagecolourobj) {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = prodid + \"_\" + imagecount + imagecolor.charAt(0);\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        product_id: prodid,\n      },\n      false\n    );\n    var returnData =\n      responsedata && responsedata.data && responsedata.data.returnData;\n    var signedRequest = returnData && returnData.signedRequest;\n    var url = returnData && returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData && returnData.filepath;\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    if (imagecolourobj) {\n      const imageobj = {\n        name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\n        position: imageposition,\n        color: imagecolor,\n        image_url: filepathname,\n        url:\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\n          filepathname,\n      };\n      if (uploadtype === \"edit\") {\n        imagecolourobj[imageposition] = imageobj;\n      } else {\n        imagecolourobj.push(imageobj);\n      }\n      prodimages[imagecolor] = imagecolourobj;\n    } else {\n      const imageobj = {\n        name: prodid + \"_1\" + imagecolor.charAt(0),\n        position: imageposition,\n        color: imagecolor,\n        image_url: filepathname,\n        url:\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\n          filepathname,\n      };\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj);\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setVariant({ ...variant, product_images: prodimages });\n    // setFiles([])\n    // }\n\n    await axios.put(signedRequest, bodaydata.file, options);\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          fullWidth\n          margin=\"dense\"\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.productColor}\n          getOptionDisabled={(option) =>\n            colors.indexOf(option.productColor) > -1\n          }\n          defaultValue={productCtx.oldproductMetalColor}\n          options={productCtx.masterData.metalcolour}\n          value={productCtx.productMetalColor}\n          onChange={handleoptionChange(\"productMetalColor\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.productColor}\n                {...getTagProps({ index })}\n                disabled={colors.indexOf(option.productColor) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Metal Colours\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          className={classes.fixedTag}\n          margin=\"dense\"\n          getOptionLabel={(option) => option.name}\n          getOptionDisabled={(option) => purities.indexOf(option.name) > -1}\n          defaultValue={productCtx.oldproductMetalPurity}\n          options={productCtx.masterData.metalpurity}\n          value={productCtx.productMetalPurity}\n          onChange={handleMetalPurity(\"productMetalPurity\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.purity}\n                {...getTagProps({ index })}\n                disabled={purities.indexOf(option.purity) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Metal Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n\n        {productCtx.productMetalPurity &&\n          productCtx.productMetalPurity.map((metal_purity) => (\n            <TextField\n              key={metal_purity.id}\n              className={classes.helperinput}\n              style={{ width: \"100px\", marginLeft: \"8px\" }}\n              variant=\"outlined\"\n              margin=\"dense\"\n              fullWidth\n              type=\"number\"\n              value={metal_purity.metal_weight}\n              id=\"metal_weight\"\n              error={metal_purity && metal_purity.error_message}\n              name=\"metal_weight\"\n              label={`Weight ${metal_purity.purity}`}\n              onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n            />\n          ))}\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.label}\n          getOptionDisabled={(option) =>\n            diamondtypes.indexOf(option.label) > -1\n          }\n          defaultValue={productCtx.oldproductDiamondTypesArray}\n          options={productCtx.masterData.diamondtypes}\n          value={\n            productCtx.productDiamondTypesArray\n              ? productCtx.productDiamondTypesArray\n              : []\n          }\n          onChange={diamondTypeChange(\"productDiamondTypesArray\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.diamondType}\n                {...getTagProps({ index })}\n                disabled={diamondtypes.indexOf(option.diamondType) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Diamond Types\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        {productCtx.variant_size && productCtx.variant_size.length > 0 ? (\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            fullWidth\n            getOptionLabel={(option) => option}\n            options={productCtx.productVariantSize}\n            value={productCtx.variant_size}\n            onChange={sizeChange(\"productSizes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Sizes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n        ) : null}\n      </Grid>\n\n      {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n\n      <Grid container>\n        {variant.metal_color === undefined\n          ? null\n          : variant.metal_color.map((value, index) => (\n              <Grid xs={12} container spacing={1} item>\n                <Grid xs={12} item>\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                    {value.productColor}\n                  </Typography>\n                </Grid>\n                <Grid xs={12} sm={12} md={12} item>\n                  <FilePond\n                    allowImageValidateSize\n                    imageValidateSizeMinWidth=\"2400\"\n                    imageValidateSizeMinHeight=\"2400\"\n                    imageValidateSizeMeasure={(file) =>\n                      new Promise((resolve, reject) => {})\n                    }\n                    labelIdle=\"Upload Image\"\n                    allowMultiple={true}\n                    //files = {files}\n                    onupdatefiles={(fileItem) => {\n                      // Set currently active file objectsfiles to this.state\n                    }}\n                    onaddfile={(error, fileItem) => {\n                      uploadimagetoserver(fileItem, index, value.name, \"add\");\n                    }}\n                    onremovefile={(error, fileItem) => {}}\n                    fileRenameFunction={(file) =>\n                      new Promise((resolve) => {\n                        var prodid = prod_id;\n                        let imagecolourobj = variant.product_images[value.name];\n                        var imagecount = 1;\n                        if (imagecolourobj) {\n                          imagecount = imagecolourobj.length + 1;\n                        }\n                        let imagename =\n                          prodid +\n                          \"_\" +\n                          imagecount +\n                          value.name.charAt(0) +\n                          file.extension;\n                        resolve(imagename);\n                      })\n                    }\n                  ></FilePond>\n                </Grid>\n              </Grid>\n            ))}\n      </Grid>\n      {\n        <Grid\n          container\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"16px\",\n          }}\n        >\n          <Grid item>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={(e) => saveCreateVariant()}\n            >\n              Save\n            </Button>\n          </Grid>\n          <Grid item>\n            {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n          </Grid>\n        </Grid>\n      }\n    </Grid>\n  );\n}\nexport default CreateVariant;\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Avatar, Button, Dialog, Chip, TextField, Typography, colors, Input } from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    \"&:hover\": {\n      backgroundColor: colors.green[900],\n    },\n  },\n}));\n\nconst EditDiamond = (props) => {\n\n\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id: diamond.id,\n    diamondweight: diamond.diamondweight ? diamond.diamondweight : \"\",\n    diamondcount: diamond.diamondcount ? diamond.diamondcount : \"\",\n    diamondsettings: diamond.diamondsettings ? diamond.diamondsettings : null,\n    diamondshape: diamond.diamondshape ? diamond.diamondshape : null,\n    diamonditemname: diamond.diamonditemname ?? \"\",\n    diamondsubitemname: diamond.diamondsubitemname ?? \"\",\n    diamonddescription: diamond.diamonddescription ?? \"\",\n    diamondclarity: diamond.diamondClarity ?? \"\",\n    diamondtype: diamond.diamondType ?? \"\",\n    diamondcolor: diamond.diamondColour ?? \"\",\n  };\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n \n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {}, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            Diamond Details\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.diamonditemname}\n            placeholder={\"Item Name\"}\n            name=\"size\"\n            label=\"Item Name\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"diamonditemname\")}\n          />{\" \"}\n          {/* <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.diamondsubitemname}\n            label=\"SubItem Name\"\n            placeholder={\"Diamond SubItem Name\"}\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"diamondsubitemname\")}\n          />{\" \"} */}\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.diamonddescription}\n            placeholder={\"Diamond Description\"}\n            name=\"size\"\n            label=\"Description\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"diamonddescription\")}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.diamondweight}\n            placeholder={\"Weight\"}\n            name=\"size\"\n            autoComplete=\"size\"\n            label=\"Weight\"\n            onChange={handleInputChange(\"diamondweight\")}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            placeholder=\"#of Stones\"\n            name=\"size\"\n            type=\"number\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"diamondcount\")}\n            value={editcontent.diamondcount}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            options={productCtx.masterData.diamondsettings}\n            value={editcontent.diamondsettings}\n            onChange={handleoptionChange(\"diamondsettings\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Diamond Setting\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            value={editcontent.diamondshape}\n            options={productCtx.masterData.diamondshapes}\n            onChange={handleoptionChange(\"diamondshape\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Diamond Shape\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                label=\"Shape\"\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            value={editcontent.diamondcolor}\n            options={productCtx.masterData.diamondcolors}\n            onChange={handleoptionChange(\"diamondcolor\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Diamond Color\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />{\" \"}\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            value={editcontent.diamondclarity}\n            options={productCtx.masterData.diamondclarities}\n            onChange={handleoptionChange(\"diamondclarity\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Diamond Clarity\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            value={editcontent.diamondtype}\n            options={productCtx.masterData.diamondtypes}\n            onChange={handleoptionChange(\"diamondtype\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Diamond Type\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} variant=\"contained\">\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditDiamond.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditDiamond;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport EditDiamond from \"./Components/EditDiamond/EditDiamond\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: \"Diamond Type\", label: \"Diamond Type\" },\n  { id: \"Diamond Name\", label: \"Diamond Name\" },\n  { id: \" SubItemName\", label: \"  Sub Item Name\" },\n  { id: \"Description\", label: \"Description\" },\n  { id: \"Colour\", label: \"Colour\" },\n  { id: \"Clarity\", label: \"Clarity\" },\n  { id: \"Weight\", label: \"Weight\" },\n  { id: \"Number\", label: \"Number\" },\n  { id: \"Amount\", label: \"Amount\" },\n  { id: \"Carat\", label: \"Per Carat\" },\n  { id: \"Setting\", label: \"Setting\" },\n  { id: \"Shape\", label: \"Shape\" },\n\n  {\n    id: \"Edit\",\n    label: \"Edit\",\n    minWidth: 80,\n    maxWidth: 80,\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: \"flex\",\n\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  let [diamondEditObject, setDiamondEditObject] = React.useState({\n    edit: \"\",\n  });\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond && props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit: JSON.parse(JSON.stringify(diamondData)),\n    });\n\n    setProductCtx({\n      ...productCtx,\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\n        (settingData, index) => settingData.name === diamondData.diamondSettings\n      )[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter(\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\n      )[0],\n      diamondcount: diamondData.stoneCount,\n      diamondweight: diamondData.stoneWeight,\n      diamonditemname: diamondData.itemName,\n      diamondsubitemname: diamondData.subItemName,\n      diamonddescription: diamondData.description,\n    });\n    setEditcontent({\n      id: diamondData.id,\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\n        (settingData, index) => settingData.name === diamondData.diamondSettings\n      )[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter(\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\n      )[0],\n      diamondcount: diamondData.stoneCount,\n      diamondweight: diamondData.stoneWeight,\n      diamonditemname: diamondData.itemName,\n      diamondsubitemname: diamondData.subItemName,\n      diamonddescription: diamondData.description,\n    });\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    setOpenedit(true);\n  }\n  async function DiamondSave(diamondobj) {\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {};\n    if (diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight) {\n      let list_data = props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData, index) => {\n        if (diamondobj.id === diamondListData.id) {\n          diamondListData.diamondSettings = diamondobj.diamondsettings.name;\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\n          diamondListData.stoneCount = diamondobj.diamondcount;\n          diamondListData.stoneWeight = diamondobj.diamondweight;\n          bodydata[\"diamondSettings\"] = diamondobj.diamondsettings.name;\n          bodydata[\"diamondShape\"] = diamondobj.diamondshape.name;\n          bodydata[\"stoneCount\"] = diamondobj.diamondcount;\n          bodydata[\"stoneWeight\"] = diamondobj.diamondweight;\n          bodydata[\"diamondid\"] = diamondobj.id;\n          bodydata[\"itemname\"] = diamondobj.diamonditemname;\n          bodydata[\"subitemname\"] = diamondobj.diamondsubitemname;\n          bodydata[\"description\"] = diamondobj.diamonddescription;\n          bodydata[\"color\"] = diamondobj.diamondcolor?.label;\n          bodydata[\"clarity\"] = diamondobj?.diamondclarity?.label;\n          bodydata[\"diamondtype\"] = diamondobj.diamondtype?.label;\n          return diamondListData;\n        }\n        return diamondListData;\n      });\n      let response = await sendNetworkRequest(\"/editproductdiamond\", {}, bodydata);\n\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ?\n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   })\n      //   : editDiamondLists.push(editDiamondList);\n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      setEditcontent(null);\n      setOpenedit(false);\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not fill all item\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n    window.location.reload();\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n  const handleInputChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <div className={classes.tableWrapper}>\n        {/* <CircularProgress color=\"secondary\"/> */}\n\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond &&\n              props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell>\n\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.itemName}\n                  </TableCell>\n\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.subItemName}\n                  </TableCell>\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.description}\n                  </TableCell>\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.diamondColour}\n                  </TableCell>\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.diamondClarity}\n                  </TableCell>\n\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell align={\"center\"} component=\"th\" scope=\"row\">\n                      <Input\n                        variant=\"outlined\"\n                        style={{ width: 40 }}\n                        id=\"size\"\n                        margin=\"dense\"\n                        label=\"Weight\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(\"diamondweight\")}\n                        value={productCtx.diamondweight}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                      {row.stoneWeight}\n                    </TableCell>\n                  )}\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Input\n                        variant=\"outlined\"\n                        style={{ width: 40 }}\n                        id=\"size\"\n                        margin=\"dense\"\n                        label=\"#of Stones\"\n                        name=\"size\"\n                        type=\"number\"\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(\"diamondcount\")}\n                        value={productCtx.diamondcount}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\n                      {row.stoneCount}\n                    </TableCell>\n                  )}\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.stoneAmount}\n                  </TableCell>\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Autocomplete\n                        id=\"free-solo-2-demo\"\n                        className={classes.fixedTag}\n                        getOptionLabel={(option) => option.label}\n                        value={productCtx.diamondsettings}\n                        options={productCtx.masterData.diamondsettings}\n                        onChange={handleoptionChange(\"diamondsettings\")}\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Diamond Setting\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\n                          />\n                        )}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.diamondSettings}\n                    </TableCell>\n                  )}\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Autocomplete\n                        id=\"free-solo-2-demo\"\n                        className={classes.fixedTag}\n                        getOptionLabel={(option) => option.label}\n                        value={productCtx.diamondshape}\n                        options={productCtx.masterData.diamondshapes}\n                        onChange={handleoptionChange(\"diamondshape\")}\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Diamond Shape\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\n                          />\n                        )}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.diamondShape}\n                    </TableCell>\n                  )}\n\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell align=\"center\" style={{ width: 80 }}>\n                      <Button onClick={(e) => DiamondSave(row.id)}>\n                        <SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}>\n                        <CancelIcon />\n                      </Button>\n                    </TableCell>\n                  ) : (\n                    <TableCell align=\"center\" style={{ width: 80 }}>\n                      <Button onClick={(e) => DiamondEdit(row)}>\n                        <EditIcon />\n                      </Button>\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n            {emptyRows == 0 ? (\n              <>\n                <TableRow style={{ height: 1 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              </>\n            ) : null}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.diamond && props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && (\n          <EditDiamond diamond={editcontent} onApply={DiamondSave} onClose={handleApplicationClose} open={openedit} />\n        )}\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Avatar, Button, Dialog, Chip, TextField, Typography, colors, Input } from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    \"&:hover\": {\n      backgroundColor: colors.green[900],\n    },\n  },\n}));\n\nconst EditGemstone = (props) => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id: diamond.id,\n    gemstonesettings: diamond?.gemstonesettings ?? null,\n    gemstonecount: diamond?.gemstonecount ?? \"\",\n    gemstoneweight: diamond?.gemstoneweight ?? \"\",\n    gemstonesize: diamond?.gemstonesize ?? \"\",\n    gemstoneitemname: diamond?.gemstoneitemname ?? \"\",\n    gemstonesubitemname: diamond?.gemstonesubitemname ?? \"\",\n    gemstonedescription: diamond?.gemstonedescription ?? \"\",\n    gemstoneshape: diamond?.gemstoneshape ?? null,\n    gemstonetype: diamond?.gemstonetype ?? null,\n  };\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n    // alert(JSON.stringify(editcontent.gemstonecount))\n  }, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            Gemstone Details\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.gemstoneitemname}\n            placeholder={\"Item Name\"}\n            name=\"size\"\n            label=\"Item Name\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"gemstoneitemname\")}\n          />{\" \"}\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.gemstonesubitemname}\n            label=\"SubItem Name\"\n            placeholder={\"Diamond SubItem Name\"}\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"gemstonesubitemname\")}\n          />{\" \"}\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.gemstonedescription}\n            placeholder={\" Description\"}\n            name=\"size\"\n            label=\"Description\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"gemstonedescription\")}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            value={editcontent.gemstonesize}\n            label=\"Size\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"gemstonesize\")}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            label=\"Weight\"\n            margin=\"dense\"\n            value={editcontent.gemstoneweight}\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"gemstoneweight\")}\n          />\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            placeholder=\"#of Stones\"\n            name=\"size\"\n            type=\"number\"\n            autoComplete=\"size\"\n            onChange={handleInputChange(\"gemstonecount\")}\n            value={editcontent.gemstonecount}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            options={productCtx.masterData.gemstonesettings}\n            value={editcontent.gemstonesettings}\n            onChange={handleoptionChange(\"gemstonesettings\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\" Setting\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.name}\n            value={editcontent.gemstoneshape}\n            options={productCtx.masterData.gemstonshapes}\n            onChange={handleoptionChange(\"gemstoneshape\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Shape\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            value={editcontent.gemstonetype}\n            options={productCtx.masterData.gemstontypes}\n            onChange={handleoptionChange(\"gemstonetype\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Type\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} variant=\"contained\">\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditGemstone.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditGemstone;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport EditGemstone from \"./Components/EditGemstone/EditGemstone\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: \"Gemstone Type\", label: \"Gemstone Type\" },\n  { id: \"Gemstone Name\", label: \"Gemstone Name\" },\n  { id: \"SubItemName\", label: \"SubItem Name\" },\n  { id: \"Description\", label: \"Description\" },\n\n  { id: \"Size\", label: \"Size\" },\n  { id: \"Weight\", label: \"Weight\" },\n  { id: \"Number\", label: \"Number\" },\n  { id: \"Amount\", label: \"Amount\" },\n  { id: \"Carat\", label: \"Per Carat\" },\n  { id: \"Setting\", label: \"Setting\" },\n  { id: \"Shape\", label: \"Shape\" },\n  {\n    id: \"Edit\",\n    label: \"Edit\",\n    minWidth: 120,\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  let [gemstoneEditObject, setGemstoneEditObject] = React.useState({\n    edit: \"\",\n  });\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit: JSON.parse(JSON.stringify(gemstoneData)),\n    });\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\n        (settingData, index) => settingData.name === gemstoneData.gemstoneSetting\n      )[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\n      )[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize,\n      gemstoneitemname: gemstoneData.itemName,\n      gemstonesubitemname: gemstoneData.subItemName,\n      gemstonedescription: gemstoneData.description,\n      gemstonetype: gemstoneData.gemstoneType,\n    });\n    setEditcontent({\n      id: gemstoneData.id,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\n        (settingData, index) => settingData.name === gemstoneData.gemstoneSetting\n      )[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\n      )[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize,\n      gemstoneitemname: gemstoneData.itemName,\n      gemstonesubitemname: gemstoneData.subItemName,\n      gemstonedescription: gemstoneData.description,\n      gemstonetype: gemstoneData.gemstoneType,\n    });\n    // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n    setOpenedit(true);\n  }\n  async function GemstoneSave(gemdata) {\n    if (\n      gemdata.gemstonesettings &&\n      gemdata.gemstoneshape &&\n      gemdata.gemstonecount &&\n      gemdata.gemstoneweight &&\n      gemdata.gemstonesize\n    ) {\n      let list_data = props.gemstone;\n      var bodydata = {};\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (gemdata.id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\n          bodydata[\"gemstoneSetting\"] = gemdata.gemstonesettings.name;\n          bodydata[\"gemstoneShape\"] = gemdata.gemstoneshape.name;\n          bodydata[\"stoneCount\"] = gemdata.gemstonecount;\n          bodydata[\"gemstoneSize\"] = gemdata.gemstonesize;\n          bodydata[\"stoneWeight\"] = gemdata.gemstoneweight;\n          bodydata[\"id\"] = gemdata.id;\n          bodydata[\"itemname\"] = gemdata.gemstoneitemname;\n          bodydata[\"subitemname\"] = gemdata.gemstonesubitemname;\n          bodydata[\"description\"] = gemdata.gemstonedescription;\n          bodydata[\"gemstonetype\"] = gemdata.gemstonetype.label;\n\n          return gemstoneListData;\n        }\n\n        return gemstoneListData;\n      });\n\n      let response = await sendNetworkRequest(\"/editproductgemstone\", {}, bodydata);\n      let editGemstoneList =\n        gemstoneChangeData && gemstoneChangeData.filter((edit_data, index) => edit_data.id === gemdata.id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if (JSON.stringify(editGemstoneList) !== JSON.stringify(gemstoneEditObject.edit)) {\n        let status =\n          editGemstoneLists && editGemstoneLists.some((check_edit, index) => check_edit.id === editGemstoneList.id)\n            ? (editGemstoneLists =\n                editGemstoneLists &&\n                editGemstoneLists.map((gemstone_list, index) => {\n                  if (gemstone_list.id === editGemstoneList.id) {\n                    return editGemstoneList;\n                  }\n                  return gemstone_list;\n                }))\n            : editGemstoneLists.push(editGemstoneList);\n      }\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\",\n      });\n      setEditcontent(null);\n      setOpenedit(false);\n      //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not fill all item\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n    window.location.reload();\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n  const handleInputChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  return (\n    <Paper className={classes.root}>\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone &&\n              props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneType}\n                  </TableCell>\n\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.itemName}\n                  </TableCell>\n\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.subItemName}\n                  </TableCell>\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.description}\n                  </TableCell>\n\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Input\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"size\"\n                        margin=\"dense\"\n                        label=\"Gemstone Size\"\n                        name=\"size\"\n                        onChange={handleInputChange(\"gemstonesize\")}\n                        autoComplete=\"size\"\n                        value={productCtx.gemstonesize}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.gemstoneSize}\n                    </TableCell>\n                  )}\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Input\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"size\"\n                        margin=\"dense\"\n                        label=\"Weight\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(\"gemstoneweight\")}\n                        value={productCtx.gemstoneweight}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.stoneWeight}\n                    </TableCell>\n                  )}\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Input\n                        variant=\"outlined\"\n                        fullWidth\n                        id=\"size\"\n                        margin=\"dense\"\n                        label=\"#of Stones\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        onChange={handleInputChange(\"gemstonecount\")}\n                        value={productCtx.gemstonecount}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.stoneCount}\n                    </TableCell>\n                  )}\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\n                    {row.stoneAmount}\n                  </TableCell>\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Autocomplete\n                        id=\"free-solo-2-demo\"\n                        className={classes.fixedTag}\n                        getOptionLabel={(option) => option.label}\n                        value={productCtx.gemstonesettings}\n                        options={productCtx.masterData.gemstonesettings}\n                        onChange={handleoptionChange(\"gemstonesettings\")}\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Gemstone Setting\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{\n                              ...params.InputProps,\n                              type: \"search\",\n                            }}\n                          />\n                        )}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.gemstoneSetting}\n                    </TableCell>\n                  )}\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell component=\"th\" scope=\"row\">\n                      <Autocomplete\n                        id=\"free-solo-2-demo\"\n                        className={classes.fixedTag}\n                        getOptionLabel={(option) => option.label}\n                        value={productCtx.gemstoneshape}\n                        options={productCtx.masterData.gemstonshapes}\n                        onChange={handleoptionChange(\"gemstoneshape\")}\n                        renderTags={(value, getTagProps) =>\n                          value.map((option, index) => (\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                          ))\n                        }\n                        renderInput={(params) => (\n                          <TextField\n                            {...params}\n                            label=\"Gemstone Shape\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            fullWidth\n                            InputProps={{\n                              ...params.InputProps,\n                              type: \"search\",\n                            }}\n                          />\n                        )}\n                      />\n                    </TableCell>\n                  ) : (\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.gemstoneShape}\n                    </TableCell>\n                  )}\n                  {btnEdit.action && btnEdit.id == row.id ? (\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}>\n                        <SaveIcon />\n                      </Button>\n                    </TableCell>\n                  ) : (\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}>\n                        <EditIcon />\n                      </Button>\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && (\n          <EditGemstone diamond={editcontent} onApply={GemstoneSave} onClose={handleApplicationClose} open={openedit} />\n        )}\n      </div>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nconst columns = [\n  { id: \"SKU\", label: \"SKU\" },\n  { id: \"Metal Colour\", label: \"Metal Colour\" },\n  { id: \"Metal Purity\", label: \"Metal Purity\" },\n  { id: \"Gold Weight\", label: \"Gold Weight\" },\n  { id: \"Size\", label: \"Size\" },\n  { id: \"Vendor lead Time\", label: \"Vendor lead Time\" },\n  { id: \"Ready to Ship\", label: \"Ready to Ship\" },\n  { id: \"Default\", label: \"Default\" },\n  {\n    id: \"Active\",\n    label: \"Active\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n  {\n    id: \"Edit\",\n    label: \"Edit\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {}\n\n  const handleChangeswitch = (name) => (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n\n    //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist =\n      productCtx.variants &&\n      productCtx.variants.map((variant, index) => {\n        if (variant.id === variantId) {\n          let status = variant.isActive\n            ? (variant.isActive = false)\n            : (variant.isActive = true);\n        }\n        return variant;\n      });\n    let filterVariant =\n      variantslist &&\n      variantslist.filter(\n        (filter_data, index) => filter_data.id === variantId\n      )[0];\n    let editVaraint = {\n      id: filterVariant.id,\n      isActive: filterVariant.isActive,\n    };\n    let editVariants = productCtx.editVariants;\n    let editStatus =\n      editVariants &&\n      editVariants.some(\n        (check_variant, index) => check_variant.id === variantId\n      )\n        ? (editVariants =\n            editVariants &&\n            editVariants.filter(\n              (edit_variant_filter, index) =>\n                edit_variant_filter.id !== variantId\n            ))\n        : editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants: variantslist,\n      editVariants,\n    });\n  }\n  const emptyRows =\n    rowsPerPage -\n    Math.min(\n      rowsPerPage,\n      props.variants && props.variants.length - page * rowsPerPage\n    );\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange = (type) => (e) => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime: diamondData.vendorDeliveryTime,\n      discount: diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault: diamondData.isdefault,\n      editisactive: diamondData.isActive,\n    });\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\n  }\n  function DiamondSave(id) {\n    var bodydata = {};\n    if (productCtx.editleadtime) {\n      let list_data = props.variants;\n      let Skuchangedata = list_data.map((skulistdata, index) => {\n        if (id === skulistdata.generatedSku) {\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive = productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship;\n\n          skulistdata.discountDesc = productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata[\"vendorDeliveryTime\"] = productCtx.editleadtime;\n          bodydata[\"isdefault\"] = productCtx.editisdefault;\n          bodydata[\"isActive\"] = productCtx.editisactive;\n          bodydata[\"discount\"] = productCtx.discount;\n\n          bodydata[\"isReadyToShip\"] = productCtx.editreadytoship;\n          bodydata[\"generatedSku\"] = id;\n          console.log(JSON.stringify(bodydata));\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest(\"/updateskuinfo\", {}, bodydata);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  //   const handleoptionChange = type => (event, value) => {\n\n  //     setProductCtx({ ...productCtx, [type]: value})\n\n  // }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {props.columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants &&\n              props.variants\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <TableRow key={row.id}>\n                    {props.displycolumns.indexOf(\"SKU\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.generatedSku}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Metal Colour\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        scope=\"row\"\n                      >\n                        {row.metalColor}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Metal Purity\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.purity}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Gold Weight\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.skuWeight}\n                      </TableCell>\n                    ) : null}\n                    {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                    {props.displycolumns.indexOf(\"Size\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.skuSize}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Vendor lead Time\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.editleadtime}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Vendor Lead Time\"\n                            //onInput={keyPress.bind(this)}\n                            onChange={handleinputChange(\"editleadtime\")}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.vendorDeliveryTime}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.discount}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount\"\n                            //onInput={keyPress.bind(this)}\n                            onChange={handleinputChange(\"discount\")}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountDesc}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Ready To Ship\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Switch\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editreadytoship\n                              : row.isReadyToShip\n                          }\n                          // onChange={()=>handleChange(row.id)}\n                          value=\"checkedA\"\n                          // onChange={handleChangeswitch('editreadytoship')}\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editreadytoship\")\n                              : null\n                          }\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Default\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Switch\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editisdefault\n                              : row.isdefault\n                          }\n                          value=\"checkedA\"\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editisdefault\")\n                              : null\n                          }\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Active\") > -1 ? (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        <Switch\n                          checked={row.isActive}\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editisactive\n                              : row.isActive\n                          }\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editisactive\")\n                              : null\n                          }\n                          value=\"checkedA\"\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                      <TableCell style={{ width: 20 }} align=\"center\">\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\n                          <SaveIcon />\n                        </Button>\n                        <Button onClick={(e) => CancelEdit(row)}>\n                          <CancelIcon />\n                        </Button>\n                      </TableCell>\n                    ) : (\n                      <TableCell align=\"center\" style={{ width: 20 }}>\n                        <Button onClick={(e) => DiamondEdit(row)}>\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants && props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(2, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditPrice = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    editcostprice:diamond.editcostprice,\n    editcostpricetax: diamond.editcostpricetax,\n    editsellingprice:diamond.editsellingprice,\n    editsellingpricetax:diamond.editsellingpricetax,\n    editmarkupprice: diamond.editmarkupprice,\n    editmarkuppricetax : diamond.editmarkuppricetax,\n    editdiscountprice: diamond.editdiscountprice,\n    editdiscountpricetax: diamond.editdiscountpricetax\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Price Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editcostprice}\n              placeholder={\"costPrice\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"costPriceTax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostpricetax')}\n              value={editcontent.editcostpricetax}\n              />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editsellingprice}\n              placeholder={\"Selling Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Selling Pricetax\"\n              placeholder=\"Selling Pricetax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingpricetax')}\n              value={editcontent.editsellingpricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editmarkupprice}\n              placeholder={\"Markup Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkupprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Markup Price Tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkuppricetax')}\n              value={editcontent.editmarkuppricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editdiscountprice}\n              placeholder={\"Discount Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Discount Price tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountpricetax')}\n              value={editcontent.editdiscountpricetax}\n              />\n                 \n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditPrice.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditPrice;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  Typography,\n  Button,\n  Chip,\n  Input,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport EditPrice from \"./Components/EditPrice/EditPrice\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nconst columns = [\n  { id: \"SKU\", label: \"SKU\" },\n  { id: \"Cost Price\", label: \"Cost Price\" },\n  { id: \"Cost Price Tax\", label: \"Cost Price Tax\" },\n  { id: \"Selling Price\", label: \"Selling Price\" },\n  { id: \"Selling Price Tax\", label: \"Selling Price Tax\" },\n  { id: \"Markup Price\", label: \"Markup Price\" },\n  { id: \"Markup Price Tax\", label: \"Markup Price Tax\" },\n  { id: \"Discount Price\", label: \"Discount Price\" },\n  { id: \"Discount Price Tax\", label: \"Discount Price Tax\" },\n  { id: \"Margin On Sale\", label: \"Margin On Sale\" },\n  { id: \"Discount\", label: \"Discount\" },\n\n  {\n    id: \"Disable\",\n    label: \"Price Update\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: \"\",\n  });\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist =\n      productCtx.variants &&\n      productCtx.variants.map((variant, index) => {\n        if (variant.id === variantId) {\n          let status = variant.isActive\n            ? (variant.isActive = false)\n            : (variant.isActive = true);\n        }\n        return variant;\n      });\n    let filterVariant =\n      variantslist &&\n      variantslist.filter(\n        (filter_data, index) => filter_data.id === variantId\n      )[0];\n    let editVaraint = {\n      id: filterVariant.id,\n      isActive: filterVariant.isActive,\n    };\n    let editVariants = productCtx.editVariants;\n    let editStatus =\n      editVariants &&\n      editVariants.some(\n        (check_variant, index) => check_variant.id === variantId\n      )\n        ? (editVariants =\n            editVariants &&\n            editVariants.filter(\n              (edit_variant_filter, index) =>\n                edit_variant_filter.id !== variantId\n            ))\n        : editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants: variantslist,\n      editVariants,\n    });\n  }\n  const emptyRows =\n    rowsPerPage -\n    Math.min(\n      rowsPerPage,\n      props.variants && props.variants.length - page * rowsPerPage\n    );\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange = (type) => (e) => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, pricerun: true });\n\n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku: diamondData.generatedSku,\n    };\n    console.log(JSON.stringify(bodydata));\n    await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n    setBtnEdit({ ...btnEdit, id: \"\", pricerun: false });\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice: diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice: diamondData.sellingPrice,\n      editsellingpricetax: diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax: diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax,\n    });\n    setEditcontent({\n      id: diamondData.generatedSku,\n      editcostprice: diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice: diamondData.sellingPrice,\n      editsellingpricetax: diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax: diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax,\n    });\n    //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    // setOpenedit(true)\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\n  }\n  function DiamondSave(priceobj) {\n    var bodydata = {};\n    let list_data = props.variants;\n    let Skuchangedata = list_data.map((skulistdata, index) => {\n      if (priceobj.id === skulistdata.generatedSku) {\n        skulistdata.costPrice = priceobj.editcostprice;\n        skulistdata.costPriceTax = priceobj.editcostpricetax;\n        skulistdata.sellingPrice = priceobj.editsellingprice;\n        skulistdata.sellingPriceTax = priceobj.editsellingpricetax;\n        skulistdata.markupPrice = priceobj.editmarkupprice;\n        skulistdata.markupPriceTax = priceobj.editmarkuppricetax;\n        skulistdata.discountPrice = priceobj.editdiscountprice;\n        skulistdata.discountPriceTax = priceobj.editdiscountpricetax;\n\n        bodydata[\"costPrice\"] = parseFloat(priceobj.editcostprice);\n        bodydata[\"costPriceTax\"] = parseFloat(priceobj.editcostpricetax);\n        bodydata[\"sellingPrice\"] = parseFloat(priceobj.editsellingprice);\n        bodydata[\"sellingPriceTax\"] = parseFloat(priceobj.editsellingpricetax);\n        bodydata[\"markupPrice\"] = parseFloat(priceobj.editmarkupprice);\n        bodydata[\"markupPriceTax\"] = parseFloat(priceobj.editmarkuppricetax);\n        bodydata[\"discountPrice\"] = parseFloat(priceobj.editdiscountprice);\n        bodydata[\"discountPriceTax\"] = parseFloat(\n          priceobj.editdiscountpricetax\n        );\n        bodydata[\"marginOnSalePercentage\"] = parseFloat(\n          priceobj.marginOnSalePercentage\n        );\n\n        bodydata[\"generatedSku\"] = priceobj.id;\n        return skulistdata;\n      }\n      return skulistdata;\n    });\n    alert(JSON.stringify(bodydata));\n    // sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    // setEditcontent(null)\n    // setOpenedit(false)\n  }\n  //   const handleoptionChange = type => (event, value) => {\n\n  //     setProductCtx({ ...productCtx, [type]: value})\n\n  // }\n  // const handleInputChange = type => e => {\n  //   setProductCtx({ ...productCtx, [type]: e.target.value  })\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {props.columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants &&\n              props.variants\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.generatedSku}\n                    </TableCell>\n                    {props.displycolumns.indexOf(\"Cost Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.editcostprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Cost Price\"\n                            onChange={handleinputChange(\"editcostprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {\" \"}\n                            {row.costPrice}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Cost Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editcostpricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Cost Price Tax\"\n                            onChange={handleinputChange(\"editcostpricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {\" \"}\n                            {row.costPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Selling Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editsellingprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Selling Price\"\n                            onChange={handleinputChange(\"editsellingprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.sellingPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Selling Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editsellingpricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Selling Price Tax\"\n                            onChange={handleinputChange(\"editsellingpricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            //onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.sellingPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Markup Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editmarkupprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Markup Price\"\n                            onChange={handleinputChange(\"editmarkupprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.markupPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Markup Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editmarkuppricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Markup Price Tax\"\n                            onChange={handleinputChange(\"editmarkuppricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.markupPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Discount Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editdiscountprice}\n                            id=\"productname\"\n                            onChange={handleinputChange(\"editdiscountprice\")}\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount Price\"\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Discount Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editdiscountpricetax}\n                            onChange={handleinputChange(\"editdiscountpricetax\")}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount Price Tax\"\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Margin on Sale\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.marginOnSalePercentage}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.discount}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"View\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={(e) => props.onShow(row.generatedSku)}\n                        >\n                          Summary\n                        </Button>{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        <Button\n                          onClick={(e) => Skupricesync(row)}\n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                        >\n                          ₹ Run\n                        </Button>\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\n                          <SaveIcon />\n                        </Button>\n                        <Button onClick={(e) => CancelEdit(row)}>\n                          <CancelIcon />\n                        </Button>\n                      </TableCell>\n                    ) : (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        {btnEdit.pricerun && btnEdit.id == row.generatedSku ? (\n                          <CircularProgress size={15} />\n                        ) : (\n                          <Button\n                            onClick={(e) => Skupricesync(row)}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                          >\n                            ₹ Run\n                          </Button>\n                        )}\n                        <Button onClick={(e) => DiamondEdit(row)}>\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants && props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && (\n          <EditPrice\n            diamond={editcontent}\n            onApply={DiamondSave}\n            onClose={handleApplicationClose}\n            open={openedit}\n          />\n        )}\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Columns from \"./columns\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"./table.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nfunction SortHeader(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [options, setOptions] = React.useState(props.columnnames);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <Grid\n      item\n      container\n      lg={12}\n      md={12}\n      sm={12}\n      xs={12}\n      style={{ display: \"flex\", justifyContent: \"space-between\" }}\n    >\n      <Grid item xl={8} lg={9} md={8} sm={7} xs={12}>\n        <h4 className=\"products\">\n          {props.title ? props.title : \"Variants Table\"}{\" \"}\n        </h4>\n      </Grid>\n      <Grid\n        item\n        container\n        xl={4}\n        lg={3}\n        md={4}\n        sm={5}\n        xs={12}\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n      >\n        <Grid\n          item\n          className=\"column-btn\"\n          lg={5}\n          md={5}\n          sm={5}\n          xs={5}\n          style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n        >\n          <Button\n            className=\"product\"\n            size=\"small\"\n            id=\"one\"\n            color=\"primary\"\n            backgroundColor=\"secondary\"\n            onClick={handleClick}\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\n          >\n            COLUMNS\n            <ArrowDownwardIcon fontSize=\"inherit\" />\n          </Button>\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <Columns\n              columns={options}\n              selectcolumnfilter={props.getColumnnames}\n              displytype={props.displytype}\n              columnclose={handleClose}\n            />\n          </Popover>\n        </Grid>\n        {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n      </Grid>\n    </Grid>\n  );\n}\nexport default SortHeader;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { Paper, Card, CardHeader, CardContent, Grid, Snackbar, Button } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport \"./upload.css\";\nimport { Alert } from \"@material-ui/lab\";\nimport { IMAGEDELETE } from \"../../graphql/query\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\",\n  },\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\",\n  },\n  formContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30,\n  },\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = \"\";\n  const [success, setSuccess] = React.useState(false);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  React.useEffect(() => {\n    setProductimages(props.prodimages);\n  }, [props.prodimages]);\n\n  productimages.forEach((imgobj) => {\n    console.log();\n    image_count = image_count + 1;\n    if (imgobj.productId) {\n      product_id = imgobj.productId;\n    }\n  });\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const deleteImage = async (imageData) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: IMAGEDELETE,\n        variables: { productimageid: imageData.id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        fatchvalue.statuscode = 200 && window.location.reload();\n      })\n      .catch(console.error);\n  };\n  const handlenewAssetChange = (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => {\n      var imagecount = 1;\n      if (productimages) {\n        imagecount = image_count + 1;\n      }\n      let imagename = product_id + \"-\" + imagecount;\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n\n      uploadimagetoserver(files[index], fileType, imagename, product_id, {}, false);\n    });\n  };\n\n  async function uploadimagetoserver(fileobj, filetype, imagename, prodid, imagecontent, isedit) {\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      { image: filetype, filename: imagename, product_id: prodid },\n      false\n    );\n\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    var filepathname = returnData.filepath;\n    filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\n    var options = {\n      headers: {\n        \"Content-Type\": filetype,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    if (!isedit) {\n      const imageobj = {\n        name: product_id + \"_\" + (image_count + 1),\n        imagePosition: image_count + 1,\n        productColor: props.color,\n        productId: product_id,\n        imageUrl: url,\n        url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\n      };\n      imagecontent = imageobj;\n    }\n\n    if (!isedit) {\n      var productimgs = [];\n      productimages.forEach((img) => {\n        productimgs.push(img);\n      });\n      productimgs.push(imagecontent);\n    }\n\n    await axios.put(signedRequest, fileobj, options);\n    let responsecontent = await sendNetworkRequest(\"/updateproductimage\", {}, { imageobj: imagecontent, isedit: isedit }, false);\n    responsecontent.statuscode === 200 && setSuccess(true);\n    setTimeout(function () {\n      responsecontent.statuscode === 200 && window.location.reload();\n    }, 2500);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color} />\n        <CardContent>\n          <Grid container spacing={2} className={classes.styleFile}>\n            {productimages.map((url, index) => (\n              <React.Fragment key={url.id}>\n                <div style={{ position: \"relative\" }}>\n                  <i\n                    className=\"fa fa-window-edit\"\n                    style={{\n                      position: \"absolute\",\n                      right: 10,\n                      top: 11,\n                      color: \"red\",\n                      zIndex: \"12\",\n                    }}\n                  />\n\n                  <Grid\n                    item\n                    style={{\n                      width: \"150px\",\n                      wordBreak: \"break-all\",\n                      height: \"150px\",\n                      padding: \"8px\",\n                      margin: \"0\",\n                      // cursor: \"pointer\",\n                      position: \"relative\",\n                    }}\n                    className=\"container\"\n                  >\n                    <img\n                      src={url.imageUrl}\n                      style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        borderRadius: \"4px\",\n                      }}\n                      alt=\"product images\"\n                    />\n                  </Grid>\n                  <Button variant=\"outlined\" style={{ margin: \"auto\", display: \"flex\" }} onClick={() => deleteImage(url)}>\n                    <DeleteIcon style={{ color: \"grey\" }} />\n                  </Button>\n                  <br />\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\n                    {\" \"}\n                    {index + 1}{\" \"}\n                  </Typography>\n\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\n                    {\" \"}\n                    {url.ishover ? \"hover\" : \"\"}{\" \"}\n                  </Typography>\n                </div>\n                {/* ) : null} */}\n              </React.Fragment>\n            ))}\n            <Grid\n              item\n              style={{\n                width: \"150px\",\n                wordBreak: \"break-all\",\n                height: \"150px\",\n                padding: \"8px\",\n                margin: \"0\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                position: \"relative\",\n              }}\n              className=\"container\"\n            >\n              {\n                <label className=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                  <i\n                    className=\"fa fa-plus\"\n                    aria-hidden=\"true\"\n                    style={{\n                      color: \"rgba(60,64,67,.15)\",\n                      fontSize: \"45px\",\n                      margin: \"auto\",\n                    }}\n                  ></i>\n                  <input type=\"file\" className=\"custom-file-input\" onChange={(e) => handlenewAssetChange(e)}></input>\n                </label>\n              }\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose}>Image Upload Successfully...</Alert>\n      </Snackbar>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n      \n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n         \n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\nimport columnnames from './columnnames.json';\n\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(true);\n  const theme = useTheme();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('lg');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose()\n  };\n\n  return (\n    <div>\n      \n      <Dialog\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\n        <DialogContent>\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\n        </DialogContent>\n        <DialogActions>\n       \n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, TextField, Button, Fab } from \"@material-ui/core\";\n\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from \"./DiamondDetails\";\nimport GemstoneDetails from \"./GemstoneDetails\";\nimport Variants from \"./Variants\";\nimport Skupricing from \"./Skupricing\";\n\nimport { productCategory } from \"../../services/mapper\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"../Productupload/Productupload.css\";\n\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport CreateVariant from \"./CreateVariant\";\n\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport SortHeader from \"./Components/SortHeader\";\nimport columnnames from \"./columnnames.json\";\nimport Productimages from \"./Productimages\";\nimport FullLoader from \"../../components/Loader\";\nimport Pricedetails from \"./Pricedetails\";\n\nimport { Chip, Switch, FormControlLabel } from \"@material-ui/core\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"33.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.pricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(columnnames.defaultpricingnames);\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\n\n  const [loadopen, setLoadopen] = React.useState(true);\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    createVariant();\n    setExpand(isExpanded ? true : false);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n\n  console.log(productCtx);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\",\n  });\n  \n  let prod_id = props.location.pathname.split(\"/\")[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = evt.target.validity.valid ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname });\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    // if (type === \"masterProductSize\") {\n    //   debugger;\n    //   let productSizeString = null;\n    //   console.log(type, value);\n    //   if (typeof value === Object) {\n    //     setProductCtx({ ...productCtx, [type]: value.sizeValue });\n    //   } else if (typeof value === Array) {\n    //     productSizeString = value.reduce((acc, str) => {\n    //       return acc.push(str);\n    //     }, []);\n\n    //     setProductCtx({ ...productCtx, [type]: productSizeString.toString() });\n    //   }\n\n    //   console.log(productSizeString);\n    // } else {\n    //   setProductCtx({ ...productCtx, [type]: value });\n    // }\n    // debugger;\n    // if (type === \"productSize\") {\n    //   if (typeof value === Object) {\n    //     setProductCtx({ ...productCtx, [type]: [value] });\n    //   }\n    // } else if (typeof value === Array) {\n    //   setProductCtx({ ...productCtx, [type]: value });\n    // } else {\n    setProductCtx({ ...productCtx, [type]: value });\n    // }\n    debugger;\n  };\n\n  const handleinputChange = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n\n    // if (e.target.value === \"\" || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n  // const handleinputChange = type => (event, value) => {\n  //   alert(event.target.value)\n  //       setProductCtx({ ...productCtx, [type]: value})\n  // }\n  function dismisspricesummary() {\n    setIsshowpricesummary(false);\n  }\n  function getColumnnames(columnnames, displytype) {\n    let displycolumns = [];\n    let displycolumnnames = [];\n\n    columnnames.forEach((element) => {\n      displycolumnnames.push(element.name);\n      displycolumns.push(element);\n    });\n    if (displytype === 1) {\n      setDisplycolumns(displycolumnnames);\n      setVarientcolumns(columnnames);\n    } else {\n      setPricingcolumns(columnnames);\n      setDisplypricingcolumns(displycolumns);\n      setDisplycolumnnames(displycolumnnames);\n    }\n  }\n\n  let client = useApolloClient();\n\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist &&\n      productCtx.diamondlist.map((diamond_type) => {\n        let diamond_data = {\n          id: diamond_type.id,\n          diamondType: diamond_type.diamondType,\n        };\n        let status = diamondTypesArray.some((store_dia) => store_dia.diamondType == diamond_type.diamondType)\n          ? \"\"\n          : diamondTypesArray.push(diamond_data);\n        return diamond_type;\n      });\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\n\n    setProductCtx({\n      ...productCtx,\n      productCtx,\n    });\n\n    client\n      .query({ query: PRODUCTDIAMONDTYPES })\n      .then((res) => {\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: res.data.allMasterDiamondTypes.nodes,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    // let params = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify({ query: PRODUCTDIAMONDTYPES }),\n    // };\n    // fetch(GRAPHQL_DEV_CLIENT, params)\n    //   .then((res) => res.json())\n    //   .then((diamondtypesData) => {\n    //     console.log(\n    //       diamondtypesData.data.allMasterDiamondTypes.nodes,\n    //       \"diamondtypesdata\"\n    //     );\n    //     setProductCtx({\n    //       ...productCtx,\n    //       productDiamondTypes:\n    //         diamondtypesData.data.allMasterDiamondTypes.nodes,\n    //     });\n    //   })\n    //   .catch(console.error);\n\n    //setstate({ ...state, create_variant: true })\n  }\n  async function saveProductEditItem() {\n    debugger;\n    console.log(productCtx.product_type);\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions: productCtx.occassions,\n      collections: productCtx.collections,\n      stonecount: productCtx.stonecount,\n      stonecolour: productCtx.stonecolour,\n      gender: productCtx.product_gender,\n      description: productCtx.description,\n      minOrderQty: productCtx.minOrderQty,\n      maxOrderQty: productCtx.maxOrderQty,\n      length: productCtx.length,\n      height: productCtx.height,\n\n      productType: productCtx?.product_type?.label ?? null,\n      productMetalColor: productCtx?.productMetalColor ?? null,\n      vendorCode: productCtx?.vendorcode?.name ?? null,\n      earingBacking: productCtx?.earringbacking?.label ?? null,\n      // productSize: \"12,13,14,15\",\n    };\n\n    let response = await sendNetworkRequest(\"/editproduct\", {}, productEditItem);\n    window.location.reload();\n    console.log(\"************\");\n    console.log(JSON.stringify(productEditItem));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n\n      handleClick();\n      console.log(JSON.stringify(productEditItem));\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  }\n\n  const handledisableproduct = (name) => async (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      productid: prod_id,\n      isactive: event.target.checked,\n    };\n    let esbody = {\n      product_id: prod_id,\n    };\n    var endpoint = \"/reindex\";\n    if (event.target.checked) {\n      endpoint = \"/esearch_forceindex\";\n    }\n\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\n\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\n    let updateproductattr = await sendNetworkRequest(\"/updateproductattribute\", {}, esbody);\n\n    console.log(\"************\");\n    console.log(JSON.stringify(bodycontent));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  };\n  async function showpricesummary(sku) {\n    let response = await sendNetworkRequest(\"/viewskupricesummary/\" + sku, {}, null);\n    let price_summary = [];\n    let skuprice = response.price_summary.skuprice;\n\n    let metalprice = response.price_summary.metals;\n    metalprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n\n    let mateialprice = response.price_summary.materials;\n    mateialprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n    let obj = {\n      component: \"SKU Price\",\n      cost_price: skuprice.cost_price,\n      selling_price: skuprice.selling_price,\n      markup_price: skuprice.markup_price,\n      discount_price: skuprice.discount_price,\n    };\n    price_summary.push(obj);\n\n    setPricesummaryvalue(price_summary);\n    setIsshowpricesummary(true);\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function Skumarkupsync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n      pricingcomponent: \"updateskuprice\",\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function backProductList() {\n    window.location = \"/productlist\";\n  }\n  useEffect(() => {\n    client\n      .query({ query: PRODUCTEDIT, variables: { productId: prod_id } })\n      .then((res) => {\n        setLoadopen(false);\n\n        var { productListByProductId } = res.data;\n        var genders = productListByProductId.gender;\n        var productTypes = productListByProductId.productType;\n        var earringBackings = productListByProductId.earringBacking;\n        var size_obj = productListByProductId.sizeVarient;\n        var vendorCodes = productListByProductId.vendorCode;\n\n        // var productSizes = productListByProductId?.transSkuListsByProductId?.nodes[0]?.skuSize;\n        // let productSize_arr = [];\n        // if (productSizes != null && productSizes != undefined) {\n        //   debugger;\n        //   let productSizeArray = productSizes.split(\",\");\n        //   for (let i = 0; i < productSizeArray.length; i++) {\n        //     debugger;\n        //     let obj_size = {\n        //       sizeValue: productSizeArray[i],\n        //     };\n        //     productSize_arr.push(obj_size);\n        //   }\n        // }\n\n        let sizes_arr = [];\n        if (size_obj) {\n          let sizes = size_obj.split(\",\");\n          sizes.forEach((element) => {\n            sizes_arr.push(element);\n          });\n        }\n        let gender_arr = [];\n        if (genders) {\n          genders = genders.split(\",\");\n          genders.forEach((element) => {\n            let gender_obj = {\n              label: element,\n            };\n            gender_arr.push(gender_obj);\n          });\n        }\n        let product_type = null;\n        if (productTypes !== null && productTypes !== undefined) {\n          productTypes = productTypes.split(\",\");\n          productTypes.forEach((element) => {\n            product_type = {\n              label: element,\n            };\n          });\n        }\n\n        let earring_backing = null;\n        if (earringBackings !== null && earringBackings !== undefined) {\n          earring_backing = {\n            label: earringBackings,\n          };\n        }\n\n        let vendor_code = null;\n        if (vendorCodes !== null && vendorCodes !== undefined) {\n          vendorCodes = vendorCodes.split(\",\");\n          vendorCodes.forEach((element) => {\n            vendor_code = {\n              name: element,\n            };\n          });\n        }\n        let defaultcolour = \"\";\n        var images_arr = productListByProductId.productImagesByProductId.nodes;\n        images_arr.forEach((element) => {\n          if (element.isdefault) {\n            defaultcolour = element.productColor;\n          }\n        });\n        var metalcolors = [];\n        Array.prototype.insert = function (index, item) {\n          this.splice(index, 0, item);\n        };\n\n        var unfilterMetalColor = productListByProductId?.productMetalcoloursByProductId?.nodes ?? null;\n        var metalColor = unfilterMetalColor;\n        var metalColor = unfilterMetalColor.filter(function (el) {\n          return el.productColor != null;\n        });\n\n        if (typeof metalColor !== undefined && metalColor !== null && metalColor !== undefined) {\n        } else {\n          metalColor = {};\n        }\n\n        let metalcolor = productListByProductId.productMetalcoloursByProductId.nodes;\n        metalcolor.forEach((colorobj) => {\n          if (colorobj.productColor === defaultcolour) {\n            colorobj[\"isdefault\"] = true;\n            metalcolors.insert(0, colorobj);\n          } else {\n            colorobj[\"isdefault\"] = false;\n            metalcolors.push(colorobj);\n          }\n        });\n\n        setProductCtx({\n          ...productCtx,\n          productname: productListByProductId.productName,\n          isactive: productListByProductId.isactive,\n          product_type: product_type,\n          product_categoy: productListByProductId.productCategory,\n          gemstonelist: productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: productListByProductId.productDiamondsByProductSku.nodes,\n          variants: productListByProductId.transSkuListsByProductId.nodes,\n          productImages: productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalColor,\n          // oldproductMetalColor: metalColor,\n          productMetalPurity: productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode: vendor_code,\n          product_gender: gender_arr,\n          themes: productListByProductId.productThemesByProductId.nodes,\n          prod_styles: productListByProductId.productStylesByProductId.nodes, // productDiamondColor:diamondTypesArray,\n          occassions: productListByProductId.productOccassionsByProductId.nodes,\n          collections: productListByProductId.productCollectionsByProductId.nodes,\n          stonecount: productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour: productListByProductId.productStonecolorsByProductId.nodes,\n          description:\n            productListByProductId?.transSkuListsByProductId?.nodes[0]?.transSkuDescriptionsBySkuId?.nodes[0]?.skuDescription,\n          minOrderQty: productListByProductId?.transSkuListsByProductId?.nodes[0]?.minOrderQty,\n          maxOrderQty: productListByProductId?.transSkuListsByProductId?.nodes[0]?.maxOrderQty,\n          height: productListByProductId?.height,\n          length: productListByProductId?.length,\n          earringbacking: earring_backing,\n          // productSize: productSize_arr ?? [{}],\n          // productDiamondClarity:diamondClaritySku,\n        });\n\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(productListByProductId.productName)),\n        });\n      })\n      .catch(console.error);\n  }, []);\n  // useEffect(() => {\n  //   client\n  //     .query({ query: ALLMASTERPRODUCTSIZE, variables: { productType: productCtx?.product_type?.label } })\n  //     .then((res) => {\n  //       debugger;\n  //       let ProductSizeFullData = res?.data?.allMasterRingsSizes?.nodes;\n\n  //       // debugger;\n  //       // let FilteredProductSize = null;\n  //       // if (productCtx?.product_type?.label !== undefined && productCtx.product_type?.label !== null) {\n  //       //   FilteredProductSize = ProductSizeFullData.filter((val) => {\n  //       //     return val.productType === productCtx?.product_type?.label;\n  //       //   });\n  //       // }\n  //       debugger;\n  //       setProductCtx({ ...productCtx, masterProductSize: ProductSizeFullData ?? null });\n  //       console.log(ProductSizeFullData);\n  //     })\n  //     .catch(console.error);\n  // }, [productCtx?.product_type?.label]);\n  return state.create_variant ? (\n    <CreateVariant\n      productMetalColor={productCtx.productMetalColor}\n      productMetalPurity={productCtx.productMetalPurity}\n      changeVariant={changeVariant}\n      productId={prod_id}\n    />\n  ) : (\n    <Grid container>\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <Grid item container spacing={1}>\n        <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}>\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            pattern=\"[a-zA-Z]*\"\n            value={productCtx.productname}\n            id=\"productname\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n            name=\"productname\"\n            label=\"Product Name\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"productname\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_categoy}\n            id=\"product_category\"\n            InputProps={{\n              readOnly: true,\n            }}\n            error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n            name=\"product_category\"\n            label=\"Product Category\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.description}\n            id=\"description\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.description}\n            name=\"description\"\n            label=\"Description\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"description\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <Autocomplete\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.product_type}\n            getOptionLabel={(option) => option.label}\n            onChange={handleoptionChange(\"product_type\")}\n            options={productCtx.masterData.product_type}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Product Type\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            disabled\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.vendorcode}\n            getOptionLabel={(option) => option.name}\n            onChange={handleoptionChange(\"vendorcode\")}\n            options={productCtx?.masterData?.vendorcode}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Ventor Name\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          {productCtx?.product_type?.label === \"Earrings\" || productCtx?.product_type?.label === \"earrings\" ? (\n            <Autocomplete\n              id=\"free-solo-2-demos\"\n              className={classes.fixedTag}\n              value={productCtx.earringbacking}\n              getOptionLabel={(option) => option.label}\n              onChange={handleoptionChange(\"earringbacking\")}\n              options={productCtx.masterData.earringbacking}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Earring Backing\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          ) : (\n            \"\"\n          )}\n          {/* {productCtx?.product_type?.label === \"Rings\" ? (\n            <Autocomplete\n              mutiple\n              id=\"free-solo-2-demo\"\n              className={classes.fixedTag}\n              value={productCtx.productSize}\n              defaultValue={productCtx.productSize}\n              getOptionLabel={(option) => (option.sizeValue ? option.sizeValue : \"\")}\n              onChange={handleoptionChange(\"productSize\")}\n              options={productCtx?.masterProductSize}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip variant=\"outlined\" size=\"small\" label={option.sizeValue} {...getTagProps({ index })} />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Product Size\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          ) : (\n            \"\"\n          )} */}\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.height}\n            id=\"height\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.height}\n            name=\"height\"\n            label=\"Height \"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"height\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.length}\n            id=\"length\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.length}\n            name=\"length\"\n            label=\"Width\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"length\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />{\" \"}\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.minOrderQty}\n            id=\"minOrderQty\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.minOrderQty}\n            name=\"minOrderQty\"\n            label=\"Minimum Order Quantity\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"minOrderQty\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />{\" \"}\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.maxOrderQty}\n            id=\"maxOrderQty\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.maxOrderQty}\n            name=\"maxOrderQty\"\n            label=\"Maximum Order Quantity\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"maxOrderQty\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            options={[]}\n            className={classes.fixedTag}\n            value={productCtx.productmaterials}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Product Materials\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{\n                  ...params.InputProps,\n                  readOnly: true,\n                  type: \"search\",\n                }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            getOptionLabel={(option) => option.productColor}\n            onChange={handleoptionChange(\"productMetalColor\")}\n            options={productCtx.masterData.metalcolour}\n            className={classes.fixedTag}\n            value={productCtx.productMetalColor}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Color\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            options={[]}\n            className={classes.fixedTag}\n            value={productCtx.productMetalPurity}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Purity\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.product_gender}\n            getOptionLabel={(option) => option.label}\n            onChange={handleoptionChange(\"product_gender\")}\n            options={productCtx.masterData.gender}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Gender\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.themes}\n            options={productCtx.masterData.themes}\n            value={productCtx.themes}\n            onChange={handleoptionChange(\"themes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n              ))\n            }\n            style={{ display: \"none\" }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Themes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.prod_styles}\n            options={productCtx.masterData.styles}\n            onChange={handleoptionChange(\"prod_styles\")}\n            value={productCtx.prod_styles}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Styles\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.occassions}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.occassions}\n            options={productCtx.masterData.occasions}\n            onChange={handleoptionChange(\"occassions\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Occasions\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.collections}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.collections}\n            options={productCtx.masterData.collections}\n            onChange={handleoptionChange(\"collections\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Collections\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecount}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecount}\n            options={productCtx.masterData.stones}\n            onChange={handleoptionChange(\"stonecount\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"No of Stones\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecolour}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecolour}\n            options={productCtx.masterData.gemstonecolor}\n            onChange={handleoptionChange(\"stonecolour\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Stone Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <FormControlLabel\n            label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n            control={<Switch checked={productCtx.isactive} onChange={handledisableproduct(\"isactive\")} value=\"checkedA\" />}\n          />\n          <Grid\n            item\n            container\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\",\n            }}\n          >\n            <Grid item>\n              <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                Update\n              </Button>\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={9} lg={9} spacing={2} style={{ padding: \"15px\" }}>\n          <Grid container item md={6}></Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n          <DiamondDetails diamond={productCtx.diamondlist} />\n          {productCtx.gemstonelist.length > 0 ? (\n            <>\n              {\" \"}\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\n            </>\n          ) : null}\n\n          <Grid style={{}}></Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>\n            <SortHeader columnnames={columnnames.varients} getColumnnames={getColumnnames} displytype={1} />{\" \"}\n          </Grid>\n\n          <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}>\n            <SortHeader\n              title={\"Pricing Table\"}\n              columnnames={pricingcolumns}\n              displycolumns={displypricingcolumns}\n              getColumnnames={getColumnnames}\n              displytype={2}\n            />\n            <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n              Price Run For This Product\n            </Button>\n            <span>&nbsp;&nbsp;&nbsp;</span>\n            <Button onClick={(e) => Skumarkupsync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n              Run Markup For This Product\n            </Button>\n          </Grid>\n          {isshowpricesummary ? <Pricedetails onClose={dismisspricesummary} values={pricesummaryvalues} /> : null}\n          <Skupricing\n            variants={productCtx.variants}\n            onShow={showpricesummary}\n            columns={displypricingcolumns}\n            displycolumns={displycolumnnames}\n          />\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n          {/* {productCtx.productMetalColor.map((colors) => ( */}\n          <Productimages\n            //color={colors.productColor}\n            //isdefault={colors.isdefault}\n            prodimages={productCtx.productImages}\n          />\n          {/* ))} */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const ProductAttributes = withRouter((props) => {\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n\n  const _content = (\n    <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}>\n      <Component {...props} />\n    </ProductProvider>\n  );\n  return _content;\n});\nexport default withRouter(ProductAttributes);\n","const route = {\n  login: \"/login\",\n  dashboard: \"/dashboard\",\n  profile: \"/profile\",\n  productupload: \"/productupload\",\n  configuration: \"/Configuration\",\n  vendor: \"/vendorlist\",\n  productlist: \"/productlist\",\n  orderlist: \"/orderlist\",\n  orderdetails: \"/orderdetails/:id\",\n  userorders: \"/orderlist/:userid\",\n  userwishlist: \"/userwishlist/:userid\",\n  address: \"/address/:userid\",\n  cmshome: \"/cmshome\",\n\n  materiallist: \"/material\",\n  mastermaterial: \"/materialmaster\",\n  mastercolors: \"/mastercolors\",\n  masterpurities: \"/masterpurities\",\n  salediscountlist: \"/salediscountlist\",\n  voucherdiscountlist: \"/voucherdiscountlist\",\n\n  producttypes: \"/producttypes\",\n  voucherdiscount: \"/voucherdiscount\",\n  salediscount: \"/salediscount\",\n  priceupdate: \"/priceupdate\",\n  productAttributes: \"/product_attributes\",\n  diamondDetails: \"/diamond_details\",\n  gemstoneDetails: \"/gemstone-details\",\n  variants: \"/variants\",\n  images: \"/images\",\n  createVariant: \"/create_variant\",\n  materiallistpage: \"/newmaterial\",\n  editCategory: \"/editcategory\",\n  vendorPrice: \"/vendorpricesetup\",\n  markupPrice: \"/markuppricesetup\",\n  taxsetup: \"/taxsetup\",\n  editdiscount: \"/salediscount/:id\",\n  editvoucher: \"/voucherdiscount/:id\",\n  masterstyles: \"/masterstyles\",\n  masterthemes: \"/masterthemes\",\n  masteroccassions: \"/masteroccassions\",\n  masterpaymentstatus: \"/paymentstatus\",\n  mastercollections: \"/collections\",\n  masterdesigns: \"/designs\",\n  masterorderstatus: \"/orderstatus\",\n  shippingzones: \"/zones\",\n  shipmentsettings: \"/shipmensettings\",\n  shippingattributes: \"/shippingattributes\",\n  masterdiamonds: \"/diamonds\",\n  diamondsettings: \"/diamondsettings\",\n  diamondshapes: \"/diamondshapes\",\n  earringbacking: \"/earringbacking\",\n  addshippingattributes: \"/addshippingattributes\",\n  addtaxattributes: \"/addtaxattributes\",\n  userconfiguration: \"/userconfiguration\",\n  masterroles: \"/masterroles\",\n  manageadminusers: \"/manageadminusers\",\n  goldpriceupdate: \"/goldpriceupdate\",\n\n  manageusers: \"/manageusers\",\n\n  masterpages: \"/masterpages\",\n\n  gemsettings: \"/gemstonesettings\",\n  gemshapes: \"/gemstoneshapes\",\n  gemtypes: \"/gemstonetypes\",\n  gender: \"/genders\",\n  seo: \"/seopriority\",\n  taxsettings: \"/taxsettings\",\n  masterattributes: \"/masterattributes\",\n\n  masterstones: \"/masterstones\",\n  masterstonecolors: \"/masterstonecolors\",\n  masterstoneshapes: \"/masterstoneshapes\",\n  weights: \"/weights\",\n  customerdetails: \"/customerdetails/:id\",\n\n  category: \"/categories\",\n\n  warehouse: \"/warehouse\",\n  holiday_manager: \"/holiday-manager\",\n  inventory: \"/inventory\",\n\n  silverbanner: \"/silverbanner\",\n  silverlistingbanner: \"/listingPage\",\n  FeaturedProduct: \"/featuredproduct\",\n\n  Comments: \"/comments\",\n  Newarrival: \"/newarrival\",\n};\n\nexport default route;\n","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from \"react\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { withRouter } from \"react-router-dom\";\nimport { useStyles } from \"./styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { ProductContext } from \"../../context\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { GlobalContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nimport { Paper, Avatar, Typography } from \"@material-ui/core\";\nimport data from \"../menupages.json\";\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { isreload, setIsreload } = React.useState(false);\n  let accesspages = localStorage.getItem(\"accesspages\");\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\n  };\n  const handleClick = (type) => (e) => {\n    if (type === \"Pricing\" || type == \"Inventory & Shipping Setup\") {\n      setGlobalCtx({\n        ...globalCtx,\n        optionname: type,\n        selectedIndex: 5,\n        isExpand: !globalCtx.isExpand,\n      });\n    } else {\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\n    }\n  };\n  async function getmasterpages() {\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\n    let pages = [];\n    let pagepermissions = [];\n\n    pageaccess.pages.forEach((element) => {\n      pages.push(element.pageurl);\n      if (element.is_write) {\n        pagepermissions.push(element.pageurl);\n      }\n    });\n    // setPages(pageaccess)\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\n    //setIsreload(true)\n\n    localStorage.setItem(\"accesspages\", pages);\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\n\n    window.location.reload();\n  }\n  React.useEffect(() => {\n    //alert(globalCtx.accesspages)\n    if (!accesspages) {\n      // getmasterpages()\n    } else {\n      //  setIsreload(true)\n    }\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\n\n    console.log(\"pagess\", accesspages);\n  }, []);\n  function handleListItemClick(event, index) {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\n  }\n\n  return (\n    <>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>{theme.direction === \"rtl\" ? <ChevronRightIcon /> : <ChevronLeftIcon />}</IconButton>\n        </div>\n        <Divider />\n\n        <List>\n          {data.menus.map((menuobj, index) => (\n            <React.Fragment key={index}>\n              {menuobj.submenu ? (\n                <>\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <>\n                      <ListItem button onClick={handleClick(menuobj.name)}>\n                        <ListItemIcon>\n                          {/* <InboxIcon /> */}\n                          <img style={{ width: \"18px\" }} src={menuobj.icon} alt=\"NAC Console\"></img>\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                        {globalCtx.isExpand && globalCtx.optionname === menuobj.name ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Collapse in={globalCtx.isExpand && globalCtx.optionname === menuobj.name} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                          {menuobj.submenu.map((submenuobj, subindex) => (\n                            <React.Fragment key={subindex}>\n                              {accesspages && accesspages.indexOf(submenuobj.url) > -1 ? (\n                                <Link underline=\"none\" component={RouterLink} to={submenuobj.url}>\n                                  <ListItem\n                                    button\n                                    className={classes.nested}\n                                    selected={globalCtx.selectedIndex === subindex}\n                                    onClick={(event) => handleListItemClick(event, subindex)}\n                                  >\n                                    <ListItemIcon>\n                                      <img style={{ width: \"18px\" }} src={submenuobj.icons} alt=\"NAC Console\"></img>\n                                    </ListItemIcon>\n                                    <ListItemText primary={submenuobj.name} />\n                                  </ListItem>\n                                </Link>\n                              ) : null}\n                            </React.Fragment>\n                          ))}\n                        </List>\n                      </Collapse>{\" \"}\n                    </>\n                  ) : null}\n                </>\n              ) : (\n                <>\n                  {\" \"}\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <Link underline=\"none\" component={RouterLink} to={menuobj.url}>\n                      <ListItem\n                        button\n                        key={\"Product List\"}\n                        selected={globalCtx.optionname === menuobj.name}\n                        onClick={handleClick(menuobj.name)}\n                      >\n                        <ListItemIcon>\n                        <img\n                            style={{ width: \"18px\" }}\n                            src={menuobj.icon}\n                            alt=\"NAC Icon\"\n                          ></img>\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                      </ListItem>\n                    </Link>\n                  ) : null}{\" \"}\n                </>\n              )}\n            </React.Fragment>\n          ))}\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link> */}\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport { useStyles } from \"./styles\";\nimport { withRouter } from \"react-router-dom\";\nimport SideBar from \"../SideBar\";\nimport { GlobalContext } from \"../../context\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport \"./style.css\";\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handlelogout() {\n    localStorage.removeItem(\"accesstoken\");\n    window.location = \"/\";\n  }\n\n  function handleDrawer() {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n  }\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem> */}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: globalCtx.sideBarOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{ color: \"#fff\" }} variant=\"h4\" noWrap>\n            Stylori\n          </Typography>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = (props) => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return (\n    <main className={classes.content}>\n      <div className={classes.toolbar} />\n      <Component {...rest} />\n    </main>\n  );\n};\n\nexport const withAppBar = (component, props) => {\n  return (\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n};\n\nexport default PrimaryAppBar;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport route from \"./route\";\nimport { withAppBar } from \"../components/PrimaryAppBar\";\n\nconst PrivateRoute = (props) => {\n  const { component, ...rest } = props;\n\n  const checkAuth = () => {\n    let accesstoken = localStorage.getItem(\"accesstoken\");\n    if (accesstoken) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const Component = (props) => withAppBar(component, props);\n  return checkAuth() ? (\n    rest.path === \"/\" || rest.path === \"/login\" ? (\n      <Redirect to={route.productlist} />\n    ) : (\n      <Component {...rest} />\n    )\n  ) : (\n    <Redirect to={route.login} />\n  );\n};\n\nexport default PrivateRoute;\n","import ApolloClient from \"apollo-boost\";\nimport React from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { Route, Switch } from \"react-router-dom\";\nimport FeaturedProduct from \"../components/FeaturedProduct/FeaturedProduct.js\";\nimport Newarrival from \"../components/Newarrival/NewArrival\";\nimport Review from \"../components/Review/Review\";\nimport { GlobalContext } from \"../context\";\nimport { NetworkProvider } from \"../context/NetworkContext\";\nimport { ProductContext } from \"../context/ProductuploadContext\";\nimport {\n  Addshippingattributes,\n  Addtaxattributes,\n  CategoryList,\n  Configuration,\n  Customerdetails,\n  Dashboard,\n  DiscountList,\n  Earringbacking,\n  Goldpriceupdate,\n  HolidayManager,\n  Inventory,\n  Login,\n  Manageadminusers,\n  Manageusers,\n  Markupprice,\n  Masterattribute,\n  Mastercategories,\n  Mastercollections,\n  Masterdesigns,\n  Masterdiamonds,\n  Masterdiamondsettings,\n  Masterdiamondshapes,\n  Mastergemsettings,\n  Mastergemshapes,\n  Mastergemtypes,\n  Mastergenders,\n  Mastermetalcolors,\n  Masteroccassions,\n  Masterorderstatus,\n  Masterpaymentstatus,\n  Masterproducttypes,\n  Masterpurities,\n  Masterroles,\n  Masterscreens,\n  Masterstonecolors,\n  Masterstones,\n  Masterstoneshapes,\n  Masterstyles,\n  Masterthemes,\n  Masterweights,\n  Materialmaster,\n  OrderList,\n  OrderManagementDetails,\n  Priceupdate,\n  Productlist,\n  Productupload,\n  Salediscount,\n  Seopriority,\n  Shipmentsettings,\n  Shippingattributes,\n  Shippingzones,\n  Taxsettings,\n  Taxsetup,\n  Useraddresses,\n  Userconfiguration,\n  Userwishlist,\n  Vendorlist,\n  Vendorprice,\n  Voucherdiscount,\n  VoucherdiscountListing,\n  Warehouse,\n} from \"../screens\";\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\nimport cmshome from \"../screens/cms/cmshome\";\nimport Silverbanner from \"../screens/cms/silverbanner/silverbanner\";\nimport SilverListingbanner from \"../screens/cms/silverbanner/silverListingBanner/silverListingBanner\";\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport route from \"./route\";\n\nconst MainApp = () => {\n  const { globalCtx } = React.useContext(GlobalContext);\n  const { productCtx } = React.useContext(ProductContext);\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\n\n  return (\n    <ApolloProvider client={client}>\n      {/* <ProductProvider > */}\n      <NetworkProvider>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Login} />\n          <Route path={route.login} component={Login} />\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\n          <PrivateRoute path={route.productupload} component={Productupload} />\n          <PrivateRoute path={route.configuration} component={Configuration} />\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\n          <PrivateRoute path={route.productlist} component={Productlist} />\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n          <PrivateRoute path={route.cmshome} component={cmshome} />\n          <PrivateRoute\n            path={route.producttypes}\n            component={Masterproducttypes}\n          />\n          <PrivateRoute\n            path={route.voucherdiscount}\n            component={Voucherdiscount}\n          />\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n          <PrivateRoute path={route.orderlist} component={OrderList} />\n          <PrivateRoute path={route.userorders} component={OrderList} />\n          <PrivateRoute path={route.address} component={Useraddresses} />\n\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n          <PrivateRoute path={route.category} component={Mastercategories} />\n          <PrivateRoute\n            path={route.masterattributes}\n            component={Masterattribute}\n          />\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\n          <PrivateRoute\n            path={route.masterstonecolors}\n            component={Masterstonecolors}\n          />\n          <PrivateRoute\n            path={route.masterstoneshapes}\n            component={Masterstoneshapes}\n          />\n          <PrivateRoute path={route.weights} component={Masterweights} />\n          <PrivateRoute\n            path={route.masteroccassions}\n            component={Masteroccassions}\n          />\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\n          <PrivateRoute\n            path={route.manageadminusers}\n            component={Manageadminusers}\n          />\n          <PrivateRoute\n            path={route.goldpriceupdate}\n            component={Goldpriceupdate}\n          />\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\n          <PrivateRoute\n            path={route.customerdetails}\n            component={Customerdetails}\n          />\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\n          <PrivateRoute\n            path={route.orderdetails}\n            component={OrderManagementDetails}\n          />\n\n          <PrivateRoute\n            path={route.userconfiguration}\n            component={Userconfiguration}\n          />\n\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n          <PrivateRoute\n            path={route.mastermaterial}\n            component={Materialmaster}\n          />\n          <PrivateRoute\n            path={route.mastercolors}\n            component={Mastermetalcolors}\n          />\n          <PrivateRoute\n            path={route.masterpurities}\n            component={Masterpurities}\n          />\n          <PrivateRoute\n            path={route.salediscountlist}\n            component={DiscountList}\n          />\n          <PrivateRoute\n            path={route.voucherdiscountlist}\n            component={VoucherdiscountListing}\n          />\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n          <PrivateRoute\n            path={route.mastercollections}\n            component={Mastercollections}\n          />\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n          <PrivateRoute\n            path={route.masterdiamonds}\n            component={Masterdiamonds}\n          />\n          <PrivateRoute\n            path={route.diamondsettings}\n            component={Masterdiamondsettings}\n          />\n          <PrivateRoute\n            path={route.diamondshapes}\n            component={Masterdiamondshapes}\n          />\n          <PrivateRoute\n            path={route.earringbacking}\n            component={Earringbacking}\n          />\n          <PrivateRoute\n            path={route.gemsettings}\n            component={Mastergemsettings}\n          />\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n          <PrivateRoute\n            path={route.masterpaymentstatus}\n            component={Masterpaymentstatus}\n          />\n          <PrivateRoute\n            path={route.masterorderstatus}\n            component={Masterorderstatus}\n          />\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n          <PrivateRoute\n            path={route.shippingattributes}\n            component={Shippingattributes}\n          />\n          <PrivateRoute\n            path={route.addshippingattributes}\n            component={Addshippingattributes}\n          />\n          <PrivateRoute\n            path={route.addtaxattributes}\n            component={Addtaxattributes}\n          />\n\n          <PrivateRoute path={route.gender} component={Mastergenders} />\n          <PrivateRoute path={route.seo} component={Seopriority} />\n\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n          <PrivateRoute\n            exact\n            path={route.editdiscount}\n            component={Salediscount}\n          />\n\n          <PrivateRoute\n            exact\n            path={`${route.productAttributes}/:id`}\n            component={ProductAttributes}\n          />\n          <PrivateRoute\n            exact\n            path={`${route.createVariant}`}\n            component={CreateVariant}\n          />\n          <PrivateRoute\n            path={route.shipmentsettings}\n            component={Shipmentsettings}\n          />\n          <PrivateRoute\n            path={route.holiday_manager}\n            component={HolidayManager}\n          />\n          <PrivateRoute path={route.warehouse} component={Warehouse} />\n          <PrivateRoute path={route.inventory} component={Inventory} />\n          <PrivateRoute path={route.silverbanner} component={Silverbanner} />\n          <PrivateRoute\n            path={route.silverlistingbanner}\n            component={SilverListingbanner}\n          />\n          <PrivateRoute\n            path={route.FeaturedProduct}\n            component={FeaturedProduct}\n          />\n          <PrivateRoute path={route.Comments} component={Review} />\n          <PrivateRoute path={route.Newarrival} component={Newarrival} />\n        </Switch>\n      </NetworkProvider>\n      {/* </ProductProvider> */}\n    </ApolloProvider>\n  );\n};\n\nexport default MainApp;\n","import React from \"react\";\nimport { Alerts as Alert } from \"./components\";\nimport { AlertProps, AlertContext } from \"./context\";\n\nclass AppAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      severity: AlertProps.severity.success,\n      msg: \"\",\n      vertical: AlertProps.vertical.top,\n      horizontal: AlertProps.horizontal.center,\n    };\n  }\n\n  close = () => {\n    this.setState({\n      open: false,\n      severity: AlertProps.severity.success,\n      msg: \"\",\n      vertical: AlertProps.vertical.top,\n      horizontal: AlertProps.horizontal.center,\n    });\n  };\n\n  set = (props) => {\n    this.setState({ ...props });\n  };\n\n  render() {\n    return (\n      <AlertContext.Provider\n        value={{\n          ...this.state,\n          onclose: this.close,\n          setSnack: this.set,\n        }}\n      >\n        {this.state.open ? <Alert {...this.state} onclose={this.close} /> : \"\"}\n        {this.props.children}\n      </AlertContext.Provider>\n    );\n  }\n}\n\nexport default AppAlert;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport MainApp from \"./routes\";\nimport { GlobalProvider } from \"./context\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport AppAlert from \"./App.Alert\";\n\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n\n//       'Roboto'\n\n//     ].join(','),\n//   },\n// });\nfunction App() {\n  return (\n    <GlobalProvider>\n      <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n          <Router >\n            <AppAlert>\n              <MainApp />\n            </AppAlert>\n          </Router>\n        </div>\n      </MuiThemeProvider>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}