{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/SelectPlaceholder.js","context/GlobalContext.js","config.js","context/ProductuploadContext.js","context/MaterialContext.js","screens/Productupload/AddressForm.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","components/Vendors/Vendors.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/ProducttypeList/components/Header/Header.js","screens/ProducttypeList/components/Results/Results.js","screens/ProducttypeList/Producttypecontent.js","screens/ProducttypeList/ProducttypeList.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/Voucherdiscount.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","routes/index.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","materiallist","producttypes","voucherdiscount","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","theme","root","card","breakpoints","values","md","maxWidth","display","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","LoginForm","className","classes","_useState","useState","isValid","touched","errors","_useState2","slicedToArray","formState","setFormState","useEffect","handleChange","event","persist","objectSpread","target","name","type","checked","value","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","arguments","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","onSubmit","error","fullWidth","email","label","onChange","password","Button","size","CardMedia","src","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","React","Component","withRouter","Dashboard_","Container","component","Input_Input","Dashboard","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingLeft","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","SelectPlaceholder","_this","call","onFocus","setState","onBlur","_this$props","state","SelectPlaceholder_SelectView","globalCtxInitial","globalCtx","auth","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","createContext","GlobalProvider","Consumer","_React$useState","_React$useState2","Provider","productuploadCtxInitial","productCtx","product_categoy","steps","product_type","productname","material","product_type_shortcode","category","metalColour","metalpurities","selectedgender","selected_metal_colour","gender","vendorcode","productseries","sizes","selected_sizes","metal","materials","gemstontypes","gemstonshapes","product_code","gemstonelist","diamondlist","gemstonetype","gemstoneshape","gemstonesetings","gemstonesize","gemstonecount","gemstoneweight","stonetype","diamondclarity","diamondcolor","diamondsettings","diamondshape","diamondcount","diamondweight","metalindex","themes","prod_styles","occassions","collections","stonecount","stonecolour","product_images","metalcolour","metal_purity","metalpurity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","metals","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mapper","mappertype","keys","length","ProductProvider","console","info","data","materialCtxInitial","materialCtx","materialMaster","setMaterialCtx","MaterialContext","log","JSON","stringify","MaterialProvider","setmaterialCtx","AddressForm","_React$useContext","useContext","handlechange","selectedOption","minvalue","maxvalue","shortCode","i","push","handleTextChange","handleInputChange","_objectSpread4","index","indexOf","splice","index1","indexval","Fragment","container","sm","id","Box","mt","components_SelectPlaceholder","options","isMulti","_objectSpread5","material_names","forEach","element","productvendorcode","earringbacking","includes","PaymentForm","purityChange","disabled","autoComplete","default_size","button","paper","gempapper","leftIcon","rightIcon","marginLeft","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","clearmetalvalue","metalname","settings","clarity","count","weight","gemstonesettings","handleClick","metalsarr","stonedetails","Paper","diamondclarities","diamondcolors","diamondshapes","justify","onClick","Table","table","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","Edit_default","Delete_default","deletematerial","valueContainer","flex","alignItems","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","vendorDelivaryDays","isreorder","default_metal_colour","default_metal_purity","default_metal_size","styles","occasions","stones","gemstonecolor","PRODUCTCATEGORY","gql","_templateObject","queries_templateObject","MATERIALMASTER","_templateObject2","productCategory","query","response","allMasterProductCategories","nodes","_","allMasterProductTypes","allMasterMaterials","allMasterGenders","allMasterVendors","allMasterDiamondsSettings","allMasterDiamondsShapes","allMasterThemes","allMasterStyles","allMasterOccasions","allMasterCollections","allMasterStonesColors","allMasterStones","allMasterMetalsColors","allMasterMetalsPurities","allMasterDiamondsColors","allMasterDiamondClarities","allProductLists","productSeries","allMasterGemstonesTypes","allMasterGemstonesShapes","alias","allMasterGemstonesSettings","allMasterEarringBackings","apidata","initialNetworkCtx","networkCtx","status","called","loading","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","url","params","method","headers","resdata","token","_args","undefined","Content-Type","localStorage","getItem","window","location","fetch","body","isString","sent","json","alert","statusText","abrupt","_x2","_x3","NetworkContext","NetworkProvider","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","img","objectFit","control","setMetalcolour","_React$useState3","_React$useState4","files","setFiles","uploadimagetoserver","_x4","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","imagecolourobj","imageobj","_imageobj","charAt","unshift","direction","imageindex","react_filepond","labelIdle","allowMultiple","maxFiles","onupdatefiles","fileItem","onaddfile","onremovefile","source","server","load","then","res","blob","fileItems","removedfile","removefiles","Plot","createPlotlyComponent","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","marginBottom","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","formdata","purity","default_metal_color","diamond","gemstone","product_vendor_code","stonecolours","defaultsize","defaultmetalsize","progress","_useQuery","useQuery","CircularProgress","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","columns","format","toFixed","useStyles1","flexShrink","secondary","TablePaginationActions","page","rowsPerPage","onChangePage","IconButton","aria-label","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","useStyles2","tableWrapper","overflowX","AddContact","setPage","setRowsPerPage","emptyRows","min","contactlist","stickyHeader","column","slice","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Vendorlist","Productlist","text-align","Product_AddContact","Header","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","success","contrastText","main","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","border","defaultProps","filterButton","inner","actions","Results","orders","_useState3","_useState4","_useState5","_useState6","CardHeader","Divider","order","Create_default","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","action","Producttypecontent","ProducttypeList_components_Header_Header","ProducttypeList_components_Results_Results","ProducttypeList","option","cursor","& + &","cardcontent","optionRadio","optionDetails","AboutVoucher","selected","setSelected","categories","CardActionArea","Radio","tabs","VoucherComponent","selectedtab","setSelectedtab","Tabs","scrollButtons","tab","Tab","aboutvoucher","Voucherdiscountcontent","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","Voucherdiscount","grow","menuButton","search","fade","common","&:hover","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","minHeight","_clsx2","_React$useContext2","Drawer","open","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","primary","PrimaryAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","MainApp","client","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","react_router","exact","path","routes_PrivateRoute","black","dark","light","warning","blueGrey","link","default","typography","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","App","GlobalContext_GlobalProvider","MuiThemeProvider","react_router_dom","routes","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a964de2.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    materiallist: '/material',\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount'\n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={<b>{helperText}</b>}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    width: theme.breakpoints.values.md,\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\n\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  \n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    // const errors = validate(formState.values, schema);\n\n    // setFormState(formState => ({\n    //   ...formState,\n    //   isValid: errors ? false : true,\n    //   errors: errors || {}\n    // }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // dispatch(login());\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Sign in\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        Sign in on the internal platform\n        </Typography>\n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Sign in\n          </Button>\n        </form>\n       \n      </CardContent>\n      <CardMedia\n        className={classes.media}\n        title=\"Cover\"\n\n      >\n             <div className={classes.person}>\n                <img src=\"/images/shape1.png\"\n                 />\n              </div> \n        {/* <Typography\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n            Hella narvwhal Cosby sweater McSweeney's, salvia kitsch before they\n            sold out High Life.\n        </Typography>\n        <div className={classes.person}>\n        \n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src=\"/images/avatar_2.png\"\n            backgroundImage=\"/images/blob-shape.svg\"\n          />\n          <div>\n            <Typography\n              color=\"inherit\"\n              variant=\"body1\"\n            >\n                Ekaterina Tankova\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"body2\"\n            >\n                Manager at inVision\n            </Typography>\n          </div>\n        </div> */}\n      </CardMedia>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  height: 55,\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\nexport const API_URL = \"https://api.stylori.net\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api.stylori.net/graphql\"\n\n// export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8000\"","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {\n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step4','Step5','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[{\n            value:1,\n            label:\"1\"\n        },{\n            value:2,\n            label:\"2\"\n        },{\n            value:3,\n            label:\"3\"\n        },{\n            value:4,\n            label:\"4\"\n        }],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        gemstonelist:[],\n        diamondlist:[],\n\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesetings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[]\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\n\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\n\n  \n  \nexport default function AddressForm() {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 26\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 19\n\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n              if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step4','Step5','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    \n    \n  return (\n\n    <React.Fragment>\n    \n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6} spacing={1}>\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={productCtx.productname}\n                      id=\"productname\"\n                      name=\"productname\"\n                      label=\"Product Name\"\n                      onChange={handleTextChange('productname')}\n                      />\n       \n          </Grid>  \n          \n          <Grid item xs={12} sm={6} spacing={1}>\n            <Box mt={1} >\n            <SelectPlaceholder\n                    placeholder=\"Select Product Type\"\n                    value={productCtx.product_type}\n                    placeholderzindex=\"6\"\n                    selectzindex=\"6\"\n                    placeholderUp={productCtx.product_type ? true : false}\n\n                    onChange={handlechange('product_type')}\n                    options={productCtx.masterData.product_type}\n                  />\n            </Box>      \n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n                  <SelectPlaceholder\n                  value={productCtx.product_categoy}\n                    placeholder=\"Select Product Category\"\n                    placeholderzindex=\"6\"\n                    selectzindex=\"6\"\n                    options={productCtx.masterData.category}\n                    onChange={handlechange('product_categoy')}\n                    placeholderUp={productCtx.product_categoy ? true : false}\n\n                  />\n            </Grid>\n\n            \n           \n            <Grid item xs={12} sm={6}>\n                <SelectPlaceholder\n                    placeholder=\"Select Product Materials\"\n                    isMulti\n                    style={{zIndex: 500}}\n                    value={productCtx.material}\n                    placeholderzindex=\"5\"\n                    selectzindex=\"5\"\n                    onChange={materialChange('material')}\n                    options={productCtx.masterData.material}\n                    placeholderUp={productCtx.material ? true : false}\n\n                  />\n                             \n          \n\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n                <Box mt={1} >\n            <SelectPlaceholder\n                    className=\"suboverlay\"\n                    fullWidth\n                    value={productCtx.vendorcode}\n                    placeholder=\"Select Vendor Code\"\n                    onChange={handlevendorChange}\n                    placeholderzindex=\"5\"\n                    selectzindex=\"5\"\n                    placeholderUp={productCtx.vendorcode ? true : false}\n                    options={productCtx.masterData.vendorcode}\n                  />\n                </Box>\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Product Vendor Code\"\n                      fullWidth\n                      value={productCtx.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            \n                <Box mt={1} >\n            <SelectPlaceholder\n           \n                    placeholder=\"Earring Backing\"\n                    value={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking}\n                    onChange={handleInputChange('earringbacking')}\n                    placeholderzindex=\"4\"\n                    selectzindex=\"4\"\n                    \n                    placeholderUp={productCtx.earringbacking ? true : false}\n                  />\n                </Box>\n            </Grid>        \n            <Grid item xs={12} sm={6}>\n            \n                <Box mt={1} >\n            <SelectPlaceholder\n                    placeholder=\"Select Gender\"\n                    value={productCtx.selectedgender}\n                    placeholderzindex=\"3\"\n                    selectzindex=\"3\"\n                    options={productCtx.masterData.gender}\n                    onChange={handleInputChange('selectedgender')}\n                    placeholderUp={productCtx.selectedgender ? true : false}\n                  />\n                </Box>\n            </Grid>\n\n            <Grid item xs={12} sm={6} spacing={1}>\n                <Box mt={1} >\n                <SelectPlaceholder\n                        isMulti\n                        isDisabled = {!['BA','R','BR'].includes(productCtx.product_type_shortcode)}\n                        placeholder=\"Select Product Size\"\n                        onChange={handlesizeChange}\n                        placeholderzindex=\"2\"\n                       selectzindex=\"2\"\n                        placeholderUp={productCtx.selected_sizes.length ? true : false}\n                        value={productCtx.selected_sizes}\n                        options={productCtx.sizes}\n                      />\n                </Box>      \n                </Grid>\n        \n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\n\n\n\nexport default function PaymentForm() {\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n\n  return (\n    <React.Fragment>\n      \n\n      <Grid container spacing={1}>\n      <Grid item xs={6} sm={3}>\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n      </Grid>\n      \n     <Grid item xs={6} sm={3}>      \n          {/* <FormLabel component=\"legend\" >Material Purity</FormLabel> */}\n           <Box mt={1} >         \n          <SelectPlaceholder\n                    isMulti\n                    value = {productCtx.metalpurity}\n                    placeholder=\"Metal Purity\"\n                    onChange={purityChange('metalpurity')}\n                    options={productCtx.masterData.metalpurity}\n                    placeholderzindex=\"4\"\n                selectzindex=\"4\"\n                 placeholderUp={productCtx.metalpurity.length ? true : false}\n                  />\n          </Box>          \n          \n    </Grid>\n    \n\n    <Grid item xs={6} sm={3}>\n      \n      \n      {/* <FormLabel component=\"legend\" >Metal Colour</FormLabel> */}\n       <Box mt={1} >         \n      <SelectPlaceholder\n                isMulti\n                value = {productCtx.metalcolour}\n                placeholder=\"Metal Colour\"\n                onChange={purityChange('metalcolour')}\n                options={productCtx.masterData.metalcolour}\n                placeholderzindex=\"3\"\n                selectzindex=\"3\"\n                 placeholderUp={productCtx.metalcolour.length ? true : false}\n              />\n      </Box>          \n      \n</Grid>\n<Grid item xs={3} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Default Size for Price\"\n    name=\"size\"\n    autoComplete=\"size\"\n    onChange = {handleInputChange('default_size')}\n    value={productCtx.default_size}\n    \n    />\n</Grid>\n      \n     <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Weight for Default Size\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_weight')}\n          value={productCtx.metal_weight === 0 ? \"\" : productCtx.metal_weight}\n          \n          />\n    </Grid>\n    <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n    </Grid>\n\n    <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid>\n           \n        \n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr })\n\n  }\n  function clearmetalvalue()\n  {\n    setProductCtx({ ...productCtx, \n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    if(productCtx.diamondclarity)\n    {\n      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n\n    }else{\n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }\n\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n      {!productCtx.material_names.includes(\"Diamond\") ? null : <Paper className={classes.paper} >\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                        <SelectPlaceholder\n                        fullWidth\n                        placeholder=\"Diamond Type/Clarity\"\n                        onChange={handleChange(\"diamondclarity\")}\n                        value={productCtx.diamondclarity}\n                        options={productCtx.masterData.diamondclarities  }\n                        placeholderzindex=\"9\"\n                        selectzindex=\"9\"\n                        placeholderUp={productCtx.diamondclarity ? true : false}\n\n                      />\n              \n          \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      <SelectPlaceholder\n                      fullWidth\n                        placeholder=\"Diamond Colour\"\n                        onChange={handleChange('diamondcolor')}\n                        value={productCtx.diamondcolor}\n                        options={productCtx.masterData.diamondcolors}\n                        placeholderzindex=\"8\"\n                        selectzindex=\"8\"\n                        placeholderUp={productCtx.diamondcolor ? true : false}\n                      />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n            <SelectPlaceholder\n            fullWidth\n                        placeholder=\"Diamond Setting\"\n                        onChange={handleChange('diamondsettings')}\n                        value={productCtx.diamondsettings}\n                        options={productCtx.masterData.diamondsettings}\n                        placeholderzindex=\"7\"\n                        selectzindex=\"7\"\n                        placeholderUp={productCtx.diamondsettings ? true : false}\n                      />\n        </Grid>\n        <Grid item xs={4} >\n      \n        <SelectPlaceholder\n\n                        placeholder=\"Diamond Shape\"\n                        value={productCtx.diamondshape}\n                        onChange={handleChange('diamondshape')}\n                        options={productCtx.masterData.diamondshapes}\n                        placeholderzindex=\"6\"\n                        selectzindex=\"6\"\n                        placeholderUp={productCtx.diamondshape ? true : false}\n                      />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      \n      \n        </Paper>\n      }\n\n      {!productCtx.material_names.includes(\"Gemstone\") ? null : <Paper className={classes.gempapper} >\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                  <SelectPlaceholder\n                      placeholder=\"Gemstone Type\"\n                      value={productCtx.gemstonetype}\n                      onChange={handleChange('gemstonetype')}\n                      options={productCtx.masterData.gemstontypes}\n                      placeholderzindex=\"5\"\n                      selectzindex=\"5\"\n                      placeholderUp={productCtx.gemstonetype ? true : false}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n      <SelectPlaceholder\n                      placeholder=\"Gemstone Shape\"\n                      value={productCtx.gemstoneshape}\n                      onChange={handleChange('gemstoneshape')}\n                      options={productCtx.masterData.gemstonshapes}\n                      placeholderzindex=\"4\"\n                      selectzindex=\"4\"\n                      placeholderUp={productCtx.gemstoneshape ? true : false}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          <SelectPlaceholder\n                      placeholder=\"Gemstone Setting\"\n                      value={productCtx.gemstonesettings}\n                      onChange={handleChange('gemstonesettings')}\n                      options={productCtx.masterData.gemstonesettings}\n                      placeholderzindex=\"3\"\n                      selectzindex=\"3\"\n                      placeholderUp={productCtx.gemstonesettings ? true : false}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </Paper>\n      }\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n        <Grid item xs={6} >\n        </Grid> \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    <Grid item xs={12} sm={4} >\n    <TextField fullWidth\n        label=\"Vendor Code\"\n        id=\"simple-start-adornment\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        value={productCtx.vendorcode.shortCode}\n        \n      />\n    </Grid>\n    \n    <Grid item xs={12} sm={4}>\n    <TextField fullWidth\n        label=\"Vendor Lead Time\"\n        id=\"simple-start-adornment\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        value={productCtx.vendorcode.vendorDelivaryDays+\" days\"}\n        \n      />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n                  <SelectPlaceholder\n                    value={productCtx.isreorder}\n                    placeholder=\"Reorderable\"\n                    onChange={handleChange('isreorder')}\n                    options={[{value:'Yes',label:'Yes'},{value:'No',label:'No'}]}\n                    placeholderzindex=\"5\"\n                    selectzindex=\"5\"\n                     placeholderUp={productCtx.isreorder ? true : false}\n                 />\n    </Grid>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Default SKU For Display\n          </Typography> \n    </Grid>\n    <Grid item xs={4} >\n\n                  \n                  <SelectPlaceholder\n                    value={productCtx.default_metal_colour}\n                    placeholder=\"Metal Colour\"\n                    onChange={handleChange('default_metal_colour')}\n                    options={productCtx.metalcolour}\n                    placeholderzindex=\"4\"\n                    selectzindex=\"4\"\n                     placeholderUp={productCtx.default_metal_colour ? true : false}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n              <SelectPlaceholder\n                    value={productCtx.default_metal_purity}\n                    placeholder=\"Metal Purity\"\n                    onChange={handleChange('default_metal_purity')}\n                    options={productCtx.metalpurity}\n                    placeholderzindex=\"3\"\n                    selectzindex=\"3\"\n                     placeholderUp={productCtx.default_metal_purity ? true : false}\n                  />\n   \n    </Grid>\n    <Grid item xs={4} >\n              <SelectPlaceholder\n                    value={productCtx.default_metal_size}\n                    isDisabled = {!['BA','R','BR'].includes(productCtx.product_type_shortcode)}\n                    placeholder=\"Size\"\n                    onChange={handleChange('default_metal_size')}\n                    options={productCtx.default_metal_size}\n                    placeholderzindex=\"3\"\n                    selectzindex=\"3\"\n                     placeholderUp={productCtx.default_metal_size ? true : false}\n\n                  />\n   \n    </Grid>\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport { ProductContext } from '../../context';\n\nexport default function Review() {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                          <SelectPlaceholder\n                          placeholder=\"Themes\"\n                          isMulti\n                          value={productCtx.themes}\n                          onChange={handleChange('themes')}\n                          options={productCtx.masterData.themes}\n                          placeholderzindex=\"8\"\n                          selectzindex=\"8\"\n                           placeholderUp={productCtx.themes.length ? true : false} />\n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    <SelectPlaceholder\n        placeholder=\"Style\"\n        isMulti\n        value={productCtx.prod_styles}\n        onChange={handleChange('prod_styles')}\n        options={productCtx.masterData.styles}\n        placeholderzindex=\"7\"\n        selectzindex=\"7\"\n         placeholderUp={productCtx.prod_styles.length ? true : false}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    <SelectPlaceholder\n        placeholder=\"Occasions\"\n        isMulti\n        value={productCtx.occassions}\n        onChange={handleChange('occassions')}\n        options={productCtx.masterData.occasions}\n        placeholderzindex=\"6\"\n        selectzindex=\"6\"\n         placeholderUp={productCtx.occassions.length ? true : false}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n    <SelectPlaceholder\n        placeholder=\"Collections\"\n        isMulti\n        value={productCtx.collections}\n        onChange={handleChange('collections')}\n        options={productCtx.masterData.collections}\n        placeholderzindex=\"5\"\n        selectzindex=\"5\"\n         placeholderUp={productCtx.collections.length ? true : false}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n    <SelectPlaceholder\n        placeholder=\"Number of stones\"\n        value={productCtx.stonecount}\n        onChange={handleChange('stonecount')}\n        options={productCtx.masterData.stones}\n        placeholderzindex=\"4\"\n        selectzindex=\"4\"\n       placeholderUp={productCtx.stonecount ? true : false}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n    <SelectPlaceholder\n        placeholder=\"Stone Colour\"\n        value={productCtx.stonecolour}\n        onChange={handleChange('stonecolour')}\n        isMulti\n        options={productCtx.masterData.gemstonecolor}\n        placeholderzindex=\"3\"\n        selectzindex=\"3\"\n         placeholderUp={productCtx.stonecolour.length ? true : false}\n      />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n </React.Fragment>\n  );\n}","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export {\n    PRODUCTCATEGORY\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n\n\nexport const MATERIALMASTER = gql`query {\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\n\nexport const materialMaster = {\n    query: MATERIALMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        return {\n            materials\n        }\n    }\n\n\n}","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'token'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n        else window.location = '/'\n    }\n    const response = await fetch(url, {\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    })\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    }\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour.name)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n\n    })\n    setMetalcolour(metalcolour)\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n  let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (\"S\"+productCtx.product_type_shortcode+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"url\":\"https://source.unsplash.com/random\"\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (\"S\"+productCtx.product_type_shortcode+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"url\":\"https://source.unsplash.com/random\"\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n    setFiles([])\n  }\n\n  //  let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension})\n  //  var returnData = responsedata.data.returnData;\n  //  var signedRequest = returnData.signedRequest;\n  //  var url = returnData.url;\n  //  console.log(\"responseurl\"+url);\n  //  // Put the fileType in the headers for the upload\n  //  var options = {\n  //      headers: {\n  //          'Content-Type': bodaydata.fileExtension,\n  //          'Access-Control-Allow-Origin':'*'\n  //      }\n  //  };\n  //  axios.put(signedRequest, bodaydata.file, options)\n  //      .then(result => {\n  //         alert(url);\n  //      })\n  //      .catch(error => {\n  //      })\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n      alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={1}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))}\n            <Grid xs={3} item>\n              <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={1}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(4, 0, 5),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleNext = () => {\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n      var formdata = {\n        productname: productCtx.productname,\n        product_categoy:productCtx.product_categoy,\n        product_type:productCtx.product_type,\n        materials:productCtx.material,\n        metals:productCtx.metals,\n        gender: productCtx.selectedgender,\n        size: productCtx.selected_sizes,\n        vendor: productCtx.vendorcode,\n        product_code:productCtx.product_code,\n        purity:productCtx.metalpurity,\n        metal_color:productCtx.metalcolour,\n        default_metal_color:productCtx.default_metal_colour,\n        default_metal_purity:productCtx.default_metal_purity,\n        diamond:productCtx.diamondlist,\n        gemstone:productCtx.gemstonelist,\n        metal_height: productCtx.metal_height,\n        metal_weight: productCtx.metal_weight,\n        metal_length: productCtx.metal_length,\n        metal_width: productCtx.metal_width,\n        themes: productCtx.themes,\n        style: productCtx.prod_styles,\n        product_vendor_code: productCtx.productvendorcode,\n        earringbacking: productCtx.earringbacking,\n        occassions: productCtx.occassions,\n        collections: productCtx.collections,\n        stonecount: productCtx.stonecount,\n        stonecolours: productCtx.stonecolour,\n        isreorder : productCtx.isreorder,\n        defaultsize: productCtx.default_size,\n        defaultmetalsize: productCtx.default_metal_size\n\n     }\n     sendNetworkRequest('/productupload', {}, formdata)\n     }\n    \n     \n      setActiveStep(activeStep + 1);\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    \n    <Grid item xs={12} sm={12}  >\n\n        <Paper className={classes.paper}>\n          <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n            Product Upload\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n                      </Stepper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. We have emailed your order confirmation, and will\n                  send you an update when your order has shipped.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Place order' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities']\n  const master_options_url = ['material','producttypes', 'Materials','Metal Colours','Metal Purities']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Vendor Name', minWidth: 200 },\n  { id: 'SKU', label: 'Vendor Code', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendors from '../../components/Vendors'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport const Vendorlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Vendor\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Vendors contactlist={[\n        {\n            \"name\":\"NAC1\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Vendorlist;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 200 },\n  { id: 'SKU', label: 'SKU', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product contactlist={[\n        {\n            \"name\":\"NAC\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Category\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Producttypecontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const ProducttypeList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default ProducttypeList;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n\n      <Grid   item xs={10} sm={10} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            label=\"Voucher Code\"\n            />\n      </Grid>\n\n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" className={classes.margin}>\n            Small\n          </Button>\n      </Grid>\n\n          \n\n        </Grid>\n        \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"title\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        {props.categories.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n                         {/* <FormControlLabel\n                               checked={selected === option}\n                               className={classes.Checkbox}\n                               fullWidth\n                               name='isHighlyImportant'\n                               onChange={event => handleChange(event, option)}\n                               label={<Typography color={\"textSecondary\"} >\n                                   {option}\n                         </Typography>}\n                           /> */}\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            {/* <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>\n              </div> */}\n            \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}\n        </Grid>\n       \n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          />\n        </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === \"\"\n            })}\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={selected === \"checked\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleChange(event, \"checked\")}\n            />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea>\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"title\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n        {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n          \n          <Grid  item xs={3} sm={3} spacing={1}>\n          \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            key={option}\n          >\n            <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          </Grid>\n        ))}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"title\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid>\n\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === \"\"\n            })}\n            key={\"\"}\n          >\n            <Radio\n              checked={selected === \"checked\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, \"checked\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOption]: selected === \"\"\n  })}\n  key={\"\"}\n>\n  <Radio\n    checked={selected === \"checked\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleChange(event, \"checked\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Only once per order\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     If this option is disabled, discount will be counted for every eligible product\n    </Typography>\n    </div>\n  \n</div>\n  </Grid>\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"title\"\n          >\n            Active Dates\n            </Typography>\n          </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Purity', label: 'Purity' },\n  { value: 'Availability', label: 'Availability' },\n  { value: 'Styles', label: 'Styles' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"overview\");\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleTabsChange = (event, value) => {\n    setSelectedtab(value);\n  };\n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <CardContent className={classes.cardcontent}>\n      <Tabs\n        className={classes.tabs}\n        scrollButtons=\"auto\"\n        value={selectedtab}\n        onChange={handleTabsChange}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            selected\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n     </CardContent>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Voucherdiscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <VoucherComponent className={classes.aboutvoucher} />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default Voucherdiscount;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  function handleClick() {\n      \n      setGlobalCtx({ ...globalCtx, isExpand: !globalCtx.isExpand })\n\n  }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n      {/* <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Inbox\" />\n        {globalCtx.isExpand ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Starred\" />\n          </ListItem>\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Starred\" />\n          </ListItem>\n        </List>\n      </Collapse>\n */}\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            // className={classes.menuButton}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography  variant=\"h6\" noWrap>\n            NAC Jewellers\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        return true;\n    }\n\n    const Component = props => withAppBar(component, props);\n\n    return checkAuth() ? <Component {...rest} /> : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\n\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration, Vendorlist, Productlist, Materiallist, CategoryList, ProducttypeList, Voucherdiscount } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\n\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            <NetworkProvider>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.producttypes} component={ProducttypeList} />\n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n\n          </Switch>\n            </NetworkProvider>\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}