{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","components/Vendors/Vendors.js","screens/Vendorlist/Vendorlist.js","screens/Productlist/filterandsearch.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/ProducttypeList/components/Header/Header.js","screens/ProducttypeList/components/Results/Results.js","screens/ProducttypeList/Producttypecontent.js","screens/ProducttypeList/ProducttypeList.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/Header/Header.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","materiallist","producttypes","voucherdiscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","GOLDPRICELIST","_templateObject3","_templateObject5","DIAMONDMARKUP","_templateObject6","DIAMONDPRICELIST","_templateObject7","METALMASTER","MAKINGCHARGEPRICELIST","_templateObject8","GEMPRICELIST","_templateObject9","DELETEMARKUPPRICE","_templateObject10","_templateObject11","DELETEGOLDPRICE","_templateObject12","DELETEMAKINGCHARGE","_templateObject13","DELETEGEMCHARGE","_templateObject14","DELETEDIAMONDCHARGE","_templateObject15","PRODUCTDIAMONDTYPES","PRODUCTEDIT","queries_templateObject","ORDERS","queries_templateObject2","MATERIALMASTER","queries_templateObject3","productCategory","query","mapper","response","category","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","gender","allMasterGenders","vendorcode","allMasterVendors","display","diamondsettings","allMasterDiamondsSettings","diamondshapes","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","earringbacking","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","API_URL","GRAPHQL_DEV_CLIENT","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","useEffect","handleChange","persist","target","type","checked","handleSubmit","signinobj","statuscode","setItem","accessToken","history","push","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","size","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","& > * + *","FullLoader","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingLeft","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","Access-Control-Allow-Origin","image_url","axios","put","file","forEach","element","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","CircularProgress","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","columns","format","toFixed","useStyles1","flexShrink","secondary","TablePaginationActions","page","rowsPerPage","onChangePage","IconButton","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","useStyles2","tableWrapper","overflowX","AddContact","setPage","setRowsPerPage","emptyRows","min","contactlist","stickyHeader","column","slice","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Vendorlist","Vendors_AddContact","useStyless","border","&:hover","typography","FormPropsTextFields","_React$createElement","anchorEl","searchtext","setSearchtext","setCategory","producttype","setProducttype","handleinputChange","Boolean","borderTop","mastercategory","readOnly","masterproducttype","applyfilter","descendingComparator","b","orderBy","EnhancedTableHead","onSelectAllClick","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","withApollo","useHistory","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","productlists","setProductlists","_React$useState11","_React$useState12","allproductlists","_React$useState13","_React$useState14","mastercategories","setMastercategories","_React$useState15","_React$useState16","masterproducttypes","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","setOrder","_React$useState21","_React$useState22","setOrderBy","getproductlist","client","fetchPolicy","then","catch","_x5","_x6","_x7","_getproductlist","productcategory","pagesize","offsetvalue","sort","orderby","bodydata","offset","products","rows","categoryname","typename","searchproduct","filter","l","productId","toLowerCase","match","productName","isAsc","array","comparator","stabilizedThis","el","stableSort","getComparator","product_name","product_category","Switch","dist_default","updatedAt","Productlist","text-align","Product","Header","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","filterButton","inner","actions","Results","_useState3","_useState4","_useState5","_useState6","Create_default","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","action","Producttypecontent","ProducttypeList_components_Header_Header","ProducttypeList_components_Results_Results","ProducttypeList","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","floor","random","toUpperCase","cursor","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchername","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","discounttype","setDiscounttype","_useState11","_useState12","minreq","setMinreq","_useState13","_useState14","_useState15","_useState16","isonce","setIsonce","_useState17","_useState18","_useState19","Date","_useState20","selectedDate","handleDateChange","handleonceperorder","multiline","categories","CardActionArea","DateTimePicker","inputVariant","minDate","strictCompareDates","handleminreq","tabs","VoucherComponent","selectedtab","setSelectedtab","Tabs","scrollButtons","tab","Tab","selected","components_CategoryComponents_CategoryComponents","tabname","CategoryComponents","setSelected","aboutvoucher","Voucherdiscountcontent","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherContext_VoucherProvider","pricingrows","update","handleAdd","downloadlog","productids","formData","setFormData","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","masters","setMasters","setProducts","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_filterapllied","filterdata","_downloadlog","_callee3","_context3","href","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","fontWeight","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","setAnchorEl","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","Header_SortHeader","columnobjs","showcolumns","createdAt","shoppingCartByCartId","userProfileByUserprofileId","firstName","mobile","cartAddressesByCartId","addressline1","giftwrapsByCartId","paymentMode","paymentStatus","waybill","comments","pgresponse","skus","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","OrderList_components_Header_Header","displycolumns","OrderList_components_Results_Results","OrderList","OrderContext_OrderProvider","Orderlistcontent_Producttypecontent","ConformationAlert","onCancel","Dialog","isshow","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogContentText","DialogActions","onSuccess","refetch","autoFocus","positivebtn","withStyles","closeButton","other","disableTypography","Close_default","MuiDialogContent","MuiDialogActions","Addmetalprice","isadd","metaldata","setMetaldata","actionclose","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","purities","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","_React$useState23","_React$useState24","btnEdit","setBtnEdit","_React$useState25","_React$useState26","isconformation","setIsconformation","_handledelete","datacontent","variables","elementId","mutate","mutation","res","err","_React$useState27","_React$useState28","_handleSave","priceid","costprice","costPrice","sellingprice","sellingPrice","pricetype","sellingPriceType","opts","fatchvalue","negativebtn","react_components_esm","onCompleted","allGoldPriceSettings","totalCount","vendorCode","esm_Input_Input","heading","handleSave","generatedSku","Save_default","CancelOutlined_default","diamondData","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","diamondmaster","setDiamondmaster","allDiamondPriceSettings","diamondColour","Adddiamondprice_Addmetalprice","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","getgemlist","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","_React$useState29","_React$useState30","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setRefetch","setIsdelete","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","handleDelete","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","grow","menuButton","search","fade","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","outline","minHeight","_clsx2","_React$useContext2","optionname","handleListItemClick","Drawer","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","DiamondDetails","snackMessage","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","diamond","DiamondDetails_Alert","diamondType","stoneWeight","stoneCount","diamondSettings","diamondShape","diamondListData","DiamondSave","parse","settingData","shapeData","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","_GemstoneSave","list_data","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","GemstoneSave","gemstoneData","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","isReadyToShip","isdefault","skulistdata","pricerun","Skupricesync","_Skupricesync","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","discount","parseFloat","variantFontSize","variantMarginTop","CreateVariant","prod_id","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","boxShadow","Productimages","styleFile","wordBreak","src","imageUrl","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","link","textDecoration","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","defaultpricing","pricingcolumns","setPricingcolumns","defaultpricingnames","displypricingcolumns","setDisplypricingcolumns","_useContext","create_variant","duplicate_productName","state","setstate","pathname","split","changeVariant","_saveProductEditItem","productEditItem","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productImagesByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","bodycontent","productid","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","black","warning","blueGrey","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9774e163.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    orderlist: '/orderlist',\n    materiallist: '/material',\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory',\n    vendorPrice:'/vendorpricesetup',\n    markupPrice: '/markuppricesetup'\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTFILTERMASTER = gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n      displayOrder\n    }\n  }\n}\n`;\n\nconst ALLPRODUCTLIST = gql`\nquery  {\n  allProductLists(first: 500)  {\n    nodes {\n      id\n      nodeId\n      productName\n      productCategory\n      productType\n      productId\n      createdAt\n      isactive\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLIST = (category) => gql`\nquery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName,\n      productCategory,\n      productType\n      productId,\n      createdAt\n      isactive,\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\n\n\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      purity\n      vendorCode\n      updatedAt\n      sellingPriceType\n      sellingPrice\n      material\n      id\n      createdAt\n      costPrice\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDMARKUP = gql`\nquery MyQuery($vendorCode: String!) {\n  allPricingMarkups(condition: {material: $vendorCode}) {\n    nodes {\n      updatedAt\n      sellingPriceMin\n      sellingPriceMax\n      material\n      category\n      productType\n      markupValue\n      markupType\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allDiamondPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      costPrice\n      createdAt\n      diamondClarity\n      diamondColour\n      id\n      sellingPrice\n      sellingPriceType\n      updatedAt\n      vendorCode\n    }\n    totalCount\n  }\n}`;\n\n\nconst VENDORLIST =`\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER =`\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst MASTERCATEGORY =`\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst GEMSTONEMASTER =`\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\n\n\nconst MAKINGCHARGEPRICELIST = gql`\nquery MyQuery($vendorCode: String!,$ratetype: Int!) {\n  allMakingChargeSettings(condition: {vendorCode: $vendorCode,rateType: $ratetype}) {\n    nodes {\n      weightStart\n      weightEnd\n      vendorCode\n      updatedAt\n      sellingPriceType\n      rateType\n      purity\n      priceType\n      price\n      material\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\nconst GEMPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allGemstonePriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      price\n      rateType\n      priceType\n      sellingPriceType\n      vendorCode\n      weightEnd\n      weightStart\n      updatedAt\n      id\n      createdAt\n      gemstoneType\n    }\n    totalCount\n  }\n}`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\n\nconst DELETEMARKUPPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deletePricingMarkupById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGOLDPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGoldPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\n\nconst DELETEMAKINGCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteMakingChargeSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGEMCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGemstonePriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETEDIAMONDCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteDiamondPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    vendorCode\n    gender\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        markupPriceTax\n        sellingPrice\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES,\n    GOLDPRICELIST,\n    DIAMONDPRICELIST,\n    GEMPRICELIST,\n    MAKINGCHARGEPRICELIST,\n    VENDORLIST,\n    ALLPRODUCTLIST,\n    DIAMONDMARKUP,\n    PRODUCTFILTERMASTER,\n    METALMASTER,\n    GEMSTONEMASTER,\n    MASTERCATEGORY,\n    DELETEMARKUPPRICE,\n    DELETEMAKINGCHARGE,\n    DELETEGEMCHARGE,\n    DELETEGOLDPRICE,\n    DELETEDIAMONDCHARGE\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\nexport const ORDERS = gql`query {\n  allOrders {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: MATERIALMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        \n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials\n        }\n    }\n\n\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\nexport const BASE_URL = \"https://staging.stylori.com/\"\nexport const API_URL = \"https://api-staging.stylori.com\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\"\n// export const GRAPHQL_DEV_CLIENT = \"http://192.168.0.101:8000/graphql\"\n// export const API_URL = \"http://192.168.0.101:8000\"\n// export const BASE_URL = \"http://192.168.0.101:8000/\"\n","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'accesstoken'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, method === 'GET' ? {method} : ({\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    }))\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        resdata = await response.json();\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n        // {\n        //    if(!resdata.auth)\n        //    {\n        //     //alert(resdata.message)\n        //    }\n        // }else{\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        // }\n    }\n    resdata['statuscode'] = response.status\n\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n    props.history.push('/productlist')\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Sign in\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Sign in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        product_gender:\"\",\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        isactive: false,\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        oldproductMetalColor:[],\n        oldproductMetalPurity:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        oldproductDiamondTypesArray:[],\n        productmaterials:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n         editleadtime: \"\",\n         editreadytoship:false,\n         editisdefault: false,\n         editisactive: false,\n\n\n         editcostprice: 0,\n         editsellingprice:0,\n         editmarkupprice: 0,\n         editdiscountprice: 0,\n         editcostpricetax: 0,\n         editsellingpricetax:0,\n         editmarkuppricetax: 0,\n         editdiscountpricetax: 0,\n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:[],\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\"\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n\n    return (\n        <div style={{ position :\"absolute\",backgroundColor : \"#ddd\",zIndex : \"999\", height: '100vh', width: '100%', display: \"flex\",left : '0' ,top : '0', overflow: \"hidden\" }}>\n            { <h1 style={{margin: \"auto\"}}>Loading.......</h1> }\n            {/* <i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\" style={{height: \"40px\"}}></i> */}\n            {/* <div className={classes.root}>\n                    <LinearProgress />\n                    </div> */}\n\n\n            <i class=\"fa fa-cog fa-spin fa-3x fa-fw\" style={{height: \"auto\", fontSize: \"66px\", margin: \"auto\", color: \"#00695C\"}} aria-hidden=\"true\"></i>\n        </div>\n    )\n}\nexport default FullLoader;","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport FullLoader from '../../components/Loader'\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const switchisorderable = event => {\n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n      {/* <FullLoader /> */}\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={switchisorderable} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n \n  const handleClose =  (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n     console.log(\"><><><><><\")\n     console.log(JSON.stringify(formdata))\n      setLoading(true)\n       await sendNetworkRequest('/productupload', {}, formdata)\n      setLoading(false)\n      setSuccess(true)\n      await sleep(500)\n      window.location.replace('/productlist')\n    }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async  function sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n  }\n  \n  return (\n    \n    <Grid item xs={12} sm={12}  >\n       <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} >\n          Product Created Successfully\n        </Alert>\n      </Snackbar>\n\n    <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n  </Snackbar> \n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Master Collections','Master Designs','Master Diamond Types',\n'Master Diamond Settings','Master Diamond Shapes','Master Earring Backings','Master Gemstone Settings','Master Gemstone Shapes','Master Gemstone Types',\n'Master Gender','Master Materials']\n  const master_options_url = ['material','producttypes', 'Materials','Metal Colours','Metal Purities','Metal Purities']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Vendor Name', minWidth: 200 },\n  { id: 'SKU', label: 'Vendor Code', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendors from '../../components/Vendors'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport const Vendorlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Vendor\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Vendors contactlist={[\n        {\n            \"name\":\"NAC1\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Vendorlist;","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  Chip\n\n} from '@material-ui/core';\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n  }\n  const handlecategoryChange = type => (event, value) => {\n    setCategory( value.name)\n}\nconst handletypeChange = type => (event, value) => {\n  setProducttype(value.name)\n}\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n   function applyfilter() {\n     props.applyfilter(searchtext, category, producttype)\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={3} md={3} sm={3}>\n      <Autocomplete\n                      \n                      fullWidth\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.mastercategory}\n                      onChange={handlecategoryChange('product_category')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Category\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.masterproducttype}\n                      onChange={handletypeChange('product_type')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Type\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n          <TextField fullWidth margin=\"dense\" onChange={handleinputChange('productname')} placeholder={\"Search by product name or product id\"} onChange={handleinputChange('productname')} id=\"outlined-basic\" variant=\"outlined\"  style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }}/>\n          \n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Button onClick={(e) => applyfilter()} color=\"primary\" variant=\"contained\" style={{ marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }} >\n                  Search\n          </Button>\n          </Grid>\n\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'updatedAt', label: 'updated on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} />\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.product_name}\n                                    {/* <Link target='blank_' href={row.transSkuListsByProductId.nodes.length > 0 ? BASE_URL+row.transSkuListsByProductId.nodes[0].skuUrl : '-'}  variant=\"body2\">\n                                   \n                                    </Link> */}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Category\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Producttypecontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const ProducttypeList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default ProducttypeList;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleInputChange('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={vouchercode}\n                       value={vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                      //  onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        {props.categories.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: discounttype === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography className={discounttype === option ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>  \n              </div> \n                         \n            \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}\n        </Grid>\n         {discounttype === 'Free Shipping' || discounttype === \"\" ? null :  \n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          />\n        </Grid>\n}\n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Active Date\n            </Typography>\n          </Grid>\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <DateTimePicker\n        label=\"Start Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        minDate={new Date()}    \n        onChange={handleDateChange}\n      />\n      </Grid>\n              <Grid  item xs={6} sm={6} spacing={1}>\n              <DateTimePicker\n        label=\"End Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        minDate={selectedDate}\n        strictCompareDates={true}\n        onChange={handleDateChange}\n      />\n      </Grid>\n          </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: isonce\n            })}\n            onClick={event => handleonceperorder(event, isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea>\n          </Grid>\n         \n          <Grid item xs={12} sm={12} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        \n        </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n        {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n          \n          <Grid  item xs={3} sm={3} spacing={1}>\n          \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: minreq === option\n            })}\n            onClick={event => handleminreq(event, option)}\n\n            key={option}\n          >\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                className={minreq === option ? classes.selectedtext : null}\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          </Grid>\n        ))}\n        </Grid>\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {minreq === 'None' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label={minreq === 'Minimum Order Value' ? 'Minimun Order' : 'Minimum Quantity'}\n          />\n        }\n        </Grid>\n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n         \n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Purity', label: 'Purity' },\n  { value: 'Availability', label: 'Availability' },\n  { value: 'Styles', label: 'Styles' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleTabsChange = (event, value) => {\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Tabs\n        className={classes.tabs}\n        scrollButtons=\"auto\"\n        value={selectedtab}\n        onChange={handleTabsChange}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            selected\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <div className={classes.content}>\n    \n     <CategoryComponents  tabname={selectedtab}  materials={['Gold', 'Diamond']} />\n     {/* <CategoryComponents  tabname={selectedtab}  materials={['Rings', 'Bracelets']} /> */}\n    \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Voucherdiscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <VoucherComponent className={classes.aboutvoucher} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    props.update(e)\n  }\n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {\"Running\"}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\" disabled onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Price Update', label: 'Price Update' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n\n  async function updateprices(component)\n{\n\n  var  bodydata = {}\n  \n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n\n}\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results pricingrows={rows} downloadlog={downloadlog} update={updateprices}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     {/* <h4 className=\"products\">Variants Table</h4>    */}\n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" fullWidth size=\"large\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n           <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography> \n        </Grid>\n        <Grid item>\n\n          <SortHeader columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.tableWrapper}>\n              <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null }\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n   \n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header getColumnnames={columnchanged} columns={columnnames}/>\n    <Results\n      className={classes.results}\n     orders={orderCtx.orderMaster.orders}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(orderList.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save()\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleAdd()\n  {\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n        setEditdiamond({\n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n      <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n     {open ? <Addmetalprice isadd={open} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    alert(JSON.stringify(diamonddata))\n    //props.actionclose()\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item xs={6}> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n      {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} actionclose={handleClose}/> : null} \n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    alert(JSON.stringify(gemstonedata))\n    //props.actionclose()\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n   \n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    alert(JSON.stringify(makingcharge))\n    //props.actionclose()\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  function handleAdd() {\n    setBtnEdit({ ...btnEdit, id:'', action: true })\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} isadd={open} title={\"Add Making Charge Setup\"} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    alert(JSON.stringify(markup))\n    //props.actionclose()\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Product Category', label: 'product Category' },\n  { id: 'Product Type', label: 'Product Type' },\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid,setDeleteid] = React.useState(\"\")\n  const [refetch,setRefetch] = React.useState(null)\n  const [isdelete, setIsdelete] = React.useState(false);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n   \n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch)\n  {\n    setIsdelete(true)\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n    \n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id)\n    setRefetch(refetch)\n    setIsconformation(true);\n  }\n\n\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  \n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    \n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      \n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={6}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n       {/* <Grid item> \n       <TextField\n           variant=\"outlined\"\n           margin=\"dense\"\n           label=\"Search\"\n           className={classes.helperinput}\n           onChange={handleinputChange('weight_start')}\n           id=\"productvendorcode\"\n           name=\"Cost Price\"\n       />\n       </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                  <TableRow key={row.category}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.category}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.productType ? row.productType : 'All' }\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  \n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query> \n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n        <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      refetch={refetch}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n      </div>\n      {open ? <Addmarkup isadd={open} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Diamond\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  const handleClick = type => e => {\n    setGlobalCtx({ ...globalCtx, \"optionname\": type , isExpand: !globalCtx.isExpand})\n\n  }\n  // const handleClick  = type => e => {\n      \n  //     setGlobalCtx({ ...globalCtx,optionname: isExpand: !globalCtx.isExpand })\n\n  // }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index,isExpand: !globalCtx.isExpand})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n       <ListItem button onClick={handleClick('Discounts')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Discounts\" />\n        {globalCtx.isExpand && globalCtx.optionname === 'Discounts' ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography  variant=\"h6\" noWrap>\n            NAC Jewellers\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n  }\n  function DiamondSave(id){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(productCtx.diamondsettings && productCtx.diamondshape && productCtx.diamondcount && productCtx.diamondweight){\n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(id===diamondListData.id){\n          diamondListData.diamondSettings=productCtx.diamondsettings.name;\n          diamondListData.diamondShape = productCtx.diamondshape.name;\n          diamondListData.stoneCount = productCtx.diamondcount;\n          diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata['diamondSettings'] = productCtx.diamondsettings.name\n          bodydata['diamondShape'] = productCtx.diamondshape.name\n          bodydata['stoneCount'] = productCtx.diamondcount;\n          bodydata['stoneWeight'] = productCtx.diamondweight;\n          bodydata['diamondid'] = id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n      console.log(\"------******\")\n      console.log(JSON.stringify(bodydata))\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      // setSnackMessage({\n      //   ...snackMessage,\n      //   message:\"This is successfully saved\",\n      //   severity:\"success\"\n      // })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table>         \n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n  }\n async function GemstoneSave(id) {\n    if (productCtx.gemstonesettings && productCtx.gemstoneshape && productCtx.gemstonecount && productCtx.gemstoneweight && productCtx.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = productCtx.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = productCtx.gemstoneshape.name;\n          gemstoneListData.stoneCount = productCtx.gemstonecount;\n          gemstoneListData.stoneWeight = productCtx.gemstoneweight;\n          gemstoneListData.gemstoneSize = productCtx.gemstonesize;\n          bodydata['gemstoneSetting'] = productCtx.gemstonesettings.name\n          bodydata['gemstoneShape'] = productCtx.gemstoneshape.name\n          bodydata['stoneCount'] = productCtx.gemstonecount;\n          bodydata['gemstoneSize'] = productCtx.gemstonesize;\n          bodydata['stoneWeight'] = productCtx.gemstoneweight;\n          bodydata['id'] = id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={(btnEdit.action && btnEdit.id == row.generatedSku) ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={!(btnEdit.action && btnEdit.id == row.generatedSku) ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={(btnEdit.action && btnEdit.id == row.generatedSku) ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={!(btnEdit.action && btnEdit.id == row.generatedSku) ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={(btnEdit.action && btnEdit.id == row.generatedSku) ? productCtx.editisactive : row.isActive}\n                        onChange={!(btnEdit.action && btnEdit.id == row.generatedSku) ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n\n    var bodydata = {}\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.costPrice = productCtx.editcostprice;\n          skulistdata.costPriceTax = productCtx.editcostpricetax;\n          skulistdata.sellingPrice =  productCtx.editsellingprice;\n          skulistdata.sellingPriceTax = productCtx.editsellingpricetax\n          skulistdata.markupPrice = productCtx.editmarkupprice\n          skulistdata.markupPriceTax = productCtx.editmarkuppricetax\n          skulistdata.discountPrice = productCtx.editdiscountprice\n          skulistdata.discountPriceTax = productCtx.editdiscountpricetax\n\n           bodydata['costPrice'] = parseFloat(productCtx.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(productCtx.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(productCtx.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(productCtx.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(productCtx.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(productCtx.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(productCtx.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(productCtx.editdiscountpricetax)\n           bodydata['generatedSku'] = id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n\n      sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  \n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                } : </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale Percentage') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                \n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">Variants Table</h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper,    Card,CardHeader,\n  CardContent,\nGrid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport \"./upload.css\"\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\"\n},\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\"\n},\nformContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30\n}\n\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  \n  return (\n    <Paper className={classes.root} >\n       <Card className={classes.card}>\n       <CardHeader\n       \n        title={props.color}\n      />\n                        <CardContent>\n                            <Grid container spacing={2} className={classes.styleFile}>\n                            {/* <Grid item>\n                            {\n                                                            (<label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                                                                <i className=\"fa fa-plus\" aria-hidden=\"true\" style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}></i>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n\n                                                                ></input>\n                                                            </label>)\n                                                        }\n                              </Grid> */}\n                            {props.prodimages.map(url => (\n\n                             <>\n                             {props.color === url.productColor ? \n                              <div style={{ position: \"relative\" }}>\n                                 \n                                                <i className=\"fa fa-window-edit\" style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: '12' }}  />\n                                                \n                                                 <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\", position: \"relative\" }} className=\"container\" >\n                                                          <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n\n                                                                ></input>\n                                                      \n                                                            <img src={\"https://styloriimages.s3.ap-south-1.amazonaws.com/\"+url.imageUrl.replace(url.productId, url.productId+'/1000X1000')}\n                                                                style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }} />\n                                                    \n                                                </Grid>\n                                </div> : null }\n                                </> \n                              ))}                         \n                            </Grid>\n                      </CardContent>\n                </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport Skupricing from './Skupricing';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SortHeader from './Components/SortHeader';\nimport columnnames from './columnnames.json';\nimport Productimages from './Productimages'\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricingnames);\n\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n  \n  const handleChange = panel => (event, isExpanded) => {\n    createVariant()\n    setExpand(isExpanded ? true : false);\n    \n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  const handleoptionChange = type => (event, value) => {\n      setProductCtx({ ...productCtx, [type]: value})\n}\n\nconst handleinputChange =type => e => {\n  const re = /^[a-zA-Z \\b]+$/;\n  if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value})\n  }\n}\n// const handleinputChange = type => (event, value) => {\n//   alert(event.target.value)\n//       setProductCtx({ ...productCtx, [type]: value})\n// }\nfunction getColumnnames(columnnames,displytype) {\n  let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n  if(displytype === 1)\n  {\n    setDisplycolumns(displycolumns)\n    setVarientcolumns(columnnames)\n  }else{\n    setPricingcolumns(columnnames)\n    setDisplypricingcolumns(displycolumns)\n  }\n    \n   \n\n}\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    productCtx['oldproductDiamondTypesArray'] = diamondTypesArray\n\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    //setstate({ ...state, create_variant: true })\n  }\nasync function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions : productCtx.occassions,\n      collections : productCtx.collections,\n      stonecount : productCtx.stonecount,\n      stonecolour : productCtx.stonecolour,\n      gender : productCtx.product_gender\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    }\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(productEditItem))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = name => async event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      \"productid\": prod_id,\n      \"isactive\" : event.target.checked\n    }\n    let response =  await sendNetworkRequest('/disableproduct', {}, bodycontent)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(bodycontent))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n        // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  };\n\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData\n    }\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id }  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        var genders = fatchvalue.data.productListByProductId.gender\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient\n        let sizes_arr = []\n        if(size_obj)\n        {\n          let sizes = size_obj.split(',')\n          sizes.forEach(element => {\n            \n            sizes_arr.push(element)\n          });\n        }\n        genders = genders.split(',')\n        let gender_arr = []\n        genders.forEach(element => {\n          let gender_obj = {\n            label: element\n          }\n          gender_arr.push(gender_obj)\n        });\n\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\n          product_gender:gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\n          // productDiamondClarity:diamondClaritySku,\n        })\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n      <Grid container>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n          <Grid item container spacing={1} >\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\n              \n              \n              <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    pattern=\"[a-zA-Z]*\"\n                    value={productCtx.productname}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Product Name\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_categoy}\n                  id=\"product_category\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                  name=\"product_category\"\n                  label=\"Product Category\"\n  \n                />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_type}\n                  id=\"product_type\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  name=\"product_type\"\n                  label=\"Product Type\"\n  \n                />\n                  <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Vendor Name\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.vendorcode}\n                        id=\"productvendorcode\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        name=\"Vendor Name\"\n                        />\n  \n                 <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"seo_text\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"seo_text\"\n                  label=\"Minimum Order Quantity\"\n  \n                /> \n               <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"url\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"url\"\n                  label=\"Maximum Order Quantity\"\n                /> \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productmaterials}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n                 <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalColor}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalPurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Purity\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.product_gender}\n                      getOptionLabel={option => option.label}\n                      onChange={handleoptionChange('product_gender')}\n                      options={productCtx.masterData.gender}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Gender\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.themes}\n                      options={productCtx.masterData.themes}\n                      value={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Themes\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.prod_styles}\n                      options={productCtx.masterData.styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      value={productCtx.prod_styles}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Styles\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.occassions}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.occassions}\n                      options={productCtx.masterData.occasions}\n                      onChange={handleoptionChange('occassions')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Occasions\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.collections}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.collections}\n                      options={productCtx.masterData.collections}\n                      onChange={handleoptionChange('collections')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Collections\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecount}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecount}\n                      options={productCtx.masterData.stones}\n                      onChange={handleoptionChange('stonecount')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"No of Stones\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecolour}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecolour}\n                      options={productCtx.masterData.gemstonecolor}\n                      onChange={handleoptionChange('stonecolour')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Stone Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              \n              <FormControlLabel\n                                label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n\n                  control={\n                    <Switch checked={productCtx.isactive} onChange={handledisableproduct('isactive')} value=\"checkedA\" />\n                  }\n                />\n              \n              \n              <Grid item container style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\"\n            }}>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Update\n             </Button>\n                {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n              </Grid>\n            </Grid>\n              \n              </Grid>\n             \n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n                \n              </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n              <DiamondDetails diamond={productCtx.diamondlist} />\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\n\n              <Grid style={{\n                \n              }}>\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n               \n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\n                    <ExpansionPanelSummary\n                      expandIcon={expand? <CloseIcon /> : <AddIcon />}\n                      aria-controls=\"panel1c-content\"\n                      id=\"panel1c-header\"\n                    >\n                      <div className={classes.column}>\n                        <Typography className={classes.heading}>Add New variant</Typography>\n                      </div>\n                    \n                    </ExpansionPanelSummary>\n                    <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \n                    </ExpansionPanelDetails>\n                    <Divider />\n                    {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n                    </ExpansionPanel>\n                    \n                \n                </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}><SortHeader columnnames={columnnames.varients}  getColumnnames={getColumnnames} displytype={1}/>  </Grid>\n\n              <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n                  \n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>  \n              <SortHeader columnnames={pricingcolumns} displycolumns={displypricingcolumns}  getColumnnames={getColumnnames} displytype={2}/>\n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run For This Product\n              </Button>\n            </Grid>\n\n              <Skupricing variants={productCtx.variants} columns={pricingcolumns} displycolumns={displypricingcolumns} />\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n              {productCtx.productMetalColor.map(colors => (\n                    <Productimages color={colors.productColor} prodimages={productCtx.product_images} />\n\n              ))}\n            \n            </Grid>\n            \n            \n          </Grid>\n        </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport {BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration,\n        Priceupdate,Vendorprice, Vendorlist,Markupprice,\n     Productlist, Materiallist, CategoryList, ProducttypeList, Voucherdiscount, OrderList } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext,ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute  path={route.materiallistpage} component={newmaterial}/>\n                    <PrivateRoute  path={route.producttypes} component={ProducttypeList} />\n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute  path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute  path={route.orderlist} component={OrderList} />\n                    <PrivateRoute  path={route.vendorPrice} component={Vendorprice} />\n                    <PrivateRoute  path={route.markupPrice} component={Markupprice} />\n\n                     <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />  \n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />            \n          </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}