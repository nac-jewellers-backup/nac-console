{"version":3,"sources":["routes/route.js","components/Input.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/SelectPlaceholder.js","context/GlobalContext.js","config.js","context/ProductuploadContext.js","context/MaterialContext.js","screens/Productupload/AddressForm.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","components/Vendors/Vendors.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","components/AddContact/AddContact.js","screens/MaterialList/Content.js","screens/MaterialList/Materiallist.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","routes/index.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","materiallist","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","Login","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","Container","component","maxWidth","CssBaseline","className","Typography","noValidate","Input_Input","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","Box","mt","React","Component","Dashboard_","withRouter","Dashboard","PlaceholderText","styled","Text","_ref","placeholderUp","position","transition","pointerEvents","top","left","zIndex","placeholderzindex","paddingLeft","paddingRight","backgroundColor","isDisabled","fontSize","SelectContainer","View","_ref2","height","display","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","SelectPlaceholder","_this","call","onFocus","setState","onBlur","_this$props","state","SelectPlaceholder_SelectView","globalCtxInitial","globalCtx","auth","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","createContext","GlobalProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","children","productuploadCtxInitial","productCtx","product_categoy","steps","product_type","productname","material","product_type_shortcode","category","metalColour","metalpurities","selectedgender","selected_metal_colour","gender","vendorcode","productseries","size","sizes","selected_sizes","metal","materials","gemstontypes","gemstonshapes","product_code","gemstonelist","diamondlist","gemstonetype","gemstoneshape","gemstonesetings","gemstonesize","gemstonecount","gemstoneweight","stonetype","diamondclarity","diamondcolor","diamondsettings","diamondshape","diamondcount","diamondweight","metalindex","themes","prod_styles","occassions","collections","stonecount","stonecolour","product_images","metalcolour","metal_purity","metalpurity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","metals","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mapper","mappertype","keys","length","ProductProvider","console","info","data","useEffect","materialCtxInitial","materialCtx","materialMaster","setMaterialCtx","MaterialContext","log","JSON","stringify","MaterialProvider","setmaterialCtx","AddressForm","_React$useContext","useContext","handlechange","selectedOption","minvalue","maxvalue","shortCode","i","push","objectSpread","defineProperty","handleTextChange","target","handleInputChange","_objectSpread4","index","indexOf","splice","index1","indexval","Fragment","container","spacing","sm","onChange","components_SelectPlaceholder","options","isMulti","_objectSpread5","material_names","forEach","element","productvendorcode","earringbacking","includes","PaymentForm","purityChange","disabled","default_size","useStyles","makeStyles","theme","button","paper","padding","gempapper","marginTop","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","Review","classes","useTheme","useRef","handleChange","editmaterial","metalobj","clearmetalvalue","metalname","settings","clarity","shape","count","weight","gemstonesettings","handleClick","metalsarr","stonedetails","Paper","diamondclarities","diamondcolors","diamondshapes","justify","onClick","Table","table","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","Edit_default","Delete_default","deletematerial","root","flexGrow","valueContainer","flexWrap","flex","alignItems","chip","chipFocused","emphasize","palette","grey","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","vendorDelivaryDays","isreorder","default_metal_colour","default_metal_purity","default_metal_size","styles","occasions","stones","gemstonecolor","PRODUCTCATEGORY","gql","_templateObject","queries_templateObject","MATERIALMASTER","_templateObject2","productCategory","query","response","allMasterProductCategories","nodes","_","allMasterProductTypes","allMasterMaterials","allMasterGenders","allMasterVendors","allMasterDiamondsSettings","allMasterDiamondsShapes","allMasterThemes","allMasterStyles","allMasterOccasions","allMasterCollections","allMasterStonesColors","allMasterStones","allMasterMetalsColors","allMasterMetalsPurities","allMasterDiamondsColors","allMasterDiamondClarities","allProductLists","productSeries","allMasterGemstonesTypes","allMasterGemstonesShapes","alias","allMasterGemstonesSettings","allMasterEarringBackings","apidata","initialNetworkCtx","networkCtx","status","called","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","asyncToGenerator","regenerator_default","mark","_callee","url","params","method","headers","resdata","token","_args","wrap","_context","prev","next","undefined","Content-Type","localStorage","getItem","window","location","fetch","body","isString","sent","json","alert","concat","statusText","abrupt","stop","_x","_x2","_x3","NetworkContext","NetworkProvider","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","img","objectFit","control","setMetalcolour","_React$useState3","_React$useState4","files","setFiles","_uploadimagetoserver","bodaydata","imageposition","imagecolor","prodimages","imagecolourobj","imageobj","_imageobj","charAt","unshift","direction","imageindex","react_filepond","labelIdle","source","server","load","then","res","blob","onupdatefiles","fileItems","onaddfile","onremovefile","fileItem","removedfile","removefiles","allowMultiple","maxFiles","uploadimagetoserver","Plot","createPlotlyComponent","Plotly","PlotlyRenderers","createPlotlyRenderers","productid","purity","gemstone","costprice","sellingprice","Pivot","PivotTableUI_default","s","setcurrentstate","renderers","TableRenderers","_paper","appBar","layout","breakpoints","up","marginBottom","stepper","background","buttons","justifyContent","nested","Productupload","activeStep","setActiveStep","Stepper","Step","StepLabel","gutterBottom","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","formdata","default_metal_color","diamond","product_vendor_code","stonecolours","defaultsize","defaultmetalsize","progress","_useQuery","useQuery","CircularProgress","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","Link","underline","RouterLink","to","Card","fullwidth","CardContent","columns","format","toFixed","useStyles1","flexShrink","text","secondary","TablePaginationActions","page","rowsPerPage","onChangePage","IconButton","event","aria-label","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","useStyles2","tableWrapper","overflowX","AddContact","setPage","setRowsPerPage","emptyRows","min","contactlist","stickyHeader","column","slice","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Vendorlist","Productlist","text-align","Product_AddContact","move","Content","AddContact_AddContact","Materiallist","MaterialContext_MaterialProvider","grow","menuButton","title","search","borderRadius","fade","common","white","&:hover","searchIcon","inputRoot","inputInput","transitions","create","sectionDesktop","sectionMobile","drawer","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","content","_clsx","_clsx2","_React$useContext2","Drawer","clsx","open","ChevronRight_default","ChevronLeft_default","Divider","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","primary","PrimaryAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","MainApp","client","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","react_router","exact","path","routes_PrivateRoute","black","contrastText","dark","colors","indigo","main","light","blue","success","green","warning","orange","red","blueGrey","link","default","icon","divider","typography","h1","fontWeight","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","App","GlobalContext_GlobalProvider","MuiThemeProvider","react_router_dom","routes","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b6bc9a5.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    materiallist: '/material'\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={<b>{helperText}</b>}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport \"./Login.css\"\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n    <CssBaseline />\n    <div className=\"paper\">\n     \n      <Typography component=\"h1\" variant=\"h5\">\n        Sign in\n      </Typography>\n     \n      <form  noValidate>\n        <Input\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <Input\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n       \n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"submitbtn\"\n        >\n          Sign In\n        </Button>\n       \n      </form>\n    </div>\n    <Box mt={5}>\n    </Box>\n  </Container>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  height: 55,\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\nexport const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\n// export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8000\"","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {\n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step4','Step5','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[{\n            value:1,\n            label:\"1\"\n        },{\n            value:2,\n            label:\"2\"\n        },{\n            value:3,\n            label:\"3\"\n        },{\n            value:4,\n            label:\"4\"\n        }],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        gemstonelist:[],\n        diamondlist:[],\n\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesetings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[]\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\n\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\n\n  \n  \nexport default function AddressForm() {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 26\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 19\n\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n              if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step4','Step5','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    \n    \n  return (\n\n    <React.Fragment>\n    \n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6} spacing={1}>\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={productCtx.productname}\n                      id=\"productname\"\n                      name=\"productname\"\n                      label=\"Product Name\"\n                      onChange={handleTextChange('productname')}\n                      />\n       \n          </Grid>  \n          \n          <Grid item xs={12} sm={6} spacing={1}>\n            <Box mt={1} >\n            <SelectPlaceholder\n                    placeholder=\"Select Product Type\"\n                    value={productCtx.product_type}\n                    placeholderzindex=\"6\"\n                    selectzindex=\"6\"\n                    placeholderUp={productCtx.product_type ? true : false}\n\n                    onChange={handlechange('product_type')}\n                    options={productCtx.masterData.product_type}\n                  />\n            </Box>      \n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n                  <SelectPlaceholder\n                  value={productCtx.product_categoy}\n                    placeholder=\"Select Product Category\"\n                    placeholderzindex=\"6\"\n                    selectzindex=\"6\"\n                    options={productCtx.masterData.category}\n                    onChange={handlechange('product_categoy')}\n                    placeholderUp={productCtx.product_categoy ? true : false}\n\n                  />\n            </Grid>\n\n            \n           \n            <Grid item xs={12} sm={6}>\n                <SelectPlaceholder\n                    placeholder=\"Select Product Materials\"\n                    isMulti\n                    style={{zIndex: 500}}\n                    value={productCtx.material}\n                    placeholderzindex=\"5\"\n                    selectzindex=\"5\"\n                    onChange={materialChange('material')}\n                    options={productCtx.masterData.material}\n                    placeholderUp={productCtx.material ? true : false}\n\n                  />\n                             \n          \n\n            </Grid>\n            \n            <Grid item xs={12} sm={6}>\n                <Box mt={1} >\n            <SelectPlaceholder\n                    className=\"suboverlay\"\n                    fullWidth\n                    value={productCtx.vendorcode}\n                    placeholder=\"Select Vendor Code\"\n                    onChange={handlevendorChange}\n                    placeholderzindex=\"5\"\n                    selectzindex=\"5\"\n                    placeholderUp={productCtx.vendorcode ? true : false}\n                    options={productCtx.masterData.vendorcode}\n                  />\n                </Box>\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Product Vendor Code\"\n                      fullWidth\n                      value={productCtx.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            \n                <Box mt={1} >\n            <SelectPlaceholder\n           \n                    placeholder=\"Earring Backing\"\n                    value={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking}\n                    onChange={handleInputChange('earringbacking')}\n                    placeholderzindex=\"4\"\n                    selectzindex=\"4\"\n                    \n                    placeholderUp={productCtx.earringbacking ? true : false}\n                  />\n                </Box>\n            </Grid>        \n            <Grid item xs={12} sm={6}>\n            \n                <Box mt={1} >\n            <SelectPlaceholder\n                    placeholder=\"Select Gender\"\n                    value={productCtx.selectedgender}\n                    placeholderzindex=\"3\"\n                    selectzindex=\"3\"\n                    options={productCtx.masterData.gender}\n                    onChange={handleInputChange('selectedgender')}\n                    placeholderUp={productCtx.selectedgender ? true : false}\n                  />\n                </Box>\n            </Grid>\n\n            <Grid item xs={12} sm={6} spacing={1}>\n                <Box mt={1} >\n                <SelectPlaceholder\n                        isMulti\n                        isDisabled = {!['BA','R','BR'].includes(productCtx.product_type_shortcode)}\n                        placeholder=\"Select Product Size\"\n                        onChange={handlesizeChange}\n                        placeholderzindex=\"2\"\n                       selectzindex=\"2\"\n                        placeholderUp={productCtx.selected_sizes.length ? true : false}\n                        value={productCtx.selected_sizes}\n                        options={productCtx.sizes}\n                      />\n                </Box>      \n                </Grid>\n        \n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\n\n\n\nexport default function PaymentForm() {\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n\n  return (\n    <React.Fragment>\n      \n\n      <Grid container spacing={1}>\n      <Grid item xs={6} sm={3}>\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n      </Grid>\n      \n     <Grid item xs={6} sm={3}>      \n          {/* <FormLabel component=\"legend\" >Material Purity</FormLabel> */}\n           <Box mt={1} >         \n          <SelectPlaceholder\n                    isMulti\n                    value = {productCtx.metalpurity}\n                    placeholder=\"Metal Purity\"\n                    onChange={purityChange('metalpurity')}\n                    options={productCtx.masterData.metalpurity}\n                    placeholderzindex=\"4\"\n                selectzindex=\"4\"\n                 placeholderUp={productCtx.metalpurity.length ? true : false}\n                  />\n          </Box>          \n          \n    </Grid>\n    \n\n    <Grid item xs={6} sm={3}>\n      \n      \n      {/* <FormLabel component=\"legend\" >Metal Colour</FormLabel> */}\n       <Box mt={1} >         \n      <SelectPlaceholder\n                isMulti\n                value = {productCtx.metalcolour}\n                placeholder=\"Metal Colour\"\n                onChange={purityChange('metalcolour')}\n                options={productCtx.masterData.metalcolour}\n                placeholderzindex=\"3\"\n                selectzindex=\"3\"\n                 placeholderUp={productCtx.metalcolour.length ? true : false}\n              />\n      </Box>          \n      \n</Grid>\n<Grid item xs={3} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Default Size for Price\"\n    name=\"size\"\n    autoComplete=\"size\"\n    onChange = {handleInputChange('default_size')}\n    value={productCtx.default_size}\n    \n    />\n</Grid>\n      \n     <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Weight for Default Size\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_weight')}\n          value={productCtx.metal_weight === 0 ? \"\" : productCtx.metal_weight}\n          \n          />\n    </Grid>\n    <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n    </Grid>\n\n    <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid>\n           \n        \n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr })\n\n  }\n  function clearmetalvalue()\n  {\n    setProductCtx({ ...productCtx, \n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    if(productCtx.diamondclarity)\n    {\n      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n\n    }else{\n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }\n\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n      {!productCtx.material_names.includes(\"Diamond\") ? null : <Paper className={classes.paper} >\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                        <SelectPlaceholder\n                        fullWidth\n                        placeholder=\"Diamond Type/Clarity\"\n                        onChange={handleChange(\"diamondclarity\")}\n                        value={productCtx.diamondclarity}\n                        options={productCtx.masterData.diamondclarities  }\n                        placeholderzindex=\"9\"\n                        selectzindex=\"9\"\n                        placeholderUp={productCtx.diamondclarity ? true : false}\n\n                      />\n              \n          \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      <SelectPlaceholder\n                      fullWidth\n                        placeholder=\"Diamond Colour\"\n                        onChange={handleChange('diamondcolor')}\n                        value={productCtx.diamondcolor}\n                        options={productCtx.masterData.diamondcolors}\n                        placeholderzindex=\"8\"\n                        selectzindex=\"8\"\n                        placeholderUp={productCtx.diamondcolor ? true : false}\n                      />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n            <SelectPlaceholder\n            fullWidth\n                        placeholder=\"Diamond Setting\"\n                        onChange={handleChange('diamondsettings')}\n                        value={productCtx.diamondsettings}\n                        options={productCtx.masterData.diamondsettings}\n                        placeholderzindex=\"7\"\n                        selectzindex=\"7\"\n                        placeholderUp={productCtx.diamondsettings ? true : false}\n                      />\n        </Grid>\n        <Grid item xs={4} >\n      \n        <SelectPlaceholder\n\n                        placeholder=\"Diamond Shape\"\n                        value={productCtx.diamondshape}\n                        onChange={handleChange('diamondshape')}\n                        options={productCtx.masterData.diamondshapes}\n                        placeholderzindex=\"6\"\n                        selectzindex=\"6\"\n                        placeholderUp={productCtx.diamondshape ? true : false}\n                      />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      \n      \n        </Paper>\n      }\n\n      {!productCtx.material_names.includes(\"Gemstone\") ? null : <Paper className={classes.gempapper} >\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                  <Select\n                      placeholder=\"Gemstone Type\"\n                      value={productCtx.gemstonetype}\n                      onChange={handleChange('gemstonetype')}\n                      options={productCtx.masterData.gemstontypes}\n                      placeholderzindex=\"5\"\n                      selectzindex=\"5\"\n                      placeholderUp={productCtx.gemstonetype ? true : false}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n      <SelectPlaceholder\n                      placeholder=\"Gemstone Shape\"\n                      value={productCtx.gemstoneshape}\n                      onChange={handleChange('gemstoneshape')}\n                      options={productCtx.masterData.gemstonshapes}\n                      placeholderzindex=\"4\"\n                      selectzindex=\"4\"\n                      placeholderUp={productCtx.gemstoneshape ? true : false}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          <SelectPlaceholder\n                      placeholder=\"Gemstone Setting\"\n                      value={productCtx.gemstonesettings}\n                      onChange={handleChange('gemstonesettings')}\n                      options={productCtx.masterData.gemstonesettings}\n                      placeholderzindex=\"3\"\n                      selectzindex=\"3\"\n                      placeholderUp={productCtx.gemstonesettings ? true : false}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </Paper>\n      }\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n        <Grid item xs={6} >\n        </Grid> \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    <Grid item xs={12} sm={4} >\n    <TextField fullWidth\n        label=\"Vendor Code\"\n        id=\"simple-start-adornment\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        value={productCtx.vendorcode.shortCode}\n        \n      />\n    </Grid>\n    \n    <Grid item xs={12} sm={4}>\n    <TextField fullWidth\n        label=\"Vendor Lead Time\"\n        id=\"simple-start-adornment\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        value={productCtx.vendorcode.vendorDelivaryDays+\" days\"}\n        \n      />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n                  <SelectPlaceholder\n                    value={productCtx.isreorder}\n                    placeholder=\"Reorderable\"\n                    onChange={handleChange('isreorder')}\n                    options={[{value:'Yes',label:'Yes'},{value:'No',label:'No'}]}\n                    placeholderzindex=\"5\"\n                    selectzindex=\"5\"\n                     placeholderUp={productCtx.isreorder ? true : false}\n                 />\n    </Grid>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Default SKU For Display\n          </Typography> \n    </Grid>\n    <Grid item xs={4} >\n\n                  \n                  <SelectPlaceholder\n                    value={productCtx.default_metal_colour}\n                    placeholder=\"Metal Colour\"\n                    onChange={handleChange('default_metal_colour')}\n                    options={productCtx.metalcolour}\n                    placeholderzindex=\"4\"\n                    selectzindex=\"4\"\n                     placeholderUp={productCtx.default_metal_colour ? true : false}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n              <SelectPlaceholder\n                    value={productCtx.default_metal_purity}\n                    placeholder=\"Metal Purity\"\n                    onChange={handleChange('default_metal_purity')}\n                    options={productCtx.metalpurity}\n                    placeholderzindex=\"3\"\n                    selectzindex=\"3\"\n                     placeholderUp={productCtx.default_metal_purity ? true : false}\n                  />\n   \n    </Grid>\n    <Grid item xs={4} >\n              <SelectPlaceholder\n                    value={productCtx.default_metal_size}\n                    isDisabled = {!['BA','R','BR'].includes(productCtx.product_type_shortcode)}\n                    placeholder=\"Size\"\n                    onChange={handleChange('default_metal_size')}\n                    options={productCtx.default_metal_size}\n                    placeholderzindex=\"3\"\n                    selectzindex=\"3\"\n                     placeholderUp={productCtx.default_metal_size ? true : false}\n\n                  />\n   \n    </Grid>\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport { ProductContext } from '../../context';\n\nexport default function Review() {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                          <SelectPlaceholder\n                          placeholder=\"Themes\"\n                          isMulti\n                          value={productCtx.themes}\n                          onChange={handleChange('themes')}\n                          options={productCtx.masterData.themes}\n                          placeholderzindex=\"8\"\n                          selectzindex=\"8\"\n                           placeholderUp={productCtx.themes.length ? true : false} />\n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    <SelectPlaceholder\n        placeholder=\"Style\"\n        isMulti\n        value={productCtx.prod_styles}\n        onChange={handleChange('prod_styles')}\n        options={productCtx.masterData.styles}\n        placeholderzindex=\"7\"\n        selectzindex=\"7\"\n         placeholderUp={productCtx.prod_styles.length ? true : false}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    <SelectPlaceholder\n        placeholder=\"Occasions\"\n        isMulti\n        value={productCtx.occassions}\n        onChange={handleChange('occassions')}\n        options={productCtx.masterData.occasions}\n        placeholderzindex=\"6\"\n        selectzindex=\"6\"\n         placeholderUp={productCtx.occassions.length ? true : false}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n    <SelectPlaceholder\n        placeholder=\"Collections\"\n        isMulti\n        value={productCtx.collections}\n        onChange={handleChange('collections')}\n        options={productCtx.masterData.collections}\n        placeholderzindex=\"5\"\n        selectzindex=\"5\"\n         placeholderUp={productCtx.collections.length ? true : false}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n    <SelectPlaceholder\n        placeholder=\"Number of stones\"\n        value={productCtx.stonecount}\n        onChange={handleChange('stonecount')}\n        options={productCtx.masterData.stones}\n        placeholderzindex=\"4\"\n        selectzindex=\"4\"\n       placeholderUp={productCtx.stonecount ? true : false}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n    <SelectPlaceholder\n        placeholder=\"Stone Colour\"\n        value={productCtx.stonecolour}\n        onChange={handleChange('stonecolour')}\n        isMulti\n        options={productCtx.masterData.gemstonecolor}\n        placeholderzindex=\"3\"\n        selectzindex=\"3\"\n         placeholderUp={productCtx.stonecolour.length ? true : false}\n      />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n </React.Fragment>\n  );\n}","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export {\n    PRODUCTCATEGORY\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n\n\nexport const MATERIALMASTER = gql`query {\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\n\nexport const materialMaster = {\n    query: MATERIALMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        return {\n            materials\n        }\n    }\n\n\n}","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'token'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n        else window.location = '/'\n    }\n    const response = await fetch(url, {\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    })\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    }\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour.name)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n\n    })\n    setMetalcolour(metalcolour)\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor)\n  {\n \n  let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (\"S\"+productCtx.product_type_shortcode+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"url\":\"https://source.unsplash.com/random\"\n      }\n      imagecolourobj.push(imageobj)\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (\"S\"+productCtx.product_type_shortcode+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"url\":\"https://source.unsplash.com/random\"\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n    setFiles([])\n  }\n\n  //  let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension})\n  //  var returnData = responsedata.data.returnData;\n  //  var signedRequest = returnData.signedRequest;\n  //  var url = returnData.url;\n  //  console.log(\"responseurl\"+url);\n  //  // Put the fileType in the headers for the upload\n  //  var options = {\n  //      headers: {\n  //          'Content-Type': bodaydata.fileExtension,\n  //          'Access-Control-Allow-Origin':'*'\n  //      }\n  //  };\n  //  axios.put(signedRequest, bodaydata.file, options)\n  //      .then(result => {\n  //         alert(url);\n  //      })\n  //      .catch(error => {\n  //      })\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n    alert(JSON.stringify(prodimages))\n  }\n  }\n  \n const handleInit = () =>\n    {\n      alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                \n              <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, row.color)\n                          }}>\n                </FilePond>\n               \n                \n            </Grid>\n             ))}\n            <Grid xs={3} item>\n              <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={1}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name)\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(4, 0, 5),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n    case \"Step1\":\n      return <Step8 />; \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleNext = () => {\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n      var formdata = {\n        productname: productCtx.productname,\n        product_categoy:productCtx.product_categoy,\n        product_type:productCtx.product_type,\n        materials:productCtx.material,\n        metals:productCtx.metals,\n        gender: productCtx.selectedgender,\n        size: productCtx.selected_sizes,\n        vendor: productCtx.vendorcode,\n        product_code:productCtx.product_code,\n        purity:productCtx.metalpurity,\n        metal_color:productCtx.metalcolour,\n        default_metal_color:productCtx.default_metal_colour,\n        default_metal_purity:productCtx.default_metal_purity,\n        diamond:productCtx.diamondlist,\n        gemstone:productCtx.gemstonelist,\n        metal_height: productCtx.metal_height,\n        metal_weight: productCtx.metal_weight,\n        metal_length: productCtx.metal_length,\n        metal_width: productCtx.metal_width,\n        themes: productCtx.themes,\n        style: productCtx.prod_styles,\n        product_vendor_code: productCtx.productvendorcode,\n        earringbacking: productCtx.earringbacking,\n        occassions: productCtx.occassions,\n        collections: productCtx.collections,\n        stonecount: productCtx.stonecount,\n        stonecolours: productCtx.stonecolour,\n        isreorder : productCtx.isreorder,\n        defaultsize: productCtx.default_size,\n        defaultmetalsize: productCtx.default_metal_size\n\n     }\n     sendNetworkRequest('/productupload', {}, formdata)\n     }\n    \n     \n      setActiveStep(activeStep + 1);\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    \n    <Grid item xs={12} sm={12}  >\n\n        <Paper className={classes.paper}>\n          <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n            Product Upload\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n                      </Stepper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. We have emailed your order confirmation, and will\n                  send you an update when your order has shipped.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Place order' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n\n   \n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n   \n    <Grid  item xs={6} sm={6} >\n    <Link underline='none' component={RouterLink} to={'/material'}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography component=\"h6\" variant=\"h6\">\n            Manage Material\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n\n    <Grid  item xs={6} sm={6} >\n    <Link underline='none' component={RouterLink} to={'/dashboard'}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography component=\"h6\" variant=\"h6\">\n            Material Purity\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    <Grid  item xs={6} sm={6} >\n    <Link underline='none' component={RouterLink} to={'/dashboard'}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography component=\"h6\" variant=\"h6\">\n            Gemstone Types\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    <Grid  item xs={6} sm={6} >\n    <Link underline='none' component={RouterLink} to={'/dashboard'}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography component=\"h6\" variant=\"h6\">\n            Diamond Colours\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    <Grid  item xs={6} sm={6} >\n    <Link underline='none' component={RouterLink} to={'/dashboard'}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography component=\"h6\" variant=\"h6\">\n            Diamond Clarity\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    <Grid  item xs={6} sm={6} >\n    <Link underline='none' component={RouterLink} to={'/dashboard'}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography component=\"h6\" variant=\"h6\">\n            Making Charge Types\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Vendor Name', minWidth: 200 },\n  { id: 'SKU', label: 'Vendor Code', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendors from '../../components/Vendors'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport const Vendorlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Vendor\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Vendors contactlist={[\n        {\n            \"name\":\"NAC1\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Vendorlist;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 200 },\n  { id: 'SKU', label: 'SKU', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product contactlist={[\n        {\n            \"name\":\"NAC\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 200 },\n  { id: 'alias name', label: 'alias name', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function move()\n  {\n    alert(\"dasda\")\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon onClick={() => move}/>\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { MaterialContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport AddContact from '../../components/AddContact'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nexport default function Content() {\n    const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n    console.log(JSON.stringify(materialCtx))\n    console.log(JSON.stringify(materialMaster))\n    return (\n\n        <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n            <Grid fullwidth item xs={6} sm={6}>\n    \n                <Typography component=\"h6\" variant=\"h6\">\n                Materials\n              </Typography>\n              </Grid>\n              <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n    \n              <Link underline='none' component={RouterLink} to={'/productupload'}>\n              <Button variant=\"outlined\" color=\"primary\" >\n                Add New Material\n            </Button>\n            \n            </Link>\n            </Grid>\n        </Grid>\n        <AddContact contactlist={materialCtx.materialMaster.materials} />\n       \n        </Grid>\n      )\n    }\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport AddContact from '../../components/AddContact'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { MaterialProvider } from '../../context';\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { MaterialContext } from '../../context';\nimport Content from './Content';\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\n\nexport const Materiallist = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n             <Content  />\n        </MaterialProvider>\n  )\n});\n\nexport default Materiallist;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  function handleClick() {\n      \n      setGlobalCtx({ ...globalCtx, isExpand: !globalCtx.isExpand })\n\n  }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n      {/* <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Inbox\" />\n        {globalCtx.isExpand ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Starred\" />\n          </ListItem>\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Starred\" />\n          </ListItem>\n        </List>\n      </Collapse>\n */}\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            // className={classes.menuButton}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography  variant=\"h6\" noWrap>\n            NAC Jewellers\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        return true;\n    }\n\n    const Component = props => withAppBar(component, props);\n\n    return checkAuth() ? <Component {...rest} /> : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\n\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration, Vendorlist, Productlist, Materiallist } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\n\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            <NetworkProvider>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={Materiallist} />\n\n          </Switch>\n            </NetworkProvider>\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}