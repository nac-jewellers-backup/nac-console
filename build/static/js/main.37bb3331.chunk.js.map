{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","context/AlertContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","components/ProductFilter/ProductFilter.js","components/Alert/index.js","screens/Productlist/ProductSync.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/Customerdetails.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","graphql/mutation.js","screens/HolidayManager/HolidayModal.js","screens/HolidayManager/index.js","screens/Warehouse/WarehouseModal.js","screens/Warehouse/index.js","screens/Inventory/InventoryModal.js","screens/Inventory/index.js","components/BannerPage/BannerPage.js","components/BannerPage/BannerListingPage.js","components/BannerPage/BannerSpecificPage.js","screens/Banner/Banner.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.Alert.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","orderdetails","userorders","userwishlist","address","banner","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","diamondsettings","diamondshapes","earringbacking","addshippingattributes","addtaxattributes","userconfiguration","masterroles","manageadminusers","goldpriceupdate","manageusers","masterpages","gemsettings","gemshapes","gemtypes","gender","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","category","warehouse","holiday_manager","inventory","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","_excluded","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","Page_excluded","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","taggedTemplateLiteral","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","_templateObject30","ALLMASTERRINGSIZE","HOLIDAYLIST","_templateObject31","WAREHOUSELIST","_templateObject32","INVENTORYLIST","_templateObject33","VALIDATEGENERATEDSKU","_templateObject34","STOCKSTATUS","_templateObject35","VERIFYTAGNO","_templateObject36","ALLBANNERS","CREATEALLBANNERS","ALLLISTINGBANNERS","CREATELISTINGBANNERS","ALLSPECIFICLISTINGPAGE","CREATESPECIFICLISTINGPAGE","DELETEALLBANNER","ORDERS","queries_templateObject","queries_templateObject2","orderid","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","GRAPHQL_DEV_CLIENT","API_URL","URL","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","description","minOrderQty","maxOrderQty","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","size","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","useEffect","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","AlertProps","vertical","top","bottom","horizontal","left","right","center","severity","success","warning","AlertContext","open","msg","onclose","setSnack","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","Alert_Alert","elevation","withRouter","className","LoginForm_excluded","classes","useContext","_React$useContext2","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","handleChange","persist","target","type","checked","handleSubmit","signinobj","pageaccess","pages","pagepermissions","statuscode","setItem","accessToken","forEach","element","push","pageurl","is_write","history","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","Snackbar","autoHideDuration","anchorOrigin","onClose","LoginForm_Alert","Login","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","initailRingSize","updateRingSize","AddressForm_excluded","then","res","allMasterRingsSizes","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","PaymentForm_excluded","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","Review_excluded","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","Step4_excluded","selectedOption","default_metal_size","Step5_excluded","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","image_url","axios","put","file","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","border","&:hover","typography","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","placeItems","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","showproductdetails","_showproductdetails","prod_id","bodycontent","productid","filterparams","categoryname","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","_row$trans_sku_lists","trans_sku_lists","sku_id","Visibility_default","product_name","vendor_code","product_category","Switch","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","Label_excluded","rootClassName","finalStyle","defaultProps","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","CustomizedBreadcrumbs","Breadcrumbs","href","ArrowBackIos_default","drawer","header","buttonIcon","contentSection","contentSectionHeader","cursor","contentSectionContent","addButton","minAmount","maxAmount","radioGroup","actions","Filter","masters","onFilter","Filter_excluded","initialValues","company","mobile","version","commodity","_useState3","_useState4","_useState5","_useState6","setValues","handleoptionchange","Drawer","anchor","Close_default","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","Search_excluded","searchcontent","setSearchcontent","Search_default","esm_Input_Input","disableUnderline","filterButton","filterIcon","ProductFilter","dataCSV","ProductFilter_excluded","openFilter","setOpenFilter","components_Search_Search","pathname","react_csv","keyCSV","valueCSV","textDecoration","FilterList_default","components_Filter_Filter","Alerts","components_Alert_Alert","textarea","resize","backdrop","Transition","forwardRef","ref","Slide","LinearProgressWithLabel","Box","mr","LinearProgress","Math","round","ChooseWareHouse","_data$allWarehouses$n","_data$allWarehouses","getOptionSelected","allWarehouses","newValue","setWarehouse","required","endAdornment","ProductSync","useApolloClient","snack","action_type","Product_lists","new_tagno","setData","setProgress","errorTagNo","setErrorTagNo","_event$target","socketIOClient","on","completed","timeElapsed","fullScreen","TransitionComponent","AppBar","Toolbar","IconButton","edge","autoFocus","parse","err","startIcon","Sync_default","multiline","ProductSync_ChooseWareHouse","ChipInput_default","onAdd","tagno","_data$list","_data$list2","list","toConsumableArray","onDelete","newChipKeyCodes","join","Productlist","setMasters","setFilterparams","components_ProductFilter_ProductFilter","filterobj","filtercontent","Product","Productlist_ProductSync","Header","Header_excluded","inner","Results","Results_excluded","CardActions","results","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","Results_Results_excluded","slice","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","i","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","AboutVoucher_excluded","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","val","enddate","strictCompareDates","VoucherComponent","_React$createElement","VoucherComponent_excluded","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","components_Results_Results_excluded","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","AboutVoucher_AboutVoucher_excluded","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","_callee4","_context4","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","anchorEl","setAnchorEl","Boolean","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","OrderList_components_Header_Header_excluded","borderTop","Header_SortHeader","containergrid","OrderList_components_Results_Results_excluded","columnobjs","orderdate","onupdate","_showorderdetails","orderurl","components_EnhancedTableHead_EnhancedTableHead","col","iswrite","showorderdetails","paymentmode","paymentstatus","orderstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","orderStatus","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","paymentResponse","ipgTransactionId","fail_reason","shoppingCartByCartId","cartcontent","cartAddressesByCartId","addressobj","addressline1","contactNumber","firstname","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","userProfileByUserprofileId","usercontent","firstName","useraddressess","userAddressesByUserProfileId","useraddressobj","giftwrapsByCartId","gift","getmaster","_getmaster","opts","fatchvalue","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","data_filter","filter","match","username","OrderList_components_Results_Results","showcolumns","OrderList","user_id","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","positivebtn","closeButton","other","Addmetalprice_excluded","disableTypography","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","handleinputChange","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","readOnly","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","Adddiamondprice_excluded","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice_excluded","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","handleDelete","Addmakingchargeprice_excluded","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup_excluded","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","puritylist","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","material_list","purity_list","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","setMateriallist","setPuritylist","Markuppricesetup_components_Product","black","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","Salediscount_components_Results_Results_excluded","components_AboutVoucher_AboutVoucher_excluded","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","VoucherComponent_VoucherComponent_excluded","Viewsku_excluded","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","Viewsku_DialogActions","Products","Products_excluded","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","author","applyButton","EditContent","diamond","onApply","EditContent_excluded","showpreview","setShowpreview","previewurl","toggleChecked","imageurl","previmagenames","previmages","moment","foldername","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","alt","src","small","oninit","imagecontainer","masterlist","setMasterlist","openedit","setOpenedit","aliasName","setaliasName","onCreate","Array","prototype","insert","setpreviewurl","_React$useState33","_React$useState34","_React$useState35","_React$useState36","toLowerCase","button_title","sort_id","filterOrder","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","toolbar","deleteButton","deleteIcon","OrderManagementDetails_components_Header_Header_excluded","OrderInfo","OrderInfo_excluded","setOption","setPaymentstatus","setOrderstatus","user_profile","first_name","last_name","shopping_cart","cart_addresses","addressline2","state","country","contact_number","discounted_price","awb_number","giftwraps","payment_mode","select","OrderItems","OrderItems_excluded","react_perfect_scrollbar_lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","text_heading","text_content","final_total_text","OrderDetails","OrderDetails_excluded","trans_sku_list","sku_weight","diamond_type","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","_fetchorderdetails","order_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","Materialmaster","Mastermetalcolors","Masterpurities_components_Results_Results_excluded","Masterpurities","DiscountList_components_Header_Header_excluded","DiscountList_components_Results_Results_excluded","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","VoucherdiscountListing_components_Header_Header_excluded","VoucherdiscountListing_components_Results_Results_excluded","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections_components_Results_Results_excluded","Mastercollections","Masterdesigns_components_Results_Results_excluded","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings_components_Results_Results_excluded","Mastergemsettings","Mastergemshapes_components_Results_Results_excluded","Mastergemshapes","Mastergemtypes_components_Results_Results_excluded","Mastergemtypes","Mastergenders_components_Results_Results_excluded","Mastergenders","Seopriority_components_Results_Results_excluded","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Taxsettings","Attributescontent","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles_components_Results_Results_excluded","Masterstyles","Masterthemes_components_Results_Results_excluded","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent_Attributescontent","AttributeComponent","AttributesComponent_excluded","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","selectedcategory","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","setFiltercontent","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","master_options","_match$params","tab","find","t","General","General_excluded","isemailverified","components_Label_Label","ismobileverified","borderRight","Customerdetails","setCustomer","userinfo","userprofile","components_General_General","Invoices","Userwishlist_components_Results_Results_excluded","setInvoices","invoice","date","Userwishlist","wishlists","Userwishlist_components_Results_Results","Useraddresses_components_Results_Results_excluded","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","AttributesComponent_AttributesComponent_excluded","Addtaxattributes","AttributesComponent_AttributesComponent","CREATE_HOLIDAY","mutation_templateObject","UPDATE_HOLIDAY","mutation_templateObject2","DELETE_HOLIDAY","mutation_templateObject3","CREATE_WAREHOUSE","mutation_templateObject4","UPDATE_WAREHOUSE","mutation_templateObject5","DELETE_WAREHOUSE","mutation_templateObject6","CREATE_INVENTORY","mutation_templateObject7","UPDATE_INVENTORY","mutation_templateObject8","DELETE_INVENTORY","mutation_templateObject9","inputField","HolidayModal","holiday","editItem","DatePicker","HolidayManager","_data$allHolidayManag","_data$allHolidayManag2","_data$allHolidayManag3","_data$allHolidayManag4","first","networkStatus","setType","accept","files","bodyFormData","FormData","set","post","handleUpload","htmlFor","Tooltip","CloudUpload_default","document","setAttribute","click","GetApp_default","AddCircle_default","TableContainer","NetworkStatus","colSpan","allHolidayManagers","DeleteForever_default","HolidayManager_HolidayModal","__typename","WarehouseModal","shippingInDays","Warehouse","_data$allWarehouses2","_data$allWarehouses3","Warehouse_WarehouseModal","InventoryModal","setError","onBlur","_res$data","_res$data$allTransSku","_res$data$allTransSku2","allTransSkuLists","numberOfItems","iconButton","StockStatus","_item$inventoriesByWa","_item$inventoriesByWa2","_item$inventoriesByWa3","inventoriesByWarehouseId","aggregates","sum","disableRipple","Store_default","Inventory","_filter","_data$allInventories","_data$allInventories2","_data$allInventories3","_data$allInventories4","setSearch","_useQuery2","includesInsensitive","startAdornment","InputAdornment","Inventory_StockStatus","allInventories","Inventory_InventoryModal","warehouseId","link_style","BannerPage","allbanner","setallbanner","web","createlandingbanner","setCreatelandingbanner","_allbannerfetch","allBanners","allbannerfetch","onChangeData","onsubmitvalue","create_banner_data","Number","now","toISOString","BannerListingPage","BannerSpecificPage","urlParam","Banner_","disableGutters","BannerPage_BannerPage","BannerPage_BannerListingPage","BannerPage_BannerSpecificPage","Banner","grow","menuButton","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","mixins","outline","minHeight","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","selected","icons","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","Menu_default","noWrap","MoreVert_default","MainWrapper","PrimaryAppBar_excluded","PrivateRoute","PrivateRoute_excluded","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","EditDiamond","EditDiamond_excluded","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","DiamondSave","_DiamondSave","diamondobj","list_data","diamondListData","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","diamondType","settingData","shapeData","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","EditGemstone_excluded","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discountDesc","isReadyToShip","isdefault","skulistdata","EditPrice","EditPrice_excluded","pricerun","Skupricesync","_Skupricesync","productId","priceobj","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","onShow","Components_EditPrice_EditPrice","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","imgobj","handlenewAssetChange","fileType","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","styleFile","wordBreak","ishover","aria-hidden","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","_productCtx$vendorcod","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","_saveProductEditItem","productEditItem","productName","_showpricesummary","sku","price_summary","skuprice","obj","material_name","_productListByProduct","_productListByProduct2","_productListByProduct3","_productListByProduct4","_productListByProduct5","_productListByProduct6","_productListByProduct7","_productListByProduct8","productListByProductId","genders","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","transSkuDescriptionsBySkuId","skuDescription","ProductEdit_CreateVariant","changeVariant","ProductAttributes_Alert","materialName","esbody","endpoint","saveProductEditItem","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","useStyless","FormPropsTextFields","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","editcategory_excluded","focusVisibleClassName","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","AppAlert","_this","call","close","Alert_Alerts","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","App_Alert","routes","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37bb3331.chunk.js","sourcesContent":["const route = {\n  login: \"/login\",\n  dashboard: \"/dashboard\",\n  profile: \"/profile\",\n  productupload: \"/productupload\",\n  configuration: \"/Configuration\",\n  vendor: \"/vendorlist\",\n  productlist: \"/productlist\",\n  orderlist: \"/orderlist\",\n  orderdetails: \"/orderdetails/:id\",\n  userorders: \"/orderlist/:userid\",\n  userwishlist: \"/userwishlist/:userid\",\n  address: \"/address/:userid\",\n  banner: \"/banner\",\n\n  materiallist: \"/material\",\n  mastermaterial: \"/materialmaster\",\n  mastercolors: \"/mastercolors\",\n  masterpurities: \"/masterpurities\",\n  salediscountlist: \"/salediscountlist\",\n  voucherdiscountlist: \"/voucherdiscountlist\",\n\n  producttypes: \"/producttypes\",\n  voucherdiscount: \"/voucherdiscount\",\n  salediscount: \"/salediscount\",\n  priceupdate: \"/priceupdate\",\n  productAttributes: \"/product_attributes\",\n  diamondDetails: \"/diamond_details\",\n  gemstoneDetails: \"/gemstone-details\",\n  variants: \"/variants\",\n  images: \"/images\",\n  createVariant: \"/create_variant\",\n  materiallistpage: \"/newmaterial\",\n  editCategory: \"/editcategory\",\n  vendorPrice: \"/vendorpricesetup\",\n  markupPrice: \"/markuppricesetup\",\n  taxsetup: \"/taxsetup\",\n  editdiscount: \"/salediscount/:id\",\n  editvoucher: \"/voucherdiscount/:id\",\n  masterstyles: \"/masterstyles\",\n  masterthemes: \"/masterthemes\",\n  masteroccassions: \"/masteroccassions\",\n  masterpaymentstatus: \"/paymentstatus\",\n  mastercollections: \"/collections\",\n  masterdesigns: \"/designs\",\n  masterorderstatus: \"/orderstatus\",\n  shippingzones: \"/zones\",\n  shipmentsettings: \"/shipmensettings\",\n  shippingattributes: \"/shippingattributes\",\n  masterdiamonds: \"/diamonds\",\n  diamondsettings: \"/diamondsettings\",\n  diamondshapes: \"/diamondshapes\",\n  earringbacking: \"/earringbacking\",\n  addshippingattributes: \"/addshippingattributes\",\n  addtaxattributes: \"/addtaxattributes\",\n  userconfiguration: \"/userconfiguration\",\n  masterroles: \"/masterroles\",\n  manageadminusers: \"/manageadminusers\",\n  goldpriceupdate: \"/goldpriceupdate\",\n\n  manageusers: \"/manageusers\",\n\n  masterpages: \"/masterpages\",\n\n  gemsettings: \"/gemstonesettings\",\n  gemshapes: \"/gemstoneshapes\",\n  gemtypes: \"/gemstonetypes\",\n  gender: \"/genders\",\n  seo: \"/seopriority\",\n  taxsettings: \"/taxsettings\",\n  masterattributes: \"/masterattributes\",\n\n  masterstones: \"/masterstones\",\n  masterstonecolors: \"/masterstonecolors\",\n  masterstoneshapes: \"/masterstoneshapes\",\n  weights: \"/weights\",\n  customerdetails: \"/customerdetails/:id\",\n\n  category: \"/categories\",\n\n  warehouse: \"/warehouse\",\n  holiday_manager: \"/holiday-manager\",\n  inventory: \"/inventory\",\n};\n\nexport default route;\n","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import { Helmet } from 'react-helmet';\nimport PropTypes from \"prop-types\";\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n\n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}\n","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from \"graphql-tag\";\n\nconst PRODUCTCATEGORY = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        id\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMaterials {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterGenders {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondTypes {\n      nodes {\n        diamondClarity\n        diamondColor\n        id\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterDiamondsShapes {\n      nodes {\n        name\n        id\n        alias\n      }\n    }\n    allMasterThemes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n\n    allMasterStyles {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterOccasions {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterCollections {\n      nodes {\n        id\n        alias\n        name\n      }\n    }\n    allMasterStonesColors {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterStones {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterMetalsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterMetalsPurities {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondsColors {\n      nodes {\n        alias\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterDiamondClarities {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterVendors {\n      nodes {\n        id\n        name\n        shortCode\n        vendorDelivaryDays\n      }\n    }\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n      nodes {\n        productSeries\n        id\n      }\n    }\n    allMasterGemstonesTypes {\n      nodes {\n        alias\n        colorCode\n        id\n        name\n        shortCode\n      }\n    }\n    allMasterGemstonesShapes {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n    allMasterEarringBackings {\n      nodes {\n        name\n        createdAt\n        alias\n        id\n        nodeId\n        updatedAt\n      }\n    }\n    allMasterGemstonesSettings {\n      nodes {\n        alias\n        id\n        name\n      }\n    }\n  }\n`;\nconst PRODUCTFILTERMASTER = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n      }\n    }\n    allMasterProductTypes {\n      nodes {\n        updatedAt\n        shortCode\n        name\n        id\n        createdAt\n        alias\n        displayOrder\n      }\n    }\n  }\n`;\n\nconst ALLPRODUCTLIST = gql`\n  query {\n    allProductLists(first: 500) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLIST = (category) => gql`\n  query ($Veiw: Int!, $Offset: Int!) {\n    allProductLists(first: $Veiw, offset: $Offset) {\n      nodes {\n        id\n        nodeId\n        productName\n        productCategory\n        productType\n        productId\n        createdAt\n        isactive\n        transSkuListsByProductId(condition: { isdefault: true }) {\n          nodes {\n            skuUrl\n            discount\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLISTS = gql`\n  query {\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\n      nodes {\n        vendorDelivaryDays\n        updatedAt\n        state\n        shortCode\n        partnerCategory\n        name\n        organization\n        gstNo\n        currency\n        createdAt\n        city\n        address\n      }\n      totalCount\n    }\n  }\n`;\n\nconst TaxList_1 = gql`\n  query {\n    allMasterTaxSettings {\n      nodes {\n        hsnNumber\n        taxName\n        taxValue\n        updatedAt\n        id\n      }\n      totalCount\n    }\n  }\n`; /*********** configuration query */\n\nconst TaxList = `\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      sgst\n      productAttributes\n      displayAttributes\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList = `\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL = `\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS = `\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      shortCode\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES = `\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER = `\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    alias\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER = `\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER = `\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER = `\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER = `\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER = `\nquery  {\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    diamondClarity\n    diamondColor\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\n\nconst PAYMENTSTATUSMASTER = `\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS = `\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES = `\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES = `\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name\n    id\n    alias\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES = `\nquery{\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPAGES = `\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst GOLDPRICESETUPMASTER = `\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING = `\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONES = `\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES = `\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES = `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`;\nconst ACTIVESHIPPINGZONES = `\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES = `\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS = `\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS = `\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES = `\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERATTRIBUTES = `\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    isTopMenu\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS = `\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES = `\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES = `\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER = `\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES = `\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      imageUrl\n        mobileImageUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        purity\n        vendorCode\n        updatedAt\n        sellingPriceType\n        sellingPrice\n        material\n        id\n        createdAt\n        costPrice\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDMARKUP = gql`\n  query MyQuery($vendorCode: String!) {\n    allPricingMarkups(\n      condition: { material: $vendorCode }\n      orderBy: UPDATED_AT_DESC\n    ) {\n      nodes {\n        updatedAt\n        sellingPriceMin\n        sellingPriceMax\n        material\n        category\n        productType\n        markupValue\n        markupType\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst DIAMONDPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        costPrice\n        createdAt\n        diamondClarity\n        diamondColour\n        id\n        sellingPrice\n        sellingPriceType\n        updatedAt\n        vendorCode\n      }\n      totalCount\n    }\n  }\n`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\nconst CATGORYLIST = gql`\n  query {\n    allMasterProductCategories {\n      nodes {\n        alias\n        name\n        shortCode\n        id\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTTYPEMASTER = gql`\n  query {\n    allMasterProductTypes {\n      nodes {\n        name\n        id\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MATERIALMASTER = gql`\n  query {\n    allMasterMaterials {\n      nodes {\n        alias\n        name\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst MASTERCOLORS = gql`\n  query {\n    allMasterMetalsColors {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\n\nconst SALEDISCOUNTS = gql`\n  query {\n    allSaleDiscounts {\n      nodes {\n        id\n        discountName\n        discountType\n        discountValue\n        components\n        attributes\n        isActive\n        productAttributes\n        productAttributesText\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst VOUCHERDISCOUNTS = gql`\n  query {\n    allVouchers {\n      nodes {\n        id\n        name\n        code\n        uses\n        maxUses\n        isActive\n        voucherCodes\n        description\n      }\n\n      totalCount\n    }\n  }\n`;\n\nconst MASTERPURITIES = gql`\n  query {\n    allMasterMetalsPurities {\n      nodes {\n        name\n        alias\n        shortCode\n      }\n      totalCount\n    }\n  }\n`;\nconst VENDORLIST = `\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER = `\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst MASTERCATEGORY = `\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  }\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\nconst GEMSTONEMASTER = `\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\nconst MAKINGCHARGEPRICELIST = gql`\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\n    allMakingChargeSettings(\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\n    ) {\n      nodes {\n        weightStart\n        weightEnd\n        vendorCode\n        updatedAt\n        sellingPriceType\n        rateType\n        purity\n        priceType\n        price\n        material\n        id\n        createdAt\n      }\n      totalCount\n    }\n  }\n`;\nconst GEMPRICELIST = gql`\n  query MyQuery($vendorCode: String!) {\n    allGemstonePriceSettings(condition: { vendorCode: $vendorCode }) {\n      nodes {\n        price\n        rateType\n        priceType\n        sellingPriceType\n        vendorCode\n        weightEnd\n        weightStart\n        updatedAt\n        id\n        createdAt\n        gemstoneType\n      }\n      totalCount\n    }\n  }\n`;\nconst PRODUCTLISTSTATUSEDIT = gql`\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\n    __typename\n    updateProductListByProductId(\n      input: {\n        productId: $productId\n        productListPatch: { isactive: $isActive }\n      }\n    ) {\n      clientMutationId\n      productList {\n        isactive\n      }\n    }\n  }\n`;\n\nconst CREATETAXSETUP = gql`\n  mutation MyMutation(\n    $id: UUID!\n    $updatedAt: Date!\n    $createdAt: Date!\n    $taxValue: Double!\n    $taxName: String!\n    $hsnNumber: String!\n  ) {\n    __typename\n    createMasterTaxSetting(\n      input: {\n        masterTaxSetting: {\n          id: $id\n          updatedAt: $updatedAt\n          createdAt: $createdAt\n          taxValue: $taxValue\n          taxName: $taxName\n          hsnNumber: $hsnNumber\n        }\n      }\n    ) {\n      clientMutationId\n    }\n  }\n`;\n\nconst VOUCHERSTATUSEDIT = gql`\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateVoucherById(\n      input: { id: $voucherId, voucherPatch: { isActive: $isActive } }\n    ) {\n      clientMutationId\n      voucher {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\n    __typename\n    updateSaleDiscountById(\n      input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }\n    ) {\n      clientMutationId\n      saleDiscount {\n        isActive\n      }\n    }\n  }\n`;\n\nconst DELETEMARKUPPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deletePricingMarkupById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGOLDPRICE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETESALEDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteSaleDiscountById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteVoucherById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEMAKINGCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst DELETEGEMCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\nconst DELETEDIAMONDCHARGE = gql`\n  mutation MyMutation($elementId: UUID!) {\n    __typename\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\n      clientMutationId\n    }\n  }\n`;\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = gql`\n  query MyQuery($productId: String!) {\n    productListByProductId(productId: $productId) {\n      productMetalcoloursByProductId {\n        nodes {\n          productColor\n          id\n        }\n      }\n      productName\n      productType\n      vendorCode\n      gender\n      isactive\n      prodDescription\n      productMaterialsByProductSku {\n        nodes {\n          materialName\n        }\n      }\n      productDiamondsByProductSku {\n        nodes {\n          diamondClarity\n          diamondColour\n          diamondSettings\n          diamondShape\n          diamondType\n          id\n          stoneCount\n          stoneWeight\n        }\n      }\n      productGemstonesByProductSku {\n        nodes {\n          gemstoneSetting\n          gemstoneShape\n          gemstoneSize\n          gemstoneType\n          gemstonsSize\n          id\n          stoneCount\n          stoneWeight\n        }\n      }\n      productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n        nodes {\n          id\n          imagePosition\n          productId\n          imageUrl\n          ishover\n          isdefault\n          productColor\n        }\n      }\n      productPuritiesByProductId {\n        nodes {\n          purity\n          id\n        }\n      }\n      productThemesByProductId(condition: { isActive: true }) {\n        nodes {\n          themeName\n          id\n        }\n      }\n      productStonecolorsByProductId {\n        nodes {\n          id\n          stonecolor\n        }\n      }\n      productStylesByProductId(condition: { isActive: true }) {\n        nodes {\n          styleName\n          id\n        }\n      }\n      productCollectionsByProductId {\n        nodes {\n          collectionName\n          id\n        }\n      }\n      productOccassionsByProductId(condition: { isActive: true }) {\n        nodes {\n          occassionName\n          id\n        }\n      }\n      productStonecountsByProductId {\n        nodes {\n          id\n          stonecount\n        }\n      }\n      transSkuListsByProductId {\n        nodes {\n          skuSize\n          diamondType\n          metalColor\n          purity\n          productId\n          skuWeight\n          generatedSku\n          costPrice\n          costPriceTax\n          discountPrice\n          discountPriceTax\n          markupPrice\n          marginOnSalePercentage\n          markupPriceTax\n          marginOnSalePercentage\n          sellingPrice\n          discountDesc\n          sellingPriceTax\n          isReadyToShip\n          discount\n          isActive\n          isdefault\n          vendorDeliveryTime\n          id\n          isActive\n          transSkuDescriptionsBySkuId {\n            nodes {\n              skuDescription\n              certificate\n              ringsizeImage\n            }\n          }\n          maxOrderQty\n          minOrderQty\n        }\n      }\n      productCategory\n      sizeVarient\n      height\n      length\n    }\n  }\n`;\n\nconst ALLMASTERRINGSIZE = `\n  query {\n    allMasterRingsSizes {\n      nodes {\n        gender\n        productType\n        name\n        size\n        sizeValue\n      }\n    }\n  }\n`;\n\nconst HOLIDAYLIST = gql`\n  query ($first: Int, $offset: Int, $filter: HolidayManagerFilter) {\n    allHolidayManagers(\n      first: $first\n      offset: $offset\n      filter: $filter\n      orderBy: DATE_ASC\n    ) {\n      nodes {\n        id\n        holiday\n        date\n        createdAt\n        updatedAt\n      }\n      totalCount\n    }\n  }\n`;\n\nconst WAREHOUSELIST = gql`\n  query {\n    allWarehouses(orderBy: ID_ASC) {\n      nodes {\n        id\n        name\n        shippingInDays\n        isActive\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\n\nconst INVENTORYLIST = gql`\n  query ($first: Int, $offset: Int, $filter: InventoryFilter) {\n    allInventories(first: $first, offset: $offset, filter: $filter) {\n      nodes {\n        id\n        generatedSku\n        numberOfItems\n        createdAt\n        updatedAt\n        warehouse: warehouseByWarehouseId {\n          id\n          name\n        }\n      }\n      totalCount\n    }\n  }\n`;\n\nconst VALIDATEGENERATEDSKU = gql`\n  query ($generatedSku: String!) {\n    allTransSkuLists(condition: { generatedSku: $generatedSku }) {\n      nodes {\n        id\n      }\n    }\n  }\n`;\n\nconst STOCKSTATUS = gql`\n  query {\n    allWarehouses {\n      nodes {\n        name\n        isActive\n        inventoriesByWarehouseId {\n          aggregates {\n            sum {\n              numberOfItems\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst VERIFYTAGNO = gql`\n  query ($tagno: String!) {\n    list: allTransSkuLists(condition: { generatedSku: $tagno }) {\n      nodes {\n        id\n      }\n    }\n  }\n`;\n\nconst ALLBANNERSCOMPLETE = `\nquery MyQuery {\n  allBanners\n  {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam \n    }\n  }\n}\n`;\n\nconst ALLBANNERS = `\nquery MyQuery {\n  allBanners(condition: {urlParam: \"landing\"})\n  {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam \n    }\n  }\n}\n`;\n\nconst CREATEALLBANNERS = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam : \"landing\"\n      }\n    }\n  ) {\n    clientMutationId\n     banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\n\nconst ALLLISTINGBANNERS = `\nquery MyQuery {\n  allBanners(condition: {urlParam: \"listing\"})\n  {\n    nodes {\n      id\n      mobile\n      position\n      url\n      web\n      urlParam \n    }\n  }\n}\n`;\n\nconst CREATELISTINGBANNERS = `\nmutation MyMutation(\n  $now: Datetime!\n  $url: String\n  $web: String\n  $mobile: String\n  $position: Int\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        position: $position\n        url: $url\n        web: $web\n        urlParam : \"listing\"\n      }\n    }\n  ) {\n    clientMutationId\n     banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\n\nconst ALLSPECIFICLISTINGPAGE = `\nquery MyQuery {\n  allBanners\n  (condition: {url: \"specificListingPage\"}) \n  {\n    nodes {\n      id\n      mobile\n      position\n      web\n      urlParam\n    }\n  }\n}\n`;\n\nconst CREATESPECIFICLISTINGPAGE = `\nmutation MyMutation(\n  $now: Datetime!\n  $web: String\n  $mobile: String\n  $urlParam :String\n) {\n  createBanner(\n    input: {\n      banner: {\n        createdAt: $now\n        updatedAt: $now\n        mobile: $mobile\n        url: \"specificListingPage\"\n        web: $web\n        urlParam : $urlParam\n      }\n    }\n  ) {\n    clientMutationId\n    banner {\n      id\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\n\nconst DELETEALLBANNER = `\nmutation MyMutation($id : Int!) {\n  deleteBannerById(input: {id: $id}) {\n    banner {\n      id\n      nodeId\n      mobile\n      position\n      updatedAt\n      url\n      web\n      createdAt\n    }\n  }\n}\n`;\n\nexport {\n  ALLBANNERS,\n  ALLLISTINGBANNERS,\n  ALLSPECIFICLISTINGPAGE,\n  CREATEALLBANNERS,\n  CREATELISTINGBANNERS,\n  CREATESPECIFICLISTINGPAGE,\n  DELETEALLBANNER,\n  PRODUCTCATEGORY,\n  PRODUCTLIST,\n  PRODUCTEDIT,\n  PRODUCTLISTSTATUSEDIT,\n  PRODUCTDIAMONDTYPES,\n  GOLDPRICELIST,\n  DIAMONDPRICELIST,\n  GEMPRICELIST,\n  MAKINGCHARGEPRICELIST,\n  VENDORLIST,\n  ALLPRODUCTLIST,\n  DIAMONDMARKUP,\n  PRODUCTFILTERMASTER,\n  METALMASTER,\n  GEMSTONEMASTER,\n  MASTERCATEGORY,\n  DELETEMARKUPPRICE,\n  DELETEMAKINGCHARGE,\n  DELETEGEMCHARGE,\n  DELETEGOLDPRICE,\n  DELETESALEDISCOUNT,\n  CATGORYLIST,\n  DELETEDIAMONDCHARGE,\n  VENDORLISTS,\n  TaxList,\n  PRODUCTTYPEMASTER,\n  MATERIALMASTER,\n  MASTERCOLORS,\n  MASTERPURITIES,\n  SALEDISCOUNTS,\n  VOUCHERDISCOUNTS,\n  DELETEVOUCHERDISCOUNT,\n  VOUCHERSTATUSEDIT,\n  DISCOUNTSTATUSEDIT,\n  MASTERMATERIAL,\n  MASTERMATERIALCOLORS,\n  MASTERPRODUCTPURITIES,\n  COLLECTIONMASTER,\n  DESIGNMASTER,\n  DIAMONDMASTER,\n  DIAMONDSETTINGS,\n  DIAMONDSHAPES,\n  MASTERPRODUCTTYPES,\n  MASTERGEMSETTINGS,\n  MASTERGEMSHAPES,\n  MASTERGEMTYPES,\n  MASTERGENDER,\n  SEOPRIORITIES,\n  CREATETAXSETUP,\n  TaxSettingList,\n  MASTERCATEGORIES,\n  EARRINGBACKING,\n  MASTERATTRIBUTES,\n  MASTERSTONESHAPES,\n  MASTERSTONECOLORS,\n  MASTERSTONES,\n  MASTERWEIGHTS,\n  THEMEMASTER,\n  STYLEMASTER,\n  OCCASSIONSMASTER,\n  PAYMENTSTATUSMASTER,\n  SHIPPINGZONES,\n  MASTERCOUNTRIES,\n  SHIPPINGCHARGES,\n  ACTIVESHIPPINGZONES,\n  MASTERPAGES,\n  GOLDPRICESETUPMASTER,\n  ALLMASTERRINGSIZE,\n  HOLIDAYLIST,\n  WAREHOUSELIST,\n  INVENTORYLIST,\n  VALIDATEGENERATEDSKU,\n  STOCKSTATUS,\n  VERIFYTAGNO,\n};\n","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export const USERORDERS = gql`query($userid: UUID!) {\n    allOrders(filter: {userProfileByUserProfileId: {id: {equalTo: $userid}}}) {\n      nodes {\n        paymentMode\n        paymentStatus\n        updatedAt\n        createdAt\n        awbNumber\n        cartId\n        orderStatus\n        comments\n        id\n        shoppingCartByCartId {\n          shoppingCartItemsByShoppingCartId {\n            nodes {\n              transSkuListByProductSku {\n                generatedSku\n                productListByProductId {\n                  productCategory\n                  productType\n                  productCollectionsByProductId {\n                    nodes {\n                      collectionName\n                    }\n                  }\n                }\n              }\n            }\n          }\n          giftwrapsByCartId {\n            nodes {\n              message\n              giftFrom\n              giftTo\n            }\n          }\n          \n          cartAddressesByCartId {\n            nodes {\n              firstname\n              contactNumber\n              addressline1\n              addressline2\n              city\n              pincode\n              state\n            }\n          }\n          userProfileByUserprofileId {\n            firstName\n            mobile\n            email\n          }\n        }\n        paymentDetailsByOrderId {\n          nodes {\n            paymentResponse\n          }\n        }\n      }\n    }\n  \n  }`\nexport const ORDERS = orderid  => gql`query {\n  allOrders(filter:  ${orderid ? `{userProfileId: {equalTo: \"${orderid}\"}}` : `{id: {isNull: false}}`},orderBy: CREATED_AT_DESC) {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n          userAddressesByUserProfileId {\n            nodes {\n              contactNumber\n            }\n          }\n          \n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`\n\nexport const VOUCHERMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      \n      \n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\n\nexport const TAXMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,USERORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._,\n        //     name: _.name,\n        //     size:_.size,\n        //     productType : _.productType ,\n        // }))\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking,\n            // metalSizeMinToMax\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const userOders = {\n    query: USERORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n        // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\n        //     ..._\n        // }))\n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes,\n            // metalSizeMinToMax\n        }\n    }\n\n\n}","//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n// export const BASE_URL = \"https://api-staging.nacjewellers.net\";\n// export const API_URL = \"https://api-staging.nacjewellers.net\";\n// export const GRAPHQL_DEV_CLIENT = \"https://api-staging.nacjewellers.net/graphql\";\n// export const URL = \"https://api-staging.nacjewellers.net/\";\n\n export const GRAPHQL_DEV_CLIENT = \"http://localhost:8080/graphql\"\n export const API_URL = \"http://localhost:8080\"\n export const BASE_URL = \"http://localhost:8000\"\n export const URL = \"https://localhost:3000\"\n","import React from \"react\";\nimport { productCategory } from \"../services/mapper\";\nimport { API_URL } from \"../config\";\nimport { isString } from \"util\";\n\nconst TOKEN = \"accesstoken\";\n\nconst initialNetworkCtx = {\n  networkCtx: {\n    mapper: productCategory,\n    status: {\n      called: false,\n      data: [],\n      loading: true,\n      error: false,\n      parsedData: [],\n    },\n    notRequested: true,\n  },\n  setNetworkCtx: () => null,\n  sendNetworkRequest: () => null,\n};\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n  url = API_URL + url;\n  console.info(\"URL\", url, data);\n  const method = data ? \"POST\" : \"GET\",\n    headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n  let resdata = null;\n  if (auth) {\n    const token = localStorage.getItem(TOKEN);\n    if (token) headers[\"x-access-token\"] = token;\n    // else window.location = '/'\n  }\n  const response = await fetch(\n    url,\n    method === \"GET\"\n      ? { method }\n      : {\n          method,\n          body: isString(data) ? data : JSON.stringify(data),\n          headers,\n        }\n  );\n\n  if (response.status < 400) {\n    resdata = await response.json();\n  } else {\n    resdata = await response.json();\n    // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n    // {\n    //    if(!resdata.auth)\n    //    {\n    //     //alert(resdata.message)\n    //    }\n    // }else{\n    //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    // }\n  }\n  resdata[\"statuscode\"] = response.status;\n\n  return resdata;\n};\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n  const [networkCtx, setNetworkCtx] = React.useState(\n    initialNetworkCtx.networkCtx\n  );\n\n  return (\n    <NetworkContext.Provider\n      value={{ networkCtx, setNetworkCtx, sendNetworkRequest }}\n    >\n      {props.children}\n    </NetworkContext.Provider>\n  );\n};\n","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from \"react\";\n\nconst productuploadCtxInitial = {\n  productCtx: {\n    product_categoy: \"\",\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\n    product_type: \"\",\n    productname: \"\",\n    material: \"\",\n    description: \"\",\n    minOrderQty: \"\",\n    maxOrderQty: \"\",\n    height: \"\",\n    length: \"\",\n    product_type_shortcode: \"\",\n    category: [],\n    metalColour: \"\",\n    metalpurities: \"\",\n    isExpand: false,\n    selectedgender: \"\",\n    selected_metal_colour: {},\n    gender: {},\n    product_gender: [],\n    vendorcode: \"\",\n    productseries: [],\n    size: 0,\n    sizes: [],\n    selected_sizes: [],\n    metal: {\n      value: 1,\n      label: \"Diamond\",\n    },\n    materials: [\"Diamond\", \"Gold\", \"Gemstone\", \"Solitaire\", \"Silver\", \"Platinum\"],\n    gemstontypes: \"\",\n    gemstonshapes: \"\",\n    product_code: \"\",\n    isactive: false,\n    gemstonelist: [],\n    diamondlist: [],\n    variants: [],\n    oldproductMetalColor: [],\n    oldproductMetalPurity: [],\n    productMetalColor: [],\n    productMetalPurity: [],\n    productDiamondColor: [],\n    productDiamondClarity: [],\n    productDiamondTypes: [],\n    productImages: [],\n    productDiamondTypesArray: [],\n    oldproductDiamondTypesArray: [],\n    productmaterials: [],\n    createVariantList: [],\n    editVariants: [],\n    editDiamondLists: [],\n    editGemstoneLists: [],\n    productVariantSize: [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],\n    variant_size: [],\n    gemstonetype: \"\",\n    gemstoneshape: \"\",\n    gemstonesettings: \"\",\n    gemstonesize: \"\",\n    gemstonecount: \"\",\n    gemstoneweight: \"\",\n    stonetype: \"\",\n\n    editleadtime: \"\",\n    editreadytoship: false,\n    editisdefault: false,\n    editisactive: false,\n\n    editcostprice: 0,\n    editsellingprice: 0,\n    editmarkupprice: 0,\n    editdiscountprice: 0,\n    editcostpricetax: 0,\n    editsellingpricetax: 0,\n    editmarkuppricetax: 0,\n    editdiscountpricetax: 0,\n\n    diamondclarity: \"\",\n    diamondcolor: \"\",\n    diamondsettings: \"\",\n    diamondshape: \"\",\n    diamondcount: \"\",\n    diamondweight: \"\",\n    metalindex: -1,\n    themes: [],\n    prod_styles: [],\n    occassions: [],\n    collections: [],\n    stonecount: [],\n    stonecolour: [],\n    product_images: {},\n    metalcolour: [],\n    metal_purity: [],\n    metalpurity: [],\n    metal_color: 0,\n    metal_weight: 0,\n    diamond_colour: 0,\n    diamond_clarity: 0,\n    metal_height: 0,\n    metal_width: 0,\n    metal_length: 0,\n    metal_object: 0,\n    diamondtype: 0,\n    metals: [],\n    error_message: {},\n  },\n  masterData: {},\n  setProductCtx: () => null,\n};\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n  return productuploadCtxInitial.productCtx;\n};\n\nexport const ProductProvider = (props) => {\n  console.info(\"PROPS\", props, props.value.mappertype);\n  const [productCtx, setProductCtx] = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype));\n  // on Mount get Data from storage\n  // on Unmount store data to storage\n\n  React.useEffect(() => {\n    console.info(\"productCtx s\", productCtx);\n  }, [productCtx.material]);\n\n  return (\n    <ProductContext.Provider\n      value={{\n        productCtx,\n        setProductCtx,\n        masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype),\n      }}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n};\n","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \n    if(Object.keys(apiData).length === 0) return {};\n \n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","import React from \"react\";\nexport let AlertProps = {\n  vertical: {\n    top: \"top\",\n    bottom: \"bottom\",\n  },\n  horizontal: {\n    left: \"left\",\n    right: \"right\",\n    center: \"center\",\n  },\n  severity: {\n    success: \"success\",\n    error: \"error\",\n    warning: \"warning\",\n    info: \"info\",\n  },\n};\n\n/**\n * AlertContext store the props which are neccessary to show the Alert component,\n * which is provided at the /src/App.js using the /src/App.alert.js.\n */\nexport let AlertContext = React.createContext({\n  open: false,\n  severity: AlertProps.severity.success,\n  msg: \"\",\n  vertical: AlertProps.vertical.top,\n  horizontal: AlertProps.horizontal.center,\n  onclose: () => null,\n  setSnack: () => null,\n});\n","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { GlobalContext } from '../../../../context';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\n    let pages = [];\n    let pagepermissions = [];\n    pageaccess.pages.forEach(element => {\n      pages.push(element.pageurl)\n      // pagepermissions[element.pageurl] = {\n      //   isread : element.is_view,\n      //   iswrite : element.is_write\n      // }\n      if(element.is_write)\n      {\n        pagepermissions.push(element.pageurl)\n      }\n    });\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\n\n    localStorage.setItem('accesspages', pages);\n    localStorage.setItem('pagepermissions', pagepermissions);\n\n    \n    props.history.push('/productlist')\n\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Log in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport clsx from \"clsx\";\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext } from \"../../context\";\nimport FullLoader from \"../../components/Loader\";\nimport \"./Productupload.css\";\nimport Select from \"react-select\";\nimport \"./floating_dropdown.css\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport { useQuery } from \"react-apollo\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\nimport { arrayIncludes } from \"@material-ui/pickers/_helpers/utils\";\nconst top100Films = [\n  { title: \"The Shawshank Redemption\", year: 1994 },\n  { title: \"The Godfather\", year: 1972 },\n  { title: \"The Godfather: Part II\", year: 1974 },\n  { title: \"The Dark Knight\", year: 2008 },\n  { title: \"12 Angry Men\", year: 1957 },\n  { title: \"Schindler's List\", year: 1993 },\n];\nconst useStyles = makeStyles((theme) => ({\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  dropdownlayout: {\n    \"& .menu\": {\n      position: \"Relative !important\",\n    },\n  },\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  alert: {\n    marginBottom: theme.spacing(3),\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3),\n  },\n  fieldGroup: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0),\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    \"& > * + *\": {\n      marginLeft: theme.spacing(1),\n    },\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n  dateField: {\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function AddressForm(props) {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [initailRingSize, updateRingSize] = useState([]);\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  React.useEffect(async () => {\n    fetch(GRAPHQL_DEV_CLIENT, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\n    })\n      .then((res) => res.json())\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\n  }, []);\n\n  React.useEffect(() => {}, [productCtx]);\n  // const handleChange = selectedOption => {\n\n  // };\n  const handlesizeChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\n  };\n  const handlevendorChange = (selectedOption) => {\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\n  };\n\n  const changeproducttype = (type) => (event, newvalue) => {\n    setProductCtx({ ...productCtx, product_type: newvalue });\n  };\n  const handlechange = (type) => (selectedOption) => {\n    if (type === \"product_type\") {\n      if (selectedOption) {\n        var size = \"\";\n        var minvalue = 0;\n        var maxvalue = 0;\n        var selected_sizes = [];\n        var default_size = 0;\n        if (selectedOption.shortCode === \"K\") {\n          selected_sizes.push({\n            value: \"XS\",\n            label: \"XS\",\n          });\n          selected_sizes.push({\n            value: \"S\",\n            label: \"S\",\n          });\n          selected_sizes.push({\n            value: \"M\",\n            label: \"M\",\n          });\n          selected_sizes.push({\n            value: \"L\",\n            label: \"L\",\n          });\n        } else {\n          // if (\n          //   selectedOption.shortCode === \"R\" &&\n          //   productCtx.selectedgender.name === \"Male\"\n          // ) {\n          //   minvalue = 13;\n          //   maxvalue = 25;\n          //   default_size = 15;\n          // }\n          // if (\n          //   selectedOption.shortCode === \"R\" &&\n          //   productCtx.selectedgender.name === \"Female\"\n          // ) {\n          //   minvalue = 8;\n          //   maxvalue = 23;\n          //   default_size = 12;\n          // }\n          // for (var i = minvalue; i < maxvalue; i++) {\n          //   selected_sizes.push({\n          //     value: i,\n          //     label: \"\" + i,\n          //   });\n          // }\n        }\n\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: selectedOption.shortCode,\n          product_type: selectedOption,\n          size,\n          default_size,\n          selected_sizes,\n        });\n      } else {\n        setProductCtx({\n          ...productCtx,\n          product_type_shortcode: \"\",\n          product_type: \"\",\n          size,\n          selected_sizes: \"\",\n        });\n      }\n    } else {\n      setProductCtx({ ...productCtx, [type]: selectedOption });\n    }\n  };\n  const handleTextChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"vendorcode\") {\n      setProductCtx({\n        ...productCtx,\n        [type]: value,\n        vendorleadtime: value.vendorDelivaryDays,\n      });\n    } else {\n      setProductCtx({ ...productCtx, [type]: value });\n    }\n  };\n\n  const switchisorderable = (event) => {\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\n  };\n\n  const purityChange = (type) => (selectedOption) => {\n    setProductCtx({ ...productCtx, [type]: selectedOption });\n  };\n\n  const handleGenderChange = (type) => (event, value) => {\n    var minvalue = 0;\n    var maxvalue = 0;\n    var selected_sizes = [];\n    var sizes = [];\n    var default_size = 0;\n    // if (productCtx.product_type.shortCode === \"K\") {\n    //   default_size = \"XS\";\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\n    // } else {\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\n    //   minvalue = 13;\n    //   maxvalue = 26;\n    //   default_size = \"\" + 15;\n    // }\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\n    //   minvalue = 8;\n    //   maxvalue = 24;\n    //   default_size = \"\" + 12;\n    // }\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Male\") {\n    //   minvalue = 13;\n    //   maxvalue = 26;\n    //   default_size = \"\" + 15;\n    // }\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Female\") {\n    //   minvalue = 8;\n    //   maxvalue = 24;\n    //   default_size = \"\" + 12;\n    // }\n\n    // for (var i = minvalue; i < maxvalue; i++) {\n    // selected_sizes.push(\"\" + i);\n    // sizes.push(\"\" + i);\n    // }\n\n    // if (productCtx.product_type.shortCode !== \"K\" ) {\n     \n      // updateRingSize(\n      //   initailRingSize.sort(\n      //     (a, b) => parseFloat(a.sizeValue) - parseFloat(b.sizeValue)\n      //   )\n      // );\n    \n\n    initailRingSize.forEach((e) => {\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\n        selected_sizes.push(\"\" + e.sizeValue);\n        sizes.push(\"\" + e.sizeValue);\n      }\n    });\n    // }\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n      sizes,\n      selected_sizes,\n      default_size,\n    });\n  };\n\n  const handleMaterialChange = (type) => (event, value) => {\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\n    if (value) {\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\n        if (steps.indexOf(\"Step3\") === -1) {\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n        }\n      }\n    }\n    setProductCtx({ ...productCtx, [type]: value, steps });\n  };\n\n  const handleInputChange = (type) => (e) => {\n    var size = productCtx.size;\n    var materials = productCtx.materials;\n    var selected_sizes = productCtx.selected_sizes;\n\n    if (type === \"selectedgender\") {\n      var minvalue = 0;\n      var maxvalue = 0;\n      selected_sizes = [];\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\n      //   size = \"13-25\";\n      //   minvalue = 13;\n      //   maxvalue = 26;\n      // }\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\n      //   size = \"8-18\";\n      //   minvalue = 8;\n      //   maxvalue = 19;\n      // }\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Male\") {\n      //   size = \"13-25\";\n      //   minvalue = 13;\n      //   maxvalue = 26;\n      // }\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Female\") {\n      //   size = \"8-18\";\n      //   minvalue = 8;\n      //   maxvalue = 19;\n      // }\n\n      // for (var i = minvalue; i < maxvalue; i++) {\n      //   selected_sizes.push({\n      //     value: i,\n      //     label: \"\" + i,\n      //   });\n      // }\n    }\n\n    if (type === \"product_categoy\") {\n      if (e.target.value === \"Platinum Jewellery\") {\n        materials.push(\"Platinum Jewellery\");\n        var index = materials.indexOf(\"Silver Jewellery\");\n\n        if (index >= 0) {\n          materials.splice(index, 1);\n        }\n      } else if (e.target.value === \"Silver Jewellery\") {\n        materials.push(\"Silver Jewellery\");\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\n        if (index1 >= 0) {\n          materials.splice(index1, 1);\n        }\n      } else {\n        var indexval = materials.indexOf(\"Silver Jewellery\");\n\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n        indexval = materials.indexOf(\"Platinum Jewellery\");\n        if (indexval >= 0) {\n          materials.splice(indexval, 1);\n        }\n      }\n    }\n\n    setProductCtx({\n      ...productCtx,\n      size,\n      [type]: e,\n      materials,\n      selected_sizes,\n    });\n  };\n\n  const materialChange = (type) => (selectedOption) => {\n    //   let material = { ...productCtx.material, [type]: selectedOption }\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\n    //   if(material.material)\n    //   {\n    //   material.material.forEach(element => {\n    let material_names = [];\n    if (selectedOption) {\n      selectedOption.forEach((element) => {\n        material_names.push(element.name);\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\n          if (steps.indexOf(\"Step3\") === -1) {\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\n          }\n        }\n      });\n    }\n    //   });\n    // }\n\n    setProductCtx({\n      ...productCtx,\n      [type]: selectedOption,\n      steps,\n      material_names,\n    });\n  };\n  const keyPress = (type) => (e) => {\n    const re = /^[a-zA-Z \\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {/* <FullLoader /> */}\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6} spacing={1}>\n            <Card {...rest} className={clsx(classes.root, className)}>\n              <CardHeader title=\"Product Information 1\" />\n              <Divider />\n              <CardContent className={classes.cardcontent}>\n                <Grid container spacing={1}>\n                  <Grid item xs={12} sm={12} spacing={1}>\n                    <Input\n                      className={classes.helperinput}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={productCtx.productname}\n                      id=\"productname\"\n                      error={productCtx.error_message.productname}\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                      name=\"productname\"\n                      label=\"Product Name\"\n                      onChange={keyPress(\"productname\")}\n                    />\n                  </Grid>\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\n                    <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange(\"product_categoy\")}\n                      options={productCtx.masterData.category.map(\n                        (option) => option.label\n                      )}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip\n                            variant=\"outlined\"\n                            label={option.label}\n                            {...getTagProps({ index })}\n                          />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Category\"\n                          margin=\"dense\"\n                          error={productCtx.error_message.product_categoy}\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6} spacing={1}>\n                    <Autocomplete\n                      id=\"product_type\"\n                      className={classes.fixedTag}\n                      getOptionLabel={(option) => option.label}\n                      defaultValue={productCtx.product_type}\n                      options={productCtx.masterData.product_type}\n                      onChange={handleoptionChange(\"product_type\")}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip\n                            variant=\"outlined\"\n                            label={option.label}\n                            {...getTagProps({ index })}\n                          />\n                        ))\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Select Product Type\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          error={productCtx.error_message.product_type}\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\n                        />\n                      )}\n                    />\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Product Information 2\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      {productCtx.product_type ? (\n                        <>\n                          <Grid item xs={12} sm={6}>\n                            <Autocomplete\n                              id=\"free-solo-2-demo\"\n                              multiple\n                              className={classes.fixedTag}\n                              defaultValue={productCtx.material_names}\n                              options={productCtx.masterData.material.map(\n                                (option) => option.label\n                              )}\n                              onChange={handleMaterialChange(\"material_names\")}\n                              renderTags={(value, getTagProps) =>\n                                value.map((option, index) => (\n                                  <Chip\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label={option}\n                                    {...getTagProps({ index })}\n                                  />\n                                ))\n                              }\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Select Product Materials\"\n                                  margin=\"dense\"\n                                  variant=\"outlined\"\n                                  error={\n                                    productCtx.error_message.material_names\n                                  }\n                                  fullWidth\n                                  InputProps={{\n                                    ...params.InputProps,\n                                    type: \"search\",\n                                  }}\n                                />\n                              )}\n                            />\n                          </Grid>\n                        </>\n                      ) : null}\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.selectedgender}\n                          options={productCtx.masterData.gender.map(\n                            (option) => option.label\n                          )}\n                          onChange={handleGenderChange(\"selectedgender\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Gender\"\n                              margin=\"dense\"\n                              error={productCtx.error_message.selectedgender}\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalpurity}\n                          options={productCtx.masterData.metalpurity}\n                          onChange={handleoptionChange(\"metalpurity\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Purity\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              error={productCtx.error_message.metalpurity}\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n                      </Grid>\n                      <Grid item xs={6} sm={6}>\n                        <Autocomplete\n                          multiple\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          defaultValue={productCtx.metalcolour}\n                          options={productCtx.masterData.metalcolour}\n                          onChange={handleoptionChange(\"metalcolour\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Metal Colour\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.metalcolour}\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </>\n            ) : null}\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={6}>\n            {productCtx.product_type ? (\n              <>\n                <Card {...rest} className={clsx(classes.root, className)}>\n                  <CardHeader title=\"Vendor Information\" />\n                  <Divider />\n                  <CardContent className={classes.cardcontent}>\n                    <Grid container spacing={1}>\n                      <Grid item xs={12} sm={6}>\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          defaultValue={productCtx.vendorcode}\n                          getOptionLabel={(option) => option.label}\n                          options={productCtx.masterData.vendorcode}\n                          onChange={handleoptionChange(\"vendorcode\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Select Vendor Code\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              error={productCtx.error_message.vendorcode}\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Product Code\"\n                          fullWidth\n                          className={classes.helperinput}\n                          value={productCtx.productvendorcode}\n                          error={productCtx.error_message.productvendorcode}\n                          id=\"productvendorcode\"\n                          name=\"productvendorcode\"\n                          onChange={handleTextChange(\"productvendorcode\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <Input\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          label=\"Vendor Lead Time\"\n                          fullWidth\n                          className={classes.helperinput}\n                          error={productCtx.error_message.vendorleadtime}\n                          value={productCtx.vendorleadtime}\n                          InputLabelProps={{\n                            shrink: productCtx.vendorleadtime,\n                          }}\n                          id=\"vendorleadtime\"\n                          name=\"vendorleadtime\"\n                          onChange={handleTextChange(\"vendorleadtime\")}\n                        />\n                      </Grid>\n                      <Grid item xs={12} sm={6} spacing={1}>\n                        <FormControl component=\"fieldset\">\n                          <FormLabel component=\"legend\">\n                            IsReorderable\n                          </FormLabel>\n                          <RadioGroup\n                            aria-label=\"position\"\n                            name=\"position\"\n                            value={productCtx.isreorderable}\n                            onChange={switchisorderable}\n                            row\n                          >\n                            <FormControlLabel\n                              value=\"Yes\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"Yes\"\n                              labelPlacement=\"right\"\n                            />\n                            <FormControlLabel\n                              value=\"No\"\n                              control={<Radio color=\"primary\" />}\n                              label=\"No\"\n                              labelPlacement=\"right\"\n                            />\n                          </RadioGroup>\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>{\" \"}\n              </>\n            ) : null}\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} sm={12}>\n                {productCtx.product_type ? (\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader\n                      title=\"Default SKU For Display\n  \"\n                    />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_colour}\n                            onChange={handleoptionChange(\n                              \"default_metal_colour\"\n                            )}\n                            options={productCtx.metalcolour.map(\n                              (option) => option.label\n                            )}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Colour\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={\n                                  productCtx.error_message.default_metal_colour\n                                }\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_category\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.default_metal_purity}\n                            onChange={handleoptionChange(\n                              \"default_metal_purity\"\n                            )}\n                            options={productCtx.metalpurity.map(\n                              (option) => option.label\n                            )}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Metal Purity\"\n                                margin=\"dense\"\n                                error={\n                                  productCtx.error_message.default_metal_purity\n                                }\n                                variant=\"outlined\"\n                                fullWidth\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>\n                ) : null}\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              (productCtx.product_type.shortCode === \"K\" ||\n                productCtx.product_type.shortCode === \"R\" ||\n                productCtx.product_type.shortCode === \"BA\") &&\n              productCtx.sizes.length > 0 ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Size Information\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            multiple\n                            freeSolo\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.selected_sizes}\n                            options={productCtx.sizes}\n                            onChange={handleoptionChange(\"selected_sizes\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Ring Sizes\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.selected_sizes}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n\n                        <Grid item xs={6}>\n                          <Autocomplete\n                            id=\"product_type\"\n                            className={classes.fixedTag}\n                            freeSolo\n                            defaultValue={productCtx.default_size}\n                            options={productCtx.selected_sizes}\n                            onChange={handleoptionChange(\"default_size\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  label={option}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Select Default Size\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.default_size}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              {productCtx.product_type &&\n              productCtx.product_type.alias === \"Earrings\" ? (\n                <>\n                  <Card {...rest} className={clsx(classes.root, className)}>\n                    <CardHeader title=\"Type of Fit\" />\n                    <Divider />\n                    <CardContent className={classes.cardcontent}>\n                      <Grid container spacing={1}>\n                        <Grid item xs={12}>\n                          <Autocomplete\n                            id=\"free-solo-2-demo\"\n                            className={classes.fixedTag}\n                            defaultValue={productCtx.earringbacking}\n                            options={productCtx.masterData.earringbacking.map(\n                              (option) => option.label\n                            )}\n                            onChange={handleoptionChange(\"earringbacking\")}\n                            renderTags={(value, getTagProps) =>\n                              value.map((option, index) => (\n                                <Chip\n                                  variant=\"outlined\"\n                                  label={option.label}\n                                  {...getTagProps({ index })}\n                                />\n                              ))\n                            }\n                            renderInput={(params) => (\n                              <TextField\n                                {...params}\n                                label=\"Earring Backing\"\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                                fullWidth\n                                error={productCtx.error_message.earringbacking}\n                                InputProps={{\n                                  ...params.InputProps,\n                                  type: \"search\",\n                                }}\n                              />\n                            )}\n                          />\n                        </Grid>\n                      </Grid>\n                    </CardContent>\n                  </Card>{\" \"}\n                </>\n              ) : null}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}></Grid>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { Grid } from \"@material-ui/core\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nimport Step4 from \"./Step4\";\nimport Step5 from \"./Step5\";\nimport Step6 from \"./Step6\";\nimport Step7 from \"./Step7\";\nimport Step8 from \"./Step8\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { ProductContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { element } from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\",\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\",\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;\n    case \"Step6\":\n      return <Step6 />;\n\n    case \"Step7\":\n      return <Step7 />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var error_content = {};\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if (activeStep === 0) {\n      if (!productCtx.product_type) {\n        isvalid = false;\n        error_content[\"product_type\"] = \"Error messsage\";\n      }\n      if (!productCtx.productname) {\n        isvalid = false;\n        error_content[\"productname\"] = \"Error messsage\";\n      }\n      if (!productCtx.product_categoy) {\n        isvalid = false;\n        error_content[\"product_categoy\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.metalcolour) {\n        isvalid = false;\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n      if (!productCtx.material_names) {\n        isvalid = false;\n        error_content[\"material_names\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalpurity\"] = \"Error messsage\";\n      }\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\n        isvalid = false;\n\n        error_content[\"metalcolour\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.vendorcode) {\n        isvalid = false;\n        error_content[\"vendorcode\"] = \"Error messsage\";\n      }\n      if (!productCtx.vendorleadtime) {\n        isvalid = false;\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\n      }\n\n      if (!productCtx.default_metal_colour) {\n        isvalid = false;\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\n      }\n      if (!productCtx.default_metal_purity) {\n        isvalid = false;\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\n      }\n      if (!productCtx.productvendorcode) {\n        isvalid = false;\n        error_content[\"productvendorcode\"] = \"Error messsage\";\n      }\n      if (\n        !productCtx.earringbacking &&\n        productCtx.product_type.alias === \"Earrings\"\n      ) {\n        isvalid = false;\n        error_content[\"earringbacking\"] = \"Error messsage\";\n      }\n      if (!productCtx.selectedgender) {\n        isvalid = false;\n        error_content[\"selectedgender\"] = \"Error messsage\";\n      }\n      if (\n        (!productCtx.selected_sizes ||\n          productCtx.selected_sizes.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"selected_sizes\"] = \"Error messsage\";\n      }\n\n      if (\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\n        productCtx.product_type === \"Rings\"\n      ) {\n        isvalid = false;\n        error_content[\"default_size\"] = \"Error messsage\";\n      }\n      // isvalid = true;\n    }\n\n    if (activeStep === 1) {\n      productCtx.metalpurity.forEach((element) => {\n        const keyvalue = element.name + \"_metal_weight\";\n\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\n          isvalid = false;\n\n          error_content[keyvalue] = \"Error messsage\";\n        }\n      });\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (productCtx.product_type_shortcode === \"R\") {\n        if (!productCtx.metal_height) {\n          isvalid = false;\n          error_content[\"metal_height\"] = \"Error messsage\";\n        }\n        if (!productCtx.metal_width) {\n          isvalid = false;\n          error_content[\"metal_width\"] = \"Error messsage\";\n        }\n      }\n\n      if (!productCtx.themes || productCtx.themes.length === 0) {\n        isvalid = false;\n        error_content[\"themes\"] = \"Error messsage\";\n      }\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\n        isvalid = false;\n        error_content[\"prod_styles\"] = \"Error messsage\";\n      }\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\n        isvalid = false;\n        error_content[\"occassions\"] = \"Error messsage\";\n      }\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\n      // {\n      //   isvalid = false\n      //   error_content['collections'] = \"Error messsage\"\n      // }\n\n      //  isvalid = true;\n    }\n\n    setProductCtx({ ...productCtx, error_message: error_content });\n    if (activeStep === productCtx.steps.length - 1) {\n      console.info(\"HANDLE\", sendNetworkRequest);\n      const productseries =\n        productCtx.masterData.productseries[0].productSeries;\n\n      delete productCtx[\"masterData\"];\n\n      var formdata = productCtx;\n      formdata[\"productseries\"] = productseries;\n\n      setLoading(true);\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\n      setLoading(false);\n      setSuccess(true);\n      await sleep(500);\n      window.location.replace(\"/productlist\");\n    } else {\n      if (isvalid) {\n        setActiveStep(activeStep + 1);\n      }\n    }\n\n    //else\n    //  {\n    //  }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async function sleep(millis) {\n    return new Promise((resolve) => setTimeout(resolve, millis));\n  }\n  console.log(productCtx, \"Component Samir\");\n  return (\n    <Grid item xs={12} sm={12}>\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\n      </Snackbar>\n\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n      </Snackbar>\n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n      <Paper className={classes.paper}>\n        <Stepper activeStep={activeStep} className={classes.stepper}>\n          {productCtx.steps.map((label, index) => (\n            <Step key={label}>\n              <StepLabel></StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n      </Paper>\n\n      <React.Fragment>\n        {activeStep === productCtx.steps.length ? (\n          <React.Fragment>\n            <Typography variant=\"h5\" gutterBottom>\n              Product Added Successfully\n            </Typography>\n            <Typography variant=\"subtitle1\"></Typography>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            {getStepContent(productCtx.steps[activeStep])}\n            <div className={classes.buttons}>\n              {activeStep !== 0 && (\n                <Button onClick={handleBack} className={classes.button}>\n                  Back\n                </Button>\n              )}\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === productCtx.steps.length - 1\n                  ? \"Product Upload\"\n                  : \"Next\"}\n              </Button>\n            </div>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport Component from \"./Component\";\nimport { ProductProvider } from \"../../context\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./Productupload.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const Productupload = withRouter((props) => {\n  const classes = useStyles();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n});\nexport default Productupload;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from \"react\";\nimport { Form, Grid, Select } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip } from \"@material-ui/core\";\n\nconst useStyless = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\",\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange = (type) => (e) => {\n    setSearchtext(e.target.value);\n  };\n  const handlecategoryChange = (type) => (event, value) => {\n    setCategory(value.name);\n    props.applyfilter(searchtext, value.name, producttype);\n  };\n  const handletypeChange = (type) => (event, value) => {\n    setProducttype(value.name);\n    props.applyfilter(searchtext, category, value.name);\n  };\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  function applyfilter() {\n    props.applyfilter(searchtext, category, producttype);\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div\n      className=\"search\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        background: \"white\",\n        borderTop: \"1px solid #e4e4e4\",\n        borderBottom: \"1px solid #e4e4e4\",\n      }}\n    >\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          fullWidth\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.mastercategory}\n          onChange={handlecategoryChange(\"product_category\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Autocomplete\n          id=\"free-solo-2-demo\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"10px\",\n            marginBottom: \"10px\",\n          }}\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.name}\n          options={props.masterproducttype}\n          onChange={handletypeChange(\"product_type\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.name}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Filter By Product Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{\n                ...params.InputProps,\n                readOnly: true,\n                type: \"search\",\n              }}\n            />\n          )}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <TextField\n          fullWidth\n          margin=\"dense\"\n          onChange={handleinputChange(\"productname\")}\n          placeholder={\"Search by product name or product id\"}\n          onChange={handleinputChange(\"productname\")}\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          style={{\n            margin: \"auto\",\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n        <Button\n          onClick={(e) => applyfilter()}\n          color=\"primary\"\n          variant=\"contained\"\n          style={{\n            marginLeft: \"10px\",\n            marginTop: \"18px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          Search\n        </Button>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport VisibityIcon from \"@material-ui/icons/Visibility\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { PRODUCTLIST, PRODUCTCATEGORY, PRODUCTFILTERMASTER, PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nconst columns = [\n  { id: \"product_id\", label: \"product id\" },\n  { id: \"product_name\", label: \"product name\" },\n  { id: \"product_type\", label: \"product type\" },\n  { id: \"vendor_code\", label: \"vendor code\" },\n  { id: \"product_category\", label: \"product category\" },\n  { id: \"isactive\", label: \"active\" },\n  { id: \"createdAt\", label: \"Created on\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? <span className={classes.visuallyHidden}>{order === \"desc\" ? \"\" : \"\"}</span> : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(\"updatedAt\");\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n    getproductlist(\"\", \"\", \"\", \"\", newPage);\n  }\n  useEffect(() => {\n    getproductlist(\"\", \"\", \"\", \"\", \"\", order, orderBy);\n  }, []);\n  useEffect(() => {\n    getproductlist(\n      props.filterparams.searchtext,\n      props.filterparams.categoryname,\n      props.filterparams.product_type,\n      \"\",\n      \"\",\n      order,\n      orderBy\n    );\n  }, [props.filterparams]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\", \"\", \"\", event.target.value, \"\");\n  }\n  async function showproductdetails(prod_id) {\n    let bodycontent = {\n      productid: prod_id,\n    };\n\n    let response = await sendNetworkRequest(\"/getproducturl\", {}, bodycontent);\n    console.log(response);\n    //setProductlists(response.products.rows)\n    window.open(response.url, \"_blank\");\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n    getproductlist(\"\", \"\", \"\", \"\", \"\", isAsc ? \"desc\" : \"asc\", property);\n  };\n  function searchproduct(searchtext, productcategory, producttype) {\n    let products = allproductlists.filter((l) => {\n      return (\n        l.productId.toLowerCase().match(searchtext.toLowerCase()) || l.productName.toLowerCase().match(searchtext.toLowerCase())\n      );\n    });\n    setProductlists(products);\n  }\n  async function getproductlist(searchtext, productcategory, producttype, pagesize, offsetvalue, sort, orderby) {\n    let bodydata = {\n      size: pagesize ? pagesize : rowsPerPage,\n      offset: offsetValue,\n      searchtext: searchtext,\n      productcategory: productcategory,\n      producttype: producttype,\n      order: sort ? sort : order,\n      orderby: orderby ? orderby : orderBy,\n    };\n    let response = await sendNetworkRequest(\"/getproductlist\", {}, bodydata);\n    \n    console.log(response);\n    setProductlists(response.products.rows);\n    setPageCount(response.products.count);\n  }\n  function applyfilter(searchtext, categoryname, typename) {\n    getproductlist(searchtext, categoryname, typename);\n  }\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n  async function productItemStatusChange(id, isactive, refetch) {\n    let variables = {\n      productId: id,\n      isActive: isactive ? false : true,\n    };\n    await props.client\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n        }\n      })\n      .catch(console.error);\n  }\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n          <EnhancedTableHead classes={classes} order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n          <TableBody>\n            {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n            {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n              <TableRow key={row.product_id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row?.trans_sku_lists?.[0].sku_id}\n                  <Button onClick={(e) => ProductEdit(row.product_id)}>\n                    <EditIcon />\n                  </Button>\n                  <Button onClick={(e) => showproductdetails(row.product_id)}>\n                    <VisibityIcon />\n                  </Button>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\" onClick={() => showproductdetails(row)}>\n                  {/* <Link variant=\"body2\">  */}\n                  {row.product_name}\n\n                  {/* </Link>   */}\n                </TableCell>\n                <TableCell align=\"left\">{row.product_type}</TableCell>\n                <TableCell align=\"left\">{row.vendor_code}</TableCell>\n                <TableCell align=\"left\">{row.product_category}</TableCell>\n\n                <TableCell align=\"left\">\n                  {\" \"}\n                  <FormControlLabel label={row.isactive ? \"\" : \"\"} control={<Switch checked={row.isactive} value=\"checkedA\" />} />\n                </TableCell>\n\n                <TableCell align=\"left\">\n                  <Moment format=\"DD MMM YYYY hh:mm a\">{row.createdAt}</Moment>\n                </TableCell>\n              </TableRow>\n            ))}\n            {/* </> */}\n            {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10, 50, 100, 200, 500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n};\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React from \"react\";\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { URL } from \"../../config\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.grey[300],\n    },\n    \"&:active\": {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info(\"You clicked a breadcrumb.\");\n}\n\nexport default function CustomizedBreadcrumbs(props) {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        href={props.url ? URL + props.url : URL + \"configuration\"}\n        label={props.name ? props.name : \"Configuration\"}\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n    </Breadcrumbs>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Chip,\n  Collapse,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Slider,\n  TextField,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: 420,\n    maxWidth: '100%'\n  },\n  header: {\n    padding: theme.spacing(2, 1),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 3),\n    flexGrow: 1\n  },\n  contentSection: {\n    padding: theme.spacing(2, 0)\n  },\n  contentSectionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    cursor: 'pointer'\n  },\n  contentSectionContent: {},\n  formGroup: {\n   \n    padding: theme.spacing(2, 0)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  addButton: {\n    marginLeft: theme.spacing(1)\n  },\n  tags: {\n    marginTop: theme.spacing(1)\n  },\n  minAmount: {\n    marginRight: theme.spacing(3)\n  },\n  maxAmount: {\n    marginLeft: theme.spacing(3)\n  },\n  radioGroup: {},\n  actions: {\n    padding: theme.spacing(3),\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst Filter = props => {\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n      name: '',\n      company: '',\n      mobile: '',\n      city: '',\n      version: null,\n      commodity: []\n  };\n\n  const [expandProject, setExpandProject] = useState(true);\n  const [expandCustomer, setExpandCustomer] = useState(false);\n  const [values, setValues] = useState({ ...initialValues });\n\n  const handleClear = () => {\n    setValues({ \n      ...initialValues });\n  };\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n  const handleoptionchange = type => (event, value) => {\n    setValues(values => ({\n      ...values,\n      [type]: value\n    }));\n  }\n  const handleinputchange = type => (e) => {\n    setValues({\n      ...values,\n      [type]: e.target.value\n    })\n  }\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n  const handleDateChange = type => (date) => {\n    setValues({\n      ...values,\n      [type]: date\n    })\n  };\n  const handleToggleProject = () => {\n    setExpandProject(expandProject => !expandProject);\n  };\n\n  const handleToggleCustomer = () => {\n    setExpandCustomer(expandCustomer => !expandCustomer);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    onFilter && onFilter(values);\n    onClose && onClose()\n  };\n\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\"\n    >\n      <form\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}\n      >\n        <div className={classes.header}>\n          <Button\n            onClick={onClose}\n            size=\"small\"\n          >\n            <CloseIcon className={classes.buttonIcon} />\n            Close\n          </Button>\n        </div>\n        <div className={classes.content}>\n          <Grid container xs={12} spacing={1}>\n            {/* <Grid item xs={12}>\n                      <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={values.name}\n                            onChange={handleinputchange('name')}\n                           label=\"Name\"\n                          />\n            </Grid> */}\n             <Grid xs={12}>\n            <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masters.product_categories}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_category}\n                  getOptionLabel={(option) => option.name}\n                  onChange={handleoptionchange('product_category')}\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n                      \n           \n            <Grid item xs={12}>\n            <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={masters.product_types}\n                  margin=\"dense\"\n                  fullWidth\n                  value={values.product_type}\n                  onChange={handleoptionchange('product_type')}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\n                /> \n            </Grid> \n           </Grid>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            fullWidth\n            onClick={handleClear}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.buttonIcon} />\n            Clear\n          </Button>\n          <Button\n            color=\"primary\"\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Apply filters\n          </Button>\n        </div>\n      </form>\n    </Drawer>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  onFilter: PropTypes.func,\n  masters : PropTypes.object,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Button, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  search: {\n    flexGrow: 1,\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  },\n  searchButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Search = props => {\n  const { onSearch, className, ...rest } = props;\n  const [searchcontent, setSearchcontent] = React.useState('');\n\n  const classes = useStyles();\n  const handleinputchange = type => e => {\n    setSearchcontent(e.target.value)\n  }\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search by order id, Name and Mobile\"\n          onChange={handleinputchange('searchcontent')}\n        />\n      </Paper>\n      <Button\n        className={classes.searchButton}\n        onClick={() => onSearch(searchcontent)}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onSearch: PropTypes.func\n};\n\nexport default Search;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nimport { Search, Filter } from \"./components\";\n\nimport { CSVLink } from \"react-csv\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n  },\n  search: {\n    flexGrow: 1,\n    maxWidth: 480,\n    flexBasis: 480,\n  },\n  filterButton: {\n    marginLeft: \"auto\",\n  },\n  filterIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst ProductFilter = (props) => {\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const handleFilterOpen = () => {\n    setOpenFilter(true);\n  };\n\n  const handleFilterClose = () => {\n    setOpenFilter(false);\n  };\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid item>\n        <Search className={classes.search} onSearch={onSearch} />\n      </Grid>\n\n      <Grid item>\n        {window.location.pathname === \"/productlist\" ? (\n          <>\n            {\" \"}\n            <CSVLink\n              header={dataCSV.keyCSV}\n              data={dataCSV.valueCSV}\n              filename={\"ProductDetails.csv\"}\n              style={{ textDecoration: \"none \" }}\n            >\n              <Button\n                color=\"primary\"\n                style={{ marginRight: \"8px\" }}\n                size=\"small\"\n                variant=\"outlined\"\n              >\n                Download CSV\n              </Button>\n            </CSVLink>\n          </>\n        ) : (\n          \"\"\n        )}\n\n        <Button\n          className={classes.filterButton}\n          color=\"primary\"\n          onClick={handleFilterOpen}\n          size=\"small\"\n          variant=\"outlined\"\n        >\n          <FilterListIcon className={classes.filterIcon} /> Filter\n        </Button>\n      </Grid>\n\n      <Filter\n        onClose={handleFilterClose}\n        onFilter={onFilter}\n        open={openFilter}\n        masters={masters}\n      />\n    </Grid>\n  );\n};\n\nProductFilter.propTypes = {\n  className: PropTypes.string,\n  onFilter: PropTypes.func,\n  onSearch: PropTypes.func,\n  masters: PropTypes.object,\n};\n\nexport default ProductFilter;\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\n//MuiAlert component which is shown inside the Snackbar component\nlet Alert = (props) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nexport const Alerts = (props) => {\n  const [open, setOpen] = React.useState(props.open);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.onclose();\n    setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      id=\"main_alert_snackbar\"\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal,\n      }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <Alert id=\"main_alert\" severity={props.severity} onClose={handleClose}>\n        {props.msg}\n      </Alert>\n    </Snackbar>\n  );\n};\n","import React from \"react\";\nimport {\n  AppBar,\n  Dialog,\n  IconButton,\n  Slide,\n  Toolbar,\n  Typography,\n  makeStyles,\n  Button,\n  Grid,\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  TextField,\n  LinearProgress,\n  Box,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ChipInput from \"material-ui-chip-input\";\nimport { AlertContext, AlertProps } from \"../../context\";\nimport socketIOClient from \"socket.io-client\";\nimport { API_URL } from \"../../config\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport { VERIFYTAGNO, WAREHOUSELIST } from \"../../graphql/query\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  content: {\n    width: \"90%\",\n    margin: theme.spacing(5),\n  },\n  textarea: {\n    resize: \"both\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nconst ChooseWareHouse = (props) => {\n  const { loading, data } = useQuery(WAREHOUSELIST);\n  return (\n    <Autocomplete\n      id={\"warehouse-id\"}\n      getOptionSelected={(option, value) => option.name === value.name}\n      getOptionLabel={(option) => option.name}\n      options={data?.allWarehouses?.nodes ?? []}\n      value={props.warehouse || null}\n      onChange={(event, newValue) => {\n        props.setWarehouse(newValue);\n      }}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Warehouse\"\n          fullWidth\n          required\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n};\n\nconst ProductSync = (props) => {\n  const classes = useStyles();\n  const client = useApolloClient();\n  const snack = React.useContext(AlertContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  var [data, setData] = React.useState({\n    action_type: \"price_sync\",\n    Product_lists: \"\",\n    new_tagno: [],\n  });\n  const [progress, setProgress] = React.useState(0);\n  const [warehouse, setWarehouse] = React.useState(null);\n  const [errorTagNo, setErrorTagNo] = React.useState([]);\n  var handleChange = (event) => {\n    var { name, value } = event.target;\n    setData({ ...data, [name]: value });\n  };\n\n  var handleAddChip = (chip) => {\n    var _ = data;\n    _.new_tagno.push(chip);\n    setData({ ..._ });\n    client\n      .query({ query: VERIFYTAGNO, variables: { tagno: chip } })\n      .then(({ data }) => {\n        if (data?.list?.nodes && data?.list?.nodes.length >= 1) {\n          setErrorTagNo([...errorTagNo, chip]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  var handleDeleteChip = (chip, index) => {\n    var _ = data;\n    _.new_tagno.splice(index, 1);\n    setData({ ..._ });\n  };\n\n  var { open, handleClose } = props;\n\n  React.useEffect(() => {\n    const socket = socketIOClient(API_URL);\n    socket.on(\"sync_data\", (data) => {\n      if (data.status !== \"completed\") {\n        setProgress(data?.completed * 100);\n      } else {\n        setData({\n          action_type: \"price_sync\",\n          Product_lists: \"\",\n          new_tagno: [],\n        });\n        snack.setSnack({\n          severity: AlertProps.severity.info,\n          msg: `Process Completed ${data.timeElapsed}`,\n        });\n      }\n    });\n  }, []);\n\n  const handleRun = () => {\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"TAG Number cannot be empty!\",\n      });\n      return;\n    }\n    if (data.Product_lists === \"\") {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"Sync Data cannot be empty!\",\n      });\n      return;\n    } else {\n      try {\n        JSON.parse(data.Product_lists);\n      } catch (error) {\n        if (error) {\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured while parsing data\",\n          });\n          return;\n        }\n      }\n    }\n    if (!warehouse?.id && data.action_type === \"new_uploads\") {\n      snack.setSnack({\n        open: true,\n        severity: \"error\",\n        msg: \"Warehouse is mandatory!\",\n      });\n      return;\n    }\n    setProgress(0);\n    var Product_lists = data.Product_lists;\n    delete data.Product_lists;\n    sendNetworkRequest(\n      \"/product_sync\",\n      {},\n      {\n        ...data,\n        Product_lists: JSON.parse(Product_lists),\n        warehouse: warehouse?.id,\n      }\n    )\n      .then((res) => {\n        snack.setSnack({\n          open: true,\n          severity: \"success\",\n          msg: res.message,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured while processing!\",\n        });\n      });\n  };\n\n  return (\n    <Dialog fullScreen open={open} TransitionComponent={Transition}>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n            Product Sync\n          </Typography>\n          <Button\n            autoFocus\n            color=\"inherit\"\n            variant=\"outlined\"\n            onClick={handleRun}\n            startIcon={<SyncIcon />}\n          >\n            {data.action_type === \"price_sync\"\n              ? \"Run Price Sync\"\n              : \"Run Product Sync\"}\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Grid\n        className={classes.content}\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={2}\n      >\n        <Grid item xs={12}>\n          <FormControl component=\"fieldset\" fullWidth required>\n            <Typography variant=\"h4\">Choose action type</Typography>\n            <RadioGroup\n              aria-label=\"action-type\"\n              name=\"action_type\"\n              value={data.action_type}\n              onChange={handleChange}\n            >\n              <FormControlLabel\n                value={\"price_sync\"}\n                control={<Radio />}\n                label={\"Price Sync\"}\n              />\n              <FormControlLabel\n                value={\"new_uploads\"}\n                control={<Radio />}\n                label={\"Product Sync\"}\n              />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} style={{ padding: \"9px\" }}>\n          <TextField\n            value={data.Product_lists}\n            onChange={handleChange}\n            multiline\n            rows={15}\n            fullWidth\n            label={\"Sync Data\"}\n            name=\"Product_lists\"\n            variant=\"outlined\"\n            required\n            inputProps={{ className: classes.textarea }}\n          />\n        </Grid>\n        {data.action_type === \"new_uploads\" && (\n          <>\n            <Grid item xs={12}>\n              <ChooseWareHouse\n                warehouse={warehouse}\n                setWarehouse={setWarehouse}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <ChipInput\n                value={data.new_tagno}\n                onAdd={handleAddChip}\n                onDelete={handleDeleteChip}\n                fullWidth\n                newChipKeyCodes={[13, 32]}\n                variant=\"outlined\"\n                label={\"TAG Number\"}\n                error={errorTagNo.length > 0}\n                helperText={\n                  errorTagNo.length > 0\n                    ? `${errorTagNo.join(\n                        \",\"\n                      )} already exists these could not be synced again!`\n                    : ``\n                }\n              />\n              {console.log(errorTagNo)}\n            </Grid>\n          </>\n        )}\n        {progress > 0 && (\n          <Grid item xs={12}>\n            <LinearProgressWithLabel value={progress} />\n          </Grid>\n        )}\n      </Grid>\n    </Dialog>\n  );\n};\n\nexport default ProductSync;\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  PRODUCTLIST,\n  PRODUCTCATEGORY,\n  PRODUCTFILTERMASTER,\n  PRODUCTLISTSTATUSEDIT,\n} from \"../../graphql/query\";\n\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"../../components/Products\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport FullLoader from \"../../components/Loader\";\nimport { ProductFilter } from \"../../components\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport ProductSync from \"./ProductSync\";\n\nexport const Productlist = withRouter(\n  withApollo((props) => {\n    const [masters, setMasters] = useState({});\n    const [filterparams, setFilterparams] = useState({});\n    const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\n    const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    let responseCSV;\n    function onFilter(filterobj) {\n      let filtercontent = {};\n\n      if (filterobj.product_category) {\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      if (filterobj.product_type) {\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\n        // alert(JSON.stringify(categoryname))\n      }\n      setFilterparams({\n        ...filterparams,\n        ...filtercontent,\n      });\n      // fetchadminusers()\n    }\n    function onSearch(searchtext) {\n      //  alert(searchtext)\n      setFilterparams({\n        ...filterparams,\n        searchtext,\n      });\n      // fetchadminusers()\n    }\n    useEffect(() => {\n      const query = props.client.query;\n      query({\n        query: PRODUCTFILTERMASTER,\n        fetchPolicy: \"network-only\",\n      })\n        .then((data) => {\n          if (data) {\n            let product_categories = data.data.allMasterProductCategories.nodes;\n            let product_types = data.data.allMasterProductTypes.nodes;\n            setMasters({\n              product_categories,\n              product_types,\n            });\n          } else {\n          }\n        })\n        .catch((error) => {\n          console.log(\"smbcj\");\n        });\n\n      // async function fetchCSVdata() {\n      //   responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\n      //   let responseData = responseCSV.res_json;\n\n      //   if (responseCSV.statuscode === 200) {\n      //     let keyData = [];\n\n      //     for (const [key] of Object.entries(responseData[0])) {\n      //       keyData.push({ label: key, key: key });\n      //     }\n\n      //     console.log(keyData);\n      //     setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\n      //   }\n      // }\n      // fetchCSVdata();\n    }, []);\n\n    return (\n      <Grid container spacing={2}>\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={6} sm={6}>\n            <Typography component=\"h6\" variant=\"h6\">\n              Products\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\n            <Link underline=\"none\"\n            //  component={RouterLink}\n            //  to={\"/productupload\"}\n             >\n              <Button variant=\"contained\" color=\"primary\" disabled>\n                Add New Product\n              </Button>\n            </Link>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleClickOpen}\n              style={{ marginLeft: 2 }}\n            >\n              Product Sync\n            </Button>\n          </Grid>\n        </Grid>\n        <ProductFilter\n          masters={masters}\n          onSearch={onSearch}\n          onFilter={onFilter}\n          dataCSV={dataCSV}\n        />\n        <Product filterparams={filterparams} />\n        <ProductSync open={open} handleClose={handleClose} />\n      </Grid>\n    );\n  })\n);\n\nexport default Productlist;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import moment from 'moment';\nimport { Query, withApollo } from \"react-apollo\";\nimport { CATGORYLIST } from \"../../../../graphql/query\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Results = (props) => {\n  const { className, orders, ...rest } = props;\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  const [editcontent, setEditcontent] = React.useState({});\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias: vendordata.alias,\n      name: vendordata.name,\n      isedit: true,\n    });\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\n  }\n  async function Savevendor(refetch) {}\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    props.onCancel();\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      <Card>\n        <CardHeader title=\"Category\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n\n                  <TableCell align=\"left\">Alias</TableCell>\n\n                  <TableCell align=\"left\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  <Query\n                    query={CATGORYLIST}\n                    onCompleted={(data) =>\n                      setPageCount(data.allMasterProductCategories.totalCount)\n                    }\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\n                  >\n                    {({ data, loading, error, refetch }) => {\n                      if (loading) {\n                        // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>;\n                        // return false\n                      }\n                      if (data) {\n                        return (\n                          <>\n                            {data.allMasterProductCategories.nodes.map(\n                              (row, index) => (\n                                <>\n                                  {index == 0 && props.isadd ? (\n                                    <TableRow key={row.name}>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          contentEditable={false}\n                                          id=\"vendordeliverydays\"\n                                          name=\"vendordeliverydays\"\n                                          value={props.newvendorcode}\n                                          onChange={handleInputChange(\n                                            \"shortCode\"\n                                          )}\n                                          label=\"Vendor Code\"\n                                        />\n                                      </TableCell>\n\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => Cancelcreate()}>\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    </TableRow>\n                                  ) : null}\n                                  <TableRow key={row.name}>\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"categoryname\"\n                                          name=\"categoryname\"\n                                          value={editcontent.name}\n                                          onChange={handleInputChange(\"name\")}\n                                          label=\"Name\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.name}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell align=\"left\">\n                                        <TextField\n                                          variant=\"outlined\"\n                                          margin=\"dense\"\n                                          fullWidth\n                                          id=\"alias\"\n                                          name=\"alias\"\n                                          value={editcontent.alias}\n                                          onChange={handleInputChange(\"alias\")}\n                                          label=\"alias\"\n                                        />{\" \"}\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell align=\"left\">\n                                        {row.shortCode}\n                                      </TableCell>\n                                    )}\n                                    {btnEdit.action &&\n                                    btnEdit.id == row.shortCode &&\n                                    !props.isadd ? (\n                                      <TableCell\n                                        style={{ width: 20 }}\n                                        align=\"center\"\n                                      >\n                                        <Button\n                                          onClick={(e) => Savevendor(refetch)}\n                                        >\n                                          <SaveIcon />\n                                        </Button>\n                                        <Button\n                                          onClick={(e) => CancelEdit(row)}\n                                        >\n                                          <CancelIcon />\n                                        </Button>\n                                      </TableCell>\n                                    ) : (\n                                      <TableCell\n                                        align=\"center\"\n                                        onClick={(e) => Editvendor(row)}\n                                        style={{ width: 20 }}\n                                      >\n                                        <Button>\n                                          <EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                    )}\n                                  </TableRow>\n                                </>\n                              )\n                            )}\n                          </>\n                        );\n                      } else {\n                        return <div>{\"Fetch Products\"}</div>;\n                      }\n                    }}\n                  </Query>\n                }\n              </TableBody>\n            </Table>\n          </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nResults.defaultProps = {\n  orders: [],\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { VoucherContext } from \"../../../../context\";\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from \"../../../../utils/commonmethod\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: \"flex\",\n    alignItems: \"flex-center\",\n    padding: theme.spacing(1),\n\n    cursor: \"pointer\",\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: \"flex\",\n    alignItems: \"flex-center\",\n    padding: theme.spacing(1),\n    cursor: \"pointer\",\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  cardcontent: {\n    display: \"flex\",\n    alignItems: \"flex-center\",\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n    // border: `3px solid ${theme.palette.divider}`,\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n    // border: `3px solid ${theme.palette.divider}`,\n  },\n  optionRadio: {\n    margin: -10,\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  selectedtext: {\n    color: theme.palette.common.white,\n  },\n}));\n\nconst AboutVoucher = (props) => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(\n    props.masterData.product_type\n  );\n  const [productids, setProductids] = useState(props.productids);\n\n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n  };\n\n  const handleproducttypechange = (type) => (event, option) => {\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.name);\n    });\n    setFormData({ ...formData, producttypes: vendorsarray });\n    props.apply(formData.vendorid, formData.categories, vendorsarray);\n  };\n  const handlecategorychange = (type) => (event, option) => {\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.name);\n    });\n    setFormData({ ...formData, categories: vendorsarray });\n\n    props.apply(formData.vendorid, vendorsarray, formData.producttypes);\n  };\n  const hangeoptionchange = (type) => (event, option) => {\n    let vendorsarray = [];\n    option.forEach((element) => {\n      vendorsarray.push(element.shortCode);\n    });\n    setFormData({ ...formData, vendorid: vendorsarray });\n\n    props.apply(vendorsarray, formData.categories, formData.producttypes);\n  };\n\n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest(\n      \"/updatepricelist\",\n      {},\n      formData,\n      false\n    );\n    if (response.status < 400) {\n    } else {\n      alert(\"error\");\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest(\n      \"/getpriceupdatestatus\",\n      {},\n      formData,\n      false\n    );\n    if (response.status < 400) {\n      setUpdatestatus(response.message);\n    } else {\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n  };\n  const handleInputChange = (type) => (e) => {\n    setVouchercode(e.target.value.toUpperCase());\n  };\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n    // alert(JSON.stringify(voucherCtx))\n    setVouchercode(makeid(10));\n  };\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n        <Grid container spacing={2}>\n          <Grid item xs={6} sm={4}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist || []}\n              getOptionLabel={(option) => option.display}\n              fullWidth\n              onChange={hangeoptionchange(\"vendorcode\")}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Selct Vendor\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6} sm={4}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist || []}\n              getOptionLabel={(option) => option.name}\n              onChange={handlecategorychange(\"category\")}\n              fullWidth\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Select Product Category\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6} sm={4}>\n            <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist || []}\n              getOptionLabel={(option) => option.name}\n              onChange={handleproducttypechange(\"product_type\")}\n              fullWidth\n              margin=\"dense\"\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Select Product type\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              disabled={props.isdisabled}\n              className={classes.fixedTag}\n              value={props.productids}\n              options={productids}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label={\n                    props.productids.length > 0\n                      ? \"Products (\" + props.productids.length + \") \"\n                      : \"Products\"\n                  }\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </Grid>\n\n          {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n          {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\nasync function rerun(component)\n{\n  var  bodydata = {}\n  bodydata = {\n    component: component.label,\n    // req_product_id : products\n  }\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\n  let history_id = response.id;\n  let update_products = response.products\n  if(response.products && response.products.length > 0)\n  {\n    setOpen(true)\n\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id : update_products,\n      history_id : history_id\n    }\n    setStartrun(true)\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n    setOpen(false)\n  }else\n  {\n    alert(\" Doesn't have any incomplete products\")\n  }\n  \n}\n\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    // button: {\n    //     color:\"#06847B\",\n    //     border: \"1px solid #7bbcb7\",\n    //     '&:hover':{\n    //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n    //         border: \"1px solid #06847B\",\n    //     }\n    //   },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n               \n                <Grid container xl={12} lg={12} md={12} sm={12} xs={12} style={{display: 'flex',margin: '8px', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}} >\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" size=\"medium\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        \n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems:\"center\",\n  },\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  function handlesearch(){\n    props.onSearch(searchtext)\n  }\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n   //props.onSearch(e.target.value)\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n\n      <Grid\n        className={classes.contantview}\n        container\n        spacing={3}\n      >\n        <Grid item xs={3} >\n           <Typography\n           variant=\"h4\"\n           style={{margin: \"8px\"}}\n          >\n            Orders\n          </Typography>\n           {/* <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography>  */}\n        </Grid>\n        <Grid container xs={6} item  >\n        <Grid xs={9} item >\n               <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={searchtext}\n                    id=\"productname\"\n                    name=\"productname\"\n                    label=\"Search by name/email/mobile\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('searchtext')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n\n          </Grid>\n        <Grid xs={3} item >\n        <Button variant= \"contained\" color=\"primary\" onClick={() => handlesearch()} style={{ marginLeft: \"0px\", marginTop: \"8px\", marginBottom: \"10px\" }}>Search</Button> \n\n          </Grid>\n\n\n        </Grid>\n        <Grid xs={3}  item  alignItems={\"flex-end\"}  spacing={3} >\n\n          <SortHeader  columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport PropTypes from \"prop-types\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n \n  console.log(props);\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n        {props.columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            width={headCell.type == 9 ? 300 : null}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label ? headCell.label : headCell.name}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"\" : \"\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default EnhancedTableHead;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n   // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n    overflowY: 'auto',\n    maxHeight: '100vh'\n  },\n  containergrid: {\n    overflowX: 'scroll',\n    width: 1000,\n    height: 20,\n    overflowY: 'hidden'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  debugger\n  console.log(props)\n  const { className, orders, ...rest } = props;\n  const [editcontent,setEditcontent] = React.useState({})\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].orderdate : 'Order Date');\n  const handleRequestSort = (event, property) => {\n\n    const isAsc = orderBy === property && order === 'asc';\n\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    \n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent)\n   // setIsadd(false)\n  // alert(JSON.stringify(editcontent))\n//  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n  setBtnEdit({ ...btnEdit, id:'', action: false })\n // refetch()\n}\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  async function showorderdetails(orderurl){\n    \n  window.open(orderurl, '_blank');\n   }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n      let paymentstatusobj = {}\n      props.orderstatus.forEach(element => {\n        if(vendordata.orderstatus === element.name)\n        {\n          paymentstatusobj = element;\n        }\n      });\n      \n     delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus : paymentstatusobj,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.orderid, action: true })\n\n  }\n  function CancelEdit(diamondData) {\n  //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n \n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n \n    // }\n    //    setIsadd(false)\n     setEditcontent({})\n     setBtnEdit({ ...btnEdit, id:'', action: false })\n   }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    \n      <Card>\n       \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          \n         \n            <div className={classes.tableWrapper}>\n              \n              <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n                {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n              <EnhancedTableHead\n              columns={props.columnobjs}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  {/* </TableRow>\n                </TableHead> */}\n                <TableBody style={{overflow : \"scroll\"}}>\n                {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      {props.columnobjs.map(col => (\n                        <>\n                        {col.key === 'action' && props.iswrite?   \n                        <TableCell align=\"center\" style = {{width: 20}}>\n                        {\n                         btnEdit.action && btnEdit.id == order.orderid  ?  <>\n                         <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                          </Button>\n                          <Button onClick={(e) => CancelEdit(order)}><CancelIcon />\n                          </Button></> : <Button \n                           >\n                             <VisibilityIcon onClick={(e) => showorderdetails(`/orderdetails/${order.orderid}`)}/>\n                     </Button>\n                         } \n                   </TableCell> : \n                   <>\n                   {\n                    btnEdit.action && btnEdit.id == order.orderid  ?\n                        <TableCell>\n                          {!col.type ||  col.type == 1 ? <Typography> {order[col.key]}</Typography>:null } \n                        { col.type == 2 ? <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        \n                        id={col.key}\n                        name={col.key}\n                        value={editcontent[col.key]}\n                        onChange={handleInputChange(col.key)}\n    \n                        label={col.label}\n                       />:null } \n                       {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                                       </Moment>:null } \n\n                   {col.type == 5 && order.paymentmode == 'COD' ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.paymentstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                /> : null }  \n                {col.type == 5 && order.paymentmode != 'COD' ? <Typography> {order[col.key]}</Typography>:null } \n       \n                  {col.type == 3 ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.orderstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                /> : null }\n                            \n                        </TableCell>  :  <TableCell align=\"center\" style = {{width: 20}}>\n                          {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                             </Moment>: <Typography> {order[col.key]}</Typography> } \n\n                          \n                           \n                           </TableCell> }\n                        </>\n                        }\n                       \n                      </>\n                      ))}                      \n\n                      {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10,50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n   \n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n  const [iswrite, setIswrite] = useState(false);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n\n  async function updateorder(ordercontent)\n  {\n  let response =  await sendNetworkRequest('/updateorderstatus', {}, ordercontent)\n    window.location.reload();\n\n   // getorders()\n  }\n  function searchorder(searchtext)\n  {\n    if(searchtext.length > 0)\n    {\n    var data_filter = orders.filter( element => \n      element.email &&  element.email.match(searchtext+'.*')  || \n      element.mobile && element.mobile.match(searchtext+'.*') ||\n      element.orderid && element.orderid.match(searchtext+'.*') || \n      element.username && element.username.match(searchtext+'.*')\n      )\n      setFilteredorder(data_filter)\n    }else{\n      setFilteredorder(orders)\n    }\n  }\n  async function getorders()\n  {\n    var orders_arr = []\n    orderCtx.orderMaster.orders.forEach(element => {\n\n        let orderobj = {}\n        orderobj['orderid'] = element.id\n        orderobj['orderdate'] = element.createdAt\n        orderobj['paymentmode'] = element.paymentMode\n        orderobj['cartid'] = element.cartId\n       // orderobj['paymentstatusmaster'] = element.paymentStatus\n       orderobj['awbNumber'] = element.awbNumber ? element.awbNumber : \"\"\n       orderobj['comments'] = element.comments ? element.comments : \"\"\n       orderobj['orderstatus'] = element.orderStatus\n       if(element.paymentMode === 'COD')\n       {\n        orderobj['paymentstatus'] = element.paymentStatus\n\n       }\n        if(element.paymentDetailsByOrderId)\n        {\n            let pgresponseobj = element.paymentDetailsByOrderId.nodes\n            pgresponseobj.forEach(pgres => {\n           let response_pg =   JSON.parse(pgres.paymentResponse)\n                    if(element.paymentMode === 'Prepaid')\n                    {\n                      orderobj['paymentstatus'] = response_pg.ipgTransactionId + ' \\n'+response_pg.fail_reason+ ' \\n'+response_pg.status\n\n                    }\n\n            } )\n        }\n        if(element.shoppingCartByCartId)\n        {\n            let cartcontent = element.shoppingCartByCartId\n\n                if(cartcontent.cartAddressesByCartId)\n                {\n                    let addresscontent = cartcontent.cartAddressesByCartId.nodes;\n                    addresscontent.forEach(addressobj => {\n                        orderobj['address'] = addressobj.addressline1\n                        if(!orderobj[\"mobile\"])\n                        {\n                          orderobj['mobile'] = addressobj.contactNumber\n\n                        }\n                        if(!orderobj[\"username\"])\n                        {\n                          orderobj['username'] = addressobj.firstname ? addressobj.firstname : \"\"\n\n                        }\n\n                    })\n\n                }\n            if(cartcontent.shoppingCartItemsByShoppingCartId)\n            {\n              \n\n                let cartitemscontent = cartcontent.shoppingCartItemsByShoppingCartId.nodes\n                let skus = []\n                \n                cartitemscontent.forEach(element => {\n                    if(element.transSkuListByProductSku)\n                    {\n                        skus.push(element.transSkuListByProductSku.generatedSku)\n                    }\n\n                    \n                })\n                orderobj['skus'] = skus.join(' , ')\n            }\n            if(cartcontent.userProfileByUserprofileId)\n            {\n             // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n              let usercontent = cartcontent.userProfileByUserprofileId\n              if(usercontent.firstName)\n              {\n                orderobj['username'] = usercontent.firstName ? usercontent.firstName : \"\"\n\n              }\n                orderobj['email'] = usercontent.email ? usercontent.email : \"\"\n                if(!orderobj[\"username\"])\n                            {\n                              orderobj['username'] = usercontent.firstname ? usercontent.firstname : \"\"\n\n\n                            }\n\n              let useraddressess = usercontent.userAddressesByUserProfileId\n              if(useraddressess)\n              {\n                let address_arr = useraddressess.nodes\n                address_arr.forEach(useraddressobj => {\n\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                  // if(!orderobj[\"mobile\"])\n                  // {\n                  //   orderobj['mobile'] = useraddressobj.contactNumber ? useraddressobj.contactNumber : \"\"\n                  // }\n                });\n              }\n            }\n\n            if(cartcontent.giftwrapsByCartId)\n            {\n                let giftobj = cartcontent.giftwrapsByCartId.nodes;\n                giftobj.forEach(gift => {\n                    orderobj['giftmessage'] = gift.message\n                })\n            }\n        }\n        orders_arr.push(orderobj)\n    });\n    \n    setOrders(orders_arr)\n    setFilteredorder(orders_arr)\n  }\n  async function getmaster(getmaster)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes)\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes)\n\n        \n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let pagepermission = localStorage.getItem('pagepermissions')\n    if(pagepermission.indexOf('/orderlist') > -1)\n    {\n      setIswrite(true)\n\n    }else\n    {\n      setIswrite(false)\n    }\n    getmaster()\n  }, [])\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n        \n     \n    };\n\n    getmaster()\n    getorders()\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  debugger\nconsole.log(displaycolumnnames)\nconsole.log(displaycolumns)\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {/* <Grid container spacing={2} item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Orders\n          </Typography>\n          </Grid>\n          \n    </Grid> */}\n    <Header getColumnnames={columnchanged} onSearch={searchorder}  columns={columnnames}/>\n    {filteredorder ? <Results\n      className={classes.results}\n      orderstatus={paymentstatus}\n      paymentstatus={orderstatus}\n      iswrite={iswrite}\n     orders={filteredorder}\n     onupdate={updateorder}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    /> : null }\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport { ORDERS } from '../../services/queries';\n\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n    let user_id = props.location.pathname.split('/')[2];\n      \n    const { data, loading, error } = useQuery(ORDERS(user_id));\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\n      let selectedsellingPriceType = {}\n      pricetypes.forEach(element => {\n    \n        if(element.label == diamondData.sellingPriceType)\n        {\n          selectedsellingPriceType = element\n        }\n      })\n        setEditdiamond({  \n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          selectedsellingPriceType : selectedsellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      value={editdiamond.selectedsellingPriceType}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n     \n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState([]);\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    if(deleteid.length > 0)\n    {\n      let variables ={\n        elementId:deleteid[0]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    if(deleteid.length > 1)\n    {\n      let variables ={\n        elementId:deleteid[1]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n    //   if(res!==null){\n    //    // refetch();\n    //     // refetchval()\n    //     getgemlist()\n    //   }\n    // }).catch(err => {\n\n    // })\n    setgemlist([])\n\n    setDeleteid([])\n    getgemlist()\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n\n    let deleteids = [];\n    deleteids.push(diamondData.costprice.id)\n    deleteids.push(diamondData.sellprice.id)\n\n     setDeleteid(deleteids)\n     setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata ={}\n    bodydata['material'] = makingcontent.metal.name;\n    bodydata['weight_start'] = makingcontent.weightstart;\n    bodydata['weight_end'] = makingcontent.weightend;\n    bodydata['price_type'] = makingcontent.pricetype.label;\n    bodydata['vendor_code'] = props.vendor;\n    bodydata['purity'] = makingcontent.purity.shortCode;\n    bodydata['cost_price'] = makingcontent.costPrice;\n    bodydata['selling_price'] = makingcontent.sellingprice;\n    bodydata['isadd'] = true\n\n     await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\n\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     setOpen(false)\n     getmclist()\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster}  isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds vendor={vendorcode}/>\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { TextField, Grid, Chip } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup, props.refetch);\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setMarkup({ ...markup, [type]: value });\n  };\n  const handleinputChange = (type) => (e) => {\n    setMarkup({\n      ...markup,\n      [type]: e.target.value,\n    });\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose();\n  };\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"category\")}\n                getOptionLabel={(option) => option.name}\n                options={props.category}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose category\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"producttype\")}\n                getOptionLabel={(option) => option.name}\n                options={props.producttype}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose product type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"materiallist\")}\n                getOptionLabel={(option) => option.name}\n                options={props.materiallist}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose Material type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                fullWidth\n                disableClearable\n                onChange={handleoptionChange(\"puritylist\")}\n                getOptionLabel={(option) => option.name}\n                options={props.puritylist}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Choose Purity type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Selling Price Min\"\n                fullWidth\n                onChange={handleinputChange(\"sellpricemin\")}\n                id=\"productvendorcode\"\n                name=\"Selling Price Min\"\n              />\n            </Grid>\n\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Selling Price Max\"\n                fullWidth\n                onChange={handleinputChange(\"sellpricemax\")}\n                id=\"productvendorcode\"\n                name=\"Cost Price\"\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                fullWidth\n                disableClearable\n                getOptionLabel={(option) => option.name}\n                onChange={handleoptionChange(\"markuptype\")}\n                options={[\n                  { label: 1, name: \"Flat\" },\n                  { label: 2, name: \"Percentage\" },\n                ]}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Markup Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{\n                      ...params.InputProps,\n                      readOnly: true,\n                      type: \"search\",\n                    }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                label=\"Markup Value \"\n                onChange={handleinputChange(\"markup\")}\n                fullWidth\n                id=\"productvendorcode\"\n                name=\"Cost Price\"\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { NetworkContext } from \"../../../context/NetworkContext\";\nimport ConformationAlert from \"../../../components/ConformationAlert\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Input, Grid, Card } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  DIAMONDMARKUP,\n  PRODUCTLISTSTATUSEDIT,\n  DELETEMARKUPPRICE,\n} from \"../../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport Addmarkup from \"./Addmarkup\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\nimport { BASE_URL } from \"../../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../../screens/Productlist/filterandsearch\";\nconst columns = [\n  { id: \"Component\", label: \"Components\" },\n  { id: \"Product Category\", label: \"product Category\" },\n  { id: \"Product Type\", label: \"Product Type\" },\n  { id: \"Selling Price Min\", label: \"Selling Price Min\" },\n  { id: \"Selling Price Max\", label: \"Selling Price Max\" },\n  { id: \"Markup Type\", label: \"Markup Type\" },\n  { id: \"Markup value\", label: \"Markup value\" },\n  { id: \"updatedAt\", label: \"updatedAt\" },\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n}));\n\nconst AddContact = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [editmarkup, setEditmarkup] = React.useState({});\n  const [goldpricelist, setGoldpricelist] = React.useState({});\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState(\"\");\n  const [refetch, setRefetch] = React.useState(null);\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch) {\n    setIsdelete(true);\n    let variables = {\n      elementId: deleteid,\n    };\n    await props.client\n      .mutate({ mutation: DELETEMARKUPPRICE, variables })\n      .then((res) => {\n        if (res !== null) {\n          refetch();\n          // refetchval()\n        }\n      })\n      .catch((err) => {});\n    setIsconformation(false);\n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id);\n\n    setIsconformation(true);\n  }\n\n  async function updatemarkup(markupcontent, refetch) {\n    let product_type = markupcontent.producttype\n      ? markupcontent.producttype\n      : [];\n    let material_list = markupcontent.materiallist\n      ? markupcontent.materiallist\n      : [];\n    let purity_list = markupcontent.puritylist ? markupcontent.puritylist : [];\n\n    var bodydata = {};\n    bodydata[\"category\"] = markupcontent.category.name;\n    bodydata[\"producttype\"] = product_type;\n    bodydata[\"sellingPriceMin\"] = markupcontent.sellpricemin;\n    bodydata[\"sellingPriceMax\"] = markupcontent.sellpricemax;\n    bodydata[\"markuptype\"] = markupcontent.markuptype.label;\n    bodydata[\"material_list\"] = material_list;\n    bodydata[\"purity_list\"] = purity_list;\n    bodydata[\"markupValue\"] = markupcontent.markup;\n    bodydata[\"material\"] = pricecomponent;\n    console.log(\"XXXXXXXX\");\n    await sendNetworkRequest(\"/addmarkup\", {}, bodydata);\n    setOpen(false);\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n      ...editmarkup,\n      markupid: diamondData.id,\n      sellingPriceMin: diamondData.sellingPriceMin,\n      sellingPriceMax: diamondData.sellingPriceMax,\n      markupValue: diamondData.markupValue,\n      updatedAt: new Date(),\n    });\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\n  }\n  async function handleSave(id, refetch) {\n    var bodydata = {};\n\n    await sendNetworkRequest(\"/updatemarkup\", {}, editmarkup);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    refetch();\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value });\n  };\n  const handlecomponentChange = (type) => (event, value) => {\n    setPriceomponent(value);\n  };\n  const handleinputChange = (type) => (e) => {\n    setEditmarkup({\n      ...editmarkup,\n      [type]: e.target.value,\n    });\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\n  };\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id) {\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n  // let variable = {\n  //   \"productId\": id\n  // };\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\n\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n\n  return (\n    <>\n      <Card className={classes.cardcontent}>\n        <Grid\n          container\n          justify=\"left\"\n          alignItems=\"center\"\n          className={classes.cardroot}\n          spacing={4}\n        >\n          <Grid item xs={3}>\n            <Typography variant=\"h6\">{\"Selling Price Markup Setup\"}</Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              className={classes.fixedTag}\n              defaultValue={pricecomponent}\n              options={[\"Diamond\", \"Gem Stone\", \"Gold\", \"Making Charge\", \"All\"]}\n              onChange={handlecomponentChange(\"earringbacking\")}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    label={option}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Pricing Components\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  // error = {productCtx.error_message.earringbacking}\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              style={{ paddingRight: 16, paddingLeft: 16 }}\n              onClick={handleClickOpen}\n            >\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n      </Card>\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            border={1}\n            borderColor={\"#ddd\"}\n            size=\"small\"\n            stickyHeader\n          >\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <Query\n                query={DIAMONDMARKUP}\n                onCompleted={(data) =>\n                  setPageCount(data.allPricingMarkups.totalCount)\n                }\n                variables={{ vendorCode: pricecomponent }}\n              >\n                {({ data, loading, error, refetch }) => {\n                  debugger;\n                  if (loading) {\n                    // return <Loader />\n                  }\n                  if (error) {\n                    return <div>{error}</div>;\n                    // return false\n                  }\n                  if (data) {\n                    setGoldpricelist(data);\n                    return (\n                      <>\n                        <ConformationAlert\n                          title={\"Are you sure to delete?\"}\n                          positivebtn={\"Yes\"}\n                          negativebtn={\"No\"}\n                          message={\"\"}\n                          refetch={refetch}\n                          onSuccess={handledelete}\n                          onCancel={hidedeleteconformation}\n                          isshow={isconformation}\n                        />\n                        {open ? (\n                          <Addmarkup\n                            isadd={open}\n                            material={pricecomponent}\n                            refetch={refetch}\n                            actionSave={updatemarkup}\n                            category={props.categories}\n                            producttype={props.producttypes}\n                            materiallist={props.materiallist}\n                            puritylist={props.puritylist}\n                            title={props.title}\n                            actionclose={handleClose}\n                          />\n                        ) : null}\n\n                        {data.allPricingMarkups.nodes.map((row, index) => (\n                          <>\n                            <TableRow key={row.category}>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.material}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.category}\n                              </TableCell>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.productType ? row.productType : \"All\"}\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                <Typography className={classes.heading}>\n                                  {row.sellingPriceMin}{\" \"}\n                                </Typography>\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                <Typography className={classes.heading}>\n                                  {row.sellingPriceMax}{\" \"}\n                                </Typography>\n                              </TableCell>\n\n                              <TableCell align=\"center\">\n                                {btnEdit.action && btnEdit.id == row.id ? (\n                                  <Autocomplete\n                                    id=\"free-solo-2-demo\"\n                                    fullWidth\n                                    disableClearable\n                                    className={classes.fixedTag}\n                                    getOptionLabel={(option) => option.name}\n                                    onChange={handleoptionChange(\n                                      \"sellingPriceType\"\n                                    )}\n                                    options={[\n                                      { label: 1, name: \"Flat\" },\n                                      { label: 2, name: \"Percentage\" },\n                                    ]}\n                                    renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                        <Chip\n                                          variant=\"outlined\"\n                                          size=\"small\"\n                                          label={option.name}\n                                          {...getTagProps({ index })}\n                                        />\n                                      ))\n                                    }\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label=\"Price Type\"\n                                        margin=\"dense\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        InputProps={{\n                                          ...params.InputProps,\n                                          readOnly: true,\n                                          type: \"search\",\n                                        }}\n                                      />\n                                    )}\n                                  />\n                                ) : (\n                                  <Typography className={classes.heading}>\n                                    {row.markupType === 1\n                                      ? \"Flat\"\n                                      : \"Percentage\"}{\" \"}\n                                  </Typography>\n                                )}\n                              </TableCell>\n\n                              <TableCell align=\"left\">\n                                {btnEdit.action && btnEdit.id == row.id ? (\n                                  <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value={editmarkup.markupValue}\n                                    onChange={handleinputChange(\"markupValue\")}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                  />\n                                ) : (\n                                  <Typography className={classes.heading}>\n                                    {row.markupValue}{\" \"}\n                                  </Typography>\n                                )}\n                              </TableCell>\n\n                              <TableCell align=\"left\">\n                                <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {btnEdit.action && btnEdit.id == row.id\n                                    ? editmarkup.updatedAt\n                                    : row.updatedAt}\n                                </Moment>\n                              </TableCell>\n                              {btnEdit.action && btnEdit.id == row.id ? (\n                                <TableCell\n                                  style={{ width: 170 }}\n                                  align=\"center\"\n                                >\n                                  <Button\n                                    onClick={(e) => handleSave(row.id, refetch)}\n                                  >\n                                    <SaveIcon />\n                                  </Button>\n                                  <Button onClick={(e) => CancelEdit(row)}>\n                                    <CancelIcon />\n                                  </Button>\n                                </TableCell>\n                              ) : (\n                                <TableCell\n                                  align=\"center\"\n                                  style={{ width: 170 }}\n                                >\n                                  <Button onClick={(e) => handleEdit(row)}>\n                                    <EditIcon />\n                                  </Button>\n                                  <Button\n                                    onClick={(e) => handleDelete(row, refetch)}\n                                  >\n                                    <DeleteIcon />\n                                  </Button>\n                                </TableCell>\n                              )}\n                            </TableRow>\n                          </>\n                        ))}\n                      </>\n                    );\n                  } else {\n                    return <div>{\"Fetch Products\"}</div>;\n                  }\n                }}\n              </Query>\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n            </TableBody>\n            {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n          </Table>\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from \"react-apollo\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Product from \"./components/Product\";\nimport Diamonds from \"./components/Diamonds\";\nimport Gemstones from \"./components/Gemstones\";\nimport Makingcharge from \"./components/Makingcharge\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport {\n  VENDORLIST,\n  MASTERCATEGORY,\n  PRODUCTDIAMONDTYPES,\n} from \"../../graphql/query\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { Chip, TextField } from \"@material-ui/core\";\n\nconst useStyle = makeStyles((theme) => ({}));\nexport const Markupprice = withRouter((props) => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [materiallist, setMateriallist] = React.useState([]);\n  const [puritylist, setPuritylist] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n  const classes = useStyle();\n\n  const handlevendorchange = (type) => (event, value) => {\n    setVendorcode(value.shortCode);\n  };\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: {} }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes);\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes);\n        setMateriallist(fatchvalue.data.allMasterMaterials.nodes);\n        setPuritylist(fatchvalue.data.allMasterMetalsPurities.nodes);\n        // setVendorlist({\n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <Grid container spacing={1}>\n      {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n\n      <Grid item xs={12} sm={12}>\n        <Product\n          categories={categorylist}\n          producttypes={producttypes}\n          materiallist={materiallist}\n          puritylist={puritylist}\n          vendor={\"Gold\"}\n        />\n      </Grid>\n      {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n      {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n      {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n      {/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  );\n});\n\nexport default withApollo(withRouter(Markupprice));\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '12px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '12px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { CategoryComponents } from \"./../../components\";\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button,\n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs,\n  Tab,\n  Divider,\n  colors,\n} from \"@material-ui/core\";\nimport { VoucherContext } from \"../../../../context\";\nconst tabs = [\n  { value: \"Category\", label: \"Category\" },\n  { value: \"Producttype\", label: \"Product type\" },\n  { value: \"Material\", label: \"Material\" },\n  { value: \"Collections\", label: \"Collections\" },\n  { value: \"Occations\", label: \"Occations\" },\n  { value: \"Styles\", label: \"Styles\" },\n  { value: \"Themes\", label: \"Themes\" },\n];\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: \"flex\",\n    alignItems: \"flex-center\",\n    padding: theme.spacing(1),\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    \"& + &\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  divider: {\n    backgroundColor: colors.grey[300],\n  },\n  cardcontent: {\n    display: \"flex\",\n    alignItems: \"flex-center\",\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200],\n  },\n  optionRadio: {\n    margin: -10,\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst VoucherComponent = (props) => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx, voucherMaster } =\n    React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\",\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n  };\n  const myFunction = () => {\n    props.onAdded(attrobj);\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    if (type === \"materials\") {\n      let elements_arr = [];\n      value.forEach((element) => {\n        elements_arr.push(element.name);\n      });\n      if (elements_arr.indexOf(\"Gold\") > -1) {\n        setIsgold(true);\n      } else {\n        setIsgold(false);\n      }\n\n      if (elements_arr.indexOf(\"Diamond\") > -1) {\n        setIsdiamond(true);\n      } else {\n        setIsdiamond(false);\n      }\n    }\n    setAttrobj({\n      ...attrobj,\n      [type]: value,\n    });\n\n    // props.onAdded(type,value)\n  };\n  const handleTabsChange = (event, value) => {\n    if (value == \"Material\") {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if (tabnames.indexOf(\"Purity\") === -1) {\n        tabnames.splice(3, 0, \"Purity\");\n      }\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {}, []);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <div className={classes.content}>\n        <Grid container spacing={2}>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              value={attrobj.category}\n              className={classes.fixedTag}\n              fullWidth\n              getOptionLabel={(option) => option.name}\n              options={voucherCtx.voucherMaster.product_categories}\n              onChange={handleoptionChange(\"category\")}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Product Category\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              )}\n            />\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              value={attrobj.product_types}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.product_types}\n              onChange={handleoptionChange(\"product_types\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.product_types}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Product Types\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.materials}\n              onChange={handleoptionChange(\"materials\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.materials}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Materials\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          {isgold ? (\n            <Grid item xs={4} sm={4}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                //  value={attrobj.componenets}\n                className={classes.fixedTag}\n                fullWidth\n                options={voucherCtx.voucherMaster.purities}\n                onChange={handleoptionChange(\"purities\")}\n                getOptionLabel={(option) => option.name}\n                value={attrobj.purities}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.name}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    //  error = {productCtx.error_message.selected_sizes}\n\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\n                  />\n                )}\n              />\n            </Grid>\n          ) : null}\n          {isdiamond ? (\n            <Grid item xs={4} sm={4}>\n              <Autocomplete\n                id=\"free-solo-2-demo\"\n                multiple\n                //  value={attrobj.componenets}\n                className={classes.fixedTag}\n                fullWidth\n                getOptionLabel={(option) => option.diamondtype}\n                options={voucherCtx.voucherMaster.diamondtypes}\n                onChange={handleoptionChange(\"diamondtype\")}\n                value={attrobj.diamondtype}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label={option.diamondtype}\n                      {...getTagProps({ index })}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    //  error = {productCtx.error_message.selected_sizes}\n\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\n                  />\n                )}\n              />\n            </Grid>\n          ) : null}\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.collections}\n              onChange={handleoptionChange(\"collections\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.collections}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Collections\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.occations}\n              onChange={handleoptionChange(\"occations\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.occations}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Occassions\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.styles}\n              onChange={handleoptionChange(\"styles\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.styles}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Styles\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={4} sm={4}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              //  value={attrobj.componenets}\n              className={classes.fixedTag}\n              fullWidth\n              options={voucherCtx.voucherMaster.themes}\n              onChange={handleoptionChange(\"themes\")}\n              getOptionLabel={(option) => option.name}\n              value={attrobj.themes}\n              renderTags={(value, getTagProps) =>\n                value.map((option, index) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label={option.name}\n                    {...getTagProps({ index })}\n                  />\n                ))\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Themes\"\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  fullWidth\n                  //  error = {productCtx.error_message.selected_sizes}\n\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\n            <Button\n              onClick={() => props.onAdded(attrobj)}\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Check Applicable Products\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired,\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n// import moment from 'moment';\nimport PropTypes from \"prop-types\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from \"@material-ui/styles\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport Viewsku from \"../Viewsku\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors,\n} from \"@material-ui/core\";\n\nimport { Label, ReviewStars } from \"../../../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  filterButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    padding: 0,\n  },\n  inner: {\n    minWidth: 1150,\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst Products = (props) => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = (event) => {\n    const selectedOrders = event.target.checked\n      ? orders.map((order) => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel() {\n    setOpen(false);\n  }\n  function handleOpen(prodskus) {\n    setOpen(true);\n    setSelectskus(prodskus);\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600],\n  };\n  return (\n    <div {...rest} className={clsx(classes.root, className)}>\n      {open ? (\n        <Viewsku\n          isadd={open}\n          products={selectskus}\n          actionclose={handlecancel}\n        />\n      ) : null}\n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader title={props.title} />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Product ID</TableCell>\n\n                  {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {props.products\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((order) => (\n                    <TableRow\n                    // key={order.id}\n                    // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      <TableCell>{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired,\n};\n\nProducts.defaultProps = {\n  orders: [],\n};\n\nexport default Products;\n","import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\n\nimport { VoucherContext } from \"../../context\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { Chip, IconButton } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport uuid from \"uuid/v1\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { palette } from \"../../theme\";\nimport Page from \"../../components/Page\";\nimport {\n  Header,\n  Results,\n  Products,\n  AboutVoucher,\n  VoucherComponent,\n} from \"./components\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport FullLoader from \"../../components/Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3),\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n  productcontent: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1),\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor: theme.palette.white,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"Created Successfully\",\n    severity: \"Success\",\n  });\n\n  const { voucherCtx, setVoucherCtx, materialMaster } =\n    React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  async function getdiscountvalue(discount_id) {\n    let bodydata = {\n      discountid: discount_id,\n    };\n    let response = await sendNetworkRequest(\n      \"/getdiscount\",\n      {},\n      bodydata,\n      false\n    );\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach((comp) => {\n      comparr.push({\n        name: comp,\n      });\n    });\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids);\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname: response.discunt.discount_name,\n      discountvalue: response.discunt.discount_value,\n      discounttype: response.discunt.discount_type,\n      discounttitle: response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes),\n    });\n    setIsloaded(true);\n  }\n  async function creatediscount(ispricerun) {\n    let skuarray = [];\n    while (skus.length > 0) {\n      let sku_content = skus.splice(0, 25000);\n      skuarray.push(sku_content);\n    }\n    if (errorskus.length > 0) {\n      alert(\"Some skus are overlapping\");\n    } else {\n      let discount_count = 0;\n      setIsloading(true);\n      updatediscount(discount_count);\n      async function updatediscount() {\n        let bodydata = {\n          discountvalue: parseFloat(attributeobj.discountvalue),\n          discounttype: attributeobj.discounttype,\n          componenets: attributeobj.componenets,\n          discountname: attributeobj.discountname,\n          discounttitle: attributeobj.discounttitle,\n          product_attributes: productattr,\n          product_attributes_text: productattrtext,\n          skus: skuarray[discount_count],\n        };\n        console.log(JSON.stringify(productattr));\n        let response = await sendNetworkRequest(\n          \"/creatediscount\",\n          {},\n          bodydata,\n          false\n        );\n\n        discount_count = discount_count + 1;\n        if (skuarray.length > discount_count) {\n          setLoadingtitle(skus.length + \" Left\");\n          updatediscount(discount_count);\n        } else {\n          setIsloading(false);\n          setOpen(true);\n          setIsshowpriceupdate(false);\n\n          window.location = \"/salediscountlist\";\n        }\n      }\n    }\n  }\n  const handleDelete = (chipToDelete) => () => {\n    //setProducts([])\n    let errorindex = errorskus.indexOf(chipToDelete);\n    if (errorindex > -1) {\n      errorskus.splice(errorindex, 1);\n      var erroritems = [];\n      errorskus.forEach((itemname) => {\n        erroritems.push(itemname);\n      });\n      setErrorskus(erroritems);\n    }\n    let index = products.indexOf(chipToDelete);\n    products.splice(index, 1);\n    var items = [];\n    products.forEach((itemname) => {\n      items.push(itemname);\n    });\n    setProducts(items);\n\n    //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n  };\n\n  async function filterapllied(value) {\n    var bodydata = {};\n\n    let product_ids = [];\n    let response = await sendNetworkRequest(\n      \"/getaliasproduct\",\n      {},\n      value,\n      false\n    );\n    setProducts(response.products);\n    setSkus(response.skus);\n    setErrorskus(response.eror_skus);\n    setIsloading(false);\n    setTitlecontent(response.title);\n  }\n  async function updateprices() {\n    alert(\"i am here\");\n    var bodydata = {};\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id: products,\n    };\n    setIsshowpriceupdate(true);\n\n    let response = await sendNetworkRequest(\n      \"/productpriceupdate\",\n      {},\n      bodydata,\n      false\n    );\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n      component: \"updateskuprice\",\n    };\n    let response = await sendNetworkRequest(\n      \"/getcomponentpricestatus\",\n      {},\n      bodydata,\n      false\n    );\n\n    setStatusmessage(response.message);\n  }\n  function attributeadded(value) {\n    let componentsstring = {};\n    let attrs = [];\n    let display_arr = [];\n    let keys = Object.keys(value);\n    keys.forEach((key) => {\n      let values = [];\n      let alias_arr = [];\n      value[key].forEach((valueobj) => {\n        values.push(valueobj.name);\n        alias_arr.push(valueobj.alias);\n        attrs.push(valueobj.name);\n      });\n      componentsstring[key] = {\n        values: values,\n        alias: alias_arr,\n      };\n      let displaytext = key + \" : \" + attrs.join(\" , \");\n      display_arr.push(displaytext);\n    });\n    setProductattr(componentsstring);\n    setProductattrtext(display_arr.join(\" | \"));\n    //alert(JSON.stringify(componentsstring))\n    setIsloading(true);\n    //setAttributeobj(value)\n    filterapllied(value);\n  }\n  function valuechange(type, value) {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value,\n    });\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {};\n    fetchOrders();\n    if (\n      props.location.pathname &&\n      props.location.pathname.split(\"/\").length > 2\n    ) {\n      let discount_id = props.location.pathname.split(\"/\")[2];\n      setDiscount_id(discount_id);\n      getdiscountvalue(discount_id);\n    } else {\n      setIsloaded(true);\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n      <FullLoader title={loadingtitle} isopen={isloading} />\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <Page className={classes.root} title=\"Orders Management List\">\n          {!discount_id ? (\n            <>\n              <VoucherComponent\n                onAdded={attributeadded}\n                className={classes.aboutvoucher}\n              />\n              {products.length > 0 ? (\n                <Products title={titlecontent} products={errorskus} />\n              ) : null}\n              {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n              {isloaded || !discount_id ? (\n                <AboutVoucher\n                  discountcontent={attributeobj}\n                  className={classes.aboutvoucher}\n                  onAdded={valuechange}\n                  categories={[\"Fixed Amount\", \"percentage\"]}\n                />\n              ) : null}\n\n              {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n              <Grid\n                container\n                xs={12}\n                spacing={2}\n                style={{ textAlign: \"center\" }}\n              >\n                <Grid\n                  item\n                  xs={12}\n                  style={{ marginTop: 16, textAlign: \"center\" }}\n                  spacing={2}\n                >\n                  {!isshowpriceupdate ? (\n                    <>\n                      <Button\n                        onClick={() => creatediscount(false)}\n                        color=\"primary\"\n                        style={{ margin: 16 }}\n                        variant=\"contained\"\n                      >\n                        Submit\n                      </Button>\n\n                      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n                    </>\n                  ) : null}\n                </Grid>\n              </Grid>\n            </>\n          ) : (\n            <Grid container xs={12} spacing={2}>\n              <Grid item xs={6} style={{ marginTop: 16 }}>\n                <Grid item xs={12} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Discount Name\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.discountname}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Discount Title\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.discounttitle}\n                  </Typography>\n                </Grid>\n                <Grid item xs={6} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Discount Value\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.discounttype == 2\n                      ? attributeobj.discountvalue + \"%\"\n                      : attributeobj.discountvalue}\n                  </Typography>\n                </Grid>\n                <Grid item xs={6} style={{ marginTop: 16 }}>\n                  <Typography variant=\"body2\" component=\"body2\">\n                    Pricing Compponent\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h5\">\n                    {attributeobj.displaycomp}\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              {attributeobj.allkeys ? (\n                <Grid item xs={6} style={{ marginTop: 16 }}>\n                  {attributeobj.allkeys.map((row, index) => (\n                    <Grid item xs={12} style={{ marginTop: 16 }}>\n                      <Typography variant=\"body2\" component=\"body2\">\n                        {row}\n                      </Typography>\n                      <Typography variant=\"h5\" component=\"h5\">\n                        {attributeobj.attributes[row].values}\n                      </Typography>\n                    </Grid>\n                  ))}\n                  <Grid item xs={12} style={{ marginTop: 16 }}>\n                    <Typography variant=\"body2\" component=\"body2\">\n                      Total Sku\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h5\">\n                      {attributeobj.skucount}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              ) : null}\n              <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\n                {!isshowpriceupdate ? (\n                  <>\n                    {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n                  </>\n                ) : (\n                  <>\n                    {\" \"}\n                    {statusmessage}\n                    <IconButton\n                      aria-label=\"delete\"\n                      onClick={(e) => handlestatus()}\n                      color=\"primary\"\n                    >\n                      <RefreshIcon />\n                    </IconButton>\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          )}\n        </Page>\n      </MuiPickersUtilsProvider>\n    </>\n  );\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from \"../../context\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport { useQuery } from \"react-apollo\";\nimport { materialMaster } from \"../../services/mapper\";\nimport Component from \"./Salediscountcontent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: theme.spacing(2),\n  },\n}));\nexport const Salediscount = withRouter((props) => {\n  const classes = useStyles();\n\n  const { data, loading, error } = useQuery(materialMaster.query);\n  if (loading)\n    return (\n      <div>\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n  return (\n    <VoucherProvider\n      value={{\n        data,\n        mapper: materialMaster.mapper,\n        mappertype: \"voucherMaster\",\n      }}\n    >\n      <Component {...props} />\n    </VoucherProvider>\n  );\n});\nexport default Salediscount;\n","import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\n\nimport \"../../tmp.css\";\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  Switch,\n  FormControlLabel,\n  Grid,\n  TextField,\n  Typography,\n  colors,\n  Input,\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../../../context\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 960,\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    paddingBottom: theme.spacing(2),\n    maxWidth: 720,\n    margin: \"0 auto\",\n  },\n  helperText: {\n    textAlign: \"right\",\n    marginRight: 0,\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: \"flex\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  applyButton: {\n    color: theme.palette.white,\n    marginRight: theme.spacing(2),\n    // backgroundColor: colors.green[600],\n    // '&:hover': {\n    //   backgroundColor: colors.green[900]\n    // }\n  },\n}));\n\nconst EditContent = (props) => {\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    ...diamond,\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues,\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const classes = useStyles();\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  function previewimage(url) {\n    // setpreviewurl(url)\n    // setShowpreview(true)\n  }\n  const handleInputChange = (type) => (e) => {\n    debugger;\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const toggleChecked = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\n  };\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  const handleChange = (event) => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {}, [editcontent]);\n\n  return (\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\n      <div {...rest} className={clsx(classes.root, className)}>\n        <div className={classes.header}>\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\n            {props.title}\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          {attributes.map((columnname, index) => (\n            <>\n              {showpreview && (\n                <Lightbox\n                  class=\"fade\"\n                  mainSrc={previewurl}\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n                  onCloseRequest={() => setShowpreview(false)}\n                  onMovePrevRequest={() => alert(\"prev\")}\n                  onMoveNextRequest={() => alert(\"next\")}\n                />\n              )}\n              <Grid container xs={12} spacing={2}>\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n                      label={columnname.label}\n                      disabled={columnname.type === 10}\n                    />\n                  </Grid>\n                ) : null}\n                {columnname.type === 2 && (\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      label={columnname.key}\n                      labelPlacement=\"start\"\n                      control={\n                        <Switch\n                          checked={editcontent[columnname.key]}\n                          name=\"checkedB\"\n                          color=\"primary\"\n                          onChange={toggleChecked(columnname.key)}\n                        />\n                      }\n                    />\n                  </Grid>\n                )}\n                {columnname.type === 3 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      multiple\n                      id=\"combo-box-demo\"\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      margin=\"dense\"\n                      fullWidth\n                      value={editcontent[columnname.defaultkey]}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />\n                  </Grid>\n                )}\n\n                {columnname.type == 4 && (\n                  <Grid item xs={12}>\n                    <Typography> {diamond[columnname.key]}</Typography>\n                  </Grid>\n                )}\n\n                {columnname.type == 5 && (\n                  <Grid item xs={12}>\n                    <Autocomplete\n                      id=\"combo-box-demo\"\n                      // options={props.masters[columnname.mastervaluekey]}\n                      margin=\"dense\"\n                      fullWidth\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                      onChange={handleoptionChange(columnname.defaultkey)}\n                      value={editcontent[columnname.defaultkey]}\n                      getOptionLabel={(option) => option.name}\n                      renderInput={(params) => (\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\n                      )}\n                    />{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 6 && (\n                  <Grid item xs={12}>\n                    <Button variant=\"outlined\" color=\"primary\">\n                      {columnname.controllabel}\n                    </Button>{\" \"}\n                  </Grid>\n                )}\n\n                {columnname.type === 9 && (\n                  <Grid container item xs={12}>\n                    <Grid item xs={12}>\n                      <AvatarGroup max={2}>\n                        {diamond[columnname.key]\n                          ? diamond[columnname.key]\n                              .split(\",\")\n                              .map((diamond, index) => (\n                                <Avatar\n                                  alt=\"Remy Sharp\"\n                                  src={diamond}\n                                  onClick={() => previewimage(diamond)}\n                                  className={classes.small}\n                                />\n                              ))\n                          : null}\n                      </AvatarGroup>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <FilePond\n                        style={{ height: \"100\", width: \"100\" }}\n                        oninit={() => handleInit()}\n                        labelIdle=\"Add Banner Image\"\n                        onaddfile={(error, fileItem) => {\n                          if (!error) {\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\n                          } else {\n                            // alert(row[columnname.key])\n                          }\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </>\n          ))}\n        </div>\n        <div className={classes.actions}>\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\n            Save\n          </Button>\n          <Button onClick={() => onClose()} variant=\"contained\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditContent.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  attributes: PropTypes.array,\n\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n};\n\nexport default EditContent;\n","import React, { useEffect, useContext, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport Box from \"@material-ui/core/Box\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Query, withApollo } from \"react-apollo\";\nimport {\n  TaxList,\n  VENDORLISTS,\n  PRODUCTFILTERMASTER,\n  PRODUCTLISTSTATUSEDIT,\n} from \"../../graphql/query\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport EditContent from \"./components/EditContent\";\nimport { Button, Switch, Grid, FormControlLabel } from \"@material-ui/core\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport Moment from \"react-moment\";\nimport { BASE_URL } from \"../../config\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Filterandsearch from \"./../../screens/Productlist/filterandsearch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\";\nimport GrainIcon from \"@material-ui/icons/Grain\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"./tmp.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport moment from \"moment\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\"></IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst Vendor = (props) => {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount, setPageCount] = React.useState(0);\n  const [offsetValue, setOffsetValue] = React.useState(0);\n  const [masterlist, setMasterlist] = React.useState(props.values);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const [productlists, setProductlists] = React.useState([]);\n  const [allproductlists, setAllProductlists] = React.useState([]);\n  const [mastercategories, setMastercategories] = React.useState([]);\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [openedit, setOpenedit] = React.useState(false);\n\n  const [isadd, setIsadd] = React.useState(false);\n  const [isedit, setIsedit] = React.useState(false);\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const [aliasName, setaliasName] = React.useState(\"\");\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function addnewvendor() {\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\n    setaliasName(props.prefix + sort_id);\n\n    setEditcontent({\n      alias: aliasName,\n      ...editcontent,\n      isedit: false,\n    });\n    debugger;\n    console.log(editcontent);\n    // let masters = masterlist;\n    // masters.insert(0, []);\n\n    //setMasterlist(masters)\n    setIsadd(true);\n    setOpenedit(true);\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\n  }\n  Array.prototype.insert = function (index, item) {\n    this.splice(index, 0, item);\n  };\n  function Editvendor(vendordata) {\n    delete vendordata[\"action\"];\n\n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit: true,\n    });\n    setOpenedit(true);\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n  }\n  async function Savevendor(content) {\n    props.onCreate(content);\n    setIsadd(false);\n    setEditcontent(null);\n    setOpenedit(false);\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\n    // refetch()\n  }\n  function Cancelcreate() {\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  function searrchcontent() {\n    props.onSearch(\n      editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\"\n    );\n  }\n  function handleInit() {\n    console.log(\"FilePond instance has initialised\");\n  }\n  function removeimage(imagename, keyvalue) {\n    let previmagenames = editcontent[keyvalue];\n    let newimages = [];\n    let previmages = previmagenames.split(\",\");\n    previmages.forEach((element) => {\n      if (element == imagename) {\n      } else {\n        newimages.push(element);\n      }\n    });\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\n  }\n  function CancelEdit(diamondData) {\n    if (isadd) {\n      let masters = masterlist;\n\n      masters.splice(0, 1);\n      setMasterlist(masterlist);\n    }\n    setIsadd(false);\n    setEditcontent({});\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const handleInputChange = (type) => (e) => {\n    setEditcontent({ ...editcontent, [type]: e.target.value });\n  };\n  const handleoptionChange = (type) => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value });\n  };\n  const handleSearchChange = (type) => (e) => {\n    props.onSearch(e.target.value);\n  };\n  const handleChange = (type) => (event) => {\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\n  };\n  const [showpreview, setShowpreview] = useState(false);\n  const [previewurl, setpreviewurl] = useState(\"\");\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        foldername: \"banner_images\",\n        product_id: null,\n      },\n      false\n    );\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData.filepath;\n    let imageurl =\n      \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\n\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    await axios.put(signedRequest, bodaydata.file, options);\n    let previmagenames = editcontent[keyvalue];\n    let previmages = [];\n    if (previmagenames) {\n      previmages = previmagenames.split(\",\");\n      previmages.push(imageurl);\n    }\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\n  }\n  useEffect(() => {\n    setMasterlist(props.values);\n  }, [props.values]);\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb.\");\n  }\n  function previewimage(url) {\n    setpreviewurl(url);\n    setShowpreview(true);\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <>\n      {showpreview && (\n        <Lightbox\n          class=\"fade\"\n          mainSrc={previewurl}\n          // nextSrc={images[(photoIndex + 1) % images.length]}\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={() => setShowpreview(false)}\n          onMovePrevRequest={() => alert(\"prev\")}\n          onMoveNextRequest={() => alert(\"next\")}\n        />\n      )}\n      <Paper className={classes.root}>\n        <Grid\n          container\n          item\n          xs={12}\n          style={{ padding: \"16px\" }}\n          sm={12}\n          alignItems={\"flex-end\"}\n        >\n          <Grid fullwidth item xs={3} sm={3}>\n            <Typography component=\"h6\" variant=\"h6\">\n              {props.title}\n            </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\n            <Grid fullwidth item xs={9} sm={9}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n                autoComplete=\"off\"\n                id=\"vendordeliverydays\"\n                name=\"vendordeliverydays\"\n                //  /  value={editcontent.searchcontent}\n                onChange={handleInputChange(\"searchcontent\")}\n                label=\"Search text\"\n              />\n            </Grid>\n            <Grid fullwidth item xs={3} sm={3}>\n              <Button\n                variant=\"contained\"\n                onClick={() => searrchcontent()}\n                color=\"primary\"\n              >\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            {props.button_title ? (\n              <Button\n                variant=\"contained\"\n                onClick={() => addnewvendor()}\n                color=\"primary\"\n              >\n                {props.button_title}\n              </Button>\n            ) : null}\n          </Grid>\n        </Grid>\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            border={1}\n            borderColor={\"#ddd\"}\n            size=\"small\"\n            stickyHeader\n          >\n            {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n            <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            <TableBody>\n              {masterlist.map((row, index) => (\n                <>\n                  <TableRow>\n                    {props.columns.map((columnname, index) => (\n                      <>\n                        {columnname.key === \"action\" ? (\n                          <TableCell align=\"center\" style={{ width: 20 }}>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <>\n                                <Button onClick={(e) => Savevendor()}>\n                                  <SaveIcon />\n                                </Button>\n                                <Button onClick={(e) => CancelEdit(row)}>\n                                  <CancelIcon />\n                                </Button>\n                              </>\n                            ) : (\n                              <Button onClick={(e) => Editvendor(row)}>\n                                <EditIcon />\n                              </Button>\n                            )}\n                          </TableCell>\n                        ) : (\n                          <>\n                            {btnEdit.action && btnEdit.id == row.id ? (\n                              <TableCell align=\"left\">\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    onChange={handleChange(columnname.key)}\n                                    checked={editcontent[columnname.key]}\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button variant=\"outlined\" color=\"primary\">\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n                                {columnname.type == 3 ? (\n                                  <Autocomplete\n                                    multiple\n                                    id=\"combo-box-demo\"\n                                    options={\n                                      columnname.mastervaluekey\n                                        ? props.masters[\n                                            columnname.mastervaluekey\n                                          ]\n                                        : props.masters\n                                    }\n                                    margin=\"dense\"\n                                    fullWidth\n                                    value={editcontent[columnname.defaultkey]}\n                                    onChange={handleoptionChange(\n                                      columnname.defaultkey\n                                    )}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label={columnname.label}\n                                        variant=\"outlined\"\n                                      />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 9 ? (\n                                  <>\n                                    <FilePond\n                                      oninit={() => handleInit()}\n                                      labelIdle=\"Add Banner Image\"\n                                      onaddfile={(error, fileItem) => {\n                                        if (!error) {\n                                          uploadimagetoserver(\n                                            fileItem,\n                                            columnname.key,\n                                            \"add\"\n                                          );\n                                        } else {\n                                          // alert(row[columnname.key])\n                                        }\n                                      }}\n                                    />\n                                    <div className={classes.imagecontainer}>\n                                      {editcontent[columnname.key]\n                                        ? editcontent[columnname.key]\n                                            .split(\",\")\n                                            .map((row, index) => (\n                                              <Badge\n                                                overlap=\"circle\"\n                                                anchorOrigin={{\n                                                  vertical: \"top\",\n                                                  horizontal: \"right\",\n                                                }}\n                                                badgeContent={\n                                                  <HighlightOffIcon\n                                                    fontSize=\"small\"\n                                                    onClick={() =>\n                                                      removeimage(\n                                                        row,\n                                                        columnname.key\n                                                      )\n                                                    }\n                                                  />\n                                                }\n                                              >\n                                                <Avatar\n                                                  alt=\"Remy Sharp\"\n                                                  src={row}\n                                                  className={classes.small}\n                                                />\n                                              </Badge>\n                                            ))\n                                        : null}\n                                    </div>\n                                  </>\n                                ) : null}\n                                {columnname.type == 5 ? (\n                                  <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={\n                                      props.masters[columnname.mastervaluekey]\n                                    }\n                                    margin=\"dense\"\n                                    fullWidth\n                                    options={\n                                      columnname.mastervaluekey\n                                        ? props.masters[\n                                            columnname.mastervaluekey\n                                          ]\n                                        : props.masters\n                                    }\n                                    onChange={handleoptionChange(\n                                      columnname.defaultkey\n                                    )}\n                                    value={editcontent[columnname.defaultkey]}\n                                    getOptionLabel={(option) => option.name}\n                                    renderInput={(params) => (\n                                      <TextField\n                                        {...params}\n                                        label={columnname.label}\n                                        variant=\"outlined\"\n                                      />\n                                    )}\n                                  />\n                                ) : null}\n                                {columnname.type == 4 ? (\n                                  <Typography>\n                                    {\" \"}\n                                    {row[columnname.key]}\n                                  </Typography>\n                                ) : null}\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {!columnname.type || columnname.type == 1 ? (\n                                  <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    id={columnname.key}\n                                    name={columnname.key}\n                                    value={editcontent[columnname.key]}\n                                    onChange={handleInputChange(columnname.key)}\n                                    label={columnname.label}\n                                  />\n                                ) : null}{\" \"}\n                              </TableCell>\n                            ) : (\n                              <TableCell>\n                                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                                {columnname.type == 8 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    View\n                                  </Button>\n                                ) : null}\n                                {columnname.type === 6 ? (\n                                  <Button\n                                    onClick={() => props.onPermissionadd(row)}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    color=\"primary\"\n                                  >\n                                    {columnname.controllabel}\n                                  </Button>\n                                ) : null}\n\n                                {columnname.type === 9 ? (\n                                  <AvatarGroup max={2}>\n                                    {row[columnname.key]\n                                      ? row[columnname.key]\n                                          .split(\",\")\n                                          .map((row, index) => (\n                                            <Avatar\n                                              alt=\"Remy Sharp\"\n                                              src={row}\n                                              onClick={() => previewimage(row)}\n                                              className={classes.small}\n                                            />\n                                          ))\n                                      : null}{\" \"}\n                                    {/* className={classes.small} />)) : null } */}\n                                  </AvatarGroup>\n                                ) : null}\n                                {columnname.type === 2 ? (\n                                  <Switch\n                                    color=\"primary\"\n                                    name=\"checkedB\"\n                                    onChange={handleInputChange(columnname.key)}\n                                    checked={row[columnname.key]}\n                                    inputProps={{\n                                      \"aria-label\": \"primary checkbox\",\n                                    }}\n                                  />\n                                ) : null}\n                                {columnname.type != 2 &&\n                                columnname.type != 6 &&\n                                columnname.type != 8 &&\n                                columnname.type != 9 ? (\n                                  <Typography>\n                                    {\" \"}\n                                    {row[columnname.key]}\n                                  </Typography>\n                                ) : null}\n                              </TableCell>\n                            )}\n                          </>\n                        )}\n                      </>\n                    ))}\n                  </TableRow>\n                </>\n              ))}\n\n              {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[50, 100, 200, 500]}\n                  count={[props.values.length]}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { \"aria-label\": \"rows per page\" },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  // ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n          {editcontent && (\n            <EditContent\n              diamond={editcontent}\n              attributes={props.columns}\n              title={props.title}\n              masters={props.masters}\n              onApply={Savevendor}\n              onClose={handleApplicationClose}\n              open={openedit}\n              prefix={aliasName}\n            />\n          )}\n        </div>\n      </Paper>\n    </>\n  );\n};\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  toolbar: {\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  deleteIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Header = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Orders\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Order #{order.id}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {/* <Button\n            className={classes.deleteButton}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.deleteIcon} />\n            Delete\n          </Button> */}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\nimport {\n  PAYMENTSTATUSMASTER,\n  PRODUCTDIAMONDTYPES,\n} from \"../../../../graphql/query\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  TextField,\n  Link,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ReceiptIcon from \"@material-ui/icons/ReceiptOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0,\n  },\n  actions: {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    \"& > * + *\": {\n      marginLeft: 0,\n    },\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst OrderInfo = (props) => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const options = [\"Canceled\", \"Completed\", \"Rejected\"];\n\n  const [option, setOption] = useState(options[0]);\n  const [paymentstatus, setPaymentstatus] = useState([]);\n  const [orderstatus, setOrderstatus] = useState([]);\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setOption(event.target.value);\n  };\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\n      })\n      .catch(console.error);\n  }\n  React.useEffect(() => {\n    getmaster();\n  }, []);\n  debugger;\n  console.log(props);\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Customer</TableCell>\n              <TableCell>\n                <Link\n                  target=\"_blank\"\n                  component={RouterLink}\n                  to={`/customerdetails/${order.user_profile.id}`}\n                >\n                  {order.user_profile.first_name} {order.user_profile.last_name}\n                </Link>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline1\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].addressline2\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].city\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].state\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n                <div>\n                  {order.shopping_cart\n                    ? order.shopping_cart.cart_addresses\n                      ? order.shopping_cart.cart_addresses.length > 0\n                        ? order.shopping_cart.cart_addresses[0].country\n                        : \"\"\n                      : \"\"\n                    : \"\"}\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email ID</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.cart_addresses\n                    ? order.shopping_cart.cart_addresses.length > 0\n                      ? order.shopping_cart.cart_addresses[0].contact_number\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Mobile Number</TableCell>\n              <TableCell>{order.user_profile.email}</TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Amount</TableCell>\n              <TableCell>\n                {order.currency}\n                {order.shopping_cart.discounted_price}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Waybil Number</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Waybill Number\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Gift Message</TableCell>\n              <TableCell>\n                {order.shopping_cart\n                  ? order.shopping_cart.giftwraps\n                    ? order.shopping_cart.giftwraps.length > 0\n                      ? order.shopping_cart.giftwraps[0].message\n                      : \"\"\n                    : \"\"\n                  : \"\"}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Mode</TableCell>\n              <TableCell>{order.payment_mode}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Payment Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {paymentstatus.map((option) => (\n                    <option key={option.name} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Order Status</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  name=\"option\"\n                  onChange={handleChange}\n                  select\n                  margin=\"dense\"\n                  // eslint-disable-next-line react/jsx-sort-props\n                  SelectProps={{ native: true }}\n                  value={option}\n                  variant=\"outlined\"\n                >\n                  {orderstatus.map((option) => (\n                    <option key={option.id} value={option.name}>\n                      {option.name}\n                    </option>\n                  ))}\n                </TextField>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Comments</TableCell>\n              <TableCell>\n                <TextField\n                  fullWidth\n                  margin=\"dense\"\n                  name=\"option\"\n                  placeholder=\"Comments\"\n                  onChange={handleChange}\n                  value={order.awb_number}\n                  variant=\"outlined\"\n                />\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant=\"contained\" color=\"primary\">\n          {/* <EditIcon className={classes.buttonIcon} /> */}\n          Save\n        </Button>\n        {/* <Button>\n          <ReceiptIcon className={classes.buttonIcon} />\n          Resend invoice\n        </Button> */}\n      </CardActions>\n    </Card>\n  );\n};\n\nOrderInfo.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired,\n};\n\nexport default OrderInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  }\n}));\n\nconst OrderItems = props => {\n  const { order, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Sku</TableCell>\n                  <TableCell>Product Image</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Amount</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {order.shopping_cart.shopping_cart_items.map(item => (\n                  <TableRow key={item.id}>\n                     <TableCell>\n                      {item.product_sku}\n                    </TableCell>\n                    <TableCell>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </TableCell>\n                    <TableCell>\n                      {item.qty}\n                    </TableCell>\n                    <TableCell>{item.price}</TableCell>\n                    \n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  className: PropTypes.string,\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderItems;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  CardContent,\n  Grid,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  inner_card: {\n    padding: \"10px\",\n    marginBottom: \"16px\",\n  },\n  image_container: {\n    padding: \"16px\",\n  },\n  product_image: {\n    width: \"100%\",\n    height: \"100%\",\n    objectFit: \"cover\",\n  },\n  text_heading: {\n    // fontWeight: \"400\",\n    margin: \"8px 0px\",\n  },\n  text_content: {\n    margin: \"8px 0px\",\n  },\n  final_total_text: {\n    textAlign: \"right\",\n    fontSize: \"16px\",\n    fontWeight: \"bold\",\n  },\n}));\nconst OrderDetails = (props) => {\n  const { order, className, ...rest } = props;\n  console.log(order, \"samir\");\n  const classes = useStyles();\n  return (\n    <div style={{ marginTop: 30 }}>\n      <Card>\n        <CardHeader title=\"Order Details\" />\n        <Divider />\n\n        <CardContent>\n          {order.shopping_cart.shopping_cart_items.map((item) => (\n            <Card key={item.id} className={classes.inner_card}>\n              <Grid container xs={12}>\n                {/*-------------------------------- Image part-------------------------------- */}\n                <Grid\n                  container\n                  xs={12}\n                  md={3}\n                  className={classes.image_container}\n                >\n                  <img\n                    src=\"\"\n                    alt=\"Product Image\"\n                    className={classes.product_image}\n                  />\n                </Grid>\n                <Grid container xs={12} md={9}>\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Product Code</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.product_sku}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Metal</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}\n                      </p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.trans_sku_list.sku_weight}\n                      </p>\n                    </Grid>{\" \"}\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Diamond Quality</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {\" \"}\n                        {item.trans_sku_list.diamond_type}{\" \"}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>\n                        Diamond Weight (Ct)\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> ? </p>\n                    </Grid>\n                  </Grid>\n                  {/* ----------------------------------------------------------------- */}\n                  <Grid container xs={12} md={6}>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Quantity</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> {item.qty} </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}> Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.discount_price)}`}{\" \"}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Saved</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(\n                          item.trans_sku_list.discount_price -\n                            item.trans_sku_list.markup_price\n                        )} (${\n                          item.trans_sku_list.discount === null\n                            ? \"0\"\n                            : item.trans_sku_list.discount\n                        }%off)`}\n                      </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Shipping</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}> Free </p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_heading}>Grand Total</p>\n                    </Grid>\n                    <Grid item xs={6} md={6}>\n                      <p className={classes.text_content}>\n                        {`₹${Math.round(item.trans_sku_list.markup_price)}`}\n                      </p>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Card>\n          ))}\n          <Grid>\n            <p className={classes.final_total_text}>\n              Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;\n            </p>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\nexport default OrderDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport uuid from \"uuid/v1\";\nimport moment from \"moment\";\nimport Page from \"../../components/Page\";\nimport { Header, OrderInfo, OrderItems } from \"./components\";\nimport { withRouter } from \"react-router-dom\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n  container: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const OrderManagementDetails = withRouter((props) => {\n  const classes = useStyles();\n  const [order, setOrder] = useState(null);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  async function fetchorderdetails(order_id) {\n    let response = await sendNetworkRequest(\n      \"/getorderdetails\",\n      {},\n      { order_id }\n    );\n    console.log(response);\n    setOrder(response.orders);\n  }\n  useEffect(() => {\n    let mounted = true;\n    var com_id = props.location.pathname.split(\"/\")[2];\n    const fetchOrder = () => {\n      setOrder({\n        id: uuid(),\n        ref: \"FAD107\",\n        promoCode: null,\n        value: \"55.25\",\n        currency: \"$\",\n        status: \"canceled\",\n        customer: {\n          name: \"Ekaterina Tankova\",\n          address: \"Street King William, 42456\",\n          city: \"Montgomery\",\n          country: \"United States\",\n        },\n        items: [\n          {\n            id: uuid(),\n            name: \"Project Points\",\n            cuantity: 25,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"50.25\",\n            currency: \"$\",\n          },\n          {\n            id: uuid(),\n            name: \"Freelancer Subscription\",\n            cuantity: 1,\n            billing: \"monthly\",\n            status: \"completed\",\n            value: \"5.00\",\n            currency: \"$\",\n          },\n        ],\n        created_at: moment(),\n      });\n    };\n\n    // fetchOrder();\n    fetchorderdetails(com_id);\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!order) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Order Management Details\">\n      <Header order={order} />\n      <Grid className={classes.container} container spacing={3}>\n        <Grid item md={4} xl={3} xs={12}>\n          <OrderInfo order={order} />\n        </Grid>\n        <Grid item md={8} xl={9} xs={12}>\n          <OrderItems order={order} />\n          <OrderDetails order={order} style={{ marginTop: 30 }} />\n        </Grid>\n      </Grid>\n    </Page>\n  );\n});\n\nexport default OrderManagementDetails;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n      alert(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\n      x.priority && x.priority == taxcontent ||\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\n\n\n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  // element.email &&  element.email.match(searchtext+'.*')  || \n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \n  //     element.username && element.username.match(searchtext+'.*')\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addtaxattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\nimport Attributescontent from './Attributescontent/Attributescontent';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n     <Attributescontent title= {\"Shipment Settings II\"} \n        masters={[]}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Mastercategories = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    alert(JSON.stringify(taxcontent));\n    // let response = await sendNetworkRequest(\n    //   \"/managecategories\",\n    //   {},\n    //   taxcontent\n    // );\n    // getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          prefix={data.prefix}\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Mastercategories;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n\n    //getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n\n    getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":2  ,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allShippingCharges.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport data from \"./data.json\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./Configuration.css\";\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n}));\nexport const Userconfiguration = withRouter((props) => {\n  const master_options = [\n    \"Attribute Master\",\n    \"Categories\",\n    \"ProductTypes\",\n    \"Materials\",\n    \"Metal Colours\",\n    \"Metal Purities\",\n    \"Collections\",\n    \"Occassions\",\n    \"Styles\",\n    \"Themes\",\n    \"Designs\",\n    \"Weights\",\n    \"Diamond Types\",\n    \"Diamond Settings\",\n    \"Diamond Shapes\",\n    \"Earring Backings\",\n    \"Gemstone Settings\",\n    \"Gemstone Shapes\",\n    \"Gemstone Types\",\n    \"Stones\",\n    \"Stone Colours\",\n    \"Stone Shapes\",\n    \"Gender\",\n    \"SEO Priorities\",\n    \"Tax Settings 1\",\n    \"Tax Settings 2\",\n    \"Payment Status\",\n    \"Order Status\",\n    \"Shipping Zones\",\n    \"Shipment Setting I\",\n    \"Shipment Setting II\",\n  ];\n  const master_options_url = [\n    \"masterattributes\",\n    \"categories\",\n    \"producttypes\",\n    \"materialmaster\",\n    \"mastercolors\",\n    \"masterpurities\",\n    \"collections\",\n    \"masteroccassions\",\n    \"masterstyles\",\n    \"masterthemes\",\n    \"designs\",\n    \"weights\",\n    \"diamonds\",\n    \"diamondsettings\",\n    \"diamondshapes\",\n    \"earringbacking\",\n    \"gemstonesettings\",\n    \"gemstoneshapes\",\n    \"gemstonetypes\",\n    \"masterstones\",\n    \"masterstonecolors\",\n    \"masterstoneshapes\",\n    \"genders\",\n    \"seopriority\",\n    \"Taxsetup\",\n    \"taxsettings\",\n    \"paymentstatus\",\n    \"orderstatus\",\n    \"zones\",\n    \"shipmensettings\",\n    \"shippingattributes\",\n  ];\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => {\n    setRaised(true);\n  };\n  const onMouseOut = () => {\n    setRaised(false);\n    // setCardindex(-1)\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {/* <AddContact contactlist={[]}/> */}\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <Typography component=\"h5\" variant=\"h5\">\n          User and Roles Management\n        </Typography>\n      </Grid>\n\n      {data.options.map((menu, index) => (\n        <Grid item xs={6} sm={4} lg={3}>\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\n            <Card fullwidth className=\"card2\">\n              <CardContent>\n                <Typography\n                  style={{ textAlign: \"center\", marginTop: 8 }}\n                  component=\"h6\"\n                  variant=\"h5\"\n                >\n                  {menu.title}\n                </Typography>\n\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n              </CardContent>\n            </Card>\n          </Link>\n        </Grid>\n      ))}\n    </Grid>\n  );\n});\n\nexport default Userconfiguration;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\nimport Addpermissions from \"../../components/Addpermissions/Addpermissions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Masterroles = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false);\n  const [masterpages, setMasterpages] = React.useState([]);\n  const [editroleid, setEditroleid] = React.useState(\"\");\n  const [editpermissons, setEditpermissions] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    let response = await sendNetworkRequest(\"/manageroles\", {}, taxcontent);\n    getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes);\n      })\n      .catch(console.error);\n\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\n    setMastervalue(response.roles);\n    setFiltervalue(response.roles);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n  async function showpermissions(rowcontent) {\n    let response = await sendNetworkRequest(\n      \"/getrolepermissions\",\n      {},\n      { role_id: rowcontent.id }\n    );\n    setEditpermissions(response.permissions);\n    setEditroleid(rowcontent.id);\n    setIsshowpermissions(true);\n    // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent) {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id: editroleid,\n    };\n    console.log(JSON.stringify(bodydata));\n    setIsshowpermissions(false);\n    let response = await sendNetworkRequest(\"/managepermissions\", {}, bodydata);\n    getmaster();\n  }\n  function cancelpermissions(rowcontent) {\n    setIsshowpermissions(false);\n    // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs\n          url=\"userconfiguration\"\n          name=\"User Configuration\"\n        ></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? (\n          <Addpermissions\n            role_id={editroleid}\n            isopen={isshowpermissions}\n            permissions={editpermissons}\n            pages={masterpages}\n            onClose={cancelpermissions}\n            onSave={updatepermissions}\n          />\n        ) : null}\n        <Mastercontent\n          title={\"Master Category\"}\n          button_title=\"Add New\"\n          onPermissionadd={showpermissions}\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Masterroles;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Masterscreens = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    let response = await sendNetworkRequest(\"/managepages\", {}, taxcontent);\n    getmaster();\n  }\n  async function getmaster() {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES }),\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes);\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes);\n      })\n      .catch(console.error);\n  }\n  useEffect(() => {\n    getmaster();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs\n          url=\"userconfiguration\"\n          name=\"User Configuration\"\n        ></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          title={\"Master Screens\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Masterscreens;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport Vendor from \"../../components/Vendor/Vendor\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport data from \"./data.json\";\nimport Page from \"../../components/Page\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport { Breadcrumbs } from \"../../components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport const Manageadminusers = withRouter((props) => {\n  const [isadd, setIsadd] = React.useState(false);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([]);\n  const [masterroles, setMasterroles] = React.useState([]);\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([]);\n\n  async function createtax(taxcontent) {\n    let roles = [];\n    taxcontent.roles.forEach((element) => {\n      roles.push(element.name);\n    });\n    let bodydata = {\n      username: taxcontent.username,\n      password: \"123456789\",\n      email: taxcontent.email,\n      roles: roles,\n    };\n\n    let response = await sendNetworkRequest(\"/api/auth/signup\", {}, bodydata);\n    getmaster();\n  }\n  async function getmasterroles() {\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\n\n    setMasterroles(response.roles);\n\n    getmaster();\n  }\n  async function getmaster() {\n    let response = await sendNetworkRequest(\"/getadminusers\", {}, {});\n    let adminusers = response.users;\n    let users = [];\n    adminusers.forEach((element) => {\n      let userobj = {};\n      userobj[\"id\"] = element.id;\n      userobj[\"username\"] = element.username;\n      userobj[\"password\"] = element.password;\n      userobj[\"email\"] = element.email;\n      userobj[\"mobile\"] = element.mobile;\n      userobj[\"status\"] = element.status === \"Active\" ? true : false;\n      let roles = [];\n      let rolesnames = [];\n\n      let userroles = element.user_roles;\n      userroles.forEach((userroleobj) => {\n        let roleobj = {};\n        roleobj[\"id\"] = userroleobj.master_role.id;\n        roleobj[\"name\"] = userroleobj.master_role.name;\n        roles.push(roleobj);\n        rolesnames.push(userroleobj.master_role.name);\n      });\n      userobj[\"roles\"] = roles;\n      userobj[\"rolenames\"] = rolesnames.join(\" , \");\n      users.push(userobj);\n    });\n\n    setFiltervalue(users);\n    setMastervalue(users);\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles();\n  }, []);\n\n  function applysearch(searchcontent) {\n    setSearchtext(searchcontent);\n  }\n  function addcategory() {\n    setIsadd(true);\n  }\n  function cancelcreation() {\n    setIsadd(false);\n  }\n\n  async function search(taxcontent) {\n    const filteredHomes = mastervalue.filter((x) =>\n      x.name.toLowerCase()\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\n        : null\n    );\n    setFiltervalue(filteredHomes);\n  }\n  return (\n    <>\n      <Page className={classes.root} title=\"Orders Management List\">\n        <Breadcrumbs\n          url=\"userconfiguration\"\n          name=\"User Configuration\"\n        ></Breadcrumbs>\n\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n        {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent\n          title={\"Admin Users\"}\n          button_title=\"Add New\"\n          onCreate={createtax}\n          onSearch={search}\n          columns={data.columns}\n          masters={masterroles}\n          values={filtervalue}\n        />\n      </Page>\n    </>\n  );\n});\n\nexport default Manageadminusers;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState({\n    cost_price : '',\n    selling_price : ''\n  })\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\n  const [defaultmetal, setDefaultmetal] = React.useState({})\n  const [pricetype, setPricetype] = React.useState({})\n\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n  const [materials, setMaterials] = React.useState([])\n  \n  const [masterpurities, setMasterpurities] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      costprices : purityprices,\n      sellingprices : puritysellingprices,\n      vendors : selectedvendors,\n      metal : defaultmetal,\n      pricetype : pricetype\n    }\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n     alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n          selectedvendors.push(vendorobj.shortCode)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   let vendorid = []\n   value.forEach(element => {\n    if(element.shortCode == 'All')\n    {\n      mastervendors.forEach(element => {\n        vendorid.push(element.shortCode)\n      })\n      setSelectedvendors(vendorid)\n    }else{\n      vendorid.push(element.shortCode)\n      setSelectedvendors(vendorid)\n\n    }\n   })\n  }\n  const handlepricetypeChange = (event, value) => {\n    setPricetype(value)\n  }\n  const handlemetalChange = type => (event, value) => {\n    // setEditcontent({ ...editcontent, [type]: value  })\n    //alert(JSON.stringify(value))\n    if(value)\n    { \n    if(value.shortCode === 'G')\n    {\n      setIspricecalculated(false)\n    }else\n    {\n      setIspricecalculated(true)\n    }\n    if(data[value.name])\n    {\n      setDefaultpurity(data[value.name])\n\n    }\n  }else\n  {\n    setIspricecalculated(false)\n\n  }\n    setDefaultmetal(value)\n   //setDefaultpurity(value)\n   }\n  const handleInputChange = type => event => {\n   // setGoldprice(event.target.value);\n   //alert(JSON.stringify(goldprice))\n   if(defaultmetal.name === 'Gold')\n    {\n    }else\n    {\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\n      if(type === 'cost_price')\n      {\n        setPurityprices(sellingpricejson)\n\n      }\n      if(type === 'selling_price')\n      {\n        setPuritysellingprices(sellingpricejson)\n\n      }\n    }\n    setGoldprice({...goldprice,[type]: event.target.value })\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    setPurityprices({...purityprices,[type]:event.target.value});\n\n    \n  }\n  const handlesellingPriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    \n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    if(defaultmetal.name === 'Gold')\n    {\n       let default_purity = parseInt()\n     let pricejson = {}\n     let sellingpricejson = {}\n    data.goldpurity.forEach(element => {\n      var sellingprice = goldprice.selling_price\n      if(pricetype.value == 2) \n      {\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\n       \n      }\n      let priceratio = element.shortCode / defaultpurity.shortCode;\n\n      let goldprice_val = priceratio*goldprice.cost_price\n      let goldsellingprice_val = priceratio*sellingprice\n      sellingpricejson[element.shortCode] = goldsellingprice_val\n\n      pricejson[element.shortCode] = goldprice_val\n    })\n    setPuritysellingprices(sellingpricejson)\n    setPurityprices(pricejson)\n    }else{\n      let pricejson = {}\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\n\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\n      setPuritysellingprices(sellingpricejson)\n      setPurityprices(pricejson)\n    }\n\n    \n     setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={materials}\n                  margin=\"dense\"\n                  fullWidth\n                  disableClearable={true}\n                 value={defaultmetal}\n                   onChange={handlemetalChange(\"material\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\n                /> \n\n                \n\n\n\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.cost_price}\n                             onChange={handleInputChange(\"cost_price\")}\n                            label=\"Cost Price\"\n                          />\n                <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.pricetype}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                 value={pricetype}\n                  onChange={handlepricetypeChange}\n                  getOptionLabel={(option) => option.label}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\n                /> \n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.selling_price}\n                             onChange={handleInputChange(\"selling_price\")}\n                            label=\"Selling Price\"\n                          />\n              \n             {defaultpurity.name ?  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masterpurities}\n                  margin=\"dense\"\n                  fullWidth\n                  disabled\n                  style={{marginLeft: 16, width:200}}\n                  value={defaultpurity}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\n                  variant=\"outlined\" />}\n                />  : null }\n                {defaultmetal.name == 'Gold' ? \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button> : null}\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\n          {data.goldpurity.map((purityname, index) =>(\n           \n           <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.shortCode]}\n                      onChange={handlePriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n                    <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     style={{marginLeft: 16}}\n\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={puritysellingprices[purityname.shortCode]}\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))} </>:null }\n          <Grid item xs={12} sm={6} lg={3} >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={mastervendors}\n                    multiple\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\n                /> \n        </Grid>\n          </> : null}\n          \n         </Grid>\n         <Grid item  >\n\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n            </Grid>\n      </CardContent>\n      </Card>\n\n{/* \n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n    */}\n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const [filtercontent,setFiltercontent] = React.useState({\n    \"seacrchtext\" : props.fitltercontent.searchtext,\n    \"size\": props.fitltercontent.size,\n    \"offset\":props.fitltercontent.offset\n  })\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n   // alert(editcontent.searchcontent)\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\n\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    props.onPagechange((newPage*rowsPerPage))\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n   \n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    props.onPagesizechange(parseInt(event.target.value, 10))\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {row[columnname.key]} \n                                       </Moment>:null } \n                                       {columnname.type == 8 ?  <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/customerdetails/'+row['id']}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>:null }                 \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.totalcount]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from './Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const [totalcount, setTotalcount] = React.useState(0)\n\n  const [bodycontent, setBodycontent] = React.useState({\n    \"seacrchtext\" : '',\n    \"size\": 50,\n    \"offset\":0\n  })\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster(50,0)\n  }\n  function changeresult(filtercontent)\n  {\n    setBodycontent(filtercontent)\n  }\n  async function getmaster(size,offset,searchtext)\n  {\n   \n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\n    let adminusers = response.users.rows;\n    let users = []\n    setTotalcount(response.users.count)\n    adminusers.forEach(element => {\n      //   let userobj = {}\n      //   userobj['id'] = element.id;\n      //  // userobj['username'] = element.username;\n      //  // userobj['password'] = element.password;\n      //   userobj['email'] = element.email;\n      //   userobj['mobile'] = element.mobile;\n      //   userobj['status'] = element.status === 'Active' ? true : false;\n      //   let roles = []\n      //   let rolesnames = []\n\n      //   let userroles = element.user_roles;\n      //   userroles.forEach(userroleobj => {\n\n      //     let roleobj = {}\n      //     roleobj['id'] = userroleobj.master_role.id\n      //     roleobj['name'] = userroleobj.master_role.name\n      //     roles.push(roleobj)\n      //     rolesnames.push(userroleobj.master_role.name)\n      //   })\n      //   userobj['roles'] = roles\n      //   userobj['rolenames'] = rolesnames.join(' , ')\n        if(element.orders)\n        {\n          element['orders'] = element.orders.length\n        }else{\n          element['orders'] = 0\n        }\n        users.push(element)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    //setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\n  }\n  async function changepageoffset(taxcontent)\n  {\n    setBodycontent({...bodycontent,offset: taxcontent})\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\n  }\n  async function changepagesize(taxcontent)\n  {\n    setBodycontent({...bodycontent,size: taxcontent})\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Page from '../../components/Page/Page'\nimport { Header } from './components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\nexport const CustomerManagementDetails = withRouter(props => {\n\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    //return <Redirect to={`/customerdetails`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n   // return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <Page\n    //   className={classes.root}\n    //   title=\"Customer Management Details\"\n    // >\n    //   <Header />\n    //    <Tabs\n    //     className={classes.tabs}\n    //     onChange={handleTabsChange}\n    //     scrollButtons=\"auto\"\n    //     value={tab}\n    //     variant=\"scrollable\"\n    //   >\n    //     {tabs.map(tab => (\n    //       <Tab\n    //         key={tab.value}\n    //         label={tab.label}\n    //         value={tab.value}\n    //       />\n    //     ))}\n    //   </Tabs>\n    //   <Divider className={classes.divider} />\n    //  {/* <div className={classes.content}>\n    //     {tab === 'summary' && <Summary />}\n    //     {tab === 'invoices' && <Invoices />}\n    //     {tab === 'logs' && <Logs />}\n    //   </div> */}\n    // </Page>\n  );\n});\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n      //     setInvoices(response.data.invoices);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst General = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer ? customer.email : \"\"}\n                {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.isemailverified\n                      ? 'Email verified'\n                      : 'Email not verified'} \n                  </Label>\n                </div>}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Phone</TableCell>\n               <TableCell>{customer.mobile}\n               {customer.isemailverified && <div>\n                  <Label\n                    color={\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.ismobileverified\n                      ? 'Mobile verified'\n                      : 'Mobile not verified'} \n                  </Label>\n                </div>}\n                </TableCell>\n            </TableRow>\n            \n          </TableBody>\n        </Table>\n      </CardContent>\n      {/* <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions> */}\n      {/* <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      /> */}\n    </Card>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default General;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from \"react-router-dom\";\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport {General, Results} from './components'\nimport Mastercontent from '../../components/Mastercontent'\nimport data from './data.json'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    height: '80vh'\n  },\n  tabs: {\n    minWidth: '250px',\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    marginRight : theme.spacing(2),\n    borderRight: `2px solid ${theme.palette.divider}`,\n  },\n}));\nconst master_options = ['Address Book','Wish List','Orders']\n  const master_options_url = ['/address','/userwishlist','/orderlist']\n\nexport const Customerdetails = withRouter(props => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const [value, setValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({});\n  const [customer, setCustomer] = React.useState({});\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    // history.push(`orderlist/${id}`)\n    window.location.href = `orderlist/${id}`\n  }\n  let user_id = props.location.pathname.split('/')[2];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\nasync function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n\n    setCustomer(response.userprofile)\n  }\n  React.useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid> */}\n    <Grid container item xs={12} sm={12} lg={12} >\n    <Grid  item xs={12} sm={6} lg={6} >\n    <General customer ={customer} /> \n\n      </Grid>\n\n    </Grid>\n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={2} lg={2} >\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\n     <Card fullwidth\n    //  onClick={(e) => ProductEdit(customer.id)}\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n    // <div className={classes.root}>\n      \n    //   <Tabs\n    //     orientation=\"vertical\"\n    //     variant=\"standard\"\n    //     value={value}\n    //     onChange={handleChange}\n    //     aria-label=\"Vertical tabs example\"\n    //     className={classes.tabs}\n    //   >\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\n \n    //   </Tabs>\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\n    //   <General customer ={customer} /> </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\n\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\n      \n    //   </TabPanel>\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\n    //   </TabPanel>\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\n    //   </TabPanel>\n      \n     \n    // </div>\n  );\n});\n\nexport default Customerdetails;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Userwishlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Userwishlist;","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport data from \"./../data.json\"\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport  Results from './components/Results'\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Useraddresses = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masters, setMasters] = React.useState({});\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n  let user_id = props.location.pathname.split('/')[2];\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n  }\n  \n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\n    </Page>\n    </>\n  )\n});\n\nexport default Useraddresses;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.hsnNumber}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Tax Settings\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addtaxattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n    let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\n    //  getmaster()\n     history.push('/taxsettings')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TAXMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\n        {\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        }\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\n           \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n\n            var selectedcategory = []\n            \n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories)\n              {\n                if(categories.indexOf(catobj.alias) > -1)\n                {\n                  selectedcategory.push(catobj)\n                }\n              }\n              \n\n            })\n\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories)\n              {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            }\n            })\n            \n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n          setMasters({\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n            diamondtypes : diamondtypes,\n            collections : fatchvalue.data.allMasterCollections.nodes,\n            occations : fatchvalue.data.allMasterOccasions.nodes,\n            styles : fatchvalue.data.allMasterStyles.nodes,\n            themes : fatchvalue.data.allMasterThemes.nodes,\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\n          })\n          setIsloaded(true)\n        })\n\n\n        \n\n      })\n      .catch(console.error)\n     \n\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n   // getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addtaxattributes;","import gql from \"graphql-tag\";\n\nlet CREATE_HOLIDAY = gql`\n  mutation ($item: HolidayManagerInput!) {\n    createHolidayManager(input: { holidayManager: $item }) {\n      holidayManager {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_HOLIDAY = gql`\n  mutation ($id: Int!, $item: HolidayManagerPatch!) {\n    updateHolidayManagerById(input: { id: $id, holidayManagerPatch: $item }) {\n      holidayManager {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_HOLIDAY = gql`\n  mutation ($id: Int!) {\n    deleteHolidayManagerById(input: { id: $id }) {\n      clientMutationId\n    }\n  }\n`;\n\nlet CREATE_WAREHOUSE = gql`\n  mutation ($item: WarehouseInput!) {\n    createWarehouse(input: { warehouse: $item }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_WAREHOUSE = gql`\n  mutation ($id: Int!, $item: WarehousePatch!) {\n    updateWarehouseById(input: { id: $id, warehousePatch: $item }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_WAREHOUSE = gql`\n  mutation ($id: Int!) {\n    deleteWarehouseById(input: { id: $id }) {\n      warehouse {\n        id\n      }\n    }\n  }\n`;\n\nlet CREATE_INVENTORY = gql`\n  mutation ($item: InventoryInput!) {\n    createInventory(input: { inventory: $item }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nlet UPDATE_INVENTORY = gql`\n  mutation ($id: UUID!, $item: InventoryPatch!) {\n    updateInventoryById(input: { id: $id, inventoryPatch: $item }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nlet DELETE_INVENTORY = gql`\n  mutation ($id: UUID!) {\n    deleteInventoryById(input: { id: $id }) {\n      inventory {\n        id\n      }\n    }\n  }\n`;\n\nexport {\n  CREATE_HOLIDAY,\n  UPDATE_HOLIDAY,\n  DELETE_HOLIDAY,\n  CREATE_WAREHOUSE,\n  UPDATE_WAREHOUSE,\n  DELETE_WAREHOUSE,\n  CREATE_INVENTORY,\n  UPDATE_INVENTORY,\n  DELETE_INVENTORY,\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst HolidayModal = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Holiday-Modal\"}\n    >\n      <DialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{`${props.type} Holiday`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              label={\"Holiday\"}\n              name=\"holiday\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.holiday}\n              onChange={props.editItem}\n            />\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                className={classes.inputField}\n                label={\"Date\"}\n                name=\"date\"\n                fullWidth\n                inputVariant=\"outlined\"\n                value={props.item.date}\n                onChange={(_, value) => props.editItem(value, \"date\")}\n                format={\"yyyy-MM-dd\"}\n              />\n            </MuiPickersUtilsProvider>\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default HolidayModal;\n","import React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  LinearProgress,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_HOLIDAY,\n  DELETE_HOLIDAY,\n  UPDATE_HOLIDAY,\n} from \"../../graphql/mutation\";\nimport { HOLIDAYLIST } from \"../../graphql/query\";\nimport HolidayModal from \"./HolidayModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../config\";\nimport { NetworkStatus } from \"apollo-client\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\nexport const HolidayManager = (props) => {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const { loading, data, error, refetch, networkStatus } = useQuery(\n    HOLIDAYLIST,\n    {\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\n    }\n  );\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({ holiday: \"\", date: null });\n\n  const editItem = (event, type) => {\n    var name, value;\n    if (type == \"date\") {\n      name = type;\n      value = event;\n    } else {\n      name = event.target.name;\n      value = event.target.value;\n    }\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n    setItem({ holiday: \"\", date: null });\n  };\n\n  const handleSave = () => {\n    if (type == \"Edit\") {\n      var id = item.id;\n      delete item.id;\n      delete item.createdAt;\n      delete item.updatedAt;\n      delete item.__typename;\n      item[\"updatedAt\"] = new Date();\n      client\n        .mutate({\n          mutation: UPDATE_HOLIDAY,\n          variables: {\n            id,\n            item,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_HOLIDAY,\n          variables: {\n            item,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type == \"Delete\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: DELETE_HOLIDAY,\n          variables: {\n            id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n\n  const handleUpload = (file) => {\n    var bodyFormData = new FormData();\n    bodyFormData.set(\"file\", file);\n    // console.log(file);\n    axios\n      .post(API_URL + \"/addholidays\", bodyFormData)\n      .then((res) => {\n        if (res) {\n          snack.setSnack({\n            open: true,\n            msg: \"Successfully added holidays!\",\n          });\n          refetch();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured!\",\n        });\n      });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={12}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Holiday Manager</Typography>\n\n        <input\n          accept=\".csv\"\n          className={classes.input}\n          id=\"icon-button-file\"\n          type=\"file\"\n          onChange={(event) => {\n            const files = event.target.files;\n            if (files) {\n              handleUpload(files[0]);\n            }\n          }}\n        />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n          >\n            <Tooltip title=\"Upload Holidays\">\n              <CloudUploadIcon />\n            </Tooltip>\n          </IconButton>\n        </label>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            var a = document.createElement(\"a\");\n            a.href = \"/sample/holidays.csv\";\n            a.setAttribute(\"download\", \"holidays.csv\");\n            a.click();\n          }}\n        >\n          <Tooltip title=\"Download sample file\">\n            <GetAppIcon />\n          </Tooltip>\n        </IconButton>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n          }}\n        >\n          <Tooltip title=\"Add Holiday\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Holiday</TableCell>\n                <TableCell align={\"center\"}>Date</TableCell>\n                <TableCell align={\"center\"}>Created On</TableCell>\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(loading || NetworkStatus.refetch === networkStatus) && (\n                <TableRow>\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={5} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allHolidayManagers?.nodes.length == 0 && (\n                <TableRow>\n                  <TableCell colSpan={5} align={\"center\"}>\n                    <Typography>No Holidays found!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allHolidayManagers?.nodes.length > 0 &&\n                data?.allHolidayManagers?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.holiday}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.date, \"YYYY-MM-DD\").format(\"MMM DD,YYYY\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  colSpan={5}\n                  align={\"right\"}\n                  rowsPerPageOptions={[10, 25, 100]}\n                  count={data?.allHolidayManagers?.totalCount}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <HolidayModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst WarehouseModal = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Warehouse-Modal\"}\n    >\n      <DialogTitle\n        id=\"Warehouse-Modal\"\n        disableTypography\n        className={classes.root}\n      >\n        <Typography variant=\"h6\">{`${props.type} Warehouse`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              label={\"Name\"}\n              name=\"name\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.name}\n              onChange={props.editItem}\n            />\n            <TextField\n              className={classes.inputField}\n              label={\"Shipping In Days\"}\n              name=\"shippingInDays\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.shippingInDays}\n              onChange={props.editItem}\n            />\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default WarehouseModal;\n","import React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n  Switch,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_WAREHOUSE,\n  DELETE_WAREHOUSE,\n  UPDATE_WAREHOUSE,\n} from \"../../graphql/mutation\";\nimport { WAREHOUSELIST } from \"../../graphql/query\";\nimport WarehouseModal from \"./WarehouseModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport moment from \"moment\";\n\nexport const Warehouse = (props) => {\n  const { loading, data, error, refetch } = useQuery(WAREHOUSELIST);\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({ name: \"\", shippingInDays: \"\" });\n\n  const editItem = (event) => {\n    var { name, value } = event.target;\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n    setItem({ name: \"\", shippingInDays: \"\" });\n  };\n\n  const handleSave = () => {\n    item[\"shippingInDays\"] = parseInt(item.shippingInDays);\n    if (type === \"Edit\") {\n      var id = item.id;\n      delete item.id;\n      delete item.createdAt;\n      delete item.updatedAt;\n      delete item.__typename;\n      item[\"updatedAt\"] = new Date();\n      client\n        .mutate({\n          mutation: UPDATE_WAREHOUSE,\n          variables: {\n            id,\n            item,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_WAREHOUSE,\n          variables: {\n            item,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          setOpen(false);\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Delete\") {\n      client\n        .mutate({\n          mutation: DELETE_WAREHOUSE,\n          variables: {\n            id: item.id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n\n  const handleSwitch = (id, isActive) => {\n    client\n      .mutate({\n        mutation: UPDATE_WAREHOUSE,\n        variables: {\n          id,\n          item: { isActive: !isActive, updatedAt: new Date() },\n        },\n      })\n      .then((res) => {\n        if (res) {\n          onClose();\n          snack.setSnack({\n            open: true,\n            msg: \"Successfully Updated!\",\n          });\n          refetch();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        onClose();\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured!\",\n        });\n      });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={12}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Warehouse</Typography>\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n          }}\n        >\n          <Tooltip title=\"Add Warehouse\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Name</TableCell>\n                <TableCell align={\"center\"}>Shipping In Days</TableCell>\n                <TableCell align={\"center\"}>Created On</TableCell>\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\n                <TableCell align={\"center\"}>Status</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allWarehouses?.nodes.length === 0 && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>No Warehouses found!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allWarehouses?.nodes.length > 0 &&\n                data?.allWarehouses?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.name}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.shippingInDays}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <Switch\n                        checked={item.isActive}\n                        onChange={() => handleSwitch(item.id, item.isActive)}\n                        name=\"active\"\n                        color=\"primary\"\n                      />\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <WarehouseModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  makeStyles,\n  IconButton,\n  Typography,\n  DialogContent,\n  DialogActions,\n  Button,\n  TextField,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport { VALIDATEGENERATEDSKU, WAREHOUSELIST } from \"../../graphql/query\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  inputField: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst InventoryModal = (props) => {\n  const classes = useStyles();\n  const { loading, data } = useQuery(WAREHOUSELIST);\n\n  const client = useApolloClient();\n  const [error, setError] = React.useState(false);\n\n  const validateGeneratedSku = (generatedSku) => {\n    client\n      .mutate({\n        mutation: VALIDATEGENERATEDSKU,\n        variables: { generatedSku },\n      })\n      .then((res) => {\n        if (res?.data?.allTransSkuLists?.nodes?.length === 0) {\n          setError(\"Tag No doesn't exists!\");\n        } else {\n          setError(false);\n        }\n      });\n  };\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby={\"Holiday-Modal\"}\n    >\n      <DialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{`${props.type} Inventory`}</Typography>\n        {props.onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={props.onClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent className={classes.root}>\n        {props.type !== \"Delete\" && (\n          <>\n            <TextField\n              className={classes.inputField}\n              required\n              label={\"Tag No\"}\n              name=\"generatedSku\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.generatedSku}\n              onChange={props.editItem}\n              error={Boolean(error)}\n              helperText={error}\n              onBlur={() => validateGeneratedSku(props.item.generatedSku)}\n            />\n            <TextField\n              className={classes.inputField}\n              required\n              type={\"Number\"}\n              label={\"Quantity\"}\n              name=\"numberOfItems\"\n              fullWidth\n              variant=\"outlined\"\n              value={props.item.numberOfItems}\n              onChange={props.editItem}\n            />\n            <Autocomplete\n              loading={loading}\n              options={data?.allWarehouses?.nodes}\n              getOptionSelected={(option, value) => option.name === value.name}\n              getOptionLabel={(option) => option.name}\n              value={props.item.warehouse}\n              onChange={props.editItem}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Warehouse\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    ...params.InputProps,\n                    endAdornment: (\n                      <React.Fragment>\n                        {loading ? (\n                          <CircularProgress color=\"inherit\" size={20} />\n                        ) : null}\n                        {params.InputProps.endAdornment}\n                      </React.Fragment>\n                    ),\n                  }}\n                />\n              )}\n            />\n          </>\n        )}\n        {props.type === \"Delete\" && (\n          <Typography>\n            Are you sure? This will permanently delete it!\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions className={classes.root}>\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\n        </Button>\n        <Button onClick={props.onClose}>Cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default InventoryModal;\n","import React from \"react\";\nimport {\n  Badge,\n  Grid,\n  IconButton,\n  InputAdornment,\n  LinearProgress,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport {\n  CREATE_INVENTORY,\n  DELETE_INVENTORY,\n  UPDATE_INVENTORY,\n} from \"../../graphql/mutation\";\nimport { INVENTORYLIST, STOCKSTATUS } from \"../../graphql/query\";\nimport InventoryModal from \"./InventoryModal\";\nimport { AlertContext } from \"../../context\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { v4 as uuid } from \"uuid\";\nimport { NetworkStatus } from \"apollo-client\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport axios from \"axios\";\nimport { API_URL } from \"../../config\";\nimport moment from \"moment\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  iconButton: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n    flexDirection: \"column\",\n  },\n  icon: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"inherit\",\n    },\n  },\n  searchInput: {\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: 8,\n    },\n  },\n}));\n\nconst StockStatus = (props) => {\n  const classes = useStyles();\n  const { data } = useQuery(STOCKSTATUS);\n  return (\n    <>\n      {data &&\n        data.allWarehouses.nodes.length > 0 &&\n        data.allWarehouses.nodes.map((item, index) => (\n          <Badge\n            badgeContent={\n              item?.inventoriesByWarehouseId?.aggregates?.sum?.numberOfItems\n            }\n            max={99999999}\n            color={\"error\"}\n            key={index}\n            component=\"div\"\n            className={classes.iconButton}\n            overlap=\"circle\"\n          >\n            <IconButton\n              disableRipple\n              className={classes.icon}\n              onClick={() => {\n                props.setWarehouse(item?.name);\n              }}\n            >\n              <StoreIcon\n                style={{ fontSize: 35 }}\n                color={item?.name === props.warehouse ? \"secondary\" : \"default\"}\n              />\n            </IconButton>\n            <Typography variant=\"subtitle2\">{item?.name}</Typography>\n          </Badge>\n        ))}\n    </>\n  );\n};\n\nexport const Inventory = (props) => {\n  const classes = useStyles();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [search, setSearch] = React.useState(null);\n  const [warehouse, setWarehouse] = React.useState(null);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  const { loading, data, error, refetch, networkStatus } = useQuery(\n    INVENTORYLIST,\n    {\n      variables: {\n        first: rowsPerPage,\n        offset: page * rowsPerPage,\n        filter: {\n          [\"generatedSku\"]: search ? { includesInsensitive: search } : null,\n          warehouseByWarehouseId: {\n            name: {\n              includesInsensitive: warehouse,\n            },\n          },\n        },\n      },\n    }\n  );\n  const [open, setOpen] = React.useState(false);\n  const [type, setType] = React.useState();\n  const [item, setItem] = React.useState({\n    generatedSku: \"\",\n    numberOfItems: \"\",\n    warehouse: { id: \"\", name: \"\" },\n  });\n\n  const editItem = (event, newValue) => {\n    var name, value;\n    if (newValue) {\n      console.log(newValue);\n      name = \"warehouse\";\n      value = newValue;\n    } else {\n      name = event.target.name;\n      value = event.target.value;\n    }\n    setItem({ ...item, [name]: value });\n  };\n\n  const client = useApolloClient();\n\n  const snack = React.useContext(AlertContext);\n\n  const onClose = () => {\n    setOpen(false);\n    setType(null);\n  };\n\n  const handleSave = () => {\n    if (type === \"Edit\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: UPDATE_INVENTORY,\n          variables: {\n            id,\n            item: {\n              generatedSku: item.generatedSku,\n              numberOfItems: parseInt(item.numberOfItems),\n              warehouseId: item.warehouse.id,\n              updatedAt: new Date(),\n            },\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Updated!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Add\") {\n      client\n        .mutate({\n          mutation: CREATE_INVENTORY,\n          variables: {\n            item: {\n              id: uuid(),\n              generatedSku: item.generatedSku,\n              numberOfItems: parseInt(item.numberOfItems),\n              warehouseId: item.warehouse.id,\n            },\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Added!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n    if (type === \"Delete\") {\n      var id = item.id;\n      client\n        .mutate({\n          mutation: DELETE_INVENTORY,\n          variables: {\n            id,\n          },\n        })\n        .then((res) => {\n          if (res) {\n            onClose();\n            snack.setSnack({\n              open: true,\n              msg: \"Successfully Deleted!\",\n            });\n            refetch();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          onClose();\n          snack.setSnack({\n            open: true,\n            severity: \"error\",\n            msg: \"Some error occured!\",\n          });\n        });\n    }\n  };\n\n  const handleUpload = (file) => {\n    var bodyFormData = new FormData();\n    bodyFormData.set(\"file\", file);\n    console.log(file);\n    axios\n      .post(API_URL + \"/addinventories\", bodyFormData)\n      .then((res) => {\n        if (res) {\n          snack.setSnack({\n            open: true,\n            msg: res.data.message || \"Successfully uploaded!\",\n          });\n          refetch();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        snack.setSnack({\n          open: true,\n          severity: \"error\",\n          msg: \"Some error occured!\",\n        });\n      });\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        container\n        item\n        xs={6}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"h4\">Inventory</Typography>\n\n        <input\n          accept=\".csv\"\n          className={classes.input}\n          id=\"icon-button-file\"\n          type=\"file\"\n          onChange={(event) => {\n            const files = event.target.files;\n            if (files) {\n              handleUpload(files[0]);\n            }\n          }}\n        />\n        <label htmlFor=\"icon-button-file\">\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n          >\n            <Tooltip title=\"Upload Inventory\">\n              <CloudUploadIcon />\n            </Tooltip>\n          </IconButton>\n        </label>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            var a = document.createElement(\"a\");\n            a.href = \"/sample/inventory.csv\";\n            a.setAttribute(\"download\", \"inventory.csv\");\n            a.click();\n          }}\n        >\n          <Tooltip title=\"Download sample file\">\n            <GetAppIcon />\n          </Tooltip>\n        </IconButton>\n\n        <IconButton\n          style={{ color: \"#000\" }}\n          onClick={() => {\n            setOpen(true);\n            setType(\"Add\");\n            setItem({\n              generatedSku: \"\",\n              numberOfItems: \"\",\n              warehouse: { id: \"\", name: \"\" },\n            });\n          }}\n        >\n          <Tooltip title=\"Add Inventory\">\n            <AddCircleIcon />\n          </Tooltip>\n        </IconButton>\n        <TextField\n          className={classes.searchInput}\n          name=\"tagno\"\n          placeholder=\"Search Tag No.\"\n          size=\"medium\"\n          variant=\"outlined\"\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        container\n        xs={6}\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"center\"\n      >\n        <StockStatus warehouse={warehouse} setWarehouse={setWarehouse} />\n      </Grid>\n      <Grid container item xs={12} sm={12} spacing={2}>\n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell align={\"center\"}>Tag No</TableCell>\n                <TableCell align={\"center\"}>Quantity</TableCell>\n                <TableCell align={\"center\"}>Warehouse</TableCell>\n                <TableCell align={\"center\"}>Created On</TableCell>\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\n                <TableCell align={\"center\"}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(loading || networkStatus === NetworkStatus.refetch) && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\n                    <LinearProgress />\n                  </TableCell>\n                </TableRow>\n              )}\n              {error && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>\n                      Some Error occured please try again!\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data && data?.allInventories?.nodes.length == 0 && (\n                <TableRow>\n                  <TableCell colSpan={6} align={\"center\"}>\n                    <Typography>No items in inventory!</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n              {data &&\n                data?.allInventories?.nodes.length > 0 &&\n                data?.allInventories?.nodes.map((item) => (\n                  <TableRow key={item.id}>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.generatedSku}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.numberOfItems}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {item.warehouse.name}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                    </TableCell>\n                    <TableCell align={\"center\"} padding=\"none\">\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Edit\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Edit\">\n                          <EditIcon />\n                        </Tooltip>\n                      </IconButton>\n                      <IconButton\n                        color=\"inherit\"\n                        onClick={() => {\n                          setType(\"Delete\");\n                          setOpen(true);\n                          setItem(item);\n                        }}\n                      >\n                        <Tooltip title=\"Delete\">\n                          <DeleteForeverIcon />\n                        </Tooltip>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  colSpan={6}\n                  align={\"right\"}\n                  rowsPerPageOptions={[10, 25, 100]}\n                  count={data?.allInventories?.totalCount}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <InventoryModal\n        open={open}\n        type={type}\n        item={item}\n        editItem={editItem}\n        handleSave={handleSave}\n        onClose={onClose}\n      />\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { Something } from \"./dummySS\";\nimport { CREATEALLBANNERS, ALLBANNERS } from \"../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  imagecontainer: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  link: {\n    display: \"flex\",\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  link_style: {\n    color: \"#000\",\n  },\n}));\n\nfunction BannerPage(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [allbanner, setallbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n  useEffect(() => {\n    async function allbannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLBANNERS,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setallbanner(data);\n        })\n        .catch(console.error);\n    }\n    allbannerfetch();\n    console.log(\"fetch\", allbanner);\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: Number(createlandingbanner.position),\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATEALLBANNERS,\n        variables: create_banner_data,\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC All Banners\n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog open={open} onClose={handleClose}>\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick={handleClose}> Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {allbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.url} target=\"_blank\" className={classes.link_style}>\n                      {val.url}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button\n                      // onClick={() => handleDelete(val.id)}\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\n                    >\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nexport default BannerPage;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport {Something} from \"./dummySS\";\nimport {CREATELISTINGBANNERS,ALLLISTINGBANNERS,DELETEALLBANNER} from \"../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n    },\n    imagecontainer: {\n      display: \"flex\",\n      \"& > *\": {\n        margin: theme.spacing(1),\n      },\n    },\n    table: {\n      minWidth: 500,\n    },\n    tableWrapper: {\n      overflowX: \"auto\",\n    },\n    link: {\n      display: \"flex\",\n    },\n    icon: {\n      marginRight: theme.spacing(0.5),\n      width: 20,\n      height: 20,\n    },\n    link_style: {\n      color: \"#000\",\n    },\n  }));\n\nfunction BannerListingPage(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [allbanner, setallbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    link: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n  useEffect(() => {\n    async function allbannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLLISTINGBANNERS,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setallbanner(data);\n        })\n        .catch(console.error);\n    }\n    allbannerfetch();\n    console.log(\"fetch\", allbanner)\n\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      position: Number(createlandingbanner.position),\n      url: createlandingbanner.link,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n   \n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATELISTINGBANNERS,\n        variables: create_banner_data,\n      }),\n    };\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n      })\n      .catch(console.error);\n  }\n\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETEALLBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC Listing Page \n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog  open={open} onClose={handleClose}\n        >\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"position\"\n              label=\"Position\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.position}\n              name=\"position\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"link\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.link}\n              name=\"link\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick= {handleClose}> Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Position</TableCell>\n                <TableCell>Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {allbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>{val.position}</TableCell>\n                  <TableCell>\n                    <Link href={val.url} target=\"_blank\" className={classes.link_style}>\n                      {val.url}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button \n                    onClick={() => handleDelete(val.id)}\n                     style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n        </div>\n    );\n}\n\nexport default BannerListingPage;","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableHead,\n  TableCell,\n  TableBody,\n  TableRow,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport {Something} from \"./dummySS\";\nimport {CREATESPECIFICLISTINGPAGE,ALLSPECIFICLISTINGPAGE,DELETEALLBANNER} from \"../../graphql/query\";\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing(3),\n    },\n    imagecontainer: {\n      display: \"flex\",\n      \"& > *\": {\n        margin: theme.spacing(1),\n      },\n    },\n    table: {\n      minWidth: 500,\n    },\n    tableWrapper: {\n      overflowX: \"auto\",\n    },\n    link: {\n      display: \"flex\",\n    },\n    icon: {\n      marginRight: theme.spacing(0.5),\n      width: 20,\n      height: 20,\n    },\n    link_style: {\n      color: \"#000\",\n    },\n  }));\n\nfunction BannerSpecificPage(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [allbanner, setallbanner] = useState([]);\n  const [createlandingbanner, setCreatelandingbanner] = useState({\n    position: \"\",\n    urlParam: \"\",\n    mobile: \"\",\n    web: \"\",\n  });\n  useEffect(() => {\n    async function allbannerfetch() {\n      const url = GRAPHQL_DEV_CLIENT;\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          query: ALLSPECIFICLISTINGPAGE,\n        }),\n      };\n\n      await fetch(url, opts)\n        .then((res) => res.json())\n        .then((fatchvalue) => {\n          let data = fatchvalue.data.allBanners.nodes;\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n\n          setallbanner(data);\n        })\n        .catch(console.error);\n    }\n    allbannerfetch();\n    console.log(\"fetch\", allbanner)\n\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onChangeData = (event) => {\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\n  };\n\n  const onsubmitvalue = async () => {\n    let create_banner_data = {\n      urlParam: createlandingbanner.urlParam,\n      mobile: createlandingbanner.mobile,\n      web: createlandingbanner.web,\n      now: new Date().toISOString(),\n    };\n   \n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: CREATESPECIFICLISTINGPAGE,\n        variables: create_banner_data,\n      }),\n    };\n    console.log(\"ffff\", opts);\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        setOpen(false);\n        window.location.reload();\n        console.log(\"fff\", fatchvalue);\n      })\n      .catch(console.error);\n  }\n\n  const handleDelete = async (id) => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: DELETEALLBANNER,\n        variables: { id: id },\n      }),\n    };\n\n    await fetch(url, opts)\n      .then((res) => res.json())\n      .then((fatchvalue) => {\n        window.location.reload();\n      })\n      .catch(console.error);\n  };\n\n    return (\n        <div>\n            <Paper className={classes.root}>\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\n          <Grid fullwidth item xs={9} sm={9}>\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\n              NAC Specific Page \n            </Typography>\n          </Grid>\n\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n              Add New\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Dialog  open={open} onClose={handleClose}\n        >\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\n          <DialogContent>\n            <TextField\n              margin=\"dense\"\n              id=\"urlParam\"\n              label=\"Link\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.urlParam}\n              name=\"urlParam\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"mobile\"\n              label=\"Mobile Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.mobile}\n              name=\"mobile\"\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"web\"\n              label=\"Web Image\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={onChangeData}\n              value={createlandingbanner.web}\n              name=\"web\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onsubmitvalue}>Submit</Button>\n            <Button onClick= {handleClose}> Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell>Specific Routing Link</TableCell>\n                <TableCell>Mobile URL</TableCell>\n                <TableCell>Web URL</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {allbanner.map((val, index) => (\n                <TableRow key={val.id}>\n                  <TableCell>\n                    <Link href={val.url} target=\"_blank\" className={classes.link_style}>\n                      {val.urlParam}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\n                      {val.mobile}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\n                      {val.web}\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Button \n                    onClick={() => handleDelete(val.id)}\n                     style={{ color: \"#fff\", backgroundColor: \"red\" }}>\n                      Delete\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </Paper>\n        </div>\n    );\n}\n\nexport default BannerSpecificPage;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport BannerPage from \"../../components/BannerPage\";\nimport BannerListingPage from \"../../components/BannerPage/BannerListingPage\";\nimport BannerSpecificPage from \"../../components/BannerPage/BannerSpecificPage\";\nimport Container from '@material-ui/core/Container';\n\nclass Banner_ extends React.Component {\n  \n  render() {\n  return (\n    <Container maxWidth=\"false\" disableGutters>\n     <BannerPage />\n     <BannerListingPage />\n     <BannerSpecificPage />\n  </Container>\n         \n  );\n}\n}\n\nexport const Banner = withRouter(Banner_);\n  export default Banner;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from \"react\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { withRouter } from \"react-router-dom\";\nimport { useStyles } from \"./styles\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { ProductContext } from \"../../context\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { GlobalContext } from \"../../context\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nimport { Paper, Avatar, Typography } from \"@material-ui/core\";\nimport data from \"../menupages.json\";\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { isreload, setIsreload } = React.useState(false);\n  let accesspages = localStorage.getItem(\"accesspages\");\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\n  };\n  const handleClick = (type) => (e) => {\n    if (type === \"Pricing\" || type == \"Inventory & Shipping Setup\") {\n      setGlobalCtx({\n        ...globalCtx,\n        optionname: type,\n        selectedIndex: 5,\n        isExpand: !globalCtx.isExpand,\n      });\n    } else {\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\n    }\n  };\n  async function getmasterpages() {\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\n    let pages = [];\n    let pagepermissions = [];\n\n    pageaccess.pages.forEach((element) => {\n      pages.push(element.pageurl);\n      if (element.is_write) {\n        pagepermissions.push(element.pageurl);\n      }\n    });\n    // setPages(pageaccess)\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\n    //setIsreload(true)\n\n    localStorage.setItem(\"accesspages\", pages);\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\n\n    window.location.reload();\n  }\n  React.useEffect(() => {\n    //alert(globalCtx.accesspages)\n    if (!accesspages) {\n      // getmasterpages()\n    } else {\n      //  setIsreload(true)\n    }\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\n\n    console.log(\"pagess\", accesspages);\n  }, []);\n  function handleListItemClick(event, index) {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\n  }\n\n  return (\n    <>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>{theme.direction === \"rtl\" ? <ChevronRightIcon /> : <ChevronLeftIcon />}</IconButton>\n        </div>\n        <Divider />\n\n        <List>\n          {data.menus.map((menuobj, index) => (\n            <React.Fragment key={index}>\n              {menuobj.submenu ? (\n                <>\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <>\n                      <ListItem button onClick={handleClick(menuobj.name)}>\n                        <ListItemIcon>\n                          {/* <InboxIcon /> */}\n                          <img style={{ width: \"18px\" }} src={menuobj.icon} alt=\"NAC Console\"></img>\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                        {globalCtx.isExpand && globalCtx.optionname === menuobj.name ? <ExpandLess /> : <ExpandMore />}\n                      </ListItem>\n                      <Collapse in={globalCtx.isExpand && globalCtx.optionname === menuobj.name} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                          {menuobj.submenu.map((submenuobj, subindex) => (\n                            <React.Fragment key={subindex}>\n                              {accesspages && accesspages.indexOf(submenuobj.url) > -1 ? (\n                                <Link underline=\"none\" component={RouterLink} to={submenuobj.url}>\n                                  <ListItem\n                                    button\n                                    className={classes.nested}\n                                    selected={globalCtx.selectedIndex === subindex}\n                                    onClick={(event) => handleListItemClick(event, subindex)}\n                                  >\n                                    <ListItemIcon>\n                                      <img style={{ width: \"18px\" }} src={submenuobj.icons} alt=\"NAC Console\"></img>\n                                    </ListItemIcon>\n                                    <ListItemText primary={submenuobj.name} />\n                                  </ListItem>\n                                </Link>\n                              ) : null}\n                            </React.Fragment>\n                          ))}\n                        </List>\n                      </Collapse>{\" \"}\n                    </>\n                  ) : null}\n                </>\n              ) : (\n                <>\n                  {\" \"}\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\n                    <Link underline=\"none\" component={RouterLink} to={menuobj.url}>\n                      <ListItem\n                        button\n                        key={\"Product List\"}\n                        selected={globalCtx.optionname === menuobj.name}\n                        onClick={handleClick(menuobj.name)}\n                      >\n                        <ListItemIcon>\n                        <img\n                            style={{ width: \"18px\" }}\n                            src={menuobj.icon}\n                            alt=\"NAC Icon\"\n                          ></img>\n                        </ListItemIcon>\n                        <ListItemText primary={menuobj.name} />\n                      </ListItem>\n                    </Link>\n                  ) : null}{\" \"}\n                </>\n              )}\n            </React.Fragment>\n          ))}\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link> */}\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport { useStyles } from \"./styles\";\nimport { withRouter } from \"react-router-dom\";\nimport SideBar from \"../SideBar\";\nimport { GlobalContext } from \"../../context\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport \"./style.css\";\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handlelogout() {\n    localStorage.removeItem(\"accesstoken\");\n    window.location = \"/\";\n  }\n\n  function handleDrawer() {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n  }\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem> */}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: globalCtx.sideBarOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{ color: \"#fff\" }} variant=\"h4\" noWrap>\n            Stylori\n          </Typography>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = (props) => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return (\n    <main className={classes.content}>\n      <div className={classes.toolbar} />\n      <Component {...rest} />\n    </main>\n  );\n};\n\nexport const withAppBar = (component, props) => {\n  return (\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n};\n\nexport default PrimaryAppBar;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport route from \"./route\";\nimport { withAppBar } from \"../components/PrimaryAppBar\";\n\nconst PrivateRoute = (props) => {\n  const { component, ...rest } = props;\n\n  const checkAuth = () => {\n    let accesstoken = localStorage.getItem(\"accesstoken\");\n    if (accesstoken) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const Component = (props) => withAppBar(component, props);\n  return checkAuth() ? (\n    rest.path === \"/\" || rest.path === \"/login\" ? (\n      <Redirect to={route.productlist} />\n    ) : (\n      <Component {...rest} />\n    )\n  ) : (\n    <Redirect to={route.login} />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditDiamond = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    diamondweight  : diamond.diamondweight ? diamond.diamondweight : '',\n    diamondcount  : diamond.diamondcount ? diamond.diamondcount : '',\n    diamondsettings : diamond.diamondsettings ? diamond.diamondsettings : null,\n    diamondshape : diamond.diamondshape ? diamond.diamondshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.diamondweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.diamondcount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondsettings}\n                    value={editcontent.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditDiamond.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditDiamond;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EditDiamond from './Components/EditDiamond/EditDiamond';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null)\n    setOpenedit(false);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    \n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setEditcontent({\n      id : diamondData.id,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    setOpenedit(true)\n  }\n  async function DiamondSave(diamondobj){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight){\n      \n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(diamondobj.id===diamondListData.id){\n          diamondListData.diamondSettings=diamondobj.diamondsettings.name;\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\n          diamondListData.stoneCount = diamondobj.diamondcount;\n          diamondListData.stoneWeight = diamondobj.diamondweight;\n          bodydata['diamondSettings'] = diamondobj.diamondsettings.name\n          bodydata['diamondShape'] = diamondobj.diamondshape.name\n          bodydata['stoneCount'] = diamondobj.diamondcount;\n          bodydata['stoneWeight'] = diamondobj.diamondweight;\n          bodydata['diamondid'] = diamondobj.id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      let response =  await sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n   // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      setEditcontent(null)\n      setOpenedit(false)\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table> \n        {editcontent && <EditDiamond\n        diamond={editcontent}\n        onApply={DiamondSave}\n        onClose={handleApplicationClose}\n        open={openedit}\n        />        }\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(0, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditGemstone = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    gemstonesettings  : diamond.gemstonesettings ? diamond.gemstonesettings : '',\n    gemstonecount  : diamond.gemstonecount ? diamond.gemstonecount : '',\n    gemstoneweight : diamond.gemstoneweight ? diamond.gemstoneweight : null,\n    gemstonesize : diamond.gemstonesize ? diamond.gemstonesize : null,\n\n    \n    gemstoneshape : diamond.gemstoneshape ? diamond.gemstoneshape : null\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n   // alert(JSON.stringify(editcontent.gemstonecount))\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Diamond Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        \n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstonesize}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstonesize')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.gemstoneweight}\n              placeholder={\"Weight\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('gemstoneweight')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={editcontent.gemstonecount}\n              />\n              <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.gemstonesettings}\n                    value={editcontent.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={editcontent.gemstoneshape}\n                    options={productCtx.masterData.gemstoneshape}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditGemstone.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditGemstone;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport EditGemstone from \"./Components/EditGemstone/EditGemstone\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: \"Gemstone Type\", label: \"Gemstone Type\" },\n  { id: \"Shape\", label: \"Shape\" },\n  { id: \"Setting\", label: \"Setting\" },\n  { id: \"Size\", label: \"Size\" },\n  { id: \"Weight\", label: \"Weight\" },\n  { id: \"Number\", label: \"Number\" },\n  {\n    id: \"Edit\",\n    label: \"Edit\",\n    minWidth: 120,\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  let [gemstoneEditObject, setGemstoneEditObject] = React.useState({\n    edit: \"\",\n  });\n  const emptyRows =\n    rowsPerPage -\n    Math.min(\n      rowsPerPage,\n      props.gemstone && props.gemstone.length - page * rowsPerPage\n    );\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit: JSON.parse(JSON.stringify(gemstoneData)),\n    });\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\n        (settingData, index) =>\n          settingData.name === gemstoneData.gemstoneSetting\n      )[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\n      )[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize,\n    });\n    setEditcontent({\n      id: gemstoneData.id,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\n        (settingData, index) =>\n          settingData.name === gemstoneData.gemstoneSetting\n      )[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\n      )[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize,\n    });\n    // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n    setOpenedit(true);\n  }\n  async function GemstoneSave(gemdata) {\n    if (\n      gemdata.gemstonesettings &&\n      gemdata.gemstoneshape &&\n      gemdata.gemstonecount &&\n      gemdata.gemstoneweight &&\n      gemdata.gemstonesize\n    ) {\n      let list_data = props.gemstone;\n      var bodydata = {};\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (gemdata.id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\n          bodydata[\"gemstoneSetting\"] = gemdata.gemstonesettings.name;\n          bodydata[\"gemstoneShape\"] = gemdata.gemstoneshape.name;\n          bodydata[\"stoneCount\"] = gemdata.gemstonecount;\n          bodydata[\"gemstoneSize\"] = gemdata.gemstonesize;\n          bodydata[\"stoneWeight\"] = gemdata.gemstoneweight;\n          bodydata[\"id\"] = gemdata.id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response = await sendNetworkRequest(\n        \"/editproductgemstone\",\n        {},\n        bodydata\n      );\n      let editGemstoneList =\n        gemstoneChangeData &&\n        gemstoneChangeData.filter(\n          (edit_data, index) => edit_data.id === gemdata.id\n        )[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if (\n        JSON.stringify(editGemstoneList) !==\n        JSON.stringify(gemstoneEditObject.edit)\n      ) {\n        let status =\n          editGemstoneLists &&\n          editGemstoneLists.some(\n            (check_edit, index) => check_edit.id === editGemstoneList.id\n          )\n            ? (editGemstoneLists =\n                editGemstoneLists &&\n                editGemstoneLists.map((gemstone_list, index) => {\n                  if (gemstone_list.id === editGemstoneList.id) {\n                    return editGemstoneList;\n                  }\n                  return gemstone_list;\n                }))\n            : editGemstoneLists.push(editGemstoneList);\n      }\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\",\n      });\n      setEditcontent(null);\n      setOpenedit(false);\n      //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not fill all item\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n  const handleInputChange = (type) => (e) => {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n  };\n  return (\n    <Paper className={classes.root}>\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone &&\n              props.gemstone\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.gemstoneType}\n                    </TableCell>\n                    {btnEdit.action && btnEdit.id == row.id ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          value={productCtx.gemstoneshape}\n                          options={productCtx.masterData.gemstonshapes}\n                          onChange={handleoptionChange(\"gemstoneshape\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Gemstone Shape\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </TableCell>\n                    ) : (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.gemstoneShape}\n                      </TableCell>\n                    )}\n                    {btnEdit.action && btnEdit.id == row.id ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Autocomplete\n                          id=\"free-solo-2-demo\"\n                          className={classes.fixedTag}\n                          getOptionLabel={(option) => option.label}\n                          value={productCtx.gemstonesettings}\n                          options={productCtx.masterData.gemstonesettings}\n                          onChange={handleoptionChange(\"gemstonesettings\")}\n                          renderTags={(value, getTagProps) =>\n                            value.map((option, index) => (\n                              <Chip\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label={option.label}\n                                {...getTagProps({ index })}\n                              />\n                            ))\n                          }\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Gemstone Setting\"\n                              margin=\"dense\"\n                              variant=\"outlined\"\n                              fullWidth\n                              InputProps={{\n                                ...params.InputProps,\n                                type: \"search\",\n                              }}\n                            />\n                          )}\n                        />\n                      </TableCell>\n                    ) : (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.gemstoneSetting}\n                      </TableCell>\n                    )}\n                    {btnEdit.action && btnEdit.id == row.id ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Input\n                          variant=\"outlined\"\n                          fullWidth\n                          id=\"size\"\n                          margin=\"dense\"\n                          label=\"Gemstone Size\"\n                          name=\"size\"\n                          onChange={handleInputChange(\"gemstonesize\")}\n                          autoComplete=\"size\"\n                          value={productCtx.gemstonesize}\n                        />\n                      </TableCell>\n                    ) : (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.gemstoneSize}\n                      </TableCell>\n                    )}\n                    {btnEdit.action && btnEdit.id == row.id ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Input\n                          variant=\"outlined\"\n                          fullWidth\n                          id=\"size\"\n                          margin=\"dense\"\n                          label=\"Weight\"\n                          name=\"size\"\n                          autoComplete=\"size\"\n                          onChange={handleInputChange(\"gemstoneweight\")}\n                          value={productCtx.gemstoneweight}\n                        />\n                      </TableCell>\n                    ) : (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.stoneWeight}\n                      </TableCell>\n                    )}\n                    {btnEdit.action && btnEdit.id == row.id ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Input\n                          variant=\"outlined\"\n                          fullWidth\n                          id=\"size\"\n                          margin=\"dense\"\n                          label=\"#of Stones\"\n                          name=\"size\"\n                          autoComplete=\"size\"\n                          onChange={handleInputChange(\"gemstonecount\")}\n                          value={productCtx.gemstonecount}\n                        />\n                      </TableCell>\n                    ) : (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.stoneCount}\n                      </TableCell>\n                    )}\n                    {btnEdit.action && btnEdit.id == row.id ? (\n                      <TableCell align=\"center\">\n                        <Button onClick={(e) => GemstoneSave(row.id)}>\n                          <SaveIcon />\n                        </Button>\n                      </TableCell>\n                    ) : (\n                      <TableCell align=\"center\">\n                        <Button onClick={(e) => GemstoneEdit(row)}>\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && (\n          <EditGemstone\n            diamond={editcontent}\n            onApply={GemstoneSave}\n            onClose={handleApplicationClose}\n            open={openedit}\n          />\n        )}\n      </div>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nconst columns = [\n  { id: \"SKU\", label: \"SKU\" },\n  { id: \"Metal Colour\", label: \"Metal Colour\" },\n  { id: \"Metal Purity\", label: \"Metal Purity\" },\n  { id: \"Gold Weight\", label: \"Gold Weight\" },\n  { id: \"Size\", label: \"Size\" },\n  { id: \"Vendor lead Time\", label: \"Vendor lead Time\" },\n  { id: \"Ready to Ship\", label: \"Ready to Ship\" },\n  { id: \"Default\", label: \"Default\" },\n  {\n    id: \"Active\",\n    label: \"Active\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n  {\n    id: \"Edit\",\n    label: \"Edit\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: \"\",\n  });\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {}\n\n  const handleChangeswitch = (name) => (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n\n    //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist =\n      productCtx.variants &&\n      productCtx.variants.map((variant, index) => {\n        if (variant.id === variantId) {\n          let status = variant.isActive\n            ? (variant.isActive = false)\n            : (variant.isActive = true);\n        }\n        return variant;\n      });\n    let filterVariant =\n      variantslist &&\n      variantslist.filter(\n        (filter_data, index) => filter_data.id === variantId\n      )[0];\n    let editVaraint = {\n      id: filterVariant.id,\n      isActive: filterVariant.isActive,\n    };\n    let editVariants = productCtx.editVariants;\n    let editStatus =\n      editVariants &&\n      editVariants.some(\n        (check_variant, index) => check_variant.id === variantId\n      )\n        ? (editVariants =\n            editVariants &&\n            editVariants.filter(\n              (edit_variant_filter, index) =>\n                edit_variant_filter.id !== variantId\n            ))\n        : editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants: variantslist,\n      editVariants,\n    });\n  }\n  const emptyRows =\n    rowsPerPage -\n    Math.min(\n      rowsPerPage,\n      props.variants && props.variants.length - page * rowsPerPage\n    );\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange = (type) => (e) => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime: diamondData.vendorDeliveryTime,\n      discount: diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault: diamondData.isdefault,\n      editisactive: diamondData.isActive,\n    });\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\n  }\n  function DiamondSave(id) {\n    var bodydata = {};\n    if (productCtx.editleadtime) {\n      let list_data = props.variants;\n      let Skuchangedata = list_data.map((skulistdata, index) => {\n        if (id === skulistdata.generatedSku) {\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive = productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship;\n\n          skulistdata.discountDesc = productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata[\"vendorDeliveryTime\"] = productCtx.editleadtime;\n          bodydata[\"isdefault\"] = productCtx.editisdefault;\n          bodydata[\"isActive\"] = productCtx.editisactive;\n          bodydata[\"discount\"] = productCtx.discount;\n\n          bodydata[\"isReadyToShip\"] = productCtx.editreadytoship;\n          bodydata[\"generatedSku\"] = id;\n          console.log(JSON.stringify(bodydata));\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest(\"/updateskuinfo\", {}, bodydata);\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  //   const handleoptionChange = type => (event, value) => {\n\n  //     setProductCtx({ ...productCtx, [type]: value})\n\n  // }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {props.columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants &&\n              props.variants\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <TableRow key={row.id}>\n                    {props.displycolumns.indexOf(\"SKU\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.generatedSku}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Metal Colour\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        scope=\"row\"\n                      >\n                        {row.metalColor}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Metal Purity\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.purity}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Gold Weight\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.skuWeight}\n                      </TableCell>\n                    ) : null}\n                    {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                    {props.displycolumns.indexOf(\"Size\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.skuSize}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Vendor lead Time\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.editleadtime}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Vendor Lead Time\"\n                            //onInput={keyPress.bind(this)}\n                            onChange={handleinputChange(\"editleadtime\")}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.vendorDeliveryTime}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.discount}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount\"\n                            //onInput={keyPress.bind(this)}\n                            onChange={handleinputChange(\"discount\")}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountDesc}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Ready To Ship\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Switch\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editreadytoship\n                              : row.isReadyToShip\n                          }\n                          // onChange={()=>handleChange(row.id)}\n                          value=\"checkedA\"\n                          // onChange={handleChangeswitch('editreadytoship')}\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editreadytoship\")\n                              : null\n                          }\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Default\") > -1 ? (\n                      <TableCell\n                        align=\"center\"\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Switch\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editisdefault\n                              : row.isdefault\n                          }\n                          value=\"checkedA\"\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editisdefault\")\n                              : null\n                          }\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Active\") > -1 ? (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        <Switch\n                          checked={row.isActive}\n                          checked={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? productCtx.editisactive\n                              : row.isActive\n                          }\n                          onChange={\n                            btnEdit.action && btnEdit.id == row.generatedSku\n                              ? handleChangeswitch(\"editisactive\")\n                              : null\n                          }\n                          value=\"checkedA\"\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                        />\n                      </TableCell>\n                    ) : null}\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                      <TableCell style={{ width: 20 }} align=\"center\">\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\n                          <SaveIcon />\n                        </Button>\n                        <Button onClick={(e) => CancelEdit(row)}>\n                          <CancelIcon />\n                        </Button>\n                      </TableCell>\n                    ) : (\n                      <TableCell align=\"center\" style={{ width: 20 }}>\n                        <Button onClick={(e) => DiamondEdit(row)}>\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants && props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Dialog,\n  Chip,\n  TextField,\n  Typography,\n  colors,\n  Input\n} from '@material-ui/core';\nimport { ProductContext } from '../../../../context';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//import getInitials from 'utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    padding: theme.spacing(3),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  content: {\n    padding: theme.spacing(2, 2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  },\n  author: {\n    margin: theme.spacing(4, 0),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  applyButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst EditPrice = props => {\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\n  const initialValues = {\n    id : diamond.id,\n    editcostprice:diamond.editcostprice,\n    editcostpricetax: diamond.editcostpricetax,\n    editsellingprice:diamond.editsellingprice,\n    editsellingpricetax:diamond.editsellingpricetax,\n    editmarkupprice: diamond.editmarkupprice,\n    editmarkuppricetax : diamond.editmarkuppricetax,\n    editdiscountprice: diamond.editdiscountprice,\n    editdiscountpricetax: diamond.editdiscountpricetax\n  }\n  const [value, setValue] = useState('');\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [editcontent, setEditcontent] = React.useState({\n    ...initialValues\n  });\n\n  const classes = useStyles();\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n  React.useEffect(() => {\n  },[editcontent])\n \n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            gutterBottom\n            variant=\"h3\"\n          >\n           Price Details\n          </Typography>\n          \n        </div>\n        <div className={classes.content}>\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editcostprice}\n              placeholder={\"costPrice\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"costPriceTax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editcostpricetax')}\n              value={editcontent.editcostpricetax}\n              />\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editsellingprice}\n              placeholder={\"Selling Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Selling Pricetax\"\n              placeholder=\"Selling Pricetax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editsellingpricetax')}\n              value={editcontent.editsellingpricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editmarkupprice}\n              placeholder={\"Markup Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkupprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Markup Price Tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editmarkuppricetax')}\n              value={editcontent.editmarkuppricetax}\n              />\n\n               <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              value={editcontent.editdiscountprice}\n              placeholder={\"Discount Price\"}\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountprice')}\n              />\n        <TextField\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              placeholder=\"Discount Price tax\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('editdiscountpricetax')}\n              value={editcontent.editdiscountpricetax}\n              />\n                 \n          \n          \n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.applyButton}\n            onClick={() => onApply(editcontent)}\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nEditPrice.propTypes = {\n  diamond: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default EditPrice;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  Typography,\n  Button,\n  Chip,\n  Input,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\nimport EditPrice from \"./Components/EditPrice/EditPrice\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ProductContext } from \"../../context\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\n\nconst columns = [\n  { id: \"SKU\", label: \"SKU\" },\n  { id: \"Cost Price\", label: \"Cost Price\" },\n  { id: \"Cost Price Tax\", label: \"Cost Price Tax\" },\n  { id: \"Selling Price\", label: \"Selling Price\" },\n  { id: \"Selling Price Tax\", label: \"Selling Price Tax\" },\n  { id: \"Markup Price\", label: \"Markup Price\" },\n  { id: \"Markup Price Tax\", label: \"Markup Price Tax\" },\n  { id: \"Discount Price\", label: \"Discount Price\" },\n  { id: \"Discount Price Tax\", label: \"Discount Price Tax\" },\n  { id: \"Margin On Sale\", label: \"Margin On Sale\" },\n  { id: \"Discount\", label: \"Discount\" },\n\n  {\n    id: \"Disable\",\n    label: \"Price Update\",\n    align: \"center\",\n    format: (value) => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === \"rtl\" ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [openedit, setOpenedit] = React.useState(false);\n  const [editcontent, setEditcontent] = React.useState(null);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: \"\",\n  });\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  const handleApplicationOpen = () => {\n    setOpenedit(true);\n  };\n\n  const handleApplicationClose = () => {\n    setEditcontent(null);\n    setOpenedit(false);\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist =\n      productCtx.variants &&\n      productCtx.variants.map((variant, index) => {\n        if (variant.id === variantId) {\n          let status = variant.isActive\n            ? (variant.isActive = false)\n            : (variant.isActive = true);\n        }\n        return variant;\n      });\n    let filterVariant =\n      variantslist &&\n      variantslist.filter(\n        (filter_data, index) => filter_data.id === variantId\n      )[0];\n    let editVaraint = {\n      id: filterVariant.id,\n      isActive: filterVariant.isActive,\n    };\n    let editVariants = productCtx.editVariants;\n    let editStatus =\n      editVariants &&\n      editVariants.some(\n        (check_variant, index) => check_variant.id === variantId\n      )\n        ? (editVariants =\n            editVariants &&\n            editVariants.filter(\n              (edit_variant_filter, index) =>\n                edit_variant_filter.id !== variantId\n            ))\n        : editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants: variantslist,\n      editVariants,\n    });\n  }\n  const emptyRows =\n    rowsPerPage -\n    Math.min(\n      rowsPerPage,\n      props.variants && props.variants.length - page * rowsPerPage\n    );\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange = (type) => (e) => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n  }\n  async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, pricerun: true });\n\n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku: diamondData.generatedSku,\n    };\n    console.log(JSON.stringify(bodydata));\n    await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n    setBtnEdit({ ...btnEdit, id: \"\", pricerun: false });\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice: diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice: diamondData.sellingPrice,\n      editsellingpricetax: diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax: diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax,\n    });\n    setEditcontent({\n      id: diamondData.generatedSku,\n      editcostprice: diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice: diamondData.sellingPrice,\n      editsellingpricetax: diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax: diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax,\n    });\n    //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n    // setOpenedit(true)\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\n  }\n  function DiamondSave(priceobj) {\n    var bodydata = {};\n    let list_data = props.variants;\n    let Skuchangedata = list_data.map((skulistdata, index) => {\n      if (priceobj.id === skulistdata.generatedSku) {\n        skulistdata.costPrice = priceobj.editcostprice;\n        skulistdata.costPriceTax = priceobj.editcostpricetax;\n        skulistdata.sellingPrice = priceobj.editsellingprice;\n        skulistdata.sellingPriceTax = priceobj.editsellingpricetax;\n        skulistdata.markupPrice = priceobj.editmarkupprice;\n        skulistdata.markupPriceTax = priceobj.editmarkuppricetax;\n        skulistdata.discountPrice = priceobj.editdiscountprice;\n        skulistdata.discountPriceTax = priceobj.editdiscountpricetax;\n\n        bodydata[\"costPrice\"] = parseFloat(priceobj.editcostprice);\n        bodydata[\"costPriceTax\"] = parseFloat(priceobj.editcostpricetax);\n        bodydata[\"sellingPrice\"] = parseFloat(priceobj.editsellingprice);\n        bodydata[\"sellingPriceTax\"] = parseFloat(priceobj.editsellingpricetax);\n        bodydata[\"markupPrice\"] = parseFloat(priceobj.editmarkupprice);\n        bodydata[\"markupPriceTax\"] = parseFloat(priceobj.editmarkuppricetax);\n        bodydata[\"discountPrice\"] = parseFloat(priceobj.editdiscountprice);\n        bodydata[\"discountPriceTax\"] = parseFloat(\n          priceobj.editdiscountpricetax\n        );\n        bodydata[\"marginOnSalePercentage\"] = parseFloat(\n          priceobj.marginOnSalePercentage\n        );\n\n        bodydata[\"generatedSku\"] = priceobj.id;\n        return skulistdata;\n      }\n      return skulistdata;\n    });\n    alert(JSON.stringify(bodydata));\n    // sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\n    // setEditcontent(null)\n    // setOpenedit(false)\n  }\n  //   const handleoptionChange = type => (event, value) => {\n\n  //     setProductCtx({ ...productCtx, [type]: value})\n\n  // }\n  // const handleInputChange = type => e => {\n  //   setProductCtx({ ...productCtx, [type]: e.target.value  })\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table\n          className={classes.table}\n          border={1}\n          borderColor={\"#ddd\"}\n          size=\"small\"\n          stickyHeader\n        >\n          <TableHead>\n            <TableRow>\n              {props.columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants &&\n              props.variants\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                  <TableRow key={row.id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.generatedSku}\n                    </TableCell>\n                    {props.displycolumns.indexOf(\"Cost Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{ width: 40 }}\n                            value={productCtx.editcostprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Cost Price\"\n                            onChange={handleinputChange(\"editcostprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {\" \"}\n                            {row.costPrice}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Cost Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editcostpricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Cost Price Tax\"\n                            onChange={handleinputChange(\"editcostpricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {\" \"}\n                            {row.costPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Selling Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editsellingprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Selling Price\"\n                            onChange={handleinputChange(\"editsellingprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.sellingPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Selling Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editsellingpricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Selling Price Tax\"\n                            onChange={handleinputChange(\"editsellingpricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            //onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.sellingPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Markup Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editmarkupprice}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Markup Price\"\n                            onChange={handleinputChange(\"editmarkupprice\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.markupPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Markup Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editmarkuppricetax}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Markup Price Tax\"\n                            onChange={handleinputChange(\"editmarkuppricetax\")}\n\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.markupPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Discount Price\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editdiscountprice}\n                            id=\"productname\"\n                            onChange={handleinputChange(\"editdiscountprice\")}\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount Price\"\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountPrice}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Discount Price Tax\") > -1 ? (\n                      <TableCell component=\"th\" scope=\"row\">\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                          <Input\n                            className={classes.helperinput}\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            value={productCtx.editdiscountpricetax}\n                            onChange={handleinputChange(\"editdiscountpricetax\")}\n                            id=\"productname\"\n                            error={\n                              productCtx &&\n                              productCtx.error_message &&\n                              productCtx.error_message.productname\n                            }\n                            name=\"productname\"\n                            label=\"Discount Price Tax\"\n                            //onInput={keyPress.bind(this)}\n                            // onChange={handleinputChange('productname')}\n\n                            //onChange={(e)=>handleinputChange(e,'productname')}\n                          />\n                        ) : (\n                          <Typography className={classes.heading}>\n                            {row.discountPriceTax}{\" \"}\n                          </Typography>\n                        )}{\" \"}\n                      </TableCell>\n                    ) : null}\n\n                    {props.displycolumns.indexOf(\"Margin on Sale\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.marginOnSalePercentage}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        {row.discount}\n                      </TableCell>\n                    ) : null}\n                    {props.displycolumns.indexOf(\"View\") > -1 ? (\n                      <TableCell\n                        style={{ width: 40 }}\n                        component=\"th\"\n                        scope=\"row\"\n                      >\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={(e) => props.onShow(row.generatedSku)}\n                        >\n                          Summary\n                        </Button>{\" \"}\n                      </TableCell>\n                    ) : null}\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        <Button\n                          onClick={(e) => Skupricesync(row)}\n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                        >\n                          ₹ Run\n                        </Button>\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\n                          <SaveIcon />\n                        </Button>\n                        <Button onClick={(e) => CancelEdit(row)}>\n                          <CancelIcon />\n                        </Button>\n                      </TableCell>\n                    ) : (\n                      <TableCell style={{ width: 40 }} align=\"center\">\n                        {btnEdit.pricerun && btnEdit.id == row.generatedSku ? (\n                          <CircularProgress size={15} />\n                        ) : (\n                          <Button\n                            onClick={(e) => Skupricesync(row)}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                          >\n                            ₹ Run\n                          </Button>\n                        )}\n                        <Button onClick={(e) => DiamondEdit(row)}>\n                          <EditIcon />\n                        </Button>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants && props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { \"aria-label\": \"rows per page\" },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n        {editcontent && (\n          <EditPrice\n            diamond={editcontent}\n            onApply={DiamondSave}\n            onClose={handleApplicationClose}\n            open={openedit}\n          />\n        )}\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport axios from \"axios\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { API_URL } from \"../../config\";\nimport { isString } from \"util\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport { Chip } from \"@material-ui/core\";\n\nregisterPlugin(\n  FilePondPluginImageExifOrientation,\n  FilePondPluginImagePreview,\n  FilePondPluginImageValidateSize,\n  FilePondPluginFileRename\n);\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  variantFontSize: {\n    fontSize: \".9rem\",\n  },\n  variantMarginTop: {\n    marginTop: \"20px\",\n  },\n}));\nexport function CreateVariant(props) {\n  const classes = useStyle();\n  let prod_id = props.productId;\n  let colors = [];\n  let purities = [];\n  let diamondtypes = [];\n  let oldpurity = [];\n\n  const TOKEN = \"token\";\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor);\n  productCtx.oldproductMetalColor.forEach((colorobj) => {\n    colors.push(colorobj.productColor);\n  });\n  productCtx.oldproductMetalPurity.forEach((colorobj) => {\n    purities.push(colorobj.purity);\n    oldpurity.push(colorobj);\n  });\n\n  productCtx.oldproductDiamondTypesArray.forEach((diamondobj) => {\n    diamondtypes.push(diamondobj.diamondType);\n  });\n\n  const [variant, setVariant] = useState({\n    metal_color: [],\n    metal_purity: [],\n    diamond_color: [],\n    diamond_clarity: [],\n    variant_diamond_type: [],\n    product_images: {},\n    size: [],\n  });\n\n  function handleMetalColor(status_data) {\n    let color = variant.metal_color;\n    color.some((color_data) => color_data.id === status_data.id)\n      ? (color = color.filter((color_fil) => color_fil.id !== status_data.id))\n      : color.push(status_data);\n    setVariant({\n      ...variant,\n      metal_color: color,\n    });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    let color_arr = [];\n    value.map((color, index) => {\n      if (\n        productCtx.productMetalColor.some(\n          (item) => item.productColor === color.productColor\n        )\n      ) {\n      } else {\n        let color_obj = {\n          ...color,\n          metal_color: color.productColor,\n        };\n        color_arr.push(color_obj);\n      }\n    });\n    setVariant({\n      ...variant,\n      metal_color: color_arr,\n    });\n\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n    });\n  };\n  const sendNetworkRequest = async (url, params, data, auth = false) => {\n    alert(url);\n    url = API_URL + url;\n    console.info(\"URL\", url, data);\n    const method = data ? \"POST\" : \"GET\",\n      headers = {\n        \"Content-Type\": \"application/json\",\n      };\n    let resdata = null;\n    if (auth) {\n      const token = localStorage.getItem(TOKEN);\n      if (token) headers[\"auth\"] = token;\n      else window.location = \"/\";\n    }\n    const response = await fetch(url, {\n      method,\n      body: isString(data) ? data : JSON.stringify(data),\n      headers,\n    });\n\n    if (response.status < 400) {\n      resdata = await response.json();\n    } else {\n      alert(\n        `${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`\n      );\n    }\n    return resdata;\n  };\n\n  const handleMetalPurity = (type) => (event, value) => {\n    let purity_arr = [];\n    setProductCtx({\n      ...productCtx,\n      [type]: value,\n    });\n    value.map((color, index) => {\n      let color_obj = {\n        ...color,\n        purity: color.purity,\n      };\n      purity_arr.push(color_obj);\n    });\n    setVariant({\n      ...variant,\n      metal_purity: purity_arr,\n    });\n  };\n  // function handleMetalPurity(status_data) {\n  //     status_data.metal_weight = \"\";\n  //     status_data.error_message = false;\n  //     // alert(JSON.stringify(status_data));\n  //     let purity = variant.metal_purity;\n  //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         metal_purity: purity\n  //     })\n  // }\n  const diamondTypeChange = (type) => (event, value) => {\n    let diamondtype_arr = [];\n    value.map((color, index) => {\n      if (color.label) {\n        let color_obj = {\n          ...color,\n          diamondType: color.label,\n        };\n        diamondtype_arr.push(color_obj);\n      } else {\n        let color_obj = {\n          ...color,\n          diamondType: color.diamondType,\n        };\n        diamondtype_arr.push(color_obj);\n      }\n\n      //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n      //    }else{ let color_obj = {\n      //         ...color,\n      //         diamondType: color.label\n      //     }\n      //     diamondtype_arr.push(color_obj)\n      //   }\n    });\n    setVariant({\n      ...variant,\n      variant_diamond_type: diamondtype_arr,\n    });\n    alert(JSON.stringify(value));\n    setProductCtx({\n      ...productCtx,\n      [type]: diamondtype_arr,\n    });\n  };\n\n  // function diamondTypeChange(status_data){\n  //     let diamond__type = variant.variant_diamond_type;\n  //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         variant_diamond_type: diamond__type\n  //     })\n  // }\n\n  const sizeChange = (type) => (event, value) => {\n    let size_arr = [];\n    value.map((color, index) => {\n      if (productCtx.productDiamondTypes.some((item) => item === color)) {\n      } else {\n        let color_obj = {\n          ...color,\n          label: color,\n        };\n        size_arr.push(color_obj);\n      }\n    });\n    setVariant({\n      ...variant,\n      size: size_arr,\n    });\n  };\n  // function sizeChange(status_data) {\n  //     let variantSize = variant.size;\n  //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n  //     setVariant({\n  //         ...variant,\n  //         size: variantSize\n  //     })\n\n  // }\n\n  function setMetalWeightInput(e, metalPurityId) {\n    // alert(e.target.value)\n    let metalWeight = variant.metal_purity;\n    metalWeight =\n      metalWeight &&\n      metalWeight.map((metal_weight, index) => {\n        if (metalPurityId === metal_weight.id) {\n          metal_weight.metal_weight = e.target.value;\n        }\n        return metal_weight;\n      });\n    setVariant({\n      ...variant,\n      metal_purity: metalWeight,\n    });\n  }\n  function saveCreateVariant() {\n    let createVariant = {\n      productId: prod_id,\n      productMetalcoloursByProductId: variant.metal_color,\n      productPuritiesByProductId: variant.metal_purity,\n      productDiamondTypes: variant.variant_diamond_type,\n      productSize: variant.size,\n      product_images: variant.product_images,\n      // productImage:variant.product_images\n    };\n\n    let metal_color_image_length = Object.entries(variant.product_images);\n    let metal_purity_weight = false;\n    let metal_purity =\n      variant.metal_purity &&\n      variant.metal_purity.map((metal_weight_check) => {\n        if (metal_weight_check.metal_weight === \"\") {\n          metal_weight_check.error_message = true;\n          metal_purity_weight = true;\n        }\n        return metal_weight_check;\n      });\n    variant[\"metal_purity\"] = metal_purity;\n    setVariant({\n      ...variant,\n      variant,\n    });\n    if (metal_color_image_length.length !== variant.metal_color.length) {\n      alert(\"Select Metal Color Images\");\n    }\n    if (\n      (variant.metal_color.length > 0 &&\n        variant.metal_color.length === metal_color_image_length.length) ||\n      (variant.metal_purity.length > 0 && metal_purity_weight === false) ||\n      variant.size.length > 0 ||\n      variant.variant_diamond_type.length > 0\n    ) {\n      let createVariants = productCtx.createVariantList;\n      let editVariants = productCtx.editVariants;\n      let variants = productCtx.variants;\n      let productImages = productCtx.productImages;\n      productImages = [...productImages, variant.product_images];\n      createVariants.push(createVariant);\n      let params = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(createVariant),\n      };\n    } else {\n      alert(\"please fill the Create variant\");\n    }\n  }\n  function backToProductAttribute() {\n    props.changeVariant();\n  }\n  async function uploadimagetoserver(\n    bodaydata,\n    imageposition,\n    imagecolor,\n    uploadtype\n  ) {\n    let prodimages = variant.product_images;\n    // if(true)\n    // {\n    var prodid = prod_id;\n    let imagecolourobj = variant.product_images[imagecolor];\n    var imagecount = 1;\n    if (imagecolourobj) {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = prodid + \"_\" + imagecount + imagecolor.charAt(0);\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      {\n        image: bodaydata.fileExtension,\n        filename: imagename,\n        product_id: prodid,\n      },\n      false\n    );\n    var returnData =\n      responsedata && responsedata.data && responsedata.data.returnData;\n    var signedRequest = returnData && returnData.signedRequest;\n    var url = returnData && returnData.url;\n    console.log(\"responseurl\" + url);\n    var filepathname = returnData && returnData.filepath;\n    var options = {\n      headers: {\n        \"Content-Type\": bodaydata.fileExtension,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    if (imagecolourobj) {\n      const imageobj = {\n        name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\n        position: imageposition,\n        color: imagecolor,\n        image_url: filepathname,\n        url:\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\n          filepathname,\n      };\n      if (uploadtype === \"edit\") {\n        imagecolourobj[imageposition] = imageobj;\n      } else {\n        imagecolourobj.push(imageobj);\n      }\n      prodimages[imagecolor] = imagecolourobj;\n    } else {\n      const imageobj = {\n        name: prodid + \"_1\" + imagecolor.charAt(0),\n        position: imageposition,\n        color: imagecolor,\n        image_url: filepathname,\n        url:\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\n          filepathname,\n      };\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj);\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setVariant({ ...variant, product_images: prodimages });\n    // setFiles([])\n    // }\n\n    await axios.put(signedRequest, bodaydata.file, options);\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          fullWidth\n          margin=\"dense\"\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.productColor}\n          getOptionDisabled={(option) =>\n            colors.indexOf(option.productColor) > -1\n          }\n          defaultValue={productCtx.oldproductMetalColor}\n          options={productCtx.masterData.metalcolour}\n          value={productCtx.productMetalColor}\n          onChange={handleoptionChange(\"productMetalColor\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.productColor}\n                {...getTagProps({ index })}\n                disabled={colors.indexOf(option.productColor) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Metal Colours\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          className={classes.fixedTag}\n          margin=\"dense\"\n          getOptionLabel={(option) => option.name}\n          getOptionDisabled={(option) => purities.indexOf(option.name) > -1}\n          defaultValue={productCtx.oldproductMetalPurity}\n          options={productCtx.masterData.metalpurity}\n          value={productCtx.productMetalPurity}\n          onChange={handleMetalPurity(\"productMetalPurity\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.purity}\n                {...getTagProps({ index })}\n                disabled={purities.indexOf(option.purity) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Metal Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n\n        {productCtx.productMetalPurity &&\n          productCtx.productMetalPurity.map((metal_purity) => (\n            <TextField\n              key={metal_purity.id}\n              className={classes.helperinput}\n              style={{ width: \"100px\", marginLeft: \"8px\" }}\n              variant=\"outlined\"\n              margin=\"dense\"\n              fullWidth\n              type=\"number\"\n              value={metal_purity.metal_weight}\n              id=\"metal_weight\"\n              error={metal_purity && metal_purity.error_message}\n              name=\"metal_weight\"\n              label={`Weight ${metal_purity.purity}`}\n              onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n            />\n          ))}\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        <Autocomplete\n          multiple\n          id=\"free-solo-2-demo\"\n          className={classes.fixedTag}\n          getOptionLabel={(option) => option.label}\n          getOptionDisabled={(option) =>\n            diamondtypes.indexOf(option.label) > -1\n          }\n          defaultValue={productCtx.oldproductDiamondTypesArray}\n          options={productCtx.masterData.diamondtypes}\n          value={\n            productCtx.productDiamondTypesArray\n              ? productCtx.productDiamondTypesArray\n              : []\n          }\n          onChange={diamondTypeChange(\"productDiamondTypesArray\")}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <Chip\n                variant=\"outlined\"\n                size=\"small\"\n                label={option.diamondType}\n                {...getTagProps({ index })}\n                disabled={diamondtypes.indexOf(option.diamondType) > -1}\n              />\n            ))\n          }\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Diamond Types\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n            />\n          )}\n        />\n      </Grid>\n\n      <Grid item xs={6} sm={6} md={6} lg={6}>\n        {productCtx.variant_size && productCtx.variant_size.length > 0 ? (\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            fullWidth\n            getOptionLabel={(option) => option}\n            options={productCtx.productVariantSize}\n            value={productCtx.variant_size}\n            onChange={sizeChange(\"productSizes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Sizes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n        ) : null}\n      </Grid>\n\n      {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n\n      <Grid container>\n        {variant.metal_color === undefined\n          ? null\n          : variant.metal_color.map((value, index) => (\n              <Grid xs={12} container spacing={1} item>\n                <Grid xs={12} item>\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                    {value.productColor}\n                  </Typography>\n                </Grid>\n                <Grid xs={12} sm={12} md={12} item>\n                  <FilePond\n                    allowImageValidateSize\n                    imageValidateSizeMinWidth=\"2400\"\n                    imageValidateSizeMinHeight=\"2400\"\n                    imageValidateSizeMeasure={(file) =>\n                      new Promise((resolve, reject) => {})\n                    }\n                    labelIdle=\"Upload Image\"\n                    allowMultiple={true}\n                    //files = {files}\n                    onupdatefiles={(fileItem) => {\n                      // Set currently active file objectsfiles to this.state\n                    }}\n                    onaddfile={(error, fileItem) => {\n                      uploadimagetoserver(fileItem, index, value.name, \"add\");\n                    }}\n                    onremovefile={(error, fileItem) => {}}\n                    fileRenameFunction={(file) =>\n                      new Promise((resolve) => {\n                        var prodid = prod_id;\n                        let imagecolourobj = variant.product_images[value.name];\n                        var imagecount = 1;\n                        if (imagecolourobj) {\n                          imagecount = imagecolourobj.length + 1;\n                        }\n                        let imagename =\n                          prodid +\n                          \"_\" +\n                          imagecount +\n                          value.name.charAt(0) +\n                          file.extension;\n                        resolve(imagename);\n                      })\n                    }\n                  ></FilePond>\n                </Grid>\n              </Grid>\n            ))}\n      </Grid>\n      {\n        <Grid\n          container\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"16px\",\n          }}\n        >\n          <Grid item>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={(e) => saveCreateVariant()}\n            >\n              Save\n            </Button>\n          </Grid>\n          <Grid item>\n            {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n          </Grid>\n        </Grid>\n      }\n    </Grid>\n  );\n}\nexport default CreateVariant;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Columns from \"./columns\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"./table.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nfunction SortHeader(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [options, setOptions] = React.useState(props.columnnames);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <Grid\n      item\n      container\n      lg={12}\n      md={12}\n      sm={12}\n      xs={12}\n      style={{ display: \"flex\", justifyContent: \"space-between\" }}\n    >\n      <Grid item xl={8} lg={9} md={8} sm={7} xs={12}>\n        <h4 className=\"products\">\n          {props.title ? props.title : \"Variants Table\"}{\" \"}\n        </h4>\n      </Grid>\n      <Grid\n        item\n        container\n        xl={4}\n        lg={3}\n        md={4}\n        sm={5}\n        xs={12}\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n      >\n        <Grid\n          item\n          className=\"column-btn\"\n          lg={5}\n          md={5}\n          sm={5}\n          xs={5}\n          style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n        >\n          <Button\n            className=\"product\"\n            size=\"small\"\n            id=\"one\"\n            color=\"primary\"\n            backgroundColor=\"secondary\"\n            onClick={handleClick}\n            variant=\"outlined\"\n            color=\"primary\"\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\n          >\n            COLUMNS\n            <ArrowDownwardIcon fontSize=\"inherit\" />\n          </Button>\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <Columns\n              columns={options}\n              selectcolumnfilter={props.getColumnnames}\n              displytype={props.displytype}\n              columnclose={handleClose}\n            />\n          </Popover>\n        </Grid>\n        {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n      </Grid>\n    </Grid>\n  );\n}\nexport default SortHeader;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { Paper, Card, CardHeader, CardContent, Grid } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport \"./upload.css\";\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n \n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  fixedTag: {\n    padding: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n    },\n  },\n  root: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    width: \"100%\",\n    // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\",\n  },\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\",\n  },\n  formContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30,\n  },\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = \"\";\n\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  React.useEffect(() => {\n    setProductimages(props.prodimages);\n  }, [props.prodimages]);\n\n  productimages.forEach((imgobj) => {\n    console.log();\n    image_count = image_count + 1;\n    if (imgobj.productId) {\n      product_id = imgobj.productId;\n    }\n  });\n\n  const handlenewAssetChange = (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => {\n      var imagecount = 1;\n      if (productimages) {\n        imagecount = image_count + 1;\n      }\n      let imagename = product_id + \"-\" + imagecount;\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n\n      uploadimagetoserver(files[index], fileType, imagename, product_id, {}, false);\n    });\n  };\n\n  async function uploadimagetoserver(fileobj, filetype, imagename, prodid, imagecontent, isedit) {\n    let responsedata = await sendNetworkRequest(\n      \"/uploadimage\",\n      {},\n      { image: filetype, filename: imagename, product_id: prodid },\n      false\n    );\n\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    var filepathname = returnData.filepath;\n    filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\n    var options = {\n      headers: {\n        \"Content-Type\": filetype,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n\n    if (!isedit) {\n      const imageobj = {\n        name: product_id + \"_\" + (image_count + 1),\n        imagePosition: image_count + 1,\n        productColor: props.color,\n        productId: product_id,\n        imageUrl: url,\n        url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\n      };\n      imagecontent = imageobj;\n    }\n\n    if (!isedit) {\n      var productimgs = [];\n      productimages.forEach((img) => {\n        productimgs.push(img);\n      });\n      productimgs.push(imagecontent);\n    }\n\n    await axios.put(signedRequest, fileobj, options);\n    let responsecontent = await sendNetworkRequest(\"/updateproductimage\", {}, { imageobj: imagecontent, isedit: isedit }, false);\n\n    if (responsecontent.statuscode === 200) {\n      window.location.reload();\n    }\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color} />\n        <CardContent>\n          <Grid container spacing={2} className={classes.styleFile}>\n            {productimages.map((url) => (\n              <React.Fragment key={url.id}>\n                <div style={{ position: \"relative\" }}>\n                  <i\n                    className=\"fa fa-window-edit\"\n                    style={{\n                      position: \"absolute\",\n                      right: 10,\n                      top: 11,\n                      color: \"red\",\n                      zIndex: \"12\",\n                    }}\n                  />\n\n                  <Grid\n                    item\n                    style={{\n                      width: \"150px\",\n                      wordBreak: \"break-all\",\n                      height: \"150px\",\n                      padding: \"8px\",\n                      margin: \"0\",\n                      // cursor: \"pointer\",\n                      position: \"relative\",\n                    }}\n                    className=\"container\"\n                  >\n                    <img\n                      src={url.imageUrl}\n                      style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        borderRadius: \"4px\",\n                      }}\n                      alt=\"product images\"\n                    />\n                  </Grid>\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\n                    {\" \"}\n                    {url.imagePosition}{\" \"}\n                  </Typography>\n\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\n                    {\" \"}\n                    {url.ishover ? \"hover\" : \"\"}{\" \"}\n                  </Typography>\n                </div>\n                {/* ) : null} */}\n              </React.Fragment>\n            ))}\n            <Grid\n              item\n              style={{\n                width: \"150px\",\n                wordBreak: \"break-all\",\n                height: \"150px\",\n                padding: \"8px\",\n                margin: \"0\",\n                cursor: \"pointer\",\n                textAlign: \"center\",\n                position: \"relative\",\n              }}\n              className=\"container\"\n            >\n              {\n                <label className=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                  <i\n                    className=\"fa fa-plus\"\n                    aria-hidden=\"true\"\n                    style={{\n                      color: \"rgba(60,64,67,.15)\",\n                      fontSize: \"45px\",\n                      margin: \"auto\",\n                    }}\n                  ></i>\n                  <input type=\"file\" className=\"custom-file-input\" onChange={(e) => handlenewAssetChange(e)}></input>\n                </label>\n              }\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n      \n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n         \n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\nimport columnnames from './columnnames.json';\n\nexport default function ResponsiveDialog(props) {\n  const [open, setOpen] = React.useState(true);\n  const theme = useTheme();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('lg');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose()\n  };\n\n  return (\n    <div>\n      \n      <Dialog\n      fullWidth={fullWidth}\n      maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\n        <DialogContent>\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\n        </DialogContent>\n        <DialogActions>\n       \n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useEffect, useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Grid, TextField, Button, Fab } from \"@material-ui/core\";\nimport { Input } from \"../../components/Input.js\";\nimport { ProductContext, ProductProvider } from \"../../context\";\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from \"./DiamondDetails\";\nimport GemstoneDetails from \"./GemstoneDetails\";\nimport Variants from \"./Variants\";\nimport Skupricing from \"./Skupricing\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport { productCategory } from \"../../services/mapper\";\nimport { useApolloClient, useQuery } from \"react-apollo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\nimport CreateVariant from \"./CreateVariant\";\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { NetworkContext } from \"../../context/NetworkContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SortHeader from \"./Components/SortHeader\";\nimport columnnames from \"./columnnames.json\";\nimport Productimages from \"./Productimages\";\nimport FullLoader from \"../../components/Loader\";\nimport Pricedetails from \"./Pricedetails\";\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { sk } from \"date-fns/locale\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles((theme) => ({\n  helperinput: {\n    \"& .MuiFormHelperText-root\": {\n      color: \"#e53935\",\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"33.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(\n    columnnames.defaultvarients\n  );\n  const [displycolumns, setDisplycolumns] = React.useState(\n    columnnames.defaultvarientnames\n  );\n  const [pricingcolumns, setPricingcolumns] = React.useState(\n    columnnames.pricing\n  );\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(\n    columnnames.defaultpricing\n  );\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(\n    columnnames.defaultpricingnames\n  );\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\n\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage, setSnackMessage] = React.useState({\n    message: \"\",\n    severity: \"\",\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    createVariant();\n    setExpand(isExpanded ? true : false);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\",\n  });\n  let prod_id = props.location.pathname.split(\"/\")[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = evt.target.validity.valid\n      ? evt.target.value\n      : productCtx.productname;\n    setProductCtx({ ...productCtx, productname });\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false });\n  }\n  const handleoptionChange = (type) => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value });\n  };\n\n  const handleinputChange = (type) => (e) => {\n    console.log(type);\n    const re = /^[a-zA-Z \\b]+$/;\n\n    // if (e.target.value === \"\" || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value });\n    // }\n  };\n  // const handleinputChange = type => (event, value) => {\n  //   alert(event.target.value)\n  //       setProductCtx({ ...productCtx, [type]: value})\n  // }\n  function dismisspricesummary() {\n    setIsshowpricesummary(false);\n  }\n  function getColumnnames(columnnames, displytype) {\n    let displycolumns = [];\n    let displycolumnnames = [];\n\n    columnnames.forEach((element) => {\n      displycolumnnames.push(element.name);\n      displycolumns.push(element);\n    });\n    if (displytype === 1) {\n      setDisplycolumns(displycolumnnames);\n      setVarientcolumns(columnnames);\n    } else {\n      setPricingcolumns(columnnames);\n      setDisplypricingcolumns(displycolumns);\n      setDisplycolumnnames(displycolumnnames);\n    }\n  }\n\n  let client = useApolloClient();\n\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist &&\n      productCtx.diamondlist.map((diamond_type) => {\n        let diamond_data = {\n          id: diamond_type.id,\n          diamondType: diamond_type.diamondType,\n        };\n        let status = diamondTypesArray.some(\n          (store_dia) => store_dia.diamondType == diamond_type.diamondType\n        )\n          ? \"\"\n          : diamondTypesArray.push(diamond_data);\n        return diamond_type;\n      });\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\n\n    setProductCtx({\n      ...productCtx,\n      productCtx,\n    });\n\n    client\n      .query({ query: PRODUCTDIAMONDTYPES })\n      .then((res) => {\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: res.data.allMasterDiamondTypes.nodes,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    // let params = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify({ query: PRODUCTDIAMONDTYPES }),\n    // };\n    // fetch(GRAPHQL_DEV_CLIENT, params)\n    //   .then((res) => res.json())\n    //   .then((diamondtypesData) => {\n    //     console.log(\n    //       diamondtypesData.data.allMasterDiamondTypes.nodes,\n    //       \"diamondtypesdata\"\n    //     );\n    //     setProductCtx({\n    //       ...productCtx,\n    //       productDiamondTypes:\n    //         diamondtypesData.data.allMasterDiamondTypes.nodes,\n    //     });\n    //   })\n    //   .catch(console.error);\n\n    //setstate({ ...state, create_variant: true })\n  }\n  async function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions: productCtx.occassions,\n      collections: productCtx.collections,\n      stonecount: productCtx.stonecount,\n      stonecolour: productCtx.stonecolour,\n      gender: productCtx.product_gender,\n      description: productCtx.description,\n      minOrderQty: productCtx.minOrderQty,\n      maxOrderQty: productCtx.maxOrderQty,\n      length: productCtx.length,\n      height: productCtx.height,\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    };\n    let response = await sendNetworkRequest(\n      \"/editproduct\",\n      {},\n      productEditItem\n    );\n\n    console.log(\"************\");\n    console.log(JSON.stringify(productEditItem));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      console.log(JSON.stringify(productEditItem));\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem));\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = (name) => async (event) => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      productid: prod_id,\n      isactive: event.target.checked,\n    };\n    let esbody = {\n      product_id: prod_id,\n    };\n    var endpoint = \"/reindex\";\n    if (event.target.checked) {\n      endpoint = \"/esearch_forceindex\";\n    }\n    debugger;\n    console.log(bodycontent);\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\n\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\n    let updateproductattr = await sendNetworkRequest(\n      \"/updateproductattribute\",\n      {},\n      esbody\n    );\n\n    console.log(\"************\");\n    console.log(JSON.stringify(bodycontent));\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"This is successfully saved\",\n        severity: \"success\",\n      });\n      handleClick();\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message: \"You are not edit product\",\n        severity: \"info\",\n      });\n      handleClick();\n    }\n  };\n  async function showpricesummary(sku) {\n    let response = await sendNetworkRequest(\n      \"/viewskupricesummary/\" + sku,\n      {},\n      null\n    );\n    let price_summary = [];\n    let skuprice = response.price_summary.skuprice;\n    // let cost_obj = {\n    //   component: \"Cost Price\",\n    //   price : skuprice.cost_price - skuprice.cost_price_tax,\n    //   tax : skuprice.cost_price_tax,\n    //   total : skuprice.cost_price\n\n    // }\n    // price_summary.push(cost_obj)\n\n    // let selling_price = {\n    //   component: \"Selling Price\",\n    //   price : skuprice.selling_price ,\n    //   tax : skuprice.selling_price_tax,\n    //   total : skuprice.selling_price\n\n    // }\n    // price_summary.push(selling_price)\n    // let discount_price = {\n    //   component: \"discount Price\",\n    //   price : skuprice.discount_price ,\n    //   tax : skuprice.discount_price_tax,\n    //   total : skuprice.discount_price\n\n    // }\n    // price_summary.push(discount_price)\n    // let markup_price = {\n    //   component: \"markup Price\",\n    //   price : skuprice.markup_price ,\n    //   tax : skuprice.markup_price_tax,\n    //   total : skuprice.markup_price\n\n    // }\n\n    let metalprice = response.price_summary.metals;\n    metalprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n\n    let mateialprice = response.price_summary.materials;\n    mateialprice.forEach((element) => {\n      let obj = {\n        component: element.material_name,\n        cost_price: element.cost_price,\n        selling_price: element.selling_price,\n        markup_price: element.markup,\n        discount_price: element.discount_price,\n      };\n      price_summary.push(obj);\n    });\n    let obj = {\n      component: \"SKU Price\",\n      cost_price: skuprice.cost_price,\n      selling_price: skuprice.selling_price,\n      markup_price: skuprice.markup_price,\n      discount_price: skuprice.discount_price,\n    };\n    price_summary.push(obj);\n    //alert(JSON.stringify(metalprice))\n    //   price_summary.push(markup_price)\n    setPricesummaryvalue(price_summary);\n    setIsshowpricesummary(true);\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function Skumarkupsync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData,\n      pricingcomponent: \"updateskuprice\",\n    };\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\n  }\n  function backProductList() {\n    window.location = \"/productlist\";\n  }\n  useEffect(() => {\n    client\n      .query({ query: PRODUCTEDIT, variables: { productId: prod_id } })\n      .then((res) => {\n        var { productListByProductId } = res.data;\n        var genders = productListByProductId.gender;\n        var size_obj = productListByProductId.sizeVarient;\n        let sizes_arr = [];\n        if (size_obj) {\n          let sizes = size_obj.split(\",\");\n          sizes.forEach((element) => {\n            sizes_arr.push(element);\n          });\n        }\n        let gender_arr = [];\n        if (genders) {\n          genders = genders.split(\",\");\n          genders.forEach((element) => {\n            let gender_obj = {\n              label: element,\n            };\n            gender_arr.push(gender_obj);\n          });\n        }\n        let defaultcolour = \"\";\n        var images_arr = productListByProductId.productImagesByProductId.nodes;\n        images_arr.forEach((element) => {\n          if (element.isdefault) {\n            defaultcolour = element.productColor;\n          }\n        });\n        var metalcolors = [];\n        Array.prototype.insert = function (index, item) {\n          this.splice(index, 0, item);\n        };\n        let metalcolor =\n          productListByProductId.productMetalcoloursByProductId.nodes;\n        metalcolor.forEach((colorobj) => {\n          if (colorobj.productColor === defaultcolour) {\n            colorobj[\"isdefault\"] = true;\n            metalcolors.insert(0, colorobj);\n          } else {\n            colorobj[\"isdefault\"] = false;\n            metalcolors.push(colorobj);\n          }\n        });\n        setProductCtx({\n          ...productCtx,\n          productname: productListByProductId.productName,\n          isactive: productListByProductId.isactive,\n          product_type: productListByProductId.productType,\n          product_categoy: productListByProductId.productCategory,\n          gemstonelist:\n            productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: productListByProductId.productDiamondsByProductSku.nodes,\n          variants: productListByProductId.transSkuListsByProductId.nodes,\n          productImages: productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor:\n            productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity:\n            productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity:\n            productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials:\n            productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode: productListByProductId.vendorCode,\n          product_gender: gender_arr,\n          themes: productListByProductId.productThemesByProductId.nodes,\n          prod_styles: productListByProductId.productStylesByProductId.nodes, // productDiamondColor:diamondTypesArray,\n          occassions: productListByProductId.productOccassionsByProductId.nodes,\n          collections:\n            productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:\n            productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:\n            productListByProductId.productStonecolorsByProductId.nodes,\n          description:\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\n              ?.transSkuDescriptionsBySkuId?.nodes[0]?.skuDescription,\n          minOrderQty:\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\n              ?.minOrderQty,\n          maxOrderQty:\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\n              ?.maxOrderQty,\n          height: productListByProductId?.height,\n          length: productListByProductId?.length,\n          // productDiamondClarity:diamondClaritySku,\n        });\n        console.log(\"\");\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(\n            JSON.stringify(productListByProductId.productName)\n          ),\n        });\n        setLoadopen(false);\n      })\n      .catch(console.error);\n  }, []);\n  return state.create_variant ? (\n    <CreateVariant\n      productMetalColor={productCtx.productMetalColor}\n      productMetalPurity={productCtx.productMetalPurity}\n      changeVariant={changeVariant}\n      productId={prod_id}\n    />\n  ) : (\n    <Grid container>\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\n      <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\n            {snackMessage.message}\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n      <Grid item container spacing={1}>\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={3}\n          lg={3}\n          spacing={2}\n          style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}\n        >\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            pattern=\"[a-zA-Z]*\"\n            value={productCtx.productname}\n            id=\"productname\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.productname\n            }\n            name=\"productname\"\n            label=\"Product Name\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"productname\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_categoy}\n            id=\"product_category\"\n            InputProps={{\n              readOnly: true,\n            }}\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.product_categoy\n            }\n            name=\"product_category\"\n            label=\"Product Category\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.description}\n            id=\"description\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.description\n            }\n            name=\"description\"\n            label=\"Description\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"description\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.product_type}\n            id=\"product_type\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.product_type\n            }\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"product_type\"\n            label=\"Product Type\"\n          />\n          <Input\n            variant=\"outlined\"\n            margin=\"dense\"\n            label=\"Vendor Name\"\n            fullWidth\n            className={classes.helperinput}\n            value={productCtx?.vendorcode ?? \"\"}\n            id=\"productvendorcode\"\n            InputProps={{\n              readOnly: true,\n            }}\n            name=\"Vendor Name\"\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.height}\n            id=\"height\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.height\n            }\n            name=\"height\"\n            label=\"Height \"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"height\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.length}\n            id=\"length\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.length\n            }\n            name=\"length\"\n            label=\"Length\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"length\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />{\" \"}\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.minOrderQty}\n            id=\"minOrderQty\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.minOrderQty\n            }\n            name=\"minOrderQty\"\n            label=\"Minimum Order Quantity\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"minOrderQty\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />{\" \"}\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // pattern=\"[a-zA-Z]*\"\n            value={productCtx.maxOrderQty}\n            id=\"maxOrderQty\"\n            error={\n              productCtx &&\n              productCtx.error_message &&\n              productCtx.error_message.maxOrderQty\n            }\n            name=\"maxOrderQty\"\n            label=\"Maximum Order Quantity\"\n            //onInput={keyPress.bind(this)}\n            onChange={handleinputChange(\"maxOrderQty\")}\n\n            //onChange={(e)=>handleinputChange(e,'productname')}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            options={[]}\n            className={classes.fixedTag}\n            value={productCtx.productmaterials}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.materialName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Product Materials\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{\n                  ...params.InputProps,\n                  readOnly: true,\n                  type: \"search\",\n                }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            options={[]}\n            className={classes.fixedTag}\n            value={productCtx.productMetalColor}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.productColor}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            disabled\n            options={[]}\n            className={classes.fixedTag}\n            value={productCtx.productMetalPurity}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.purity}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Metal Purity\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.product_gender}\n            getOptionLabel={(option) => option.label}\n            onChange={handleoptionChange(\"product_gender\")}\n            options={productCtx.masterData.gender}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.label}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Gender\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.themes}\n            options={productCtx.masterData.themes}\n            value={productCtx.themes}\n            onChange={handleoptionChange(\"themes\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.themeName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Themes\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.prod_styles}\n            options={productCtx.masterData.styles}\n            onChange={handleoptionChange(\"prod_styles\")}\n            value={productCtx.prod_styles}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.styleName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Styles\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.occassions}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.occassions}\n            options={productCtx.masterData.occasions}\n            onChange={handleoptionChange(\"occassions\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.occassionName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Occasions\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.collections}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.collections}\n            options={productCtx.masterData.collections}\n            onChange={handleoptionChange(\"collections\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.collectionName}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Collections\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecount}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecount}\n            options={productCtx.masterData.stones}\n            onChange={handleoptionChange(\"stonecount\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.stonecount}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"No of Stones\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <Autocomplete\n            multiple\n            id=\"free-solo-2-demo\"\n            className={classes.fixedTag}\n            value={productCtx.stonecolour}\n            getOptionLabel={(option) => option.label}\n            defaultValue={productCtx.stonecolour}\n            options={productCtx.masterData.gemstonecolor}\n            onChange={handleoptionChange(\"stonecolour\")}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <Chip\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={option.stonecolor}\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Stone Colour\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                InputProps={{ ...params.InputProps, type: \"search\" }}\n              />\n            )}\n          />\n          <FormControlLabel\n            label={\n              productCtx.isactive\n                ? \"Disable this product\"\n                : \"Enable this product\"\n            }\n            control={\n              <Switch\n                checked={productCtx.isactive}\n                onChange={handledisableproduct(\"isactive\")}\n                value=\"checkedA\"\n              />\n            }\n          />\n          <Grid\n            item\n            container\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\",\n            }}\n          >\n            <Grid item>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={(e) => saveProductEditItem()}\n              >\n                Update\n              </Button>\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={9}\n          lg={9}\n          spacing={2}\n          style={{ padding: \"15px\" }}\n        >\n          <Grid container item md={6}></Grid>\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\n            Diamond Table\n          </Grid>\n          <DiamondDetails diamond={productCtx.diamondlist} />\n          {productCtx.gemstonelist.length > 0 ? (\n            <>\n              {\" \"}\n              <Grid\n                style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}\n              >\n                Gemstone Table\n              </Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\n            </>\n          ) : null}\n          {/* <Grid\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\n          >\n            Variant Creation\n          </Grid> */}\n\n          <Grid style={{}}>\n            {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n\n            {/* <ExpansionPanel expanded={expand} onChange={handleChange()}>\n              <ExpansionPanelSummary\n                expandIcon={expand ? <CloseIcon /> : <AddIcon />}\n                aria-controls=\"panel1c-content\"\n                id=\"panel1c-header\"\n              >\n                <div className={classes.column}>\n                  <Typography className={classes.heading}>\n                    Add New variant\n                  </Typography>\n                </div>\n              </ExpansionPanelSummary>\n              <Divider />\n              <ExpansionPanelDetails className={classes.details}>\n                <CreateVariant\n                  productMetalColor={productCtx.productMetalColor}\n                  productMetalPurity={productCtx.productMetalPurity}\n                  changeVariant={changeVariant}\n                  productId={prod_id}\n                />\n              </ExpansionPanelDetails>\n              <Divider /> */}\n            {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n            {/* </ExpansionPanel> */}\n          </Grid>\n          <Grid\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\n          >\n            <SortHeader\n              columnnames={columnnames.varients}\n              getColumnnames={getColumnnames}\n              displytype={1}\n            />{\" \"}\n          </Grid>\n\n          <Variants\n            variants={productCtx.variants}\n            columns={varientcolumns}\n            displycolumns={displycolumns}\n          />\n\n          <Grid\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\n          >\n            <SortHeader\n              title={\"Pricing Table\"}\n              columnnames={pricingcolumns}\n              displycolumns={displypricingcolumns}\n              getColumnnames={getColumnnames}\n              displytype={2}\n            />\n            <Button\n              onClick={(e) => Skupricesync(prod_id)}\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Price Run For This Product\n            </Button>\n            <span>&nbsp;&nbsp;&nbsp;</span>\n            <Button\n              onClick={(e) => Skumarkupsync(prod_id)}\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Run Markup For This Product\n            </Button>\n          </Grid>\n          {isshowpricesummary ? (\n            <Pricedetails\n              onClose={dismisspricesummary}\n              values={pricesummaryvalues}\n            />\n          ) : null}\n          <Skupricing\n            variants={productCtx.variants}\n            onShow={showpricesummary}\n            columns={displypricingcolumns}\n            displycolumns={displycolumnnames}\n          />\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\n            Product Images\n          </Grid>\n          {/* {productCtx.productMetalColor.map((colors) => ( */}\n          <Productimages\n            //color={colors.productColor}\n            //isdefault={colors.isdefault}\n            prodimages={productCtx.productImages}\n          />\n          {/* ))} */}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles2 = makeStyles((theme) => ({\n  progress: {\n    margin: \"auto\",\n  },\n}));\n\nexport const ProductAttributes = withRouter((props) => {\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading)\n    return (\n      <div className=\"loaderdiv\">\n        <CircularProgress className={classes.progress} />\n      </div>\n    );\n  if (error) return <div>error</div>;\n\n  const _content = (\n    <ProductProvider\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\n    >\n      <Component {...props} />\n    </ProductProvider>\n  );\n  return _content;\n});\nexport default withRouter(ProductAttributes);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Columns from \"./columns\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"./table.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    },\n  },\n}));\n\nfunction SortHeader() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(false);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <Grid\n      container\n      lg={12}\n      md={12}\n      sm={12}\n      xs={12}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginBottom: \"17px\",\n        marginTop: \"25px\",\n      }}\n    >\n      <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n        <h2\n          className=\"products\"\n          style={{ fontSize: \"24px\", fontWeight: \"400\" }}\n        >\n          Products\n        </h2>\n      </Grid>\n      <Grid\n        container\n        xl={4}\n        lg={3}\n        md={4}\n        sm={5}\n        xs={12}\n        lassName=\"column\"\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\n      >\n        <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n          <Button\n            className=\"product\"\n            id=\"one\"\n            color=\"primary\"\n            onClick={handleClick}\n            variant=\"outlined\"\n            size=\"large\"\n            color=\"primary\"\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\n          >\n            COLUMNS\n            <ArrowDownwardIcon fontSize=\"inherit\" />\n          </Button>\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n          >\n            <Columns columnclose={handleClose} />\n          </Popover>\n        </Grid>\n        <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n          <Button\n            id=\"create\"\n            className=\"product\"\n            variant=\"contained\"\n            size=\"large\"\n            color=\"primary\"\n            backgroundColor=\"secondary\"\n          >\n            CREATE PRODUCT\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\nexport default SortHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport route from \"./route\";\nimport {\n  Dashboard,\n  Login,\n  Productupload,\n  Configuration,\n  Manageusers,\n  Customerdetails,\n  Priceupdate,\n  Vendorprice,\n  Vendorlist,\n  Markupprice,\n  Goldpriceupdate,\n  Userwishlist,\n  Productlist,\n  Materiallist,\n  Masterorderstatus,\n  Shippingzones,\n  Manageadminusers,\n  Shipmentsettings,\n  Addshippingattributes,\n  Userconfiguration,\n  Masterroles,\n  Masterscreens,\n  Useraddresses,\n  Addtaxattributes,\n  OrderManagementDetails,\n  Materialmaster,\n  CategoryList,\n  Mastermetalcolors,\n  Masterpurities,\n  Masterdesigns,\n  Shippingattributes,\n  Voucherdiscount,\n  Masterstyles,\n  Masterthemes,\n  Masteroccassions,\n  Masterpaymentstatus,\n  Salediscount,\n  Masterweights,\n  Taxsettings,\n  Masterstones,\n  Masterstonecolors,\n  Masterstoneshapes,\n  Masterattribute,\n  Mastercategories,\n  OrderList,\n  Mastergemsettings,\n  Seopriority,\n  Mastergenders,\n  Mastergemshapes,\n  Mastergemtypes,\n  Earringbacking,\n  Masterproducttypes,\n  Masterdiamondshapes,\n  Taxsetup,\n  Masterdiamonds,\n  Masterdiamondsettings,\n  DiscountList,\n  VoucherdiscountListing,\n  Mastercollections,\n  Masterpages,\n  HolidayManager,\n  Inventory,\n  Warehouse,\n  Banner\n} from \"../screens\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { NetworkProvider } from \"../context/NetworkContext\";\nimport { GlobalContext } from \"../context\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\nimport {\n  ProductContext,\n  ProductProvider,\n} from \"../context/ProductuploadContext\";\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\n\nconst MainApp = () => {\n  const { globalCtx } = React.useContext(GlobalContext);\n  const { productCtx } = React.useContext(ProductContext);\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\n\n  return (\n    <ApolloProvider client={client}>\n      {/* <ProductProvider > */}\n      <NetworkProvider>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Login} />\n          <Route path={route.login} component={Login} />\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\n          <PrivateRoute path={route.productupload} component={Productupload} />\n          <PrivateRoute path={route.configuration} component={Configuration} />\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\n          <PrivateRoute path={route.productlist} component={Productlist} />\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n          <PrivateRoute path={route.banner} component={Banner} />\n          <PrivateRoute\n            path={route.producttypes}\n            component={Masterproducttypes}\n          />\n          <PrivateRoute\n            path={route.voucherdiscount}\n            component={Voucherdiscount}\n          />\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n          <PrivateRoute path={route.orderlist} component={OrderList} />\n          <PrivateRoute path={route.userorders} component={OrderList} />\n          <PrivateRoute path={route.address} component={Useraddresses} />\n\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n          <PrivateRoute path={route.category} component={Mastercategories} />\n          <PrivateRoute\n            path={route.masterattributes}\n            component={Masterattribute}\n          />\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\n          <PrivateRoute\n            path={route.masterstonecolors}\n            component={Masterstonecolors}\n          />\n          <PrivateRoute\n            path={route.masterstoneshapes}\n            component={Masterstoneshapes}\n          />\n          <PrivateRoute path={route.weights} component={Masterweights} />\n          <PrivateRoute\n            path={route.masteroccassions}\n            component={Masteroccassions}\n          />\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\n          <PrivateRoute\n            path={route.manageadminusers}\n            component={Manageadminusers}\n          />\n          <PrivateRoute\n            path={route.goldpriceupdate}\n            component={Goldpriceupdate}\n          />\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\n          <PrivateRoute\n            path={route.customerdetails}\n            component={Customerdetails}\n          />\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\n          <PrivateRoute\n            path={route.orderdetails}\n            component={OrderManagementDetails}\n          />\n\n          <PrivateRoute\n            path={route.userconfiguration}\n            component={Userconfiguration}\n          />\n\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n          <PrivateRoute\n            path={route.mastermaterial}\n            component={Materialmaster}\n          />\n          <PrivateRoute\n            path={route.mastercolors}\n            component={Mastermetalcolors}\n          />\n          <PrivateRoute\n            path={route.masterpurities}\n            component={Masterpurities}\n          />\n          <PrivateRoute\n            path={route.salediscountlist}\n            component={DiscountList}\n          />\n          <PrivateRoute\n            path={route.voucherdiscountlist}\n            component={VoucherdiscountListing}\n          />\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n          <PrivateRoute\n            path={route.mastercollections}\n            component={Mastercollections}\n          />\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n          <PrivateRoute\n            path={route.masterdiamonds}\n            component={Masterdiamonds}\n          />\n          <PrivateRoute\n            path={route.diamondsettings}\n            component={Masterdiamondsettings}\n          />\n          <PrivateRoute\n            path={route.diamondshapes}\n            component={Masterdiamondshapes}\n          />\n          <PrivateRoute\n            path={route.earringbacking}\n            component={Earringbacking}\n          />\n          <PrivateRoute\n            path={route.gemsettings}\n            component={Mastergemsettings}\n          />\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n          <PrivateRoute\n            path={route.masterpaymentstatus}\n            component={Masterpaymentstatus}\n          />\n          <PrivateRoute\n            path={route.masterorderstatus}\n            component={Masterorderstatus}\n          />\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n          <PrivateRoute\n            path={route.shippingattributes}\n            component={Shippingattributes}\n          />\n          <PrivateRoute\n            path={route.addshippingattributes}\n            component={Addshippingattributes}\n          />\n          <PrivateRoute\n            path={route.addtaxattributes}\n            component={Addtaxattributes}\n          />\n\n          <PrivateRoute path={route.gender} component={Mastergenders} />\n          <PrivateRoute path={route.seo} component={Seopriority} />\n\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n          <PrivateRoute\n            exact\n            path={route.editdiscount}\n            component={Salediscount}\n          />\n\n          <PrivateRoute\n            exact\n            path={`${route.productAttributes}/:id`}\n            component={ProductAttributes}\n          />\n          <PrivateRoute\n            exact\n            path={`${route.createVariant}`}\n            component={CreateVariant}\n          />\n          <PrivateRoute\n            path={route.shipmentsettings}\n            component={Shipmentsettings}\n          />\n          <PrivateRoute\n            path={route.holiday_manager}\n            component={HolidayManager}\n          />\n          <PrivateRoute path={route.warehouse} component={Warehouse} />\n          <PrivateRoute path={route.inventory} component={Inventory} />\n        </Switch>\n      </NetworkProvider>\n      {/* </ProductProvider> */}\n    </ApolloProvider>\n  );\n};\n\nexport default MainApp;\n","import React from \"react\";\nimport { Alerts as Alert } from \"./components\";\nimport { AlertProps, AlertContext } from \"./context\";\n\nclass AppAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      severity: AlertProps.severity.success,\n      msg: \"\",\n      vertical: AlertProps.vertical.top,\n      horizontal: AlertProps.horizontal.center,\n    };\n  }\n\n  close = () => {\n    this.setState({\n      open: false,\n      severity: AlertProps.severity.success,\n      msg: \"\",\n      vertical: AlertProps.vertical.top,\n      horizontal: AlertProps.horizontal.center,\n    });\n  };\n\n  set = (props) => {\n    this.setState({ ...props });\n  };\n\n  render() {\n    return (\n      <AlertContext.Provider\n        value={{\n          ...this.state,\n          onclose: this.close,\n          setSnack: this.set,\n        }}\n      >\n        {this.state.open ? <Alert {...this.state} onclose={this.close} /> : \"\"}\n        {this.props.children}\n      </AlertContext.Provider>\n    );\n  }\n}\n\nexport default AppAlert;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport MainApp from \"./routes\";\nimport { GlobalProvider } from \"./context\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport AppAlert from \"./App.Alert\";\n\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n\n//       'Roboto'\n\n//     ].join(','),\n//   },\n// });\nfunction App() {\n  return (\n    <GlobalProvider>\n      <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n          <Router>\n            <AppAlert>\n              <MainApp />\n            </AppAlert>\n          </Router>\n        </div>\n      </MuiThemeProvider>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}