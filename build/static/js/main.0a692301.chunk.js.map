{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","config.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","components/Vendors/Vendors.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/ProducttypeList/components/Header/Header.js","screens/ProducttypeList/components/Results/Results.js","screens/ProducttypeList/Producttypecontent.js","screens/ProducttypeList/ProducttypeList.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/Header/Header.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","materiallist","producttypes","voucherdiscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","theme","root","card","breakpoints","values","md","maxWidth","display","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","LoginForm","className","classes","_useState","useState","isValid","touched","errors","_useState2","slicedToArray","formState","setFormState","useEffect","handleChange","event","persist","objectSpread2","target","name","type","checked","value","handleSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","arguments","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","onSubmit","error","fullWidth","email","label","onChange","password","Button","size","CardMedia","src","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","React","Component","withRouter","Dashboard_","Container","component","Input_Input","Dashboard","API_URL","GRAPHQL_DEV_CLIENT","globalCtxInitial","globalCtx","auth","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","createContext","GlobalProvider","Consumer","_React$useState","_React$useState2","Provider","productuploadCtxInitial","productCtx","product_categoy","steps","product_type","productname","material","product_type_shortcode","category","metalColour","metalpurities","selectedgender","selected_metal_colour","gender","product_gender","vendorcode","productseries","sizes","selected_sizes","metal","materials","gemstontypes","gemstonshapes","product_code","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesettings","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondsettings","diamondshape","diamondcount","diamondweight","metalindex","themes","prod_styles","occassions","collections","stonecount","stonecolour","product_images","metalcolour","metal_purity","metalpurity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","metals","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mapper","mappertype","keys","length","ProductProvider","console","info","data","materialCtxInitial","materialCtx","materialMaster","setMaterialCtx","MaterialContext","log","JSON","stringify","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","orders","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","alert","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","& > * + *","marginLeft","dateField","& + &","AddressForm","_React$useContext","useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","id","test","Autocomplete","defaultValue","options","map","option","renderTags","getTagProps","index","Chip","renderInput","params","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","shortCode","push","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","alias","earringbacking","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingLeft","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","autoComplete","styles","occasions","stones","gemstonecolor","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","diamondclarities","diamondcolors","diamondshapes","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","PRODUCTCATEGORY","gql","_templateObject","PRODUCTLIST","_templateObject2","PRODUCTDIAMONDTYPES","_templateObject3","PRODUCTEDIT","queries_templateObject","ORDERS","queries_templateObject2","MATERIALMASTER","queries_templateObject3","productCategory","query","response","allMasterProductCategories","nodes","_","allMasterProductTypes","allMasterMaterials","allMasterGenders","allMasterVendors","allMasterDiamondsSettings","allMasterDiamondsShapes","allMasterThemes","themeName","allMasterStyles","styleName","allMasterOccasions","occassionName","allMasterCollections","collectionName","allMasterStonesColors","stonecolor","allMasterStones","allMasterMetalsColors","productColor","allMasterMetalsPurities","purity","allMasterDiamondsColors","allMasterDiamondClarities","allProductLists","productSeries","allMasterGemstonesTypes","allMasterGemstonesShapes","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","apidata","orderList","allOrders","vendors","product_categories","product_types","initialNetworkCtx","networkCtx","status","called","loading","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","url","method","headers","resdata","token","_args","undefined","Content-Type","localStorage","getItem","fetch","body","isString","sent","json","statusText","abrupt","_x2","_x3","NetworkContext","NetworkProvider","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_React$useState3","_React$useState4","_React$useState5","_React$useState6","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","Access-Control-Allow-Origin","image_url","axios","put","file","forEach","element","unshift","direction","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","error_content","keyvalue","formdata","progress","_useQuery","useQuery","CircularProgress","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","columns","format","toFixed","useStyles1","flexShrink","secondary","TablePaginationActions","page","rowsPerPage","onChangePage","IconButton","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","useStyles2","tableWrapper","overflowX","AddContact","setPage","setRowsPerPage","emptyRows","min","contactlist","stickyHeader","column","slice","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Vendorlist","Vendors_AddContact","withApollo","history","useHistory","pageCount","setPageCount","_React$useState7","_React$useState8","offsetValue","setOffsetValue","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","refetch","productId","href","transSkuListsByProductId","skuUrl","productName","productType","dist_default","createdAt","Productlist","text-align","Product","Header","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","success","contrastText","main","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","border","defaultProps","filterButton","inner","actions","Results","_useState3","_useState4","_useState5","_useState6","Create_default","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","action","Producttypecontent","ProducttypeList_components_Header_Header","ProducttypeList_components_Results_Results","ProducttypeList","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","floor","random","toUpperCase","cursor","metaloption","primary","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchername","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","discounttype","setDiscounttype","_useState11","_useState12","minreq","setMinreq","_useState13","_useState14","_useState15","_useState16","isonce","setIsonce","_useState17","_useState18","_useState19","Date","_useState20","selectedDate","handleDateChange","handleonceperorder","multiline","rows","categories","CardActionArea","DateTimePicker","inputVariant","minDate","strictCompareDates","handleminreq","tabs","VoucherComponent","selectedtab","setSelectedtab","Tabs","scrollButtons","tab","Tab","selected","components_CategoryComponents_CategoryComponents","tabname","CategoryComponents","setSelected","aboutvoucher","Voucherdiscountcontent","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherContext_VoucherProvider","updatestatus","setUpdatestatus","formData","setFormData","hangeoptionchange","handleuploadstatus","_callee2","_context2","message","sku_size","PriceupdateContent","masters","setMasters","setSizes","_getsizes","getsizes","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate","typography","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","_React$createElement","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","fontWeight","resetButton","columnclose","columnnames","getColumnnames","saveaction","&:hover","SortHeader","anchorEl","setAnchorEl","handleClose","open","Boolean","xl","currentTarget","ArrowDownward_default","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","displytype","Header_SortHeader","columnobjs","showcolumns","shoppingCartByCartId","userProfileByUserprofileId","firstName","mobile","cartAddressesByCartId","addressline1","giftwrapsByCartId","paymentMode","paymentStatus","waybill","comments","pgresponse","skus","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","OrderList_components_Header_Header","displycolumns","OrderList_components_Results_Results","OrderList","OrderContext_OrderProvider","Orderlistcontent_Producttypecontent","grow","menuButton","search","fade","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","outline","minHeight","_clsx2","_React$useContext2","handleListItemClick","Drawer","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","disablePadding","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","Alert","elevation","DiamondDetails","setOpen","severity","snackMessage","setSnackMessage","reason","_React$useState9","_React$useState10","btnEdit","setBtnEdit","_React$useState11","edit","_React$useState12","diamondEditObject","setDiamondEditObject","diamond","Snackbar","autoHideDuration","DiamondDetails_Alert","diamondType","diamondColour","esm_Input_Input","stoneWeight","stoneCount","diamondSettings","diamondShape","bodydata","diamondListData","DiamondSave","Save_default","CancelOutlined_default","diamondData","parse","filter","settingData","shapeData","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","_GemstoneSave","list_data","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneType","GemstoneSave","gemstoneData","Variants","checkedA","checkedB","handleChangeswitch","generatedSku","metalColor","skuWeight","skuSize","heading","vendorDeliveryTime","Switch","isReadyToShip","isdefault","skulistdata","pricerun","handleinputChange","Skupricesync","_Skupricesync","req_product_id","costPrice","costPriceTax","sellingPrice","sellingPriceTax","markupPrice","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","discount","parseFloat","useStyle","variantFontSize","variantMarginTop","CreateVariant","prod_id","purities","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","location","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","productSizes","size_arr","_x5","_x6","_x7","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","link","textDecoration","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","defaultpricing","pricingcolumns","setPricingcolumns","defaultpricingnames","displypricingcolumns","setDisplypricingcolumns","_React$useState13","_React$useState14","_useContext","create_variant","duplicate_productName","state","setstate","pathname","split","changeVariant","_saveProductEditItem","productEditItem","opts","then","res","fatchvalue","genders","productListByProductId","gender_arr","gender_obj","productGemstonesByProductSku","productDiamondsByProductSku","productImagesByProductId","sizeVarient","vendorCode","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","catch","ProductEdit_CreateVariant","ProductAttributes_Alert","readOnly","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Close_default","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","borderTop","useStyless","FormPropsTextFields","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","descendingComparator","b","orderBy","headCells","numeric","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","indeterminate","headCell","sortDirection","TableSortLabel","active","property","visuallyHidden","useToolbarStyles","highlight","lighten","light","dark","EnhancedTableToolbar","Tooltip","clip","EnhancedTable","setOrder","setOrderBy","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","aria-labelledby","newSelecteds","n","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","withStyles","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","client","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","react_router","exact","path","routes_PrivateRoute","newmaterial","black","warning","blueGrey","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a692301.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    orderlist: '/orderlist',\n    materiallist: '/material',\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory'\n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    width: theme.breakpoints.values.md,\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\n\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  \n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    // const errors = validate(formState.values, schema);\n\n    // setFormState(formState => ({\n    //   ...formState,\n    //   isValid: errors ? false : true,\n    //   errors: errors || {}\n    // }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // dispatch(login());\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Sign in\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        Sign in on the internal platform\n        </Typography>\n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Sign in\n          </Button>\n        </form>\n       \n      </CardContent>\n      <CardMedia\n        className={classes.media}\n        title=\"Cover\"\n\n      >\n             <div className={classes.person}>\n                <img src=\"/images/shape1.png\"\n                 />\n              </div> \n        {/* <Typography\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n            Hella narvwhal Cosby sweater McSweeney's, salvia kitsch before they\n            sold out High Life.\n        </Typography>\n        <div className={classes.person}>\n        \n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src=\"/images/avatar_2.png\"\n            backgroundImage=\"/images/blob-shape.svg\"\n          />\n          <div>\n            <Typography\n              color=\"inherit\"\n              variant=\"body1\"\n            >\n                Ekaterina Tankova\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"body2\"\n            >\n                Manager at inVision\n            </Typography>\n          </div>\n        </div> */}\n      </CardMedia>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\nexport const API_URL = \"https://api-staging.stylori.com\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\"\n// export const GRAPHQL_DEV_CLIENT = \"http://192.168.1.105:8000/graphql\"\n// export const API_URL = \"http://192.168.1.105:8000\"","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        product_gender:\"\",\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        oldproductMetalColor:[],\n        oldproductMetalPurity:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        oldproductDiamondTypesArray:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n         editleadtime: \"\",\n         editreadytoship:false,\n         editisdefault: false,\n         editisactive: false,\n\n\n         editcostprice: 0,\n         editsellingprice:0,\n         editmarkupprice: 0,\n         editdiscountprice: 0,\n         editcostpricetax: 0,\n         editsellingpricetax:0,\n         editmarkuppricetax: 0,\n         editdiscountpricetax: 0,\n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\"\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const handleChange = event => {\n    \n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={handleChange} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['Rings','Bangles'].includes(productCtx.product_type) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTLIST = gql`\nquery MyQuery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName,\n      productCategory,\n      productType\n      productId,\n      createdAt\n      isactive,\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\nconst PRODUCTDIAMONDTYPES = `\nquery MyQuery {\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    vendorCode\n    gender\n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId {\n      nodes {\n        id\n        imagePosition\n        imageUrl\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        markupPriceTax\n        sellingPrice\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\nexport const ORDERS = gql`query {\n  allOrders {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n        allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: MATERIALMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        \n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials\n        }\n    }\n\n\n}","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'token'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, {\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    })\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    }\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour.name)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"_\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleNext = () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n     console.log(\"><><><><><\")\n     alert(JSON.stringify(formdata))\n      sendNetworkRequest('/productupload', {}, formdata)\n     }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    \n    <Grid item xs={12} sm={12}  >\n\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities']\n  const master_options_url = ['material','producttypes', 'Materials','Metal Colours','Metal Purities']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Vendor Name', minWidth: 200 },\n  { id: 'SKU', label: 'Vendor Code', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendors from '../../components/Vendors'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport const Vendorlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Vendor\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Vendors contactlist={[\n        {\n            \"name\":\"NAC1\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Vendorlist;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\n\nconst columns = [\n  { id: 'Product Id', label: 'Product Id' },\n  { id: 'name', label: 'Name' },\n  { id: 'Product type', label: 'Product type' },\n  { id: 'Product Category', label: 'Product Category' },\n  { id: 'CreatedAt', label: 'CreatedAt' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n          <Query\n              query={PRODUCTLIST}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allProductLists.nodes.map((row, index) => (\n                                  <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.productId}\n                                    <Button onClick={(e) => ProductEdit(row.productId)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     \n                                    <Link target='blank_' href={row.transSkuListsByProductId.nodes.length > 0 ? 'https://www.stylori.com/'+row.transSkuListsByProductId.nodes[0].skuUrl : '-'}  variant=\"body2\">\n                                    {row.productName}\n                                    </Link>\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.productType}</TableCell>\n                                  <TableCell align=\"left\">{row.productCategory}</TableCell>\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>data:{data}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Category\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Producttypecontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const ProducttypeList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default ProducttypeList;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleInputChange('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={vouchercode}\n                       value={vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                      //  onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        {props.categories.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: discounttype === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography className={discounttype === option ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>  \n              </div> \n                         \n            \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}\n        </Grid>\n         {discounttype === 'Free Shipping' || discounttype === \"\" ? null :  \n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          />\n        </Grid>\n}\n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Active Date\n            </Typography>\n          </Grid>\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <DateTimePicker\n        label=\"Start Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        minDate={new Date()}    \n        onChange={handleDateChange}\n      />\n      </Grid>\n              <Grid  item xs={6} sm={6} spacing={1}>\n              <DateTimePicker\n        label=\"End Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        minDate={selectedDate}\n        strictCompareDates={true}\n        onChange={handleDateChange}\n      />\n      </Grid>\n          </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: isonce\n            })}\n            onClick={event => handleonceperorder(event, isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea>\n          </Grid>\n         \n          <Grid item xs={12} sm={12} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        \n        </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n        {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n          \n          <Grid  item xs={3} sm={3} spacing={1}>\n          \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: minreq === option\n            })}\n            onClick={event => handleminreq(event, option)}\n\n            key={option}\n          >\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                className={minreq === option ? classes.selectedtext : null}\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          </Grid>\n        ))}\n        </Grid>\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {minreq === 'None' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label={minreq === 'Minimum Order Value' ? 'Minimun Order' : 'Minimum Quantity'}\n          />\n        }\n        </Grid>\n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n         \n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Purity', label: 'Purity' },\n  { value: 'Availability', label: 'Availability' },\n  { value: 'Styles', label: 'Styles' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleTabsChange = (event, value) => {\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Tabs\n        className={classes.tabs}\n        scrollButtons=\"auto\"\n        value={selectedtab}\n        onChange={handleTabsChange}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            selected\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <div className={classes.content}>\n    \n     <CategoryComponents  tabname={selectedtab}  materials={['Gold', 'Diamond']} />\n     {/* <CategoryComponents  tabname={selectedtab}  materials={['Rings', 'Bracelets']} /> */}\n    \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Voucherdiscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <VoucherComponent className={classes.aboutvoucher} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const hangeoptionchange = type => (event, option) => {\n      setFormData({...formData,[type]: option})\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={3}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.vendorcode}\n              getOptionLabel={option => option.name}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.category}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.product_type}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('product_type')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.metalpurity}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('metalpurity')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Purity\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n\n       \n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.diamondtypes}\n              getOptionLabel={option => option.label}\n              onChange={hangeoptionchange('diamondtypes')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Diamond Colour\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n       \n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.sizes}\n              getOptionLabel={option => option.sku_size}\n              onChange={hangeoptionchange('sizes')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Sizes\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={props.masterData.gemstontypes}\n              getOptionLabel={option => option.name}\n              onChange={hangeoptionchange('gemstontypes')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Gemstone Type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              options={['Diamond','Gemstone','Gold','Making Charge','price update']}\n              onChange={hangeoptionchange('pricingcomponent')}\n\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Price Component\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid>\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    \n    getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} sizes={sizes} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     {/* <h4 className=\"products\">Variants Table</h4>    */}\n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n           <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography> \n        </Grid>\n        <Grid item>\n\n          <SortHeader columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.tableWrapper}>\n              <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null }\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n   \n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header getColumnnames={columnchanged} columns={columnnames}/>\n    <Results\n      className={classes.results}\n     orders={orderCtx.orderMaster.orders}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(orderList.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  function handleClick() {\n      \n      setGlobalCtx({ ...globalCtx, isExpand: !globalCtx.isExpand })\n\n  }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n       <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Discounts\" />\n        {globalCtx.isExpand ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography  variant=\"h6\" noWrap>\n            NAC Jewellers\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        return true;\n    }\n\n    const Component = props => withAppBar(component, props);\n\n    return checkAuth() ? <Component {...rest} /> : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n  }\n  function DiamondSave(id){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(productCtx.diamondsettings && productCtx.diamondshape && productCtx.diamondcount && productCtx.diamondweight){\n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(id===diamondListData.id){\n          diamondListData.diamondSettings=productCtx.diamondsettings.name;\n          diamondListData.diamondShape = productCtx.diamondshape.name;\n          diamondListData.stoneCount = productCtx.diamondcount;\n          diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata['diamondSettings'] = productCtx.diamondsettings.name\n          bodydata['diamondShape'] = productCtx.diamondshape.name\n          bodydata['stoneCount'] = productCtx.diamondcount;\n          bodydata['stoneWeight'] = productCtx.diamondweight;\n          bodydata['diamondid'] = id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n      console.log(\"------******\")\n      console.log(JSON.stringify(bodydata))\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      // setSnackMessage({\n      //   ...snackMessage,\n      //   message:\"This is successfully saved\",\n      //   severity:\"success\"\n      // })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n  }\n async function GemstoneSave(id) {\n    if (productCtx.gemstonesettings && productCtx.gemstoneshape && productCtx.gemstonecount && productCtx.gemstoneweight && productCtx.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = productCtx.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = productCtx.gemstoneshape.name;\n          gemstoneListData.stoneCount = productCtx.gemstonecount;\n          gemstoneListData.stoneWeight = productCtx.gemstoneweight;\n          gemstoneListData.gemstoneSize = productCtx.gemstonesize;\n          bodydata['gemstoneSetting'] = productCtx.gemstonesettings.name\n          bodydata['gemstoneShape'] = productCtx.gemstoneshape.name\n          bodydata['stoneCount'] = productCtx.gemstonecount;\n          bodydata['gemstoneSize'] = productCtx.gemstonesize;\n          bodydata['stoneWeight'] = productCtx.gemstoneweight;\n          bodydata['id'] = id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={(btnEdit.action && btnEdit.id == row.generatedSku) ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        onChange={handleChangeswitch('editreadytoship')}\n                        disabled={!(btnEdit.action && btnEdit.id == row.generatedSku)}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={(btnEdit.action && btnEdit.id == row.generatedSku) ? productCtx.editisdefault : row.isdefault}\n                        disabled={!(btnEdit.action && btnEdit.id == row.generatedSku)}\n                        onChange={handleChangeswitch('editisdefault')}\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                        disabled={!(btnEdit.action && btnEdit.id == row.generatedSku)}\n                       checked={(btnEdit.action && btnEdit.id == row.generatedSku) ? productCtx.editisactive : row.isActive}\n                        disabled={!(btnEdit.action && btnEdit.id == row.generatedSku)}\n                        onChange={handleChangeswitch('editisactive')}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n\n    var bodydata = {}\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.costPrice = productCtx.editcostprice;\n          skulistdata.costPriceTax = productCtx.editcostpricetax;\n          skulistdata.sellingPrice =  productCtx.editsellingprice;\n          skulistdata.sellingPriceTax = productCtx.editsellingpricetax\n          skulistdata.markupPrice = productCtx.editmarkupprice\n          skulistdata.markupPriceTax = productCtx.editmarkuppricetax\n          skulistdata.discountPrice = productCtx.editdiscountprice\n          skulistdata.discountPriceTax = productCtx.editdiscountpricetax\n\n           bodydata['costPrice'] = parseFloat(productCtx.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(productCtx.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(productCtx.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(productCtx.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(productCtx.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(productCtx.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(productCtx.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(productCtx.editdiscountpricetax)\n           bodydata['generatedSku'] = id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n\n      sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  \n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                } : </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale Percentage') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                \n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.productSizes}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">Variants Table</h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport Skupricing from './Skupricing';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SortHeader from './Components/SortHeader';\nimport columnnames from './columnnames.json';\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricingnames);\n\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n  \n  const handleChange = panel => (event, isExpanded) => {\n    createVariant()\n    setExpand(isExpanded ? true : false);\n    \n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  const handleoptionChange = type => (event, value) => {\n      setProductCtx({ ...productCtx, [type]: value})\n}\n\nconst handleinputChange =type => e => {\n  const re = /^[a-zA-Z \\b]+$/;\n  if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value})\n  }\n}\n// const handleinputChange = type => (event, value) => {\n//   alert(event.target.value)\n//       setProductCtx({ ...productCtx, [type]: value})\n// }\nfunction getColumnnames(columnnames,displytype) {\n  let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n  if(displytype === 1)\n  {\n    setDisplycolumns(displycolumns)\n    setVarientcolumns(columnnames)\n  }else{\n    setPricingcolumns(columnnames)\n    setDisplypricingcolumns(displycolumns)\n  }\n    \n   \n\n}\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    productCtx['oldproductDiamondTypesArray'] = diamondTypesArray\n\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    //setstate({ ...state, create_variant: true })\n  }\nasync function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions : productCtx.occassions,\n      collections : productCtx.collections,\n      stonecount : productCtx.stonecount,\n      stonecolour : productCtx.stonecolour,\n      gender : productCtx.product_gender\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    }\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(productEditItem))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData\n    }\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        var genders = fatchvalue.data.productListByProductId.gender\n        genders = genders.split(',')\n        let gender_arr = []\n        genders.forEach(element => {\n          let gender_obj = {\n            label: element\n          }\n          gender_arr.push(gender_obj)\n        });\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: fatchvalue.data.productListByProductId.sizeVarient,\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\n          product_gender:gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\n          // productDiamondClarity:diamondClaritySku,\n        })\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n      <Grid container>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n          <Grid item container spacing={1} >\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\n              \n              \n              <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    pattern=\"[a-zA-Z]*\"\n                    value={productCtx.productname}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Product Name\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_categoy}\n                  id=\"product_category\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                  name=\"product_category\"\n                  label=\"Product Category\"\n  \n                />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_type}\n                  id=\"product_type\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  name=\"product_type\"\n                  label=\"Product Type\"\n  \n                />\n                  <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Vendor Name\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.vendorcode}\n                        id=\"productvendorcode\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        name=\"Vendor Name\"\n                        />\n  \n                 <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"seo_text\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"seo_text\"\n                  label=\"Minimum Order Quantity\"\n  \n                /> \n               <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"url\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"url\"\n                  label=\"Maximum Order Quantity\"\n                /> \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={[{label: \"Silver\",name:\"Silver\"},{label: \"Gold\",name:\"Gold\"}]}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n                 <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalColor}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalPurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Purity\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.product_gender}\n                      getOptionLabel={option => option.label}\n                      onChange={handleoptionChange('product_gender')}\n                      options={productCtx.masterData.gender}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Gender\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.themes}\n                      options={productCtx.masterData.themes}\n                      value={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Themes\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.prod_styles}\n                      options={productCtx.masterData.styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      value={productCtx.prod_styles}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Styles\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.occassions}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.occassions}\n                      options={productCtx.masterData.occasions}\n                      onChange={handleoptionChange('occassions')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Occasions\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.collections}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.collections}\n                      options={productCtx.masterData.collections}\n                      onChange={handleoptionChange('collections')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Collections\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecount}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecount}\n                      options={productCtx.masterData.stones}\n                      onChange={handleoptionChange('stonecount')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"No of Stones\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecolour}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecolour}\n                      options={productCtx.masterData.gemstonecolor}\n                      onChange={handleoptionChange('stonecolour')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Stone Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              \n              \n              \n              \n              <Grid item container style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\"\n            }}>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Save\n             </Button>\n                <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button>\n              </Grid>\n            </Grid>\n              \n              </Grid>\n             \n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n                \n              </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n              <DiamondDetails diamond={productCtx.diamondlist} />\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\n\n              <Grid style={{\n                \n              }}>\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n               \n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\n                    <ExpansionPanelSummary\n                      expandIcon={expand? <CloseIcon /> : <AddIcon />}\n                      aria-controls=\"panel1c-content\"\n                      id=\"panel1c-header\"\n                    >\n                      <div className={classes.column}>\n                        <Typography className={classes.heading}>Add New variant</Typography>\n                      </div>\n                    \n                    </ExpansionPanelSummary>\n                    <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \n                    </ExpansionPanelDetails>\n                    <Divider />\n                    {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n                    </ExpansionPanel>\n                    \n                \n                </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}><SortHeader columnnames={columnnames.varients}  getColumnnames={getColumnnames} displytype={1}/>  </Grid>\n\n              <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n                  \n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>  \n              <SortHeader columnnames={pricingcolumns} displycolumns={displypricingcolumns}  getColumnnames={getColumnnames} displytype={2}/>\n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run For This Product\n              </Button>\n            </Grid>\n\n              <Skupricing variants={productCtx.variants} columns={pricingcolumns} displycolumns={displypricingcolumns} />\n\n            </Grid>\n            \n          </Grid>\n        </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport {BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration,Priceupdate, Vendorlist, Productlist, Materiallist, CategoryList, ProducttypeList, Voucherdiscount, OrderList } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext,ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute  path={route.materiallistpage} component={newmaterial}/>\n                    <PrivateRoute  path={route.producttypes} component={ProducttypeList} />\n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute  path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute  path={route.orderlist} component={OrderList} />\n\n                     <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />  \n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />            \n          </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}