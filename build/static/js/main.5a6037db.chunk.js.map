{"version":3,"sources":["routes/route.js","components/Input.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/SelectPlaceholder.js","context/GlobalContext.js","config.js","context/ProductuploadContext.js","context/MaterialContext.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","components/Vendors/Vendors.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","components/AddContact/AddContact.js","screens/MaterialList/Content.js","screens/MaterialList/Materiallist.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","materiallist","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","Login","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","Container","component","maxWidth","CssBaseline","className","Typography","noValidate","Input_Input","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","color","Box","mt","React","Component","Dashboard_","withRouter","Dashboard","PlaceholderText","styled","Text","_ref","placeholderUp","position","transition","pointerEvents","top","left","zIndex","paddingLeft","paddingRight","backgroundColor","fontSize","SelectContainer","View","height","display","SelectView","placeholder","react_select_browser_esm","globalCtxInitial","globalCtx","auth","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","createContext","GlobalProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","children","productuploadCtxInitial","productCtx","product_categoy","steps","product_type","productname","material","product_type_shortcode","category","metalColour","metalpurities","selectedgender","selected_metal_colour","gender","vendorcode","productseries","size","sizes","selected_sizes","metal","materials","gemstontypes","gemstonshapes","product_code","gemstonelist","diamondlist","gemstonetype","gemstoneshape","gemstonesetings","gemstonesize","gemstonecount","gemstoneweight","stonetype","diamondclarity","diamondcolor","diamondsettings","diamondshape","diamondcount","diamondweight","metalindex","themes","prod_styles","occassions","collections","stonecount","stonecolour","metal_purity","metalpurity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","metals","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mapper","mappertype","keys","length","ProductProvider","console","info","data","useEffect","materialCtxInitial","materialCtx","materialMaster","setMaterialCtx","MaterialContext","log","JSON","stringify","MaterialProvider","setmaterialCtx","PaymentForm","_React$useContext","useContext","handleInputChange","objectSpread","defineProperty","target","purityChange","selectedOption","Fragment","container","spacing","sm","disabled","onChange","isMulti","options","metalcolour","default_size","useStyles","makeStyles","theme","button","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","Review","classes","useTheme","useRef","handleChange","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","shape","count","weight","gemstonesettings","FormLabel","labelPlacement","diamondclarities","diamondcolors","diamondshapes","justify","onClick","metalsarr","stonedetails","push","Table","table","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","Edit_default","Delete_default","splice","deletematerial","root","flexGrow","input","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","chipFocused","emphasize","palette","grey","noOptionsMessage","singleValue","bottom","paper","marginTop","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","shortCode","clsx","textField","vendorDelivaryDays","InputProps","endAdornment","InputAdornment","isreorder","default_metal_colour","default_metal_purity","default_metal_size","styles","occasions","stones","gemstonecolor","PRODUCTCATEGORY","gql","_templateObject","queries_templateObject","MATERIALMASTER","_templateObject2","productCategory","query","response","allMasterProductCategories","nodes","_","allMasterProductTypes","allMasterMaterials","allMasterGenders","allMasterVendors","allMasterDiamondsSettings","allMasterDiamondsShapes","allMasterThemes","allMasterStyles","allMasterOccasions","allMasterCollections","allMasterStonesColors","allMasterStones","allMasterMetalsColors","allMasterMetalsPurities","allMasterDiamondsColors","allMasterDiamondClarities","allProductLists","productSeries","allMasterGemstonesTypes","allMasterGemstonesShapes","alias","allMasterGemstonesSettings","apidata","initialNetworkCtx","networkCtx","status","called","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","asyncToGenerator","regenerator_default","mark","_callee","url","params","method","headers","resdata","token","_args","wrap","_context","prev","next","undefined","Content-Type","localStorage","getItem","window","location","fetch","body","isString","sent","json","alert","concat","statusText","abrupt","stop","_x","_x2","_x3","NetworkContext","NetworkProvider","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","control","_uploadimagetoserver","bodaydata","responsedata","returnData","signedRequest","image","fileExtension","Access-Control-Allow-Origin","axios","put","then","result","catch","index","react_filepond","oninit","labelIdle","imagePreviewHeight","allowMultiple","acceptedFileTypes","maxFiles","onprocessfile","err","fileItem","filename","source","onaddfile","uploadimagetoserver","onremovefile","onupdatefiles","fileItems","Plot","createPlotlyComponent","Plotly","PlotlyRenderers","createPlotlyRenderers","productid","purity","gemstone","costprice","sellingprice","Pivot","PivotTableUI_default","s","setcurrentstate","renderers","TableRenderers","_paper","appBar","layout","breakpoints","up","marginBottom","stepper","background","buttons","justifyContent","nested","Productupload","activeStep","setActiveStep","Paper","Stepper","Step","StepLabel","gutterBottom","step","Step6_Review","Step5_Review","Step4_Review","Step7_Review","Error","getStepContent","formdata","default_metal_color","diamond","product_vendor_code","productvendorcode","earringbacking","stonecolours","defaultsize","defaultmetalsize","progress","_useQuery","useQuery","CircularProgress","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","_React$useState3","_React$useState4","Link","underline","RouterLink","to","Card","fullwidth","CardContent","columns","format","toFixed","useStyles1","flexShrink","text","secondary","TablePaginationActions","page","rowsPerPage","onChangePage","IconButton","event","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","useStyles2","tableWrapper","overflowX","AddContact","setPage","setRowsPerPage","emptyRows","min","contactlist","stickyHeader","column","slice","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Vendorlist","Productlist","text-align","Product_AddContact","move","Content","AddContact_AddContact","Materiallist","MaterialContext_MaterialProvider","grow","menuButton","title","search","borderRadius","fade","common","white","&:hover","searchIcon","inputRoot","inputInput","transitions","create","sectionDesktop","sectionMobile","drawer","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","hide","whiteSpace","drawerOpen","drawerClose","toolbar","mixins","content","_clsx","_clsx2","_React$useContext2","Drawer","open","ChevronRight_default","ChevronLeft_default","Divider","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","primary","PrimaryAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","MainApp","client","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","react_router","exact","path","routes_PrivateRoute","App","GlobalContext_GlobalProvider","react_router_dom","routes","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a6037db.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    materiallist: '/material'\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\"\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n        inputProps={{ pattern, maxLength, minLength }}\n        style={{ width: \"100%\" }}\n        helperText={<b>{helperText}</b>}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport \"./Login.css\"\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n    <CssBaseline />\n    <div className=\"paper\">\n     \n      <Typography component=\"h1\" variant=\"h5\">\n        Sign in\n      </Typography>\n     \n      <form  noValidate>\n        <Input\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <Input\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n       \n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"submitbtn\"\n        >\n          Sign In\n        </Button>\n       \n      </form>\n    </div>\n    <Box mt={5}>\n    </Box>\n  </Container>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: 10,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#cccccc',\n}));\n\nconst SelectContainer = styled(View)({\n  position: 'relative',\n  height: 55,\n  display: 'flex',\n  zIndex: 4\n});\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp } = props;\n  return (\n    <SelectContainer>\n      <Select \n        fullWidth\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\nexport const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\n// export const GRAPHQL_DEV_CLIENT = \"http://localhost:8000/graphql\"\n// export const API_URL = \"http://localhost:8000\"","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {\n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step4','Step5','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[{\n            value:1,\n            label:\"1\"\n        },{\n            value:2,\n            label:\"2\"\n        },{\n            value:3,\n            label:\"3\"\n        },{\n            value:4,\n            label:\"4\"\n        }],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        gemstonelist:[],\n        diamondlist:[],\n\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesetings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[]\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\n\nimport \"./Productupload.css\"\n\n\n\n\n\nexport default function PaymentForm() {\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n\n  return (\n    <React.Fragment>\n      \n\n      <Grid container spacing={1}>\n      <Grid item xs={6} sm={3}>\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n      </Grid>\n      \n     <Grid item xs={6} sm={3}>      \n          {/* <FormLabel component=\"legend\" >Material Purity</FormLabel> */}\n           <Box mt={1} >         \n          <Select\n                    isMulti\n                    className=\"masteroverlay\"\n                    placeholder=\"Metal Purity\"\n                    onChange={purityChange('metalpurity')}\n                    options={productCtx.masterData.metalpurity}\n                  />\n          </Box>          \n          \n    </Grid>\n    \n\n    <Grid item xs={6} sm={3}>\n      \n      \n      {/* <FormLabel component=\"legend\" >Metal Colour</FormLabel> */}\n       <Box mt={1} >         \n      <Select\n                isMulti\n                className=\"masteroverlay\"\n                placeholder=\"Metal Colour\"\n                onChange={purityChange('metalcolour')}\n                options={productCtx.masterData.metalcolour}\n              />\n      </Box>          \n      \n</Grid>\n<Grid item xs={3} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Default Size For Price\"\n    name=\"size\"\n    autoComplete=\"size\"\n    onChange = {handleInputChange('default_size')}\n    value={productCtx.default_size}\n    \n    />\n</Grid>\n      \n     <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Weight For Default Size\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_weight')}\n          value={productCtx.metal_weight}\n          \n          />\n    </Grid>\n    <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height}\n          \n          />\n    </Grid>\n\n    <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width}\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    <Grid item xs={3} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length}\n          \n          />\n    </Grid>\n           \n        \n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr })\n\n  }\n  function clearmetalvalue()\n  {\n    setProductCtx({ ...productCtx, \n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    if(productCtx.diamondclarity)\n    {\n      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n\n    }else{\n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }\n\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    \n    <Grid container xs={12} spacing={2}>\n\n    <Grid item xs={4} >\n    <FormLabel component=\"legend\" labelPlacement=\"start\">Diamond Type/Clarity</FormLabel>\n\n    <Box mt={1}>\n\n                <Select\n                    className=\"selectionoverlay\"\n                    placeholder=\"Diamond Type/Clarity\"\n                    onChange={handleChange(\"diamondclarity\")}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities  }\n                  />\n             </Box>\n       \n    </Grid>\n\n    <Grid item xs={4} >\n    <FormLabel component=\"legend\" labelPlacement=\"start\">Diamond Colour</FormLabel>\n                <Box mt={1}>\n                  <Select\n                    className=\"selectionoverlay\"\n                    placeholder=\"Diamond Colour\"\n                    onChange={handleChange('diamondcolor')}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n                  </Box>\n\n    \n    </Grid>\n    <Grid item xs={4} >\n    <FormLabel component=\"legend\" labelPlacement=\"start\">Diamond Setting</FormLabel>\n                <Box mt={1}>\n        <Select \n                    className=\"selectionoverlay\"\n                    placeholder=\"Diamond Setting\"\n                    onChange={handleChange('diamondsettings')}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                  />\n                  </Box>\n    </Grid>\n    <Grid item xs={4} >\n    <FormLabel component=\"legend\" labelPlacement=\"start\">Diamond Shape</FormLabel>\n\n    <Box mt={1}>\n    <Select\n\n                    className=\"selectmargin\"\n                    placeholder=\"Diamond Shape\"\n                    value={productCtx.diamondshape}\n                    onChange={handleChange('diamondshape')}\n                    options={productCtx.masterData.diamondshapes}\n                  />\n                  </Box>\n    \n    </Grid>\n    <Grid item xs={4} >\n    <FormLabel component=\"legend\" labelPlacement=\"start\">#of Stones</FormLabel>\n    <Box mt={1}>\n      <Input\n          variant=\"outlined\"\n          fullWidth\n          id=\"size\"\n          margin=\"dense\"\n          label=\"#of Stones\"\n          name=\"size\"\n          type=\"number\"\n          autoComplete=\"size\"\n          onChange={handleInputChange('diamondcount')}\n          value={productCtx.diamondcount}\n          />\n          </Box>\n    </Grid>\n    <Grid item xs={4} >\n    <FormLabel component=\"legend\" labelPlacement=\"start\">Weight</FormLabel>\n    <Box mt={1}>\n      <Input\n          variant=\"outlined\"\n          fullWidth\n          id=\"size\"\n          margin=\"dense\"\n          label=\"Weight\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange={handleInputChange('diamondweight')}\n          value={productCtx.diamondweight}\n          />\n          </Box>\n    </Grid>\n    </Grid>\n    </Grid>\n    <Grid  container xs={12} spacing={2}>\n\n    <Grid item xs={4} >\n    <FormLabel component=\"legend\" labelPlacement=\"start\">Gemstone Type</FormLabel>\n    <Box mt={1}>\n                <Select\n                    className=\"selectionoverlay\"\n                    placeholder=\"Gemstone Type\"\n                    value={productCtx.gemstonetype}\n                    onChange={handleChange('gemstonetype')}\n                    options={productCtx.masterData.gemstontypes}\n                  />\n             </Box>   \n    </Grid>\n    <Grid item xs={4} >\n    <FormLabel component=\"legend\" labelPlacement=\"start\">Gemstone Shape</FormLabel>\n    <Box mt={1}>\n     <Select\n                    className=\"selectionoverlay\"\n                    placeholder=\"Gemstone Shape\"\n                    value={productCtx.gemstoneshape}\n                    onChange={handleChange('gemstoneshape')}\n                    options={productCtx.masterData.gemstonshapes}\n                  />\n                  </Box>\n    \n    </Grid>\n    <Grid item xs={4} >\n    <FormLabel component=\"legend\" labelPlacement=\"start\">Gemstone Settings</FormLabel>\n    <Box mt={1}>\n        <Select \n                    className=\"selectionoverlay\"\n                    placeholder=\"Gemstone Setting\"\n                    value={productCtx.gemstonesettings}\n                    onChange={handleChange('gemstonesettings')}\n                    options={productCtx.masterData.gemstonesettings}\n                  />\n                  </Box>\n    </Grid>\n    <Grid item xs={4} >\n    <FormLabel component=\"legend\" labelPlacement=\"start\">Gemstone Shape</FormLabel>\n    <Box mt={1}>\n    <Input\n          variant=\"outlined\"\n          fullWidth\n          id=\"size\"\n          margin=\"dense\"\n          label=\"Gemstone Size\"\n          name=\"size\"\n          onChange={handleInputChange('gemstonesize')}\n          autoComplete=\"size\"\n          value={productCtx.gemstonesize}\n          />\n    \n    </Box>\n    </Grid>\n    <Grid item xs={4} >\n    <FormLabel component=\"legend\" labelPlacement=\"start\">#of Stones</FormLabel>\n    <Box mt={1}>\n      <Input\n          variant=\"outlined\"\n          fullWidth\n          id=\"size\"\n          margin=\"dense\"\n          label=\"#of Stones\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange={handleInputChange('gemstonecount')}\n          value={productCtx.gemstonecount}\n          />\n         </Box> \n    </Grid>\n    <Grid item xs={4} >\n    <FormLabel component=\"legend\" labelPlacement=\"start\">Weight</FormLabel>\n    <Box mt={1}>    \n      <Input\n          variant=\"outlined\"\n          fullWidth\n          id=\"size\"\n          margin=\"dense\"\n          label=\"Weight\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange={handleInputChange('gemstoneweight')}\n          value={productCtx.gemstoneweight}\n          />\n         </Box> \n    </Grid>\n    \n    </Grid>\n\n    <Grid container item xs={12} justify=\"flex-end\">\n    <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n        Add\n      </Button>\n\n    </Grid>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n        <Grid item xs={6} >\n        </Grid> \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n  const useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    \n    <Grid item xs={12} sm={4} >\n    <TextField fullWidth\n        label=\"Vendor Code\"\n        id=\"simple-start-adornment\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        value={productCtx.vendorcode.shortCode}\n        className={clsx(classes.margin, classes.textField)}\n        \n      />\n    </Grid>\n    \n    <Grid item xs={12} sm={4}>\n    <TextField fullWidth\n        label=\"Vendor Lead Time\"\n        id=\"simple-start-adornment\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        value={productCtx.vendorcode.vendorDelivaryDays}\n        className={clsx(classes.margin, classes.textField)}\n        InputProps={{\n          endAdornment: <InputAdornment position=\"start\">In Days</InputAdornment>,\n        }}\n      />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n                  <Select\n                    value={productCtx.isreorder}\n                    placeholder=\"Re Orderable\"\n                    onChange={handleChange('isreorder')}\n                    options={[{value:'Yes',label:'Yes'},{value:'No',label:'No'}]}\n                  />\n    </Grid>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Default SKU For Display\n          </Typography> \n    </Grid>\n    <Grid item xs={4} >\n\n                  \n                  <Select\n                    value={productCtx.default_metal_colour}\n                    placeholder=\"Metal Colour\"\n                    onChange={handleChange('default_metal_colour')}\n                    options={productCtx.metalcolour}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n              <Select\n                    value={productCtx.default_metal_purity}\n                    placeholder=\"Metal Purity\"\n                    onChange={handleChange('default_metal_purity')}\n                    options={productCtx.metalpurity}\n                  />\n   \n    </Grid>\n    <Grid item xs={4} >\n              <Select\n                    value={productCtx.default_metal_size}\n                    placeholder=\"Size\"\n                    onChange={handleChange('default_metal_size')}\n                    options={productCtx.selected_sizes}\n                  />\n   \n    </Grid>\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\n\nimport { ProductContext } from '../../context';\n\nexport default function Review() {\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                    <FormLabel component=\"legend\" >Theme</FormLabel>\n                    <Box mt={1} > \n                          <Select\n                          placeholder=\"\"\n                          isMulti\n                          value={productCtx.themes}\n                          onChange={handleChange('themes')}\n                          options={productCtx.masterData.themes} />\n                         </Box>                        \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n          <FormLabel component=\"legend\">Style</FormLabel>\n          <Box mt={1} >            \n    <Select\n        placeholder=\"\"\n        isMulti\n        value={productCtx.prod_styles}\n        onChange={handleChange('prod_styles')}\n        options={productCtx.masterData.styles}\n      />\n      </Box>\n    </Grid>\n    <Grid item xs={12} sm={4}>\n          <FormLabel component=\"legend\">Ocassion</FormLabel>\n          <Box mt={1} > \n    <Select\n        placeholder=\"\"\n        isMulti\n        value={productCtx.occassions}\n        onChange={handleChange('occassions')}\n        options={productCtx.masterData.occasions}\n      />\n      </Box>\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    <FormLabel component=\"legend\" >Collection</FormLabel>\n    <Box mt={1} > \n    <Select\n        placeholder=\"\"\n        isMulti\n        value={productCtx.collections}\n        onChange={handleChange('collections')}\n        options={productCtx.masterData.collections}\n      />\n      </Box>\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    <FormLabel component=\"legend\" ># of Stones</FormLabel>\n    <Box mt={1} > \n    <Select\n        placeholder=\"\"\n        value={productCtx.stonecount}\n        onChange={handleChange('stonecount')}\n        options={productCtx.masterData.stones}\n      />\n      </Box>\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    <FormLabel component=\"legend\" >Gemstone Colour</FormLabel>\n    <Box mt={1} > \n    <Select\n        placeholder=\"\"\n        value={productCtx.stonecolour}\n        onChange={handleChange('stonecolour')}\n        isMulti\n        options={productCtx.masterData.gemstonecolor}\n      />\n      </Box>\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n </React.Fragment>\n  );\n}","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n  export {\n    PRODUCTCATEGORY\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\n\n\nexport const MATERIALMASTER = gql`query {\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings\n        }\n    }\n}\n\n\nexport const materialMaster = {\n    query: MATERIALMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        return {\n            materials\n        }\n    }\n\n\n}","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'token'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n        else window.location = '/'\n    }\n    const response = await fetch(url, {\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    })\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n    }\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        width: 150,\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  async function uploadimagetoserver(bodaydata)\n  {\n   let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension})\n   var returnData = responsedata.data.returnData;\n   var signedRequest = returnData.signedRequest;\n   var url = returnData.url;\n   console.log(\"responseurl\"+url);\n   // Put the fileType in the headers for the upload\n   var options = {\n       headers: {\n           'Content-Type': bodaydata.fileExtension,\n           'Access-Control-Allow-Origin':'*'\n       }\n   };\n   axios.put(signedRequest, bodaydata, options)\n       .then(result => {\n          alert(url);\n       })\n       .catch(error => {\n       })\n  }\n const handleInit = () =>\n  {\n    console.log(\"FilePond instance has initialised\");\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n        {/* {productCtx.default_metal_colour.name} */}\n\n          </Typography> \n    </Grid>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Rose Gold\n          </Typography> \n    </Grid>\n    \n    <Grid item xs={12}>\n        <Grid container justify=\"left\" spacing={2}>\n           {[0, 1, 2, 3, 4].map((value, index) => ( \n            <Grid xs={2} item>\n\n                  <FilePond \n                          oninit={() => handleInit()}\n                          labelIdle={index === 5 ? 'Add More Images' : 'Image '+(index+1)}\n                          imagePreviewHeight={100}\n                          allowMultiple={true}\n                          acceptedFileTypes={['image/*']}\n                          maxFiles={5} \n                          onprocessfile={(err, fileItem) => {\n\n                            console.log('onprocessfile', fileItem.filename, fileItem.source);\n                    \n                           \n                    \n                        }}\n                          onaddfile={(err, fileItem) => {\n                            console.log('onaddfile', fileItem.fileExtension, fileItem.source);\n                            uploadimagetoserver(fileItem)\n\n                          }}\n                          onremovefile={(fileItem) => {\n                    \n                            console.log('onremovefile', fileItem);\n                    \n                          }}                          \n                          onupdatefiles={fileItems => {\n                            console.log(\"fileuploaded\");\n                              // Set currently active file objects to this.state\n                            }}>\n            \n                </FilePond>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  margin=\"dense\"\n                  id=\"companyname\"\n                  label=\"Image Url\"\n                  name=\"companyname\"\n                  autoComplete=\"off\"\n                 />\n            </Grid>\n           ))} \n            \n            \n        </Grid>\n        <Grid container justify=\"left\" spacing={2}>\n        <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            White Gold\n          </Typography> \n    </Grid> \n           {[0, 1].map(value => ( \n\n            <Grid xs={2} container item >\n\n              <FilePond \n                          labelIdle=\"Default image \"\n                          imagePreviewHeight={100}\n                          allowMultiple={true}\n                          maxFiles={5}                           \n                          onupdatefiles={fileItems => {\n                            \n                          }}>\n                </FilePond>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  margin=\"dense\"\n                  id=\"companyname\"\n                  label=\"Image Url\"\n                  name=\"companyname\"\n                  autoComplete=\"off\"\n                 />\n                 <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                  >\n            Submit\n          </Button>\n            </Grid>\n           ))} \n            \n            \n        </Grid>\n        <Grid container justify=\"left\" spacing={2}>\n        <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            White Gold\n          </Typography> \n    </Grid> \n           {[0, 1].map(value => ( \n            <Grid xs={2} item>\n\n              <FilePond \n                          \n                          labelIdle=\"Default image \"\n                          imagePreviewHeight={100}\n                          allowMultiple={true}\n                          maxFiles={5}                           \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}>\n                </FilePond>\n                <TextField\n                  variant=\"outlined\"\n                  fullWidth\n                  margin=\"dense\"\n                  id=\"companyname\"\n                  label=\"Image Url\"\n                  name=\"companyname\"\n                  autoComplete=\"off\"\n                 />\n            </Grid>\n           ))} \n            \n            \n        </Grid>\n      </Grid>\n    \n   \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(4, 0, 5),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n      return <Step6 />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n    case \"Step1\":\n      return <Step8 />; \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleNext = () => {\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n      var formdata = {\n        productname: productCtx.productname,\n        product_categoy:productCtx.product_categoy,\n        product_type:productCtx.product_type,\n        materials:productCtx.material,\n        metals:productCtx.metals,\n        gender: productCtx.selectedgender,\n        size: productCtx.selected_sizes,\n        vendor: productCtx.vendorcode,\n        product_code:productCtx.product_code,\n        purity:productCtx.metalpurity,\n        metal_color:productCtx.metalcolour,\n        default_metal_color:productCtx.default_metal_colour,\n        default_metal_purity:productCtx.default_metal_purity,\n        diamond:productCtx.diamondlist,\n        gemstone:productCtx.gemstonelist,\n        metal_height: productCtx.metal_height,\n        metal_weight: productCtx.metal_weight,\n        metal_length: productCtx.metal_length,\n        metal_width: productCtx.metal_width,\n        themes: productCtx.themes,\n        style: productCtx.prod_styles,\n        product_vendor_code: productCtx.productvendorcode,\n        earringbacking: productCtx.earringbacking,\n        occassions: productCtx.occassions,\n        collections: productCtx.collections,\n        stonecount: productCtx.stonecount,\n        stonecolours: productCtx.stonecolour,\n        isreorder : productCtx.isreorder,\n        defaultsize: productCtx.default_size,\n        defaultmetalsize: productCtx.default_metal_size\n\n     }\n      sendNetworkRequest('/productupload', {}, formdata)\n     }\n    \n     \n      setActiveStep(activeStep + 1);\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    \n    <Grid item xs={12} sm={12}  >\n\n        <Paper className={classes.paper}>\n          <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n            Product Upload\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n                      </Stepper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. We have emailed your order confirmation, and will\n                  send you an update when your order has shipped.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Place order' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n\n   \n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n   \n    <Grid  item xs={6} sm={6} >\n    <Link underline='none' component={RouterLink} to={'/material'}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography component=\"h6\" variant=\"h6\">\n            Manage Material\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n\n    <Grid  item xs={6} sm={6} >\n    <Link underline='none' component={RouterLink} to={'/dashboard'}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography component=\"h6\" variant=\"h6\">\n            Material Purity\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    <Grid  item xs={6} sm={6} >\n    <Link underline='none' component={RouterLink} to={'/dashboard'}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography component=\"h6\" variant=\"h6\">\n            Gemstone Types\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    <Grid  item xs={6} sm={6} >\n    <Link underline='none' component={RouterLink} to={'/dashboard'}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography component=\"h6\" variant=\"h6\">\n            Diamond Colours\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    <Grid  item xs={6} sm={6} >\n    <Link underline='none' component={RouterLink} to={'/dashboard'}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography component=\"h6\" variant=\"h6\">\n            Diamond Clarity\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    <Grid  item xs={6} sm={6} >\n    <Link underline='none' component={RouterLink} to={'/dashboard'}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography component=\"h6\" variant=\"h6\">\n            Making Charge Types\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Vendor Name', minWidth: 200 },\n  { id: 'SKU', label: 'Vendor Code', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendors from '../../components/Vendors'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport const Vendorlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Vendor\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Vendors contactlist={[\n        {\n            \"name\":\"NAC1\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Vendorlist;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 200 },\n  { id: 'SKU', label: 'SKU', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product contactlist={[\n        {\n            \"name\":\"NAC\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 200 },\n  { id: 'alias name', label: 'alias name', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function move()\n  {\n    alert(\"dasda\")\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon onClick={() => move}/>\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { MaterialContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport AddContact from '../../components/AddContact'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nexport default function Content() {\n    const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n    console.log(JSON.stringify(materialCtx))\n    console.log(JSON.stringify(materialMaster))\n    return (\n\n        <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n            <Grid fullwidth item xs={6} sm={6}>\n    \n                <Typography component=\"h6\" variant=\"h6\">\n                Materials\n              </Typography>\n              </Grid>\n              <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n    \n              <Link underline='none' component={RouterLink} to={'/productupload'}>\n              <Button variant=\"outlined\" color=\"primary\" >\n                Add New Material\n            </Button>\n            \n            </Link>\n            </Grid>\n        </Grid>\n        <AddContact contactlist={materialCtx.materialMaster.materials} />\n       \n        </Grid>\n      )\n    }\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport AddContact from '../../components/AddContact'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { MaterialProvider } from '../../context';\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { MaterialContext } from '../../context';\nimport Content from './Content';\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\n\nexport const Materiallist = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n             <Content  />\n        </MaterialProvider>\n  )\n});\n\nexport default Materiallist;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  function handleClick() {\n      \n      setGlobalCtx({ ...globalCtx, isExpand: !globalCtx.isExpand })\n\n  }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n      {/* <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Inbox\" />\n        {globalCtx.isExpand ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Starred\" />\n          </ListItem>\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Starred\" />\n          </ListItem>\n        </List>\n      </Collapse>\n */}\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            // className={classes.menuButton}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            NAC Jewellers\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        return true;\n    }\n\n    const Component = props => withAppBar(component, props);\n\n    return checkAuth() ? <Component {...rest} /> : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\n\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration, Vendorlist, Productlist, Materiallist } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\n\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            <NetworkProvider>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={Materiallist} />\n\n          </Switch>\n            </NetworkProvider>\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\n\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}